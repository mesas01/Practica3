

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Oct 25 21:12:00 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=4
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=4
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=4
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=4
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=4
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=4
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=4
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=4
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=4
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=4
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=4
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=4
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=4
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=4
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=4
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1,inline
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1,inline
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1,inline
   135                           	psect	text117,global,reloc=2,class=CODE,delta=1,inline
   136                           	psect	text118,global,reloc=2,class=CODE,delta=1,inline
   137                           	psect	text119,global,reloc=2,class=CODE,delta=1,inline
   138                           	psect	text120,global,reloc=2,class=CODE,delta=1
   139                           	psect	text121,global,reloc=2,class=CODE,delta=1
   140                           	psect	text122,global,reloc=2,class=CODE,delta=1
   141                           	psect	text123,global,reloc=2,class=CODE,delta=1
   142                           	psect	text124,global,reloc=2,class=CODE,delta=1
   143                           	psect	text125,global,reloc=2,class=CODE,delta=1
   144                           	psect	text126,global,reloc=2,class=CODE,delta=1
   145                           	psect	text127,global,reloc=2,class=CODE,delta=1
   146                           	psect	text128,global,reloc=2,class=CODE,delta=1
   147                           	psect	text129,global,reloc=2,class=CODE,delta=1
   148                           	psect	text130,global,reloc=2,class=CODE,delta=1,inline
   149                           	psect	text131,global,reloc=2,class=CODE,delta=1,inline
   150                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   151                           	psect	text133,global,reloc=2,class=CODE,delta=1,inline
   152                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   153                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   154                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   155                           	psect	text137,global,reloc=2,class=CODE,delta=1
   156                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   158                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   160                           	psect	text141,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   162                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   163   000000                     
   164                           ; Generated 21/07/2023 GMT
   165                           ; 
   166                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   167                           ; All rights reserved.
   168                           ; 
   169                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   170                           ; 
   171                           ; Redistribution and use in source and binary forms, with or without modification, are
   172                           ; permitted provided that the following conditions are met:
   173                           ; 
   174                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   175                           ;        conditions and the following disclaimer.
   176                           ; 
   177                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   178                           ;        of conditions and the following disclaimer in the documentation and/or other
   179                           ;        materials provided with the distribution. Publication is not required when
   180                           ;        this file is used in an embedded application.
   181                           ; 
   182                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   183                           ;        software without specific prior written permission.
   184                           ; 
   185                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   186                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   187                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   188                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   189                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   190                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   191                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   192                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   193                           ; 
   194                           ; 
   195                           ; Code-generator required, PIC18F46K42 Definitions
   196                           ; 
   197                           ; SFR Addresses
   198   000000                     
   199                           	psect	mediumconst
   200   00FDEE                     __pmediumconst:
   201                           	callstack 0
   202   00FDEE  00                 	db	0
   203   00FDEF                     _i2c1_fsmStateTable:
   204                           	callstack 0
   205   00FDEF  64                 	db	low _I2C1_DO_IDLE
   206   00FDF0  A2                 	db	high _I2C1_DO_IDLE
   207   00FDF1  F2                 	db	low _I2C1_DO_SEND_ADR_READ
   208   00FDF2  A5                 	db	high _I2C1_DO_SEND_ADR_READ
   209   00FDF3  40                 	db	low _I2C1_DO_SEND_ADR_WRITE
   210   00FDF4  A3                 	db	high _I2C1_DO_SEND_ADR_WRITE
   211   00FDF5  74                 	db	low _I2C1_DO_TX
   212   00FDF6  C1                 	db	high _I2C1_DO_TX
   213   00FDF7  2C                 	db	low _I2C1_DO_RX
   214   00FDF8  B4                 	db	high _I2C1_DO_RX
   215   00FDF9  1A                 	db	low _I2C1_DO_TX_EMPTY
   216   00FDFA  B2                 	db	high _I2C1_DO_TX_EMPTY
   217   00FDFB  68                 	db	low _I2C1_DO_RX_EMPTY
   218   00FDFC  B5                 	db	high _I2C1_DO_RX_EMPTY
   219   00FDFD  70                 	db	low _I2C1_DO_SEND_RESTART_READ
   220   00FDFE  A2                 	db	high _I2C1_DO_SEND_RESTART_READ
   221   00FDFF  98                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   222   00FE00  A1                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   223   00FE01  9C                 	db	low _I2C1_DO_SEND_RESTART
   224   00FE02  A1                 	db	high _I2C1_DO_SEND_RESTART
   225   00FE03  98                 	db	low _I2C1_DO_SEND_STOP
   226   00FE04  A4                 	db	high _I2C1_DO_SEND_STOP
   227   00FE05  F2                 	db	low _I2C1_DO_RX_ACK
   228   00FE06  A1                 	db	high _I2C1_DO_RX_ACK
   229   00FE07  EA                 	db	low _I2C1_DO_TX_ACK
   230   00FE08  A1                 	db	high _I2C1_DO_TX_ACK
   231   00FE09  7E                 	db	low _I2C1_DO_RX_NACK_STOP
   232   00FE0A  A2                 	db	high _I2C1_DO_RX_NACK_STOP
   233   00FE0B  FA                 	db	low _I2C1_DO_RX_NACK_RESTART
   234   00FE0C  A1                 	db	high _I2C1_DO_RX_NACK_RESTART
   235   00FE0D  8C                 	db	low _I2C1_DO_RESET
   236   00FE0E  A2                 	db	high _I2C1_DO_RESET
   237   00FE0F  54                 	db	low _I2C1_DO_ADDRESS_NACK
   238   00FE10  AD                 	db	high _I2C1_DO_ADDRESS_NACK
   239   00FE11  64                 	db	low _I2C1_DO_BUS_COLLISION
   240   00FE12  AF                 	db	high _I2C1_DO_BUS_COLLISION
   241   00FE13  9C                 	db	low _I2C1_DO_BUS_ERROR
   242   00FE14  A2                 	db	high _I2C1_DO_BUS_ERROR
   243   00FE15                     __end_of_i2c1_fsmStateTable:
   244                           	callstack 0
   245   000000                     _TRISD	set	16325
   246   000000                     _TRISC	set	16324
   247   000000                     _TRISB	set	16323
   248   000000                     _LATC	set	16316
   249   000000                     _LATB	set	16315
   250   000000                     _OSCTUNE	set	14814
   251   000000                     _OSCFRQ	set	14815
   252   000000                     _I2C1TXB	set	15723
   253   000000                     _I2C1PIE	set	15738
   254   00FE15                     STR_5:
   255                           
   256                           ; BSR set to: 61
   257   00FE15  45                 	db	69	;'E'
   258   00FE16  45                 	db	69	;'E'
   259   00FE17  50                 	db	80	;'P'
   260   00FE18  52                 	db	82	;'R'
   261   00FE19  4F                 	db	79	;'O'
   262   00FE1A  4D                 	db	77	;'M'
   263   00FE1B  20                 	db	32
   264   00FE1C  2D                 	db	45
   265   00FE1D  20                 	db	32
   266   00FE1E  41                 	db	65	;'A'
   267   00FE1F  58                 	db	88	;'X'
   268   00FE20  3A                 	db	58	;':'
   269   00FE21  20                 	db	32
   270   00FE22  25                 	db	37
   271   00FE23  2E                 	db	46
   272   00FE24  32                 	db	50	;'2'
   273   00FE25  66                 	db	102	;'f'
   274   00FE26  2C                 	db	44
   275   00FE27  20                 	db	32
   276   00FE28  41                 	db	65	;'A'
   277   00FE29  59                 	db	89	;'Y'
   278   00FE2A  3A                 	db	58	;':'
   279   00FE2B  20                 	db	32
   280   00FE2C  25                 	db	37
   281   00FE2D  2E                 	db	46
   282   00FE2E  32                 	db	50	;'2'
   283   00FE2F  66                 	db	102	;'f'
   284   00FE30  2C                 	db	44
   285   00FE31  20                 	db	32
   286   00FE32  41                 	db	65	;'A'
   287   00FE33  5A                 	db	90	;'Z'
   288   00FE34  3A                 	db	58	;':'
   289   00FE35  20                 	db	32
   290   00FE36  25                 	db	37
   291   00FE37  2E                 	db	46
   292   00FE38  32                 	db	50	;'2'
   293   00FE39  66                 	db	102	;'f'
   294   00FE3A  2C                 	db	44
   295   00FE3B  20                 	db	32
   296   00FE3C  47                 	db	71	;'G'
   297   00FE3D  58                 	db	88	;'X'
   298   00FE3E  3A                 	db	58	;':'
   299   00FE3F  20                 	db	32
   300   00FE40  25                 	db	37
   301   00FE41  2E                 	db	46
   302   00FE42  32                 	db	50	;'2'
   303   00FE43  66                 	db	102	;'f'
   304   00FE44  2C                 	db	44
   305   00FE45  20                 	db	32
   306   00FE46  47                 	db	71	;'G'
   307   00FE47  59                 	db	89	;'Y'
   308   00FE48  3A                 	db	58	;':'
   309   00FE49  20                 	db	32
   310   00FE4A  25                 	db	37
   311   00FE4B  2E                 	db	46
   312   00FE4C  32                 	db	50	;'2'
   313   00FE4D  66                 	db	102	;'f'
   314   00FE4E  2C                 	db	44
   315   00FE4F  20                 	db	32
   316   00FE50  47                 	db	71	;'G'
   317   00FE51  5A                 	db	90	;'Z'
   318   00FE52  3A                 	db	58	;':'
   319   00FE53  20                 	db	32
   320   00FE54  25                 	db	37
   321   00FE55  2E                 	db	46
   322   00FE56  32                 	db	50	;'2'
   323   00FE57  66                 	db	102	;'f'
   324   00FE58  0A                 	db	10
   325   00FE59  00                 	db	0
   326   00FE5A                     STR_13:
   327                           
   328                           ; BSR set to: 61
   329   00FE5A  49                 	db	73	;'I'
   330   00FE5B  6E                 	db	110	;'n'
   331   00FE5C  67                 	db	103	;'g'
   332   00FE5D  72                 	db	114	;'r'
   333   00FE5E  65                 	db	101	;'e'
   334   00FE5F  73                 	db	115	;'s'
   335   00FE60  65                 	db	101	;'e'
   336   00FE61  20                 	db	32
   337   00FE62  63                 	db	99	;'c'
   338   00FE63  6F                 	db	111	;'o'
   339   00FE64  6D                 	db	109	;'m'
   340   00FE65  61                 	db	97	;'a'
   341   00FE66  6E                 	db	110	;'n'
   342   00FE67  64                 	db	100	;'d'
   343   00FE68  6F                 	db	111	;'o'
   344   00FE69  20                 	db	32
   345   00FE6A  28                 	db	40
   346   00FE6B  65                 	db	101	;'e'
   347   00FE6C  6A                 	db	106	;'j'
   348   00FE6D  65                 	db	101	;'e'
   349   00FE6E  6D                 	db	109	;'m'
   350   00FE6F  70                 	db	112	;'p'
   351   00FE70  6C                 	db	108	;'l'
   352   00FE71  6F                 	db	111	;'o'
   353   00FE72  3A                 	db	58	;':'
   354   00FE73  20                 	db	32
   355   00FE74  4C                 	db	76	;'L'
   356   00FE75  4F                 	db	79	;'O'
   357   00FE76  47                 	db	71	;'G'
   358   00FE77  28                 	db	40
   359   00FE78  31                 	db	49	;'1'
   360   00FE79  30                 	db	48	;'0'
   361   00FE7A  2C                 	db	44
   362   00FE7B  31                 	db	49	;'1'
   363   00FE7C  30                 	db	48	;'0'
   364   00FE7D  30                 	db	48	;'0'
   365   00FE7E  29                 	db	41
   366   00FE7F  2C                 	db	44
   367   00FE80  20                 	db	32
   368   00FE81  4C                 	db	76	;'L'
   369   00FE82  4F                 	db	79	;'O'
   370   00FE83  47                 	db	71	;'G'
   371   00FE84  5F                 	db	95	;'_'
   372   00FE85  52                 	db	82	;'R'
   373   00FE86  45                 	db	69	;'E'
   374   00FE87  41                 	db	65	;'A'
   375   00FE88  44                 	db	68	;'D'
   376   00FE89  20                 	db	32
   377   00FE8A  6F                 	db	111	;'o'
   378   00FE8B  20                 	db	32
   379   00FE8C  4C                 	db	76	;'L'
   380   00FE8D  4F                 	db	79	;'O'
   381   00FE8E  47                 	db	71	;'G'
   382   00FE8F  5F                 	db	95	;'_'
   383   00FE90  53                 	db	83	;'S'
   384   00FE91  54                 	db	84	;'T'
   385   00FE92  41                 	db	65	;'A'
   386   00FE93  54                 	db	84	;'T'
   387   00FE94  29                 	db	41
   388   00FE95  3A                 	db	58	;':'
   389   00FE96  20                 	db	32
   390   00FE97  00                 	db	0
   391   00FE98                     STR_1:
   392                           
   393                           ; BSR set to: 61
   394   00FE98  44                 	db	68	;'D'
   395   00FE99  61                 	db	97	;'a'
   396   00FE9A  74                 	db	116	;'t'
   397   00FE9B  6F                 	db	111	;'o'
   398   00FE9C  73                 	db	115	;'s'
   399   00FE9D  20                 	db	32
   400   00FE9E  61                 	db	97	;'a'
   401   00FE9F  6C                 	db	108	;'l'
   402   00FEA0  6D                 	db	109	;'m'
   403   00FEA1  61                 	db	97	;'a'
   404   00FEA2  63                 	db	99	;'c'
   405   00FEA3  65                 	db	101	;'e'
   406   00FEA4  6E                 	db	110	;'n'
   407   00FEA5  61                 	db	97	;'a'
   408   00FEA6  64                 	db	100	;'d'
   409   00FEA7  6F                 	db	111	;'o'
   410   00FEA8  73                 	db	115	;'s'
   411   00FEA9  3A                 	db	58	;':'
   412   00FEAA  20                 	db	32
   413   00FEAB  25                 	db	37
   414   00FEAC  6C                 	db	108	;'l'
   415   00FEAD  75                 	db	117	;'u'
   416   00FEAE  2C                 	db	44
   417   00FEAF  20                 	db	32
   418   00FEB0  54                 	db	84	;'T'
   419   00FEB1  61                 	db	97	;'a'
   420   00FEB2  73                 	db	115	;'s'
   421   00FEB3  61                 	db	97	;'a'
   422   00FEB4  20                 	db	32
   423   00FEB5  64                 	db	100	;'d'
   424   00FEB6  65                 	db	101	;'e'
   425   00FEB7  20                 	db	32
   426   00FEB8  6D                 	db	109	;'m'
   427   00FEB9  75                 	db	117	;'u'
   428   00FEBA  65                 	db	101	;'e'
   429   00FEBB  73                 	db	115	;'s'
   430   00FEBC  74                 	db	116	;'t'
   431   00FEBD  72                 	db	114	;'r'
   432   00FEBE  65                 	db	101	;'e'
   433   00FEBF  6F                 	db	111	;'o'
   434   00FEC0  3A                 	db	58	;':'
   435   00FEC1  20                 	db	32
   436   00FEC2  25                 	db	37
   437   00FEC3  6C                 	db	108	;'l'
   438   00FEC4  75                 	db	117	;'u'
   439   00FEC5  20                 	db	32
   440   00FEC6  6D                 	db	109	;'m'
   441   00FEC7  73                 	db	115	;'s'
   442   00FEC8  0A                 	db	10
   443   00FEC9  00                 	db	0
   444   00FECA                     STR_11:
   445                           
   446                           ; BSR set to: 61
   447   00FECA  55                 	db	85	;'U'
   448   00FECB  6C                 	db	108	;'l'
   449   00FECC  74                 	db	116	;'t'
   450   00FECD  69                 	db	105	;'i'
   451   00FECE  6D                 	db	109	;'m'
   452   00FECF  61                 	db	97	;'a'
   453   00FED0  20                 	db	32
   454   00FED1  64                 	db	100	;'d'
   455   00FED2  69                 	db	105	;'i'
   456   00FED3  72                 	db	114	;'r'
   457   00FED4  65                 	db	101	;'e'
   458   00FED5  63                 	db	99	;'c'
   459   00FED6  63                 	db	99	;'c'
   460   00FED7  69                 	db	105	;'i'
   461   00FED8  6F                 	db	111	;'o'
   462   00FED9  6E                 	db	110	;'n'
   463   00FEDA  20                 	db	32
   464   00FEDB  72                 	db	114	;'r'
   465   00FEDC  65                 	db	101	;'e'
   466   00FEDD  67                 	db	103	;'g'
   467   00FEDE  69                 	db	105	;'i'
   468   00FEDF  73                 	db	115	;'s'
   469   00FEE0  74                 	db	116	;'t'
   470   00FEE1  72                 	db	114	;'r'
   471   00FEE2  61                 	db	97	;'a'
   472   00FEE3  64                 	db	100	;'d'
   473   00FEE4  61                 	db	97	;'a'
   474   00FEE5  20                 	db	32
   475   00FEE6  65                 	db	101	;'e'
   476   00FEE7  6E                 	db	110	;'n'
   477   00FEE8  20                 	db	32
   478   00FEE9  45                 	db	69	;'E'
   479   00FEEA  45                 	db	69	;'E'
   480   00FEEB  50                 	db	80	;'P'
   481   00FEEC  52                 	db	82	;'R'
   482   00FEED  4F                 	db	79	;'O'
   483   00FEEE  4D                 	db	77	;'M'
   484   00FEEF  31                 	db	49	;'1'
   485   00FEF0  3A                 	db	58	;':'
   486   00FEF1  20                 	db	32
   487   00FEF2  30                 	db	48	;'0'
   488   00FEF3  78                 	db	120	;'x'
   489   00FEF4  25                 	db	37
   490   00FEF5  58                 	db	88	;'X'
   491   00FEF6  0A                 	db	10
   492   00FEF7  00                 	db	0
   493   00FEF8                     STR_12:
   494                           
   495                           ; BSR set to: 61
   496   00FEF8  55                 	db	85	;'U'
   497   00FEF9  6C                 	db	108	;'l'
   498   00FEFA  74                 	db	116	;'t'
   499   00FEFB  69                 	db	105	;'i'
   500   00FEFC  6D                 	db	109	;'m'
   501   00FEFD  61                 	db	97	;'a'
   502   00FEFE  20                 	db	32
   503   00FEFF  64                 	db	100	;'d'
   504   00FF00  69                 	db	105	;'i'
   505   00FF01  72                 	db	114	;'r'
   506   00FF02  65                 	db	101	;'e'
   507   00FF03  63                 	db	99	;'c'
   508   00FF04  63                 	db	99	;'c'
   509   00FF05  69                 	db	105	;'i'
   510   00FF06  6F                 	db	111	;'o'
   511   00FF07  6E                 	db	110	;'n'
   512   00FF08  20                 	db	32
   513   00FF09  72                 	db	114	;'r'
   514   00FF0A  65                 	db	101	;'e'
   515   00FF0B  67                 	db	103	;'g'
   516   00FF0C  69                 	db	105	;'i'
   517   00FF0D  73                 	db	115	;'s'
   518   00FF0E  74                 	db	116	;'t'
   519   00FF0F  72                 	db	114	;'r'
   520   00FF10  61                 	db	97	;'a'
   521   00FF11  64                 	db	100	;'d'
   522   00FF12  61                 	db	97	;'a'
   523   00FF13  20                 	db	32
   524   00FF14  65                 	db	101	;'e'
   525   00FF15  6E                 	db	110	;'n'
   526   00FF16  20                 	db	32
   527   00FF17  45                 	db	69	;'E'
   528   00FF18  45                 	db	69	;'E'
   529   00FF19  50                 	db	80	;'P'
   530   00FF1A  52                 	db	82	;'R'
   531   00FF1B  4F                 	db	79	;'O'
   532   00FF1C  4D                 	db	77	;'M'
   533   00FF1D  32                 	db	50	;'2'
   534   00FF1E  3A                 	db	58	;':'
   535   00FF1F  20                 	db	32
   536   00FF20  30                 	db	48	;'0'
   537   00FF21  78                 	db	120	;'x'
   538   00FF22  25                 	db	37
   539   00FF23  58                 	db	88	;'X'
   540   00FF24  0A                 	db	10
   541   00FF25  00                 	db	0
   542   00FF26                     STR_20:
   543                           
   544                           ; BSR set to: 61
   545   00FF26  45                 	db	69	;'E'
   546   00FF27  6E                 	db	110	;'n'
   547   00FF28  74                 	db	116	;'t'
   548   00FF29  72                 	db	114	;'r'
   549   00FF2A  61                 	db	97	;'a'
   550   00FF2B  64                 	db	100	;'d'
   551   00FF2C  61                 	db	97	;'a'
   552   00FF2D  20                 	db	32
   553   00FF2E  6E                 	db	110	;'n'
   554   00FF2F  6F                 	db	111	;'o'
   555   00FF30  20                 	db	32
   556   00FF31  76                 	db	118	;'v'
   557   00FF32  61                 	db	97	;'a'
   558   00FF33  6C                 	db	108	;'l'
   559   00FF34  69                 	db	105	;'i'
   560   00FF35  64                 	db	100	;'d'
   561   00FF36  61                 	db	97	;'a'
   562   00FF37  2E                 	db	46
   563   00FF38  20                 	db	32
   564   00FF39  49                 	db	73	;'I'
   565   00FF3A  6E                 	db	110	;'n'
   566   00FF3B  74                 	db	116	;'t'
   567   00FF3C  65                 	db	101	;'e'
   568   00FF3D  6E                 	db	110	;'n'
   569   00FF3E  74                 	db	116	;'t'
   570   00FF3F  65                 	db	101	;'e'
   571   00FF40  20                 	db	32
   572   00FF41  64                 	db	100	;'d'
   573   00FF42  65                 	db	101	;'e'
   574   00FF43  20                 	db	32
   575   00FF44  6E                 	db	110	;'n'
   576   00FF45  75                 	db	117	;'u'
   577   00FF46  65                 	db	101	;'e'
   578   00FF47  76                 	db	118	;'v'
   579   00FF48  6F                 	db	111	;'o'
   580   00FF49  2E                 	db	46
   581   00FF4A  0A                 	db	10
   582   00FF4B  00                 	db	0
   583   00FF4C                     STR_6:
   584                           
   585                           ; BSR set to: 61
   586   00FF4C  2D                 	db	45
   587   00FF4D  2D                 	db	45
   588   00FF4E  2D                 	db	45
   589   00FF4F  2D                 	db	45
   590   00FF50  2D                 	db	45
   591   00FF51  2D                 	db	45
   592   00FF52  2D                 	db	45
   593   00FF53  2D                 	db	45
   594   00FF54  2D                 	db	45
   595   00FF55  2D                 	db	45
   596   00FF56  2D                 	db	45
   597   00FF57  2D                 	db	45
   598   00FF58  4C                 	db	76	;'L'
   599   00FF59  4F                 	db	79	;'O'
   600   00FF5A  47                 	db	71	;'G'
   601   00FF5B  5F                 	db	95	;'_'
   602   00FF5C  4F                 	db	79	;'O'
   603   00FF5D  4B                 	db	75	;'K'
   604   00FF5E  2D                 	db	45
   605   00FF5F  2D                 	db	45
   606   00FF60  2D                 	db	45
   607   00FF61  2D                 	db	45
   608   00FF62  2D                 	db	45
   609   00FF63  2D                 	db	45
   610   00FF64  2D                 	db	45
   611   00FF65  2D                 	db	45
   612   00FF66  2D                 	db	45
   613   00FF67  2D                 	db	45
   614   00FF68  2D                 	db	45
   615   00FF69  2D                 	db	45
   616   00FF6A  2D                 	db	45
   617   00FF6B  0A                 	db	10
   618   00FF6C  00                 	db	0
   619   00FF6D                     STR_3:
   620                           
   621                           ; BSR set to: 61
   622   00FF6D  25                 	db	37
   623   00FF6E  2E                 	db	46
   624   00FF6F  32                 	db	50	;'2'
   625   00FF70  66                 	db	102	;'f'
   626   00FF71  2C                 	db	44
   627   00FF72  25                 	db	37
   628   00FF73  2E                 	db	46
   629   00FF74  32                 	db	50	;'2'
   630   00FF75  66                 	db	102	;'f'
   631   00FF76  2C                 	db	44
   632   00FF77  25                 	db	37
   633   00FF78  2E                 	db	46
   634   00FF79  32                 	db	50	;'2'
   635   00FF7A  66                 	db	102	;'f'
   636   00FF7B  2C                 	db	44
   637   00FF7C  25                 	db	37
   638   00FF7D  2E                 	db	46
   639   00FF7E  32                 	db	50	;'2'
   640   00FF7F  66                 	db	102	;'f'
   641   00FF80  2C                 	db	44
   642   00FF81  25                 	db	37
   643   00FF82  2E                 	db	46
   644   00FF83  32                 	db	50	;'2'
   645   00FF84  66                 	db	102	;'f'
   646   00FF85  2C                 	db	44
   647   00FF86  25                 	db	37
   648   00FF87  2E                 	db	46
   649   00FF88  32                 	db	50	;'2'
   650   00FF89  66                 	db	102	;'f'
   651   00FF8A  0A                 	db	10
   652   00FF8B  00                 	db	0
   653   00FF8C                     STR_2:
   654                           
   655                           ; BSR set to: 61
   656   00FF8C  41                 	db	65	;'A'
   657   00FF8D  58                 	db	88	;'X'
   658   00FF8E  2C                 	db	44
   659   00FF8F  41                 	db	65	;'A'
   660   00FF90  59                 	db	89	;'Y'
   661   00FF91  2C                 	db	44
   662   00FF92  41                 	db	65	;'A'
   663   00FF93  5A                 	db	90	;'Z'
   664   00FF94  2C                 	db	44
   665   00FF95  47                 	db	71	;'G'
   666   00FF96  58                 	db	88	;'X'
   667   00FF97  2C                 	db	44
   668   00FF98  47                 	db	71	;'G'
   669   00FF99  59                 	db	89	;'Y'
   670   00FF9A  2C                 	db	44
   671   00FF9B  47                 	db	71	;'G'
   672   00FF9C  5A                 	db	90	;'Z'
   673   00FF9D  0A                 	db	10
   674   00FF9E  00                 	db	0
   675   00FF9F                     STR_8:
   676                           
   677                           ; BSR set to: 61
   678   00FF9F  4C                 	db	76	;'L'
   679   00FFA0  4F                 	db	79	;'O'
   680   00FFA1  47                 	db	71	;'G'
   681   00FFA2  28                 	db	40
   682   00FFA3  25                 	db	37
   683   00FFA4  6C                 	db	108	;'l'
   684   00FFA5  75                 	db	117	;'u'
   685   00FFA6  2C                 	db	44
   686   00FFA7  25                 	db	37
   687   00FFA8  6C                 	db	108	;'l'
   688   00FFA9  75                 	db	117	;'u'
   689   00FFAA  29                 	db	41
   690   00FFAB  0D                 	db	13
   691   00FFAC  0A                 	db	10
   692   00FFAD  00                 	db	0
   693   00FFAE                     STR_9:
   694                           
   695                           ; BSR set to: 61
   696   00FFAE  4C                 	db	76	;'L'
   697   00FFAF  4F                 	db	79	;'O'
   698   00FFB0  47                 	db	71	;'G'
   699   00FFB1  28                 	db	40
   700   00FFB2  25                 	db	37
   701   00FFB3  6C                 	db	108	;'l'
   702   00FFB4  75                 	db	117	;'u'
   703   00FFB5  2C                 	db	44
   704   00FFB6  25                 	db	37
   705   00FFB7  6C                 	db	108	;'l'
   706   00FFB8  75                 	db	117	;'u'
   707   00FFB9  29                 	db	41
   708   00FFBA  0A                 	db	10
   709   00FFBB  00                 	db	0
   710   00FFBC                     STR_14:
   711                           
   712                           ; BSR set to: 61
   713   00FFBC  52                 	db	82	;'R'
   714   00FFBD  65                 	db	101	;'e'
   715   00FFBE  63                 	db	99	;'c'
   716   00FFBF  69                 	db	105	;'i'
   717   00FFC0  62                 	db	98	;'b'
   718   00FFC1  69                 	db	105	;'i'
   719   00FFC2  64                 	db	100	;'d'
   720   00FFC3  6F                 	db	111	;'o'
   721   00FFC4  3A                 	db	58	;':'
   722   00FFC5  20                 	db	32
   723   00FFC6  00                 	db	0
   724   00FFC7                     STR_7:
   725                           
   726                           ; BSR set to: 61
   727   00FFC7  4C                 	db	76	;'L'
   728   00FFC8  4F                 	db	79	;'O'
   729   00FFC9  47                 	db	71	;'G'
   730   00FFCA  5F                 	db	95	;'_'
   731   00FFCB  45                 	db	69	;'E'
   732   00FFCC  52                 	db	82	;'R'
   733   00FFCD  52                 	db	82	;'R'
   734   00FFCE  0A                 	db	10
   735   00FFCF  00                 	db	0
   736   00FFD0                     STR_17:
   737                           
   738                           ; BSR set to: 61
   739   00FFD0  4C                 	db	76	;'L'
   740   00FFD1  4F                 	db	79	;'O'
   741   00FFD2  47                 	db	71	;'G'
   742   00FFD3  5F                 	db	95	;'_'
   743   00FFD4  52                 	db	82	;'R'
   744   00FFD5  45                 	db	69	;'E'
   745   00FFD6  41                 	db	65	;'A'
   746   00FFD7  44                 	db	68	;'D'
   747   00FFD8  00                 	db	0
   748   00FFD9                     STR_18:
   749                           
   750                           ; BSR set to: 61
   751   00FFD9  4C                 	db	76	;'L'
   752   00FFDA  4F                 	db	79	;'O'
   753   00FFDB  47                 	db	71	;'G'
   754   00FFDC  5F                 	db	95	;'_'
   755   00FFDD  53                 	db	83	;'S'
   756   00FFDE  54                 	db	84	;'T'
   757   00FFDF  41                 	db	65	;'A'
   758   00FFE0  54                 	db	84	;'T'
   759   00FFE1  00                 	db	0
   760   00FFE2                     STR_16:
   761                           
   762                           ; BSR set to: 61
   763   00FFE2  4C                 	db	76	;'L'
   764   00FFE3  4F                 	db	79	;'O'
   765   00FFE4  47                 	db	71	;'G'
   766   00FFE5  5F                 	db	95	;'_'
   767   00FFE6  41                 	db	65	;'A'
   768   00FFE7  4C                 	db	76	;'L'
   769   00FFE8  4C                 	db	76	;'L'
   770   00FFE9  00                 	db	0
   771   00FFEA                     
   772                           ; BSR set to: 61
   773   00FFEA  45                 	db	69	;'E'
   774   00FFEB  4E                 	db	78	;'N'
   775   00FFEC  44                 	db	68	;'D'
   776   00FFED  0A                 	db	10
   777   00FFEE  00                 	db	0
   778   00FFEF                     STR_21:
   779                           
   780                           ; BSR set to: 61
   781   00FFEF  69                 	db	105	;'i'
   782   00FFF0  6E                 	db	110	;'n'
   783   00FFF1  66                 	db	102	;'f'
   784   00FFF2  00                 	db	0
   785   00FFF3                     STR_24:
   786                           
   787                           ; BSR set to: 61
   788   00FFF3  6E                 	db	110	;'n'
   789   00FFF4  61                 	db	97	;'a'
   790   00FFF5  6E                 	db	110	;'n'
   791   00FFF6  00                 	db	0
   792   00FFF7                     STR_27:
   793                           
   794                           ; BSR set to: 61
   795   00FFF7  6C                 	db	108	;'l'
   796   00FFF8  75                 	db	117	;'u'
   797   00FFF9  00                 	db	0
   798   00FFFA  00                 	db	0	; dummy byte at the end
   799   000000                     
   800                           	psect	nvBANK2
   801   00021F                     __pnvBANK2:
   802                           	callstack 0
   803   00021F                     _UART1_OverrunErrorHandler:
   804                           	callstack 0
   805   00021F                     	ds	2
   806   000221                     _UART1_FramingErrorHandler:
   807                           	callstack 0
   808   000221                     	ds	2
   809                           
   810                           	psect	nvBANK3
   811   0003AC                     __pnvBANK3:
   812                           	callstack 0
   813   0003AC                     _UART1_ErrorHandler:
   814                           	callstack 0
   815   0003AC                     	ds	2
   816   000000                     _I2C1PIEbits	set	15738
   817   000000                     _I2C1PIRbits	set	15737
   818   000000                     _I2C1ERRbits	set	15734
   819   000000                     _I2C1CON1bits	set	15732
   820   000000                     _I2C1CON0bits	set	15731
   821   000000                     _U1ERRIRbits	set	15865
   822   000000                     _U1CON0bits	set	15858
   823   000000                     _PIE2bits	set	14738
   824   000000                     _PIE3bits	set	14739
   825   000000                     _PIR3bits	set	14755
   826   000000                     _U1P1L	set	15852
   827   000000                     _LATA	set	16314
   828   000000                     _LATD	set	16317
   829   000000                     _LATE	set	16318
   830   000000                     _U1ERRIE	set	15866
   831   000000                     _U1ERRIR	set	15865
   832   000000                     _U1UIR	set	15864
   833   000000                     _U1FIFO	set	15863
   834   000000                     _U1BRGH	set	15862
   835   000000                     _U1BRGL	set	15861
   836   000000                     _U1CON2	set	15860
   837   000000                     _U1CON1	set	15859
   838   000000                     _U1CON0	set	15858
   839   000000                     _U1P3H	set	15857
   840   000000                     _U1P3L	set	15856
   841   000000                     _U1P2H	set	15855
   842   000000                     _U1P2L	set	15854
   843   000000                     _U1P1H	set	15853
   844   000000                     _PMD0	set	14784
   845   000000                     _OSCCON1	set	14809
   846   000000                     _RB1I2C	set	14938
   847   000000                     _I2C1CNT	set	15724
   848   000000                     _I2C1CON0	set	15731
   849   000000                     _U1RXB	set	15848
   850   000000                     _U1TXB	set	15850
   851   000000                     _I2C1STAT1bits	set	15736
   852   000000                     _I2C1ERR	set	15734
   853   000000                     _I2C1PIR	set	15737
   854   000000                     _I2C1CLK	set	15739
   855   000000                     _I2C1CON2	set	15733
   856   000000                     _I2C1CON1	set	15732
   857   000000                     _ANSELC	set	14944
   858   000000                     _ANSELD	set	14960
   859   000000                     _I2C1RXB	set	15722
   860   000000                     _RB2I2C	set	14939
   861   000000                     _PIR2bits	set	14754
   862   000000                     _OSCCON3	set	14811
   863   000000                     _OSCEN	set	14813
   864   000000                     _RB1PPS	set	14857
   865   000000                     _ANSELA	set	14912
   866   000000                     _ANSELB	set	14928
   867   000000                     _PMD7	set	14791
   868   000000                     _PMD6	set	14790
   869   000000                     _PMD5	set	14789
   870   000000                     _PMD4	set	14788
   871   000000                     _PMD3	set	14787
   872   000000                     _PMD2	set	14786
   873   000000                     _PMD1	set	14785
   874   000000                     _TRISA	set	16322
   875   000000                     _TRISE	set	16326
   876   000000                     _INLVLD	set	14964
   877   000000                     _SLRCOND	set	14963
   878   000000                     _ODCOND	set	14962
   879   000000                     _RD0I2C	set	14970
   880   000000                     _WPUD	set	14961
   881   000000                     _ANSELE	set	14976
   882   000000                     _INLVLC	set	14948
   883   000000                     _SLRCONC	set	14947
   884   000000                     _ODCONC	set	14946
   885   000000                     _RC3I2C	set	14954
   886   000000                     _WPUC	set	14945
   887   000000                     _INLVLB	set	14932
   888   000000                     _SLRCONB	set	14931
   889   000000                     _ODCONB	set	14930
   890   000000                     _WPUB	set	14929
   891   000000                     _I2C1SCLPPS	set	15073
   892   000000                     _I2C1SDAPPS	set	15074
   893   000000                     _INLVLE	set	14980
   894   000000                     _SLRCONE	set	14979
   895   000000                     _ODCONE	set	14978
   896   000000                     _WPUE	set	14977
   897   000000                     _INLVLA	set	14916
   898   000000                     _SLRCONA	set	14915
   899   000000                     _ODCONA	set	14914
   900   000000                     _WPUA	set	14913
   901   000000                     _RC4I2C	set	14955
   902   000000                     _RD1I2C	set	14971
   903   000000                     _U1RXPPS	set	15077
   904   000000                     _RC6PPS	set	14870
   905   000000                     _RB2PPS	set	14858
   906                           
   907                           ; #config settings
   908                           
   909                           	psect	cinit
   910   00A5C6                     __pcinit:
   911                           	callstack 0
   912   00A5C6                     start_initialization:
   913                           	callstack 0
   914   00A5C6                     __initialization:
   915                           	callstack 0
   916                           
   917                           ; Clear objects allocated to BANK3 (172 bytes)
   918   00A5C6  EE00  F300         	lfsr	0,__pbssBANK3
   919   00A5CA  0EAC               	movlw	172
   920   00A5CC                     clear_0:
   921   00A5CC  6AEE               	clrf	postinc0,c
   922   00A5CE  06E8               	decf	wreg,f,c
   923   00A5D0  E1FD               	bnz	clear_0
   924                           
   925                           ; Clear objects allocated to BANK2 (11 bytes)
   926   00A5D2  EE00  F214         	lfsr	0,__pbssBANK2
   927   00A5D6  0E0B               	movlw	11
   928   00A5D8                     clear_1:
   929   00A5D8  6AEE               	clrf	postinc0,c
   930   00A5DA  06E8               	decf	wreg,f,c
   931   00A5DC  E1FD               	bnz	clear_1
   932                           
   933                           ; Clear objects allocated to BANK0 (52 bytes)
   934   00A5DE  EE00  F0B9         	lfsr	0,__pbssBANK0
   935   00A5E2  0E34               	movlw	52
   936   00A5E4                     clear_2:
   937   00A5E4  6AEE               	clrf	postinc0,c
   938   00A5E6  06E8               	decf	wreg,f,c
   939   00A5E8  E1FD               	bnz	clear_2
   940                           
   941                           ; Clear objects allocated to COMRAM (1 bytes)
   942   00A5EA  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   943   00A5EC                     end_of_initialization:
   944                           	callstack 0
   945   00A5EC                     __end_of__initialization:
   946                           	callstack 0
   947   00A5EC  0100               	movlb	0
   948   00A5EE  EF39  F06B         	goto	_main	;jump to C main() function
   949                           
   950                           	psect	bssCOMRAM
   951   00005E                     __pbssCOMRAM:
   952                           	callstack 0
   953   00005E                     ___ungetcnt:
   954                           	callstack 0
   955   00005E                     	ds	1
   956                           
   957                           	psect	bssBANK0
   958   0000B9                     __pbssBANK0:
   959                           	callstack 0
   960   0000B9                     _nmatch:
   961                           	callstack 0
   962   0000B9                     	ds	2
   963   0000BB                     _ncnv:
   964                           	callstack 0
   965   0000BB                     	ds	2
   966   0000BD                     _width@doscan$F2281:
   967                           	callstack 0
   968   0000BD                     	ds	2
   969   0000BF                     _errno:
   970                           	callstack 0
   971   0000BF                     	ds	2
   972   0000C1                     _width:
   973                           	callstack 0
   974   0000C1                     	ds	2
   975   0000C3                     _prec:
   976                           	callstack 0
   977   0000C3                     	ds	2
   978   0000C5                     _currentBlockEEPROM2:
   979                           	callstack 0
   980   0000C5                     	ds	2
   981   0000C7                     _currentBlockEEPROM1:
   982                           	callstack 0
   983   0000C7                     	ds	2
   984   0000C9                     _asup:
   985                           	callstack 0
   986   0000C9                     	ds	1
   987   0000CA                     _flags:
   988                           	callstack 0
   989   0000CA                     	ds	1
   990   0000CB                     _logging:
   991                           	callstack 0
   992   0000CB                     	ds	1
   993   0000CC                     _uart1RxLastError:
   994                           	callstack 0
   995   0000CC                     	ds	1
   996   0000CD                     _gz:
   997                           	callstack 0
   998   0000CD                     	ds	4
   999   0000D1                     _gy:
  1000                           	callstack 0
  1001   0000D1                     	ds	4
  1002   0000D5                     _gx:
  1003                           	callstack 0
  1004   0000D5                     	ds	4
  1005   0000D9                     _az:
  1006                           	callstack 0
  1007   0000D9                     	ds	4
  1008   0000DD                     _ay:
  1009                           	callstack 0
  1010   0000DD                     	ds	4
  1011   0000E1                     _ax:
  1012                           	callstack 0
  1013   0000E1                     	ds	4
  1014   0000E5                     _Tm:
  1015                           	callstack 0
  1016   0000E5                     	ds	4
  1017   0000E9                     _Ndat:
  1018                           	callstack 0
  1019   0000E9                     	ds	4
  1020                           
  1021                           	psect	bssBANK2
  1022   000214                     __pbssBANK2:
  1023                           	callstack 0
  1024   000214                     floorf@F521:
  1025                           	callstack 0
  1026   000214                     	ds	4
  1027   000218                     ___fpclassifyf@F465:
  1028                           	callstack 0
  1029   000218                     	ds	4
  1030   00021C                     ___ungetbuf:
  1031                           	callstack 0
  1032   00021C                     	ds	3
  1033                           
  1034                           	psect	bssBANK3
  1035   000300                     __pbssBANK3:
  1036                           	callstack 0
  1037   000300                     _I2C1_Status:
  1038                           	callstack 0
  1039   000300                     	ds	36
  1040   000324                     _dbuf:
  1041                           	callstack 0
  1042   000324                     	ds	80
  1043   000374                     _dbuf@doscan$F2284:
  1044                           	callstack 0
  1045   000374                     	ds	32
  1046   000394                     _eepromBuffer:
  1047                           	callstack 0
  1048   000394                     	ds	24
  1049                           
  1050                           	psect	cstackBANK4
  1051   000400                     __pcstackBANK4:
  1052                           	callstack 0
  1053   000400                     main@buffer:
  1054                           	callstack 0
  1055                           
  1056                           ; 200 bytes @ 0x0
  1057   000400                     	ds	200
  1058   0004C8                     main@userInput:
  1059                           	callstack 0
  1060                           
  1061                           ; 20 bytes @ 0xC8
  1062   0004C8                     	ds	20
  1063   0004DC                     main@totalLoggedData:
  1064                           	callstack 0
  1065                           
  1066                           ; 4 bytes @ 0xDC
  1067   0004DC                     	ds	4
  1068   0004E0                     main@startReadAddressEEPROM1:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0xE0
  1072   0004E0                     	ds	4
  1073   0004E4                     main@startReadAddressEEPROM2:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0xE4
  1077   0004E4                     	ds	4
  1078   0004E8                     _main$1534:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0xE8
  1082   0004E8                     	ds	4
  1083   0004EC                     _main$1536:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0xEC
  1087   0004EC                     	ds	4
  1088                           
  1089                           	psect	cstackBANK2
  1090   000200                     __pcstackBANK2:
  1091                           	callstack 0
  1092   000200                     StartLogging@startReadAddressEEPROM1:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x0
  1096   000200                     	ds	4
  1097   000204                     StartLogging@startReadAddressEEPROM2:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x4
  1101   000204                     	ds	4
  1102   000208                     _StartLogging$1474:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x8
  1106   000208                     	ds	4
  1107   00020C                     _StartLogging$1476:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0xC
  1111   00020C                     	ds	4
  1112   000210                     StartLogging@loggedDataCount:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x10
  1116   000210                     	ds	4
  1117                           
  1118                           	psect	cstackBANK1
  1119   000100                     __pcstackBANK1:
  1120                           	callstack 0
  1121   000100                     ReadAndSendEEPROMDataCSV@buffer:
  1122                           	callstack 0
  1123   000100                     ReadAndSendEEPROMData@buffer:
  1124                           	callstack 0
  1125   000100                     ReadAllEEPROMDataCSV@buffer:
  1126                           	callstack 0
  1127                           
  1128                           ; 200 bytes @ 0x0
  1129   000100                     	ds	200
  1130   0001C8                     ReadAndSendEEPROMDataCSV@eepromReadBuffer:
  1131                           	callstack 0
  1132   0001C8                     ReadAndSendEEPROMData@eepromReadBuffer:
  1133                           	callstack 0
  1134   0001C8                     ReadAllEEPROMDataCSV@eepromReadBuffer:
  1135                           	callstack 0
  1136                           
  1137                           ; 24 bytes @ 0xC8
  1138   0001C8                     	ds	24
  1139   0001E0                     ReadAndSendEEPROMDataCSV@i:
  1140                           	callstack 0
  1141   0001E0                     ReadAndSendEEPROMData@i:
  1142                           	callstack 0
  1143   0001E0                     ReadAllEEPROMDataCSV@i:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0xE0
  1147   0001E0                     	ds	4
  1148   0001E4                     ReadAndSendEEPROMDataCSV@ax_read:
  1149                           	callstack 0
  1150   0001E4                     ReadAndSendEEPROMData@ax_read:
  1151                           	callstack 0
  1152   0001E4                     ReadAllEEPROMDataCSV@ax_read:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0xE4
  1156   0001E4                     	ds	4
  1157   0001E8                     ReadAndSendEEPROMDataCSV@ay_read:
  1158                           	callstack 0
  1159   0001E8                     ReadAndSendEEPROMData@ay_read:
  1160                           	callstack 0
  1161   0001E8                     ReadAllEEPROMDataCSV@ay_read:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0xE8
  1165   0001E8                     	ds	4
  1166   0001EC                     ReadAndSendEEPROMDataCSV@az_read:
  1167                           	callstack 0
  1168   0001EC                     ReadAndSendEEPROMData@az_read:
  1169                           	callstack 0
  1170   0001EC                     ReadAllEEPROMDataCSV@az_read:
  1171                           	callstack 0
  1172                           
  1173                           ; 4 bytes @ 0xEC
  1174   0001EC                     	ds	4
  1175   0001F0                     ReadAndSendEEPROMDataCSV@gx_read:
  1176                           	callstack 0
  1177   0001F0                     ReadAndSendEEPROMData@gx_read:
  1178                           	callstack 0
  1179   0001F0                     ReadAllEEPROMDataCSV@gx_read:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0xF0
  1183   0001F0                     	ds	4
  1184   0001F4                     ReadAndSendEEPROMDataCSV@gy_read:
  1185                           	callstack 0
  1186   0001F4                     ReadAndSendEEPROMData@gy_read:
  1187                           	callstack 0
  1188   0001F4                     ReadAllEEPROMDataCSV@gy_read:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0xF4
  1192   0001F4                     	ds	4
  1193   0001F8                     ReadAndSendEEPROMDataCSV@gz_read:
  1194                           	callstack 0
  1195   0001F8                     ReadAndSendEEPROMData@gz_read:
  1196                           	callstack 0
  1197   0001F8                     ReadAllEEPROMDataCSV@gz_read:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0xF8
  1201   0001F8                     	ds	4
  1202   0001FC                     ReadAndSendEEPROMDataCSV@readBlockEEPROM1:
  1203                           	callstack 0
  1204   0001FC                     ReadAndSendEEPROMData@readBlockEEPROM1:
  1205                           	callstack 0
  1206   0001FC                     ReadAllEEPROMDataCSV@readBlockEEPROM1:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0xFC
  1210   0001FC                     	ds	2
  1211   0001FE                     ReadAndSendEEPROMDataCSV@readBlockEEPROM2:
  1212                           	callstack 0
  1213   0001FE                     ReadAndSendEEPROMData@readBlockEEPROM2:
  1214                           	callstack 0
  1215   0001FE                     ReadAllEEPROMDataCSV@readBlockEEPROM2:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0xFE
  1219   0001FE                     	ds	2
  1220                           
  1221                           	psect	cstackBANK0
  1222   000060                     __pcstackBANK0:
  1223                           	callstack 0
  1224   000060                     ??_vfsfcnvrt:
  1225   000060                     efgtoa@ne:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x0
  1229   000060                     	ds	2
  1230   000062                     vfsfcnvrt@vp:
  1231                           	callstack 0
  1232   000062                     efgtoa@p:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x2
  1236   000062                     	ds	1
  1237   000063                     vfsfcnvrt@llu:
  1238                           	callstack 0
  1239                           
  1240                           ; 8 bytes @ 0x3
  1241   000063                     	ds	1
  1242   000064                     efgtoa@t:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x4
  1246   000064                     	ds	2
  1247   000066                     _efgtoa$2113:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x6
  1251   000066                     	ds	2
  1252   000068                     efgtoa@pp:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x8
  1256   000068                     	ds	1
  1257   000069                     efgtoa@mode:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x9
  1261   000069                     	ds	1
  1262   00006A                     efgtoa@nmode:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0xA
  1266   00006A                     	ds	1
  1267   00006B                     efgtoa@d:
  1268                           	callstack 0
  1269   00006B                     vfsfcnvrt@i:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0xB
  1273   00006B                     	ds	2
  1274   00006D                     efgtoa@m:
  1275                           	callstack 0
  1276   00006D                     vfsfcnvrt@c:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0xD
  1280   00006D                     	ds	2
  1281   00006F                     ?_vfscanf:
  1282                           	callstack 0
  1283   00006F                     vfscanf@fp:
  1284                           	callstack 0
  1285   00006F                     efgtoa@e:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0xF
  1289   00006F                     	ds	1
  1290   000070                     vfscanf@fmt:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x10
  1294   000070                     	ds	1
  1295   000071                     efgtoa@w:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x11
  1299   000071                     	ds	1
  1300   000072                     vfscanf@ap:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x12
  1304   000072                     	ds	1
  1305   000073                     vfscanf@saved_errno:
  1306                           	callstack 0
  1307   000073                     efgtoa@ou:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x13
  1311   000073                     	ds	2
  1312   000075                     vfscanf@n:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x15
  1316   000075                     	ds	2
  1317   000077                     efgtoa@i:
  1318                           	callstack 0
  1319   000077                     vfscanf@cfmt:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x17
  1323   000077                     	ds	2
  1324   000079                     ?_sscanf:
  1325                           	callstack 0
  1326   000079                     sscanf@s:
  1327                           	callstack 0
  1328   000079                     efgtoa@h:
  1329                           	callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x19
  1332   000079                     	ds	2
  1333   00007B                     sscanf@fmt:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x1B
  1337   00007B                     	ds	2
  1338   00007D                     efgtoa@l:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x1D
  1342   00007D                     	ds	2
  1343   00007F                     sscanf@ret:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x1F
  1347   00007F                     	ds	2
  1348   000081                     efgtoa@sign:
  1349                           	callstack 0
  1350   000081                     sscanf@ap:
  1351                           	callstack 0
  1352                           
  1353                           ; 1 bytes @ 0x21
  1354   000081                     	ds	1
  1355   000082                     efgtoa@g:
  1356                           	callstack 0
  1357   000082                     sscanf@f:
  1358                           	callstack 0
  1359                           
  1360                           ; 12 bytes @ 0x22
  1361   000082                     	ds	4
  1362   000086                     efgtoa@n:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x26
  1366   000086                     	ds	2
  1367   000088                     efgtoa@u:
  1368                           	callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x28
  1371   000088                     	ds	4
  1372   00008C                     vfpfcnvrt@fp:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x2C
  1376   00008C                     	ds	1
  1377   00008D                     vfpfcnvrt@fmt:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x2D
  1381   00008D                     	ds	1
  1382   00008E                     vfpfcnvrt@ap:
  1383                           	callstack 0
  1384   00008E                     ParseUserInput@input:
  1385                           	callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x2E
  1388   00008E                     	ds	1
  1389   00008F                     ?_vfprintf:
  1390                           	callstack 0
  1391   00008F                     vfprintf@fp:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x2F
  1395   00008F                     	ds	1
  1396   000090                     ParseUserInput@Tm:
  1397                           	callstack 0
  1398   000090                     vfprintf@fmt:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x30
  1402   000090                     	ds	1
  1403   000091                     ParseUserInput@Ndat:
  1404                           	callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x31
  1407   000091                     	ds	1
  1408   000092                     vfprintf@ap:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x32
  1412   000092                     	ds	1
  1413   000093                     ?_sprintf:
  1414                           	callstack 0
  1415   000093                     sprintf@s:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x33
  1419   000093                     	ds	2
  1420   000095                     sprintf@fmt:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x35
  1424   000095                     	ds	26
  1425   0000AF                     ReadAndSendEEPROMDataCSV@Ndat:
  1426                           	callstack 0
  1427   0000AF                     ReadAndSendEEPROMData@Ndat:
  1428                           	callstack 0
  1429   0000AF                     ReadAllEEPROMDataCSV@totalLogged:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x4F
  1433   0000AF                     	ds	4
  1434   0000B3                     ReadAndSendEEPROMDataCSV@startAddressEEPROM1:
  1435                           	callstack 0
  1436   0000B3                     ReadAndSendEEPROMData@startAddressEEPROM1:
  1437                           	callstack 0
  1438   0000B3                     ReadAllEEPROMDataCSV@startAddressEEPROM1:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x53
  1442   0000B3                     	ds	2
  1443   0000B5                     ReadAndSendEEPROMDataCSV@startAddressEEPROM2:
  1444                           	callstack 0
  1445   0000B5                     ReadAndSendEEPROMData@startAddressEEPROM2:
  1446                           	callstack 0
  1447   0000B5                     ReadAllEEPROMDataCSV@startAddressEEPROM2:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x55
  1451   0000B5                     	ds	2
  1452   0000B7                     ??_StartLogging:
  1453                           
  1454                           ; 1 bytes @ 0x57
  1455   0000B7                     	ds	2
  1456                           
  1457                           	psect	cstackCOMRAM
  1458   000001                     __pcstackCOMRAM:
  1459                           	callstack 0
  1460   000001                     ?_strncmp:
  1461                           	callstack 0
  1462   000001                     ?___fpclassifyf:
  1463                           	callstack 0
  1464   000001                     ?_getch:
  1465                           	callstack 0
  1466   000001                     ?___wmul:
  1467                           	callstack 0
  1468   000001                     ?___lwdiv:
  1469                           	callstack 0
  1470   000001                     ?___fladd:
  1471                           	callstack 0
  1472   000001                     ?___flmul:
  1473                           	callstack 0
  1474   000001                     ?_labs:
  1475                           	callstack 0
  1476   000001                     ?___lmul:
  1477                           	callstack 0
  1478   000001                     ?___lldiv:
  1479                           	callstack 0
  1480   000001                     ?___flneg:
  1481                           	callstack 0
  1482   000001                     ?___fltol:
  1483                           	callstack 0
  1484   000001                     ?___llmod:
  1485                           	callstack 0
  1486   000001                     ?___xxtofl:
  1487                           	callstack 0
  1488   000001                     ?___omul:
  1489                           	callstack 0
  1490   000001                     UART1_Write@txData:
  1491                           	callstack 0
  1492   000001                     I2C1_Open@address:
  1493                           	callstack 0
  1494   000001                     I2C1_Close@returnValue:
  1495                           	callstack 0
  1496   000001                     I2C1_MasterSendTxData@data:
  1497                           	callstack 0
  1498   000001                     I2C1_MasterSetCounter@counter:
  1499                           	callstack 0
  1500   000001                     UART1_SetFramingErrorHandler@interruptHandler:
  1501                           	callstack 0
  1502   000001                     UART1_SetOverrunErrorHandler@interruptHandler:
  1503                           	callstack 0
  1504   000001                     UART1_SetErrorHandler@interruptHandler:
  1505                           	callstack 0
  1506   000001                     I2C1_SetBuffer@buffer:
  1507                           	callstack 0
  1508   000001                     I2C1_SetCallback@cb:
  1509                           	callstack 0
  1510   000001                     UART_ReceiveString@receivedString:
  1511                           	callstack 0
  1512   000001                     ___wmul@multiplier:
  1513                           	callstack 0
  1514   000001                     ___lwdiv@dividend:
  1515                           	callstack 0
  1516   000001                     memcpy@d1:
  1517                           	callstack 0
  1518   000001                     memset@dest:
  1519                           	callstack 0
  1520   000001                     ungetc@c:
  1521                           	callstack 0
  1522   000001                     strcpy@dest:
  1523                           	callstack 0
  1524   000001                     strncmp@l:
  1525                           	callstack 0
  1526   000001                     custom_delay_ms@milliseconds:
  1527                           	callstack 0
  1528   000001                     ___lmul@multiplier:
  1529                           	callstack 0
  1530   000001                     ___lldiv@dividend:
  1531                           	callstack 0
  1532   000001                     ___fleq@ff1:
  1533                           	callstack 0
  1534   000001                     ___flneg@f1:
  1535                           	callstack 0
  1536   000001                     ___fltol@f1:
  1537                           	callstack 0
  1538   000001                     ___llmod@dividend:
  1539                           	callstack 0
  1540   000001                     ___fladd@b:
  1541                           	callstack 0
  1542   000001                     ___flmul@b:
  1543                           	callstack 0
  1544   000001                     ___xxtofl@val:
  1545                           	callstack 0
  1546   000001                     ___fpclassifyf@x:
  1547                           	callstack 0
  1548   000001                     labs@a:
  1549                           	callstack 0
  1550   000001                     ___omul@multiplier:
  1551                           	callstack 0
  1552                           
  1553                           ; 8 bytes @ 0x0
  1554   000001                     	ds	1
  1555   000002                     putch@txData:
  1556                           	callstack 0
  1557   000002                     I2C1_Open@returnValue:
  1558                           	callstack 0
  1559   000002                     UART_SendString@str:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x1
  1563   000002                     	ds	1
  1564   000003                     ?_fgetc:
  1565                           	callstack 0
  1566   000003                     UART_ReceiveString@maxLength:
  1567                           	callstack 0
  1568   000003                     fgetc@fp:
  1569                           	callstack 0
  1570   000003                     ungetc@fp:
  1571                           	callstack 0
  1572   000003                     I2C1_SetBuffer@bufferSize:
  1573                           	callstack 0
  1574   000003                     I2C1_SetCallback@ptr:
  1575                           	callstack 0
  1576   000003                     ___wmul@multiplicand:
  1577                           	callstack 0
  1578   000003                     ___lwdiv@divisor:
  1579                           	callstack 0
  1580   000003                     memcpy@s1:
  1581                           	callstack 0
  1582   000003                     memset@c:
  1583                           	callstack 0
  1584   000003                     fputc@c:
  1585                           	callstack 0
  1586   000003                     strcpy@src:
  1587                           	callstack 0
  1588   000003                     strncmp@r:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x2
  1592   000003                     	ds	1
  1593   000004                     ??_ungetc:
  1594   000004                     ??_UART_ReceiveString:
  1595                           
  1596                           ; 1 bytes @ 0x3
  1597   000004                     	ds	1
  1598   000005                     ??___fpclassifyf:
  1599   000005                     ??_labs:
  1600   000005                     ??_fgetc:
  1601   000005                     ??_custom_delay_ms:
  1602   000005                     ??___fltol:
  1603   000005                     ??___xxtofl:
  1604   000005                     I2C1_SetCallback@idx:
  1605                           	callstack 0
  1606   000005                     ___lwdiv@counter:
  1607                           	callstack 0
  1608   000005                     fputc@fp:
  1609                           	callstack 0
  1610   000005                     ___wmul@product:
  1611                           	callstack 0
  1612   000005                     memcpy@n:
  1613                           	callstack 0
  1614   000005                     memset@n:
  1615                           	callstack 0
  1616   000005                     strcpy@d:
  1617                           	callstack 0
  1618   000005                     strncmp@n:
  1619                           	callstack 0
  1620   000005                     ___lmul@multiplicand:
  1621                           	callstack 0
  1622   000005                     ___lldiv@divisor:
  1623                           	callstack 0
  1624   000005                     ___fleq@ff2:
  1625                           	callstack 0
  1626   000005                     ___llmod@divisor:
  1627                           	callstack 0
  1628   000005                     ___fladd@a:
  1629                           	callstack 0
  1630   000005                     ___flmul@a:
  1631                           	callstack 0
  1632                           
  1633                           ; 4 bytes @ 0x4
  1634   000005                     	ds	1
  1635   000006                     ??_fputc:
  1636   000006                     I2C1_SetDataCompleteCallback@cb:
  1637                           	callstack 0
  1638   000006                     I2C1_SetAddressNackCallback@cb:
  1639                           	callstack 0
  1640   000006                     ___lwdiv@quotient:
  1641                           	callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x5
  1644   000006                     	ds	1
  1645   000007                     ??_strncmp:
  1646   000007                     ?_read_prec_or_width:
  1647                           	callstack 0
  1648   000007                     memcpy@tmp:
  1649                           	callstack 0
  1650   000007                     read_prec_or_width@fmt:
  1651                           	callstack 0
  1652   000007                     memset@p:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x6
  1656   000007                     	ds	1
  1657   000008                     read_prec_or_width@ap:
  1658                           	callstack 0
  1659   000008                     I2C1_SetDataCompleteCallback@ptr:
  1660                           	callstack 0
  1661   000008                     I2C1_SetAddressNackCallback@ptr:
  1662                           	callstack 0
  1663   000008                     memcpy@d:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x7
  1667   000008                     	ds	1
  1668   000009                     ??___fladd:
  1669   000009                     ??___flmul:
  1670   000009                     ??___fleq:
  1671   000009                     UART_ReceiveString@data:
  1672                           	callstack 0
  1673   000009                     ___fltol@sign1:
  1674                           	callstack 0
  1675   000009                     ___llmod@counter:
  1676                           	callstack 0
  1677   000009                     ___xxtofl@sign:
  1678                           	callstack 0
  1679   000009                     read_prec_or_width@c:
  1680                           	callstack 0
  1681   000009                     ___fpclassifyf@e:
  1682                           	callstack 0
  1683   000009                     ___lmul@product:
  1684                           	callstack 0
  1685   000009                     ___lldiv@quotient:
  1686                           	callstack 0
  1687   000009                     ___omul@multiplicand:
  1688                           	callstack 0
  1689                           
  1690                           ; 8 bytes @ 0x8
  1691   000009                     	ds	1
  1692   00000A                     UART_ReceiveString@index:
  1693                           	callstack 0
  1694   00000A                     ___fltol@exp1:
  1695                           	callstack 0
  1696   00000A                     ___xxtofl@exp:
  1697                           	callstack 0
  1698   00000A                     rd1RegCompleteHandler@ptr:
  1699                           	callstack 0
  1700   00000A                     rd2RegCompleteHandler@ptr:
  1701                           	callstack 0
  1702   00000A                     wr1RegCompleteHandler@ptr:
  1703                           	callstack 0
  1704   00000A                     wr2RegCompleteHandler@ptr:
  1705                           	callstack 0
  1706   00000A                     rdBlkRegCompleteHandler@ptr:
  1707                           	callstack 0
  1708   00000A                     I2C1_CallbackReturnReset@funPtr:
  1709                           	callstack 0
  1710   00000A                     memcpy@s:
  1711                           	callstack 0
  1712   00000A                     read_prec_or_width@n:
  1713                           	callstack 0
  1714   00000A                     fgetc@c:
  1715                           	callstack 0
  1716                           
  1717                           ; 2 bytes @ 0x9
  1718   00000A                     	ds	1
  1719   00000B                     fputs@s:
  1720                           	callstack 0
  1721   00000B                     ___xxtofl@arg:
  1722                           	callstack 0
  1723   00000B                     ___fpclassifyf@u:
  1724                           	callstack 0
  1725                           
  1726                           ; 4 bytes @ 0xA
  1727   00000B                     	ds	1
  1728   00000C                     ??_rdBlkRegCompleteHandler:
  1729   00000C                     skipws@fp:
  1730                           	callstack 0
  1731                           
  1732                           ; 1 bytes @ 0xB
  1733   00000C                     	ds	1
  1734   00000D                     ??_I2C1_DO_TX:
  1735   00000D                     ??_I2C1_DO_TX_EMPTY:
  1736   00000D                     ??_I2C1_DO_RX_EMPTY:
  1737   00000D                     ??_I2C1_DO_ADDRESS_NACK:
  1738   00000D                     ??_I2C1_DO_BUS_COLLISION:
  1739   00000D                     ??_skipws:
  1740   00000D                     ___lldiv@counter:
  1741                           	callstack 0
  1742   00000D                     ___fladd@signs:
  1743                           	callstack 0
  1744   00000D                     ___flmul@sign:
  1745                           	callstack 0
  1746   00000D                     fputs@fp:
  1747                           	callstack 0
  1748                           
  1749                           ; 1 bytes @ 0xC
  1750   00000D                     	ds	1
  1751   00000E                     ___fladd@aexp:
  1752                           	callstack 0
  1753   00000E                     ___flmul@aexp:
  1754                           	callstack 0
  1755   00000E                     fputs@c:
  1756                           	callstack 0
  1757   00000E                     skipws@c:
  1758                           	callstack 0
  1759                           
  1760                           ; 2 bytes @ 0xD
  1761   00000E                     	ds	1
  1762   00000F                     ??_I2C1_DO_RX:
  1763   00000F                     ?___fldiv:
  1764                           	callstack 0
  1765   00000F                     I2C1_DO_TX@dataTx:
  1766                           	callstack 0
  1767   00000F                     ___fladd@bexp:
  1768                           	callstack 0
  1769   00000F                     fputs@i:
  1770                           	callstack 0
  1771   00000F                     ___fldiv@b:
  1772                           	callstack 0
  1773   00000F                     ___flmul@grs:
  1774                           	callstack 0
  1775                           
  1776                           ; 4 bytes @ 0xE
  1777   00000F                     	ds	1
  1778   000010                     I2C1_DO_TX@retFsmState:
  1779                           	callstack 0
  1780   000010                     ___fladd@grs:
  1781                           	callstack 0
  1782                           
  1783                           ; 1 bytes @ 0xF
  1784   000010                     	ds	1
  1785   000011                     I2C1_DO_RX@retFsmState:
  1786                           	callstack 0
  1787   000011                     pad@fp:
  1788                           	callstack 0
  1789   000011                     _I2C1_DO_TX$1073:
  1790                           	callstack 0
  1791   000011                     ___omul@product:
  1792                           	callstack 0
  1793                           
  1794                           ; 8 bytes @ 0x10
  1795   000011                     	ds	1
  1796   000012                     pad@buf:
  1797                           	callstack 0
  1798                           
  1799                           ; 2 bytes @ 0x11
  1800   000012                     	ds	1
  1801   000013                     ??_I2C1_MasterFsm:
  1802   000013                     ___flmul@bexp:
  1803                           	callstack 0
  1804   000013                     ___fldiv@a:
  1805                           	callstack 0
  1806                           
  1807                           ; 4 bytes @ 0x12
  1808   000013                     	ds	1
  1809   000014                     pad@p:
  1810                           	callstack 0
  1811   000014                     ___flmul@prod:
  1812                           	callstack 0
  1813                           
  1814                           ; 4 bytes @ 0x13
  1815   000014                     	ds	1
  1816   000015                     I2C1_MasterOperation@read:
  1817                           	callstack 0
  1818                           
  1819                           ; 1 bytes @ 0x14
  1820   000015                     	ds	1
  1821   000016                     ??_pad:
  1822   000016                     I2C1_MasterOperation@returnValue:
  1823                           	callstack 0
  1824                           
  1825                           ; 1 bytes @ 0x15
  1826   000016                     	ds	1
  1827   000017                     ??___fldiv:
  1828   000017                     I2C1_Write1ByteRegister@reg:
  1829                           	callstack 0
  1830   000017                     I2C1_WriteNBytes@data:
  1831                           	callstack 0
  1832   000017                     I2C1_ReadNBytes@data:
  1833                           	callstack 0
  1834   000017                     I2C1_ReadDataBlock@reg:
  1835                           	callstack 0
  1836   000017                     pad@i:
  1837                           	callstack 0
  1838                           
  1839                           ; 2 bytes @ 0x16
  1840   000017                     	ds	1
  1841   000018                     I2C1_Write1ByteRegister@data:
  1842                           	callstack 0
  1843   000018                     I2C1_ReadDataBlock@data:
  1844                           	callstack 0
  1845   000018                     I2C1_WriteNBytes@len:
  1846                           	callstack 0
  1847   000018                     I2C1_ReadNBytes@len:
  1848                           	callstack 0
  1849   000018                     ___flmul@temp:
  1850                           	callstack 0
  1851                           
  1852                           ; 2 bytes @ 0x17
  1853   000018                     	ds	1
  1854   000019                     ?___strtoxll:
  1855                           	callstack 0
  1856   000019                     I2C1_Write1ByteRegister@address:
  1857                           	callstack 0
  1858   000019                     utoa@fp:
  1859                           	callstack 0
  1860   000019                     xtoa@fp:
  1861                           	callstack 0
  1862   000019                     I2C1_ReadDataBlock@len:
  1863                           	callstack 0
  1864   000019                     ___strtoxll@s:
  1865                           	callstack 0
  1866                           
  1867                           ; 2 bytes @ 0x18
  1868   000019                     	ds	1
  1869   00001A                     ?___flsub:
  1870                           	callstack 0
  1871   00001A                     I2C1_WriteNBytes@address:
  1872                           	callstack 0
  1873   00001A                     I2C1_ReadNBytes@address:
  1874                           	callstack 0
  1875   00001A                     ___flge@ff1:
  1876                           	callstack 0
  1877   00001A                     ___flsub@b:
  1878                           	callstack 0
  1879   00001A                     utoa@d:
  1880                           	callstack 0
  1881   00001A                     xtoa@d:
  1882                           	callstack 0
  1883                           
  1884                           ; 4 bytes @ 0x19
  1885   00001A                     	ds	1
  1886   00001B                     I2C1_ReadDataBlock@address:
  1887                           	callstack 0
  1888   00001B                     ___strtoxll@endptr:
  1889                           	callstack 0
  1890   00001B                     EEPROM_WriteByte@memoryAddress:
  1891                           	callstack 0
  1892   00001B                     EEPROM_ReadByte@memoryAddress:
  1893                           	callstack 0
  1894   00001B                     ___fldiv@rem:
  1895                           	callstack 0
  1896                           
  1897                           ; 4 bytes @ 0x1A
  1898   00001B                     	ds	1
  1899   00001C                     ___strtoxll@base:
  1900                           	callstack 0
  1901   00001C                     I2C1_ReadDataBlock@bufferBlock:
  1902                           	callstack 0
  1903                           
  1904                           ; 3 bytes @ 0x1B
  1905   00001C                     	ds	1
  1906   00001D                     EEPROM_WriteByte@data:
  1907                           	callstack 0
  1908   00001D                     EEPROM_ReadByte@addressBuffer:
  1909                           	callstack 0
  1910                           
  1911                           ; 2 bytes @ 0x1C
  1912   00001D                     	ds	1
  1913   00001E                     ??_EEPROM_WriteByte:
  1914   00001E                     ??_xtoa:
  1915   00001E                     ___strtoxll@is_signed:
  1916                           	callstack 0
  1917   00001E                     utoa@w:
  1918                           	callstack 0
  1919   00001E                     ___flge@ff2:
  1920                           	callstack 0
  1921   00001E                     ___flsub@a:
  1922                           	callstack 0
  1923                           
  1924                           ; 4 bytes @ 0x1D
  1925   00001E                     	ds	1
  1926   00001F                     EEPROM_WriteByte@deviceAddress:
  1927                           	callstack 0
  1928   00001F                     EEPROM_ReadByte@deviceAddress:
  1929                           	callstack 0
  1930   00001F                     ___fldiv@sign:
  1931                           	callstack 0
  1932                           
  1933                           ; 1 bytes @ 0x1E
  1934   00001F                     	ds	1
  1935   000020                     EEPROM_ReadByte@data:
  1936                           	callstack 0
  1937   000020                     ___fldiv@new_exp:
  1938                           	callstack 0
  1939   000020                     utoa@p:
  1940                           	callstack 0
  1941   000020                     EEPROM_WriteByte@buffer:
  1942                           	callstack 0
  1943                           
  1944                           ; 3 bytes @ 0x1F
  1945   000020                     	ds	1
  1946   000021                     ??___strtoxll:
  1947   000021                     EEPROM_ReadBlock@memoryAddress:
  1948                           	callstack 0
  1949                           
  1950                           ; 2 bytes @ 0x20
  1951   000021                     	ds	1
  1952   000022                     ??___flge:
  1953   000022                     utoa@i:
  1954                           	callstack 0
  1955   000022                     xtoa@w:
  1956                           	callstack 0
  1957   000022                     ___fldiv@grs:
  1958                           	callstack 0
  1959                           
  1960                           ; 4 bytes @ 0x21
  1961   000022                     	ds	1
  1962   000023                     EEPROM_WriteBlock@memoryAddress:
  1963                           	callstack 0
  1964   000023                     EEPROM_ReadBlock@data:
  1965                           	callstack 0
  1966                           
  1967                           ; 2 bytes @ 0x22
  1968   000023                     	ds	1
  1969   000024                     xtoa@p:
  1970                           	callstack 0
  1971                           
  1972                           ; 2 bytes @ 0x23
  1973   000024                     	ds	1
  1974   000025                     EEPROM_ReadBlock@size:
  1975                           	callstack 0
  1976   000025                     EEPROM_WriteBlock@data:
  1977                           	callstack 0
  1978                           
  1979                           ; 2 bytes @ 0x24
  1980   000025                     	ds	1
  1981   000026                     ??_EEPROM_ReadBlock:
  1982   000026                     ___fldiv@bexp:
  1983                           	callstack 0
  1984   000026                     xtoa@c:
  1985                           	callstack 0
  1986                           
  1987                           ; 1 bytes @ 0x25
  1988   000026                     	ds	1
  1989   000027                     EEPROM_WriteBlock@size:
  1990                           	callstack 0
  1991   000027                     EEPROM_ReadBlock@deviceAddress:
  1992                           	callstack 0
  1993   000027                     ___fldiv@aexp:
  1994                           	callstack 0
  1995   000027                     xtoa@i:
  1996                           	callstack 0
  1997                           
  1998                           ; 2 bytes @ 0x26
  1999   000027                     	ds	1
  2000   000028                     ?_floorf:
  2001                           	callstack 0
  2002   000028                     MPU6050_ReadSensorData@ax:
  2003                           	callstack 0
  2004   000028                     EEPROM_WriteBlock@deviceAddress:
  2005                           	callstack 0
  2006   000028                     EEPROM_ReadBlock@i:
  2007                           	callstack 0
  2008   000028                     floorf@x:
  2009                           	callstack 0
  2010                           
  2011                           ; 4 bytes @ 0x27
  2012   000028                     	ds	1
  2013   000029                     ??_LoadCurrentAddressEEPROM:
  2014   000029                     MPU6050_ReadSensorData@ay:
  2015                           	callstack 0
  2016   000029                     EEPROM_WriteBlock@i:
  2017                           	callstack 0
  2018   000029                     LoadLastSettings@buffer:
  2019                           	callstack 0
  2020   000029                     ___strtoxll@prev_a:
  2021                           	callstack 0
  2022                           
  2023                           ; 8 bytes @ 0x28
  2024   000029                     	ds	1
  2025   00002A                     MPU6050_ReadSensorData@az:
  2026                           	callstack 0
  2027   00002A                     StoreCurrentAddressEEPROM@addressBuffer:
  2028                           	callstack 0
  2029   00002A                     StoreLastSettings@buffer:
  2030                           	callstack 0
  2031                           
  2032                           ; 8 bytes @ 0x29
  2033   00002A                     	ds	1
  2034   00002B                     MPU6050_ReadSensorData@gx:
  2035                           	callstack 0
  2036   00002B                     LoadCurrentAddressEEPROM@addressBuffer:
  2037                           	callstack 0
  2038                           
  2039                           ; 2 bytes @ 0x2A
  2040   00002B                     	ds	1
  2041   00002C                     ??_floorf:
  2042   00002C                     MPU6050_ReadSensorData@gy:
  2043                           	callstack 0
  2044                           
  2045                           ; 1 bytes @ 0x2B
  2046   00002C                     	ds	1
  2047   00002D                     MPU6050_ReadSensorData@gz:
  2048                           	callstack 0
  2049                           
  2050                           ; 1 bytes @ 0x2C
  2051   00002D                     	ds	1
  2052   00002E                     ??_MPU6050_ReadSensorData:
  2053                           
  2054                           ; 1 bytes @ 0x2D
  2055   00002E                     	ds	2
  2056   000030                     MPU6050_ReadSensorData@buffer:
  2057                           	callstack 0
  2058                           
  2059                           ; 12 bytes @ 0x2F
  2060   000030                     	ds	1
  2061   000031                     ___strtoxll$2338:
  2062                           	callstack 0
  2063                           
  2064                           ; 2 bytes @ 0x30
  2065   000031                     	ds	1
  2066   000032                     floorf@m:
  2067                           	callstack 0
  2068                           
  2069                           ; 4 bytes @ 0x31
  2070   000032                     	ds	1
  2071   000033                     ___strtoxll$2339:
  2072                           	callstack 0
  2073                           
  2074                           ; 2 bytes @ 0x32
  2075   000033                     	ds	2
  2076   000035                     ___strtoxll@limit:
  2077                           	callstack 0
  2078                           
  2079                           ; 8 bytes @ 0x34
  2080   000035                     	ds	1
  2081   000036                     floorf@e:
  2082                           	callstack 0
  2083                           
  2084                           ; 2 bytes @ 0x35
  2085   000036                     	ds	2
  2086   000038                     floorf@u:
  2087                           	callstack 0
  2088                           
  2089                           ; 4 bytes @ 0x37
  2090   000038                     	ds	4
  2091   00003C                     efgtoa@fp:
  2092                           	callstack 0
  2093   00003C                     MPU6050_ReadSensorData@ax_raw:
  2094                           	callstack 0
  2095                           
  2096                           ; 2 bytes @ 0x3B
  2097   00003C                     	ds	1
  2098   00003D                     ___strtoxll@flags:
  2099                           	callstack 0
  2100   00003D                     efgtoa@f:
  2101                           	callstack 0
  2102                           
  2103                           ; 4 bytes @ 0x3C
  2104   00003D                     	ds	1
  2105   00003E                     MPU6050_ReadSensorData@ay_raw:
  2106                           	callstack 0
  2107   00003E                     ___strtoxll@a:
  2108                           	callstack 0
  2109                           
  2110                           ; 8 bytes @ 0x3D
  2111   00003E                     	ds	2
  2112   000040                     MPU6050_ReadSensorData@az_raw:
  2113                           	callstack 0
  2114                           
  2115                           ; 2 bytes @ 0x3F
  2116   000040                     	ds	1
  2117   000041                     efgtoa@c:
  2118                           	callstack 0
  2119                           
  2120                           ; 1 bytes @ 0x40
  2121   000041                     	ds	1
  2122   000042                     ??_efgtoa:
  2123   000042                     MPU6050_ReadSensorData@gx_raw:
  2124                           	callstack 0
  2125                           
  2126                           ; 2 bytes @ 0x41
  2127   000042                     	ds	2
  2128   000044                     ??_vfpfcnvrt:
  2129   000044                     MPU6050_ReadSensorData@gy_raw:
  2130                           	callstack 0
  2131                           
  2132                           ; 2 bytes @ 0x43
  2133   000044                     	ds	2
  2134   000046                     MPU6050_ReadSensorData@gz_raw:
  2135                           	callstack 0
  2136   000046                     ___strtoxll@cp:
  2137                           	callstack 0
  2138   000046                     vfpfcnvrt@convarg:
  2139                           	callstack 0
  2140                           
  2141                           ; 4 bytes @ 0x45
  2142   000046                     	ds	2
  2143   000048                     ___strtoxll@c:
  2144                           	callstack 0
  2145                           
  2146                           ; 1 bytes @ 0x47
  2147   000048                     	ds	1
  2148   000049                     ?_atou:
  2149                           	callstack 0
  2150   000049                     atou@fp:
  2151                           	callstack 0
  2152                           
  2153                           ; 1 bytes @ 0x48
  2154   000049                     	ds	1
  2155   00004A                     vfpfcnvrt@c:
  2156                           	callstack 0
  2157   00004A                     atou@pll:
  2158                           	callstack 0
  2159                           
  2160                           ; 1 bytes @ 0x49
  2161   00004A                     	ds	1
  2162   00004B                     ??_atou:
  2163   00004B                     vfpfcnvrt@cp:
  2164                           	callstack 0
  2165                           
  2166                           ; 2 bytes @ 0x4A
  2167   00004B                     	ds	2
  2168   00004D                     vfprintf@cfmt:
  2169                           	callstack 0
  2170                           
  2171                           ; 2 bytes @ 0x4C
  2172   00004D                     	ds	2
  2173   00004F                     sprintf@ap:
  2174                           	callstack 0
  2175                           
  2176                           ; 1 bytes @ 0x4E
  2177   00004F                     	ds	1
  2178   000050                     sprintf@f:
  2179                           	callstack 0
  2180                           
  2181                           ; 12 bytes @ 0x4F
  2182   000050                     	ds	3
  2183   000053                     atou@ep:
  2184                           	callstack 0
  2185                           
  2186                           ; 2 bytes @ 0x52
  2187   000053                     	ds	2
  2188   000055                     atou@w:
  2189                           	callstack 0
  2190                           
  2191                           ; 2 bytes @ 0x54
  2192   000055                     	ds	2
  2193   000057                     atou@i:
  2194                           	callstack 0
  2195                           
  2196                           ; 2 bytes @ 0x56
  2197   000057                     	ds	2
  2198   000059                     atou@c:
  2199                           	callstack 0
  2200                           
  2201                           ; 2 bytes @ 0x58
  2202   000059                     	ds	2
  2203   00005B                     ?_vfsfcnvrt:
  2204                           	callstack 0
  2205   00005B                     vfsfcnvrt@fp:
  2206                           	callstack 0
  2207                           
  2208                           ; 1 bytes @ 0x5A
  2209   00005B                     	ds	1
  2210   00005C                     ??_ReadAndSendEEPROMDataCSV:
  2211   00005C                     ??_ReadAndSendEEPROMData:
  2212   00005C                     ??_ReadAllEEPROMDataCSV:
  2213   00005C                     vfsfcnvrt@fmt:
  2214                           	callstack 0
  2215                           
  2216                           ; 1 bytes @ 0x5B
  2217   00005C                     	ds	1
  2218   00005D                     vfsfcnvrt@ap:
  2219                           	callstack 0
  2220                           
  2221                           ; 1 bytes @ 0x5C
  2222   00005D                     	ds	1
  2223   00005E                     
  2224                           ; 1 bytes @ 0x5D
  2225 ;;
  2226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2227 ;;
  2228 ;; *************** function _main *****************
  2229 ;; Defined at:
  2230 ;;		line 434 in file "main.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  startReadAdd    4  228[BANK4 ] unsigned long 
  2235 ;;  startReadAdd    4  224[BANK4 ] unsigned long 
  2236 ;;  totalLoggedD    4  220[BANK4 ] unsigned long 
  2237 ;;  buffer        200    0[BANK4 ] unsigned char [200]
  2238 ;;  userInput      20  200[BANK4 ] unsigned char [20]
  2239 ;;  gz_read         4    0        float 
  2240 ;;  gy_read         4    0        float 
  2241 ;;  gx_read         4    0        float 
  2242 ;;  az_read         4    0        float 
  2243 ;;  ay_read         4    0        float 
  2244 ;;  ax_read         4    0        float 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0     240       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0     240       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;Total ram usage:      240 bytes
  2259 ;; Hardware stack levels required when called: 16
  2260 ;; This function calls:
  2261 ;;		_LoadCurrentAddressEEPROM
  2262 ;;		_LoadLastSettings
  2263 ;;		_MPU6050_Init
  2264 ;;		_ParseUserInput
  2265 ;;		_ReadAllEEPROMDataCSV
  2266 ;;		_ReadAndSendEEPROMDataCSV
  2267 ;;		_SYSTEM_Initialize
  2268 ;;		_StartLogging
  2269 ;;		_StoreLastSettings
  2270 ;;		_UART_ReceiveString
  2271 ;;		_UART_SendString
  2272 ;;		___lmul
  2273 ;;		___lwdiv
  2274 ;;		_memset
  2275 ;;		_sprintf
  2276 ;;		_strncmp
  2277 ;; This function is called by:
  2278 ;;		Startup code after reset
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text0
  2283   00D672                     __ptext0:
  2284                           	callstack 0
  2285   00D672                     _main:
  2286                           	callstack 15
  2287   00D672                     
  2288                           ;main.c: 435:     SYSTEM_Initialize();
  2289   00D672  ECAB  F051         	call	_SYSTEM_Initialize	;wreg free
  2290   00D676                     
  2291                           ;main.c: 436:     MPU6050_Init();
  2292   00D676  EC56  F051         	call	_MPU6050_Init	;wreg free
  2293   00D67A                     
  2294                           ;main.c: 438:     char buffer[200];;main.c: 439:     float ax_read, ay_read, az_read, gx
      +                          _read, gy_read, gz_read;;main.c: 441:     char userInput[20];;main.c: 443:     LoadCurre
      +                          ntAddressEEPROM();
  2295   00D67A  EC76  F053         	call	_LoadCurrentAddressEEPROM	;wreg free
  2296   00D67E                     
  2297                           ;main.c: 444:     LoadLastSettings();
  2298   00D67E  EC03  F055         	call	_LoadLastSettings	;wreg free
  2299   00D682                     
  2300                           ;main.c: 448:     sprintf(buffer, "Ultima direccion registrada en EEPROM1: 0x%X\n", curr
      +                          entBlockEEPROM1);
  2301   00D682  0E00               	movlw	low main@buffer
  2302   00D684  0100               	movlb	0	; () banked
  2303   00D686  6F93               	movwf	sprintf@s& (0+255),b
  2304   00D688  0E04               	movlw	high main@buffer
  2305   00D68A  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2306   00D68C  0ECA               	movlw	low STR_11
  2307   00D68E  6F95               	movwf	sprintf@fmt& (0+255),b
  2308   00D690  0EFE               	movlw	high STR_11
  2309   00D692  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2310   00D694  C0C7  F097         	movff	_currentBlockEEPROM1,?_sprintf+4
  2311   00D698  C0C8  F098         	movff	_currentBlockEEPROM1+1,?_sprintf+5
  2312   00D69C  EC76  F054         	call	_sprintf	;wreg free
  2313   00D6A0                     
  2314                           ;main.c: 449:     UART_SendString(buffer);
  2315   00D6A0  0E00               	movlw	low main@buffer
  2316   00D6A2  6E02               	movwf	UART_SendString@str^0,c
  2317   00D6A4  0E04               	movlw	high main@buffer
  2318   00D6A6  6E03               	movwf	(UART_SendString@str+1)^0,c
  2319   00D6A8  EC22  F058         	call	_UART_SendString	;wreg free
  2320   00D6AC                     
  2321                           ;main.c: 452:     sprintf(buffer, "Ultima direccion registrada en EEPROM2: 0x%X\n", curr
      +                          entBlockEEPROM2);
  2322   00D6AC  0E00               	movlw	low main@buffer
  2323   00D6AE  0100               	movlb	0	; () banked
  2324   00D6B0  6F93               	movwf	sprintf@s& (0+255),b
  2325   00D6B2  0E04               	movlw	high main@buffer
  2326   00D6B4  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2327   00D6B6  0EF8               	movlw	low STR_12
  2328   00D6B8  6F95               	movwf	sprintf@fmt& (0+255),b
  2329   00D6BA  0EFE               	movlw	high STR_12
  2330   00D6BC  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2331   00D6BE  C0C5  F097         	movff	_currentBlockEEPROM2,?_sprintf+4
  2332   00D6C2  C0C6  F098         	movff	_currentBlockEEPROM2+1,?_sprintf+5
  2333   00D6C6  EC76  F054         	call	_sprintf	;wreg free
  2334   00D6CA                     l11002:
  2335                           
  2336                           ;main.c: 453:     UART_SendString(buffer);
  2337   00D6CA  0E00               	movlw	low main@buffer
  2338   00D6CC  6E02               	movwf	UART_SendString@str^0,c
  2339   00D6CE  0E04               	movlw	high main@buffer
  2340   00D6D0  6E03               	movwf	(UART_SendString@str+1)^0,c
  2341   00D6D2  EC22  F058         	call	_UART_SendString	;wreg free
  2342   00D6D6                     l11004:
  2343                           
  2344                           ;main.c: 458:         UART_SendString("Ingrese comando (ejemplo: LOG(10,100), LOG_READ o
      +                           LOG_STAT): ");
  2345   00D6D6  0E5A               	movlw	low STR_13
  2346   00D6D8  6E02               	movwf	UART_SendString@str^0,c
  2347   00D6DA  0EFE               	movlw	high STR_13
  2348   00D6DC  6E03               	movwf	(UART_SendString@str+1)^0,c
  2349   00D6DE  EC22  F058         	call	_UART_SendString	;wreg free
  2350   00D6E2                     
  2351                           ;main.c: 461:         memset(userInput, 0, sizeof(userInput));
  2352   00D6E2  0EC8               	movlw	low main@userInput
  2353   00D6E4  6E01               	movwf	memset@dest^0,c
  2354   00D6E6  0E04               	movlw	high main@userInput
  2355   00D6E8  6E02               	movwf	(memset@dest+1)^0,c
  2356   00D6EA  0E00               	movlw	0
  2357   00D6EC  6E04               	movwf	(memset@c+1)^0,c
  2358   00D6EE  0E00               	movlw	0
  2359   00D6F0  6E03               	movwf	memset@c^0,c
  2360   00D6F2  0E00               	movlw	0
  2361   00D6F4  6E06               	movwf	(memset@n+1)^0,c
  2362   00D6F6  0E14               	movlw	20
  2363   00D6F8  6E05               	movwf	memset@n^0,c
  2364   00D6FA  ECB0  F053         	call	_memset	;wreg free
  2365   00D6FE                     
  2366                           ;main.c: 463:         UART_ReceiveString(userInput, sizeof(userInput));
  2367   00D6FE  0EC8               	movlw	low main@userInput
  2368   00D700  6E01               	movwf	UART_ReceiveString@receivedString^0,c
  2369   00D702  0E04               	movlw	high main@userInput
  2370   00D704  6E02               	movwf	(UART_ReceiveString@receivedString+1)^0,c
  2371   00D706  0E14               	movlw	20
  2372   00D708  6E03               	movwf	UART_ReceiveString@maxLength^0,c
  2373   00D70A  ECA4  F05C         	call	_UART_ReceiveString	;wreg free
  2374   00D70E                     
  2375                           ;main.c: 466:         UART_SendString("Recibido: ");
  2376   00D70E  0EBC               	movlw	low STR_14
  2377   00D710  6E02               	movwf	UART_SendString@str^0,c
  2378   00D712  0EFF               	movlw	high STR_14
  2379   00D714  6E03               	movwf	(UART_SendString@str+1)^0,c
  2380   00D716  EC22  F058         	call	_UART_SendString	;wreg free
  2381   00D71A                     
  2382                           ;main.c: 467:         UART_SendString(userInput);
  2383   00D71A  0EC8               	movlw	low main@userInput
  2384   00D71C  6E02               	movwf	UART_SendString@str^0,c
  2385   00D71E  0E04               	movlw	high main@userInput
  2386   00D720  6E03               	movwf	(UART_SendString@str+1)^0,c
  2387   00D722  EC22  F058         	call	_UART_SendString	;wreg free
  2388   00D726                     
  2389                           ;main.c: 468:         UART_SendString("\n");
  2390   00D726  0EAC               	movlw	low (STR_8+13)
  2391   00D728  6E02               	movwf	UART_SendString@str^0,c
  2392   00D72A  0EFF               	movlw	high (STR_8+13)
  2393   00D72C  6E03               	movwf	(UART_SendString@str+1)^0,c
  2394   00D72E  EC22  F058         	call	_UART_SendString	;wreg free
  2395   00D732                     
  2396                           ;main.c: 470:          if (strncmp(userInput, "LOG_ALL", 7) == 0) {
  2397   00D732  0EC8               	movlw	low main@userInput
  2398   00D734  6E01               	movwf	strncmp@l^0,c
  2399   00D736  0E04               	movlw	high main@userInput
  2400   00D738  6E02               	movwf	(strncmp@l+1)^0,c
  2401   00D73A  0EE2               	movlw	low STR_16
  2402   00D73C  6E03               	movwf	strncmp@r^0,c
  2403   00D73E  0EFF               	movlw	high STR_16
  2404   00D740  6E04               	movwf	(strncmp@r+1)^0,c
  2405   00D742  0E00               	movlw	0
  2406   00D744  6E06               	movwf	(strncmp@n+1)^0,c
  2407   00D746  0E07               	movlw	7
  2408   00D748  6E05               	movwf	strncmp@n^0,c
  2409   00D74A  ECDD  F061         	call	_strncmp	;wreg free
  2410   00D74E  5001               	movf	?_strncmp^0,w,c
  2411   00D750  1002               	iorwf	(?_strncmp+1)^0,w,c
  2412   00D752  A4D8               	btfss	status,2,c
  2413   00D754  EFAE  F06B         	goto	u11371
  2414   00D758  EFB0  F06B         	goto	u11370
  2415   00D75C                     u11371:
  2416   00D75C  EFD7  F06B         	goto	l11022
  2417   00D760                     u11370:
  2418   00D760                     
  2419                           ;main.c: 471:             unsigned long totalLoggedData = (currentBlockEEPROM1 - (0x0000
      +                           + 2)) / 12;
  2420   00D760  0EFE               	movlw	254
  2421   00D762  0100               	movlb	0	; () banked
  2422   00D764  25C7               	addwf	_currentBlockEEPROM1& (0+255),w,b
  2423   00D766  6E01               	movwf	___lwdiv@dividend^0,c
  2424   00D768  0EFF               	movlw	255
  2425   00D76A  21C8               	addwfc	(_currentBlockEEPROM1+1)& (0+255),w,b
  2426   00D76C  6E02               	movwf	(___lwdiv@dividend+1)^0,c
  2427   00D76E  0E00               	movlw	0
  2428   00D770  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2429   00D772  0E0C               	movlw	12
  2430   00D774  6E03               	movwf	___lwdiv@divisor^0,c
  2431   00D776  EC5B  F058         	call	___lwdiv	;wreg free
  2432   00D77A  C001  F4DC         	movff	?___lwdiv,main@totalLoggedData
  2433   00D77E  C002  F4DD         	movff	?___lwdiv+1,main@totalLoggedData+1
  2434   00D782  0104               	movlb	4	; () banked
  2435   00D784  6BDE               	clrf	(main@totalLoggedData+2)& (0+255),b
  2436   00D786  6BDF               	clrf	(main@totalLoggedData+3)& (0+255),b
  2437   00D788                     
  2438                           ; BSR set to: 4
  2439                           ;main.c: 472:             ReadAllEEPROMDataCSV(totalLoggedData, (uint16_t)0x0000 + 2, (u
      +                          int16_t)0x0000 + 2);
  2440   00D788  C4DC  F0AF         	movff	main@totalLoggedData,ReadAllEEPROMDataCSV@totalLogged
  2441   00D78C  C4DD  F0B0         	movff	main@totalLoggedData+1,ReadAllEEPROMDataCSV@totalLogged+1
  2442   00D790  C4DE  F0B1         	movff	main@totalLoggedData+2,ReadAllEEPROMDataCSV@totalLogged+2
  2443   00D794  C4DF  F0B2         	movff	main@totalLoggedData+3,ReadAllEEPROMDataCSV@totalLogged+3
  2444   00D798  0E00               	movlw	0
  2445   00D79A  0100               	movlb	0	; () banked
  2446   00D79C  6FB4               	movwf	(ReadAllEEPROMDataCSV@startAddressEEPROM1+1)& (0+255),b
  2447   00D79E  0E02               	movlw	2
  2448   00D7A0  6FB3               	movwf	ReadAllEEPROMDataCSV@startAddressEEPROM1& (0+255),b
  2449   00D7A2  0E00               	movlw	0
  2450   00D7A4  6FB6               	movwf	(ReadAllEEPROMDataCSV@startAddressEEPROM2+1)& (0+255),b
  2451   00D7A6  0E02               	movlw	2
  2452   00D7A8  6FB5               	movwf	ReadAllEEPROMDataCSV@startAddressEEPROM2& (0+255),b
  2453   00D7AA  EC55  F063         	call	_ReadAllEEPROMDataCSV	;wreg free
  2454   00D7AE                     l11022:
  2455                           
  2456                           ;main.c: 475:         if (strncmp(userInput, "LOG_READ", 8) == 0) {
  2457   00D7AE  0EC8               	movlw	low main@userInput
  2458   00D7B0  6E01               	movwf	strncmp@l^0,c
  2459   00D7B2  0E04               	movlw	high main@userInput
  2460   00D7B4  6E02               	movwf	(strncmp@l+1)^0,c
  2461   00D7B6  0ED0               	movlw	low STR_17
  2462   00D7B8  6E03               	movwf	strncmp@r^0,c
  2463   00D7BA  0EFF               	movlw	high STR_17
  2464   00D7BC  6E04               	movwf	(strncmp@r+1)^0,c
  2465   00D7BE  0E00               	movlw	0
  2466   00D7C0  6E06               	movwf	(strncmp@n+1)^0,c
  2467   00D7C2  0E08               	movlw	8
  2468   00D7C4  6E05               	movwf	strncmp@n^0,c
  2469   00D7C6  ECDD  F061         	call	_strncmp	;wreg free
  2470   00D7CA  5001               	movf	?_strncmp^0,w,c
  2471   00D7CC  1002               	iorwf	(?_strncmp+1)^0,w,c
  2472   00D7CE  A4D8               	btfss	status,2,c
  2473   00D7D0  EFEC  F06B         	goto	u11381
  2474   00D7D4  EFEE  F06B         	goto	u11380
  2475   00D7D8                     u11381:
  2476   00D7D8  EF78  F06C         	goto	l11042
  2477   00D7DC                     u11380:
  2478   00D7DC                     
  2479                           ;main.c: 476:             unsigned long startReadAddressEEPROM1 = (currentBlockEEPROM1 =
      +                          = 0 ? 32768 : currentBlockEEPROM1) - (Ndat * 12);
  2480   00D7DC  0100               	movlb	0	; () banked
  2481   00D7DE  51C7               	movf	_currentBlockEEPROM1& (0+255),w,b
  2482   00D7E0  11C8               	iorwf	(_currentBlockEEPROM1+1)& (0+255),w,b
  2483   00D7E2  B4D8               	btfsc	status,2,c
  2484   00D7E4  EFF6  F06B         	goto	u11391
  2485   00D7E8  EFF8  F06B         	goto	u11390
  2486   00D7EC                     u11391:
  2487   00D7EC  EF01  F06C         	goto	l11028
  2488   00D7F0                     u11390:
  2489   00D7F0                     
  2490                           ; BSR set to: 0
  2491   00D7F0  C0C7  F4E8         	movff	_currentBlockEEPROM1,_main$1534
  2492   00D7F4  C0C8  F4E9         	movff	_currentBlockEEPROM1+1,_main$1534+1
  2493   00D7F8  0104               	movlb	4	; () banked
  2494   00D7FA  6BEA               	clrf	(_main$1534+2)& (0+255),b
  2495   00D7FC  6BEB               	clrf	(_main$1534+3)& (0+255),b
  2496   00D7FE  EF0A  F06C         	goto	l11030
  2497   00D802                     l11028:
  2498                           
  2499                           ; BSR set to: 0
  2500   00D802  0E00               	movlw	0
  2501   00D804  0104               	movlb	4	; () banked
  2502   00D806  6FE8               	movwf	_main$1534& (0+255),b
  2503   00D808  0E80               	movlw	128
  2504   00D80A  6FE9               	movwf	(_main$1534+1)& (0+255),b
  2505   00D80C  0E00               	movlw	0
  2506   00D80E  6FEA               	movwf	(_main$1534+2)& (0+255),b
  2507   00D810  0E00               	movlw	0
  2508   00D812  6FEB               	movwf	(_main$1534+3)& (0+255),b
  2509   00D814                     l11030:
  2510                           
  2511                           ; BSR set to: 4
  2512   00D814  C0E9  F001         	movff	_Ndat,___lmul@multiplier
  2513   00D818  C0EA  F002         	movff	_Ndat+1,___lmul@multiplier+1
  2514   00D81C  C0EB  F003         	movff	_Ndat+2,___lmul@multiplier+2
  2515   00D820  C0EC  F004         	movff	_Ndat+3,___lmul@multiplier+3
  2516   00D824  0EF4               	movlw	244
  2517   00D826  6E05               	movwf	___lmul@multiplicand^0,c
  2518   00D828  0EFF               	movlw	255
  2519   00D82A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2520   00D82C  0EFF               	movlw	255
  2521   00D82E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2522   00D830  0EFF               	movlw	255
  2523   00D832  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2524   00D834  EC7D  F057         	call	___lmul	;wreg free
  2525   00D838  0104               	movlb	4	; () banked
  2526   00D83A  51E8               	movf	_main$1534& (0+255),w,b
  2527   00D83C  2401               	addwf	?___lmul^0,w,c
  2528   00D83E  6FE0               	movwf	main@startReadAddressEEPROM1& (0+255),b
  2529   00D840  51E9               	movf	(_main$1534+1)& (0+255),w,b
  2530   00D842  2002               	addwfc	(?___lmul+1)^0,w,c
  2531   00D844  6FE1               	movwf	(main@startReadAddressEEPROM1+1)& (0+255),b
  2532   00D846  51EA               	movf	(_main$1534+2)& (0+255),w,b
  2533   00D848  2003               	addwfc	(?___lmul+2)^0,w,c
  2534   00D84A  6FE2               	movwf	(main@startReadAddressEEPROM1+2)& (0+255),b
  2535   00D84C  51EB               	movf	(_main$1534+3)& (0+255),w,b
  2536   00D84E  2004               	addwfc	(?___lmul+3)^0,w,c
  2537   00D850  6FE3               	movwf	(main@startReadAddressEEPROM1+3)& (0+255),b
  2538   00D852                     
  2539                           ; BSR set to: 4
  2540                           ;main.c: 477:             unsigned long startReadAddressEEPROM2 = (currentBlockEEPROM2 =
      +                          = 0 ? 32768 : currentBlockEEPROM2) - (Ndat * 12);
  2541   00D852  0100               	movlb	0	; () banked
  2542   00D854  51C5               	movf	_currentBlockEEPROM2& (0+255),w,b
  2543   00D856  11C6               	iorwf	(_currentBlockEEPROM2+1)& (0+255),w,b
  2544   00D858  B4D8               	btfsc	status,2,c
  2545   00D85A  EF31  F06C         	goto	u11401
  2546   00D85E  EF33  F06C         	goto	u11400
  2547   00D862                     u11401:
  2548   00D862  EF3C  F06C         	goto	l11036
  2549   00D866                     u11400:
  2550   00D866                     
  2551                           ; BSR set to: 0
  2552   00D866  C0C5  F4EC         	movff	_currentBlockEEPROM2,_main$1536
  2553   00D86A  C0C6  F4ED         	movff	_currentBlockEEPROM2+1,_main$1536+1
  2554   00D86E  0104               	movlb	4	; () banked
  2555   00D870  6BEE               	clrf	(_main$1536+2)& (0+255),b
  2556   00D872  6BEF               	clrf	(_main$1536+3)& (0+255),b
  2557   00D874  EF45  F06C         	goto	l11038
  2558   00D878                     l11036:
  2559                           
  2560                           ; BSR set to: 0
  2561   00D878  0E00               	movlw	0
  2562   00D87A  0104               	movlb	4	; () banked
  2563   00D87C  6FEC               	movwf	_main$1536& (0+255),b
  2564   00D87E  0E80               	movlw	128
  2565   00D880  6FED               	movwf	(_main$1536+1)& (0+255),b
  2566   00D882  0E00               	movlw	0
  2567   00D884  6FEE               	movwf	(_main$1536+2)& (0+255),b
  2568   00D886  0E00               	movlw	0
  2569   00D888  6FEF               	movwf	(_main$1536+3)& (0+255),b
  2570   00D88A                     l11038:
  2571                           
  2572                           ; BSR set to: 4
  2573   00D88A  C0E9  F001         	movff	_Ndat,___lmul@multiplier
  2574   00D88E  C0EA  F002         	movff	_Ndat+1,___lmul@multiplier+1
  2575   00D892  C0EB  F003         	movff	_Ndat+2,___lmul@multiplier+2
  2576   00D896  C0EC  F004         	movff	_Ndat+3,___lmul@multiplier+3
  2577   00D89A  0EF4               	movlw	244
  2578   00D89C  6E05               	movwf	___lmul@multiplicand^0,c
  2579   00D89E  0EFF               	movlw	255
  2580   00D8A0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2581   00D8A2  0EFF               	movlw	255
  2582   00D8A4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2583   00D8A6  0EFF               	movlw	255
  2584   00D8A8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2585   00D8AA  EC7D  F057         	call	___lmul	;wreg free
  2586   00D8AE  0104               	movlb	4	; () banked
  2587   00D8B0  51EC               	movf	_main$1536& (0+255),w,b
  2588   00D8B2  2401               	addwf	?___lmul^0,w,c
  2589   00D8B4  6FE4               	movwf	main@startReadAddressEEPROM2& (0+255),b
  2590   00D8B6  51ED               	movf	(_main$1536+1)& (0+255),w,b
  2591   00D8B8  2002               	addwfc	(?___lmul+1)^0,w,c
  2592   00D8BA  6FE5               	movwf	(main@startReadAddressEEPROM2+1)& (0+255),b
  2593   00D8BC  51EE               	movf	(_main$1536+2)& (0+255),w,b
  2594   00D8BE  2003               	addwfc	(?___lmul+2)^0,w,c
  2595   00D8C0  6FE6               	movwf	(main@startReadAddressEEPROM2+2)& (0+255),b
  2596   00D8C2  51EF               	movf	(_main$1536+3)& (0+255),w,b
  2597   00D8C4  2004               	addwfc	(?___lmul+3)^0,w,c
  2598   00D8C6  6FE7               	movwf	(main@startReadAddressEEPROM2+3)& (0+255),b
  2599   00D8C8                     
  2600                           ; BSR set to: 4
  2601                           ;main.c: 478:             ReadAndSendEEPROMDataCSV(Ndat, (uint16_t)startReadAddressEEPRO
      +                          M1, (uint16_t)startReadAddressEEPROM2);
  2602   00D8C8  C0E9  F0AF         	movff	_Ndat,ReadAndSendEEPROMDataCSV@Ndat
  2603   00D8CC  C0EA  F0B0         	movff	_Ndat+1,ReadAndSendEEPROMDataCSV@Ndat+1
  2604   00D8D0  C0EB  F0B1         	movff	_Ndat+2,ReadAndSendEEPROMDataCSV@Ndat+2
  2605   00D8D4  C0EC  F0B2         	movff	_Ndat+3,ReadAndSendEEPROMDataCSV@Ndat+3
  2606   00D8D8  C4E0  F0B3         	movff	main@startReadAddressEEPROM1,ReadAndSendEEPROMDataCSV@startAddressEEPROM1
  2607   00D8DC  C4E1  F0B4         	movff	main@startReadAddressEEPROM1+1,ReadAndSendEEPROMDataCSV@startAddressEEPROM1+1
  2608   00D8E0  C4E4  F0B5         	movff	main@startReadAddressEEPROM2,ReadAndSendEEPROMDataCSV@startAddressEEPROM2
  2609   00D8E4  C4E5  F0B6         	movff	main@startReadAddressEEPROM2+1,ReadAndSendEEPROMDataCSV@startAddressEEPROM2+1
  2610   00D8E8  EC47  F065         	call	_ReadAndSendEEPROMDataCSV	;wreg free
  2611                           
  2612                           ;main.c: 479:         } else if (strncmp(userInput, "LOG_STAT", 8) == 0) {
  2613   00D8EC  EF6B  F06B         	goto	l11004
  2614   00D8F0                     l11042:
  2615   00D8F0  0EC8               	movlw	low main@userInput
  2616   00D8F2  6E01               	movwf	strncmp@l^0,c
  2617   00D8F4  0E04               	movlw	high main@userInput
  2618   00D8F6  6E02               	movwf	(strncmp@l+1)^0,c
  2619   00D8F8  0ED9               	movlw	low STR_18
  2620   00D8FA  6E03               	movwf	strncmp@r^0,c
  2621   00D8FC  0EFF               	movlw	high STR_18
  2622   00D8FE  6E04               	movwf	(strncmp@r+1)^0,c
  2623   00D900  0E00               	movlw	0
  2624   00D902  6E06               	movwf	(strncmp@n+1)^0,c
  2625   00D904  0E08               	movlw	8
  2626   00D906  6E05               	movwf	strncmp@n^0,c
  2627   00D908  ECDD  F061         	call	_strncmp	;wreg free
  2628   00D90C  5001               	movf	?_strncmp^0,w,c
  2629   00D90E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2630   00D910  A4D8               	btfss	status,2,c
  2631   00D912  EF8D  F06C         	goto	u11411
  2632   00D916  EF8F  F06C         	goto	u11410
  2633   00D91A                     u11411:
  2634   00D91A  EFAC  F06C         	goto	l11048
  2635   00D91E                     u11410:
  2636   00D91E                     
  2637                           ;main.c: 480:             sprintf(buffer, "Datos almacenados: %lu, Tasa de muestreo: %lu
      +                           ms\n", Ndat, Tm);
  2638   00D91E  0E00               	movlw	low main@buffer
  2639   00D920  0100               	movlb	0	; () banked
  2640   00D922  6F93               	movwf	sprintf@s& (0+255),b
  2641   00D924  0E04               	movlw	high main@buffer
  2642   00D926  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2643   00D928  0E98               	movlw	low STR_1
  2644   00D92A  6F95               	movwf	sprintf@fmt& (0+255),b
  2645   00D92C  0EFE               	movlw	high STR_1
  2646   00D92E  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2647   00D930  C0E9  F097         	movff	_Ndat,?_sprintf+4
  2648   00D934  C0EA  F098         	movff	_Ndat+1,?_sprintf+5
  2649   00D938  C0EB  F099         	movff	_Ndat+2,?_sprintf+6
  2650   00D93C  C0EC  F09A         	movff	_Ndat+3,?_sprintf+7
  2651   00D940  C0E5  F09B         	movff	_Tm,?_sprintf+8
  2652   00D944  C0E6  F09C         	movff	_Tm+1,?_sprintf+9
  2653   00D948  C0E7  F09D         	movff	_Tm+2,?_sprintf+10
  2654   00D94C  C0E8  F09E         	movff	_Tm+3,?_sprintf+11
  2655   00D950  EC76  F054         	call	_sprintf	;wreg free
  2656   00D954  EF65  F06B         	goto	l11002
  2657   00D958                     l11048:
  2658   00D958  0EC8               	movlw	low main@userInput
  2659   00D95A  0100               	movlb	0	; () banked
  2660   00D95C  6F8E               	movwf	ParseUserInput@input& (0+255),b
  2661   00D95E  0E04               	movlw	high main@userInput
  2662   00D960  6F8F               	movwf	(ParseUserInput@input+1)& (0+255),b
  2663   00D962  0EE5               	movlw	low _Tm
  2664   00D964  6F90               	movwf	ParseUserInput@Tm& (0+255),b
  2665   00D966  0EE9               	movlw	low _Ndat
  2666   00D968  6F91               	movwf	ParseUserInput@Ndat& (0+255),b
  2667   00D96A  ECEA  F057         	call	_ParseUserInput	;wreg free
  2668   00D96E  0900               	iorlw	0
  2669   00D970  B4D8               	btfsc	status,2,c
  2670   00D972  EFBD  F06C         	goto	u11421
  2671   00D976  EFBF  F06C         	goto	u11420
  2672   00D97A                     u11421:
  2673   00D97A  EFC5  F06C         	goto	l11054
  2674   00D97E                     u11420:
  2675   00D97E                     
  2676                           ;main.c: 484:             StartLogging();
  2677   00D97E  ECC1  F069         	call	_StartLogging	;wreg free
  2678   00D982                     
  2679                           ;main.c: 485:             StoreLastSettings();
  2680   00D982  EC28  F055         	call	_StoreLastSettings	;wreg free
  2681                           
  2682                           ;main.c: 486:         } else {
  2683   00D986  EF6B  F06B         	goto	l11004
  2684   00D98A                     l11054:
  2685                           
  2686                           ;main.c: 488:             UART_SendString("Entrada no valida. Intente de nuevo.\n");
  2687   00D98A  0E26               	movlw	low STR_20
  2688   00D98C  6E02               	movwf	UART_SendString@str^0,c
  2689   00D98E  0EFF               	movlw	high STR_20
  2690   00D990  6E03               	movwf	(UART_SendString@str+1)^0,c
  2691   00D992  EC22  F058         	call	_UART_SendString	;wreg free
  2692   00D996  EF6B  F06B         	goto	l11004
  2693   00D99A  EFFE  F07F         	goto	start
  2694   00D99E                     __end_of_main:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _memset *****************
  2698 ;; Defined at:
  2699 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  dest            2    0[COMRAM] PTR void 
  2702 ;;		 -> main@userInput(20), 
  2703 ;;  c               2    2[COMRAM] int 
  2704 ;;  n               2    4[COMRAM] unsigned int 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  p               2    6[COMRAM] PTR unsigned char 
  2707 ;;		 -> main@userInput(20), 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  2    0[COMRAM] PTR void 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2717 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;Total ram usage:        8 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_main
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text1
  2731   00A760                     __ptext1:
  2732                           	callstack 0
  2733   00A760                     _memset:
  2734                           	callstack 30
  2735   00A760  C001  F007         	movff	memset@dest,memset@p
  2736   00A764  C002  F008         	movff	memset@dest+1,memset@p+1
  2737   00A768  EFC1  F053         	goto	l10886
  2738   00A76C                     l10882:
  2739   00A76C  0060  F01F  FFD9   	movff	memset@p,fsr2l
  2740   00A772  0060  F023  FFDA   	movff	memset@p+1,fsr2h
  2741   00A778  0060  F00F  FFDF   	movff	memset@c,indf2
  2742   00A77E  4A07               	infsnz	memset@p^0,f,c
  2743   00A780  2A08               	incf	(memset@p+1)^0,f,c
  2744   00A782                     l10886:
  2745   00A782  0605               	decf	memset@n^0,f,c
  2746   00A784  A0D8               	btfss	status,0,c
  2747   00A786  0606               	decf	(memset@n+1)^0,f,c
  2748   00A788  2805               	incf	memset@n^0,w,c
  2749   00A78A  E106               	bnz	u11251
  2750   00A78C  2806               	incf	(memset@n+1)^0,w,c
  2751   00A78E  A4D8               	btfss	status,2,c
  2752   00A790  EFCC  F053         	goto	u11251
  2753   00A794  EFCE  F053         	goto	u11250
  2754   00A798                     u11251:
  2755   00A798  EFB6  F053         	goto	l10882
  2756   00A79C                     u11250:
  2757   00A79C  0012               	return		;funcret
  2758   00A79E                     __end_of_memset:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function ___lwdiv *****************
  2762 ;; Defined at:
  2763 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  dividend        2    0[COMRAM] unsigned int 
  2766 ;;  divisor         2    2[COMRAM] unsigned int 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  quotient        2    5[COMRAM] unsigned int 
  2769 ;;  counter         1    4[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2    0[COMRAM] unsigned int 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;Total ram usage:        7 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text2
  2793   00B0B6                     __ptext2:
  2794                           	callstack 0
  2795   00B0B6                     ___lwdiv:
  2796                           	callstack 30
  2797   00B0B6  0E00               	movlw	0
  2798   00B0B8  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  2799   00B0BA  0E00               	movlw	0
  2800   00B0BC  6E06               	movwf	___lwdiv@quotient^0,c
  2801   00B0BE  5003               	movf	___lwdiv@divisor^0,w,c
  2802   00B0C0  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2803   00B0C2  B4D8               	btfsc	status,2,c
  2804   00B0C4  EF66  F058         	goto	u11261
  2805   00B0C8  EF68  F058         	goto	u11260
  2806   00B0CC                     u11261:
  2807   00B0CC  EF90  F058         	goto	l1471
  2808   00B0D0                     u11260:
  2809   00B0D0  0E01               	movlw	1
  2810   00B0D2  6E05               	movwf	___lwdiv@counter^0,c
  2811   00B0D4  EF70  F058         	goto	l10896
  2812   00B0D8                     l10894:
  2813   00B0D8  90D8               	bcf	status,0,c
  2814   00B0DA  3603               	rlcf	___lwdiv@divisor^0,f,c
  2815   00B0DC  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2816   00B0DE  2A05               	incf	___lwdiv@counter^0,f,c
  2817   00B0E0                     l10896:
  2818   00B0E0  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2819   00B0E2  EF75  F058         	goto	u11271
  2820   00B0E6  EF77  F058         	goto	u11270
  2821   00B0EA                     u11271:
  2822   00B0EA  EF6C  F058         	goto	l10894
  2823   00B0EE                     u11270:
  2824   00B0EE                     l10898:
  2825   00B0EE  90D8               	bcf	status,0,c
  2826   00B0F0  3606               	rlcf	___lwdiv@quotient^0,f,c
  2827   00B0F2  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2828   00B0F4  5003               	movf	___lwdiv@divisor^0,w,c
  2829   00B0F6  5C01               	subwf	___lwdiv@dividend^0,w,c
  2830   00B0F8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2831   00B0FA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2832   00B0FC  A0D8               	btfss	status,0,c
  2833   00B0FE  EF83  F058         	goto	u11281
  2834   00B102  EF85  F058         	goto	u11280
  2835   00B106                     u11281:
  2836   00B106  EF8A  F058         	goto	l10906
  2837   00B10A                     u11280:
  2838   00B10A  5003               	movf	___lwdiv@divisor^0,w,c
  2839   00B10C  5E01               	subwf	___lwdiv@dividend^0,f,c
  2840   00B10E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2841   00B110  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2842   00B112  8006               	bsf	___lwdiv@quotient^0,0,c
  2843   00B114                     l10906:
  2844   00B114  90D8               	bcf	status,0,c
  2845   00B116  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2846   00B118  3203               	rrcf	___lwdiv@divisor^0,f,c
  2847   00B11A  2E05               	decfsz	___lwdiv@counter^0,f,c
  2848   00B11C  EF77  F058         	goto	l10898
  2849   00B120                     l1471:
  2850   00B120  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  2851   00B124  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2852   00B128  0012               	return		;funcret
  2853   00B12A                     __end_of___lwdiv:
  2854                           	callstack 0
  2855                           
  2856 ;; *************** function _UART_ReceiveString *****************
  2857 ;; Defined at:
  2858 ;;		line 155 in file "main.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  receivedStri    2    0[COMRAM] PTR unsigned char 
  2861 ;;		 -> main@userInput(20), 
  2862 ;;  maxLength       1    2[COMRAM] unsigned char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  index           1    9[COMRAM] unsigned char 
  2865 ;;  data            1    8[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      unsigned char 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:       10 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 2
  2882 ;; This function calls:
  2883 ;;		_UART1_Read
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text3
  2890   00B948                     __ptext3:
  2891                           	callstack 0
  2892   00B948                     _UART_ReceiveString:
  2893                           	callstack 28
  2894   00B948                     
  2895                           ;main.c: 156:     char data;;main.c: 157:     uint8_t index = 0;
  2896   00B948  0E00               	movlw	0
  2897   00B94A  6E0A               	movwf	UART_ReceiveString@index^0,c
  2898                           
  2899                           ;main.c: 159:     while (index < maxLength - 1){
  2900   00B94C  EFDC  F05C         	goto	l10740
  2901   00B950                     l10722:
  2902                           
  2903                           ;main.c: 160:         data = UART1_Read();
  2904   00B950  ECA8  F05B         	call	_UART1_Read	;wreg free
  2905   00B954  6E09               	movwf	UART_ReceiveString@data^0,c
  2906   00B956                     
  2907                           ;main.c: 163:         if (index == 0 && (data == '\r' || data == '\n')) {
  2908   00B956  500A               	movf	UART_ReceiveString@index^0,w,c
  2909   00B958  A4D8               	btfss	status,2,c
  2910   00B95A  EFB1  F05C         	goto	u11121
  2911   00B95E  EFB3  F05C         	goto	u11120
  2912   00B962                     u11121:
  2913   00B962  EFC7  F05C         	goto	l10730
  2914   00B966                     u11120:
  2915   00B966  0E0D               	movlw	13
  2916   00B968  1809               	xorwf	UART_ReceiveString@data^0,w,c
  2917   00B96A  B4D8               	btfsc	status,2,c
  2918   00B96C  EFBA  F05C         	goto	u11131
  2919   00B970  EFBC  F05C         	goto	u11130
  2920   00B974                     u11131:
  2921   00B974  EFDC  F05C         	goto	l10740
  2922   00B978                     u11130:
  2923   00B978  0E0A               	movlw	10
  2924   00B97A  1809               	xorwf	UART_ReceiveString@data^0,w,c
  2925   00B97C  A4D8               	btfss	status,2,c
  2926   00B97E  EFC3  F05C         	goto	u11141
  2927   00B982  EFC5  F05C         	goto	u11140
  2928   00B986                     u11141:
  2929   00B986  EFC7  F05C         	goto	l10730
  2930   00B98A                     u11140:
  2931   00B98A  EFDC  F05C         	goto	l10740
  2932   00B98E                     l10730:
  2933                           
  2934                           ;main.c: 167:         if (data == '\r') {
  2935   00B98E  0E0D               	movlw	13
  2936   00B990  1809               	xorwf	UART_ReceiveString@data^0,w,c
  2937   00B992  A4D8               	btfss	status,2,c
  2938   00B994  EFCE  F05C         	goto	u11151
  2939   00B998  EFD0  F05C         	goto	u11150
  2940   00B99C                     u11151:
  2941   00B99C  EFD2  F05C         	goto	l10736
  2942   00B9A0                     u11150:
  2943   00B9A0  EFF4  F05C         	goto	l10742
  2944   00B9A4                     l10736:
  2945                           
  2946                           ;main.c: 170:             receivedString[index] = data;
  2947   00B9A4  500A               	movf	UART_ReceiveString@index^0,w,c
  2948   00B9A6  2401               	addwf	UART_ReceiveString@receivedString^0,w,c
  2949   00B9A8  6ED9               	movwf	fsr2l,c
  2950   00B9AA  0E00               	movlw	0
  2951   00B9AC  2002               	addwfc	(UART_ReceiveString@receivedString+1)^0,w,c
  2952   00B9AE  6EDA               	movwf	fsr2h,c
  2953   00B9B0  0060  F027  FFDF   	movff	UART_ReceiveString@data,indf2
  2954   00B9B6                     
  2955                           ;main.c: 171:             index++;
  2956   00B9B6  2A0A               	incf	UART_ReceiveString@index^0,f,c
  2957   00B9B8                     l10740:
  2958                           
  2959                           ;main.c: 159:     while (index < maxLength - 1){
  2960   00B9B8  0EFF               	movlw	255
  2961   00B9BA  2403               	addwf	UART_ReceiveString@maxLength^0,w,c
  2962   00B9BC  6E04               	movwf	??_UART_ReceiveString^0,c
  2963   00B9BE  6A05               	clrf	(??_UART_ReceiveString+1)^0,c
  2964   00B9C0  0EFF               	movlw	255
  2965   00B9C2  2205               	addwfc	(??_UART_ReceiveString+1)^0,f,c
  2966   00B9C4  500A               	movf	UART_ReceiveString@index^0,w,c
  2967   00B9C6  6E06               	movwf	(??_UART_ReceiveString+2)^0,c
  2968   00B9C8  6A07               	clrf	(??_UART_ReceiveString+3)^0,c
  2969   00B9CA  5004               	movf	??_UART_ReceiveString^0,w,c
  2970   00B9CC  5C06               	subwf	(??_UART_ReceiveString+2)^0,w,c
  2971   00B9CE  5007               	movf	(??_UART_ReceiveString+3)^0,w,c
  2972   00B9D0  0A80               	xorlw	128
  2973   00B9D2  6E08               	movwf	(??_UART_ReceiveString+4)^0,c
  2974   00B9D4  5005               	movf	(??_UART_ReceiveString+1)^0,w,c
  2975   00B9D6  0A80               	xorlw	128
  2976   00B9D8  5808               	subwfb	(??_UART_ReceiveString+4)^0,w,c
  2977   00B9DA  A0D8               	btfss	status,0,c
  2978   00B9DC  EFF2  F05C         	goto	u11161
  2979   00B9E0  EFF4  F05C         	goto	u11160
  2980   00B9E4                     u11161:
  2981   00B9E4  EFA8  F05C         	goto	l10722
  2982   00B9E8                     u11160:
  2983   00B9E8                     l10742:
  2984                           
  2985                           ;main.c: 175:     receivedString[index] = '\0';
  2986   00B9E8  500A               	movf	UART_ReceiveString@index^0,w,c
  2987   00B9EA  2401               	addwf	UART_ReceiveString@receivedString^0,w,c
  2988   00B9EC  6ED9               	movwf	fsr2l,c
  2989   00B9EE  0E00               	movlw	0
  2990   00B9F0  2002               	addwfc	(UART_ReceiveString@receivedString+1)^0,w,c
  2991   00B9F2  6EDA               	movwf	fsr2h,c
  2992   00B9F4  6ADF               	clrf	indf2,c
  2993   00B9F6  0012               	return		;funcret
  2994   00B9F8                     __end_of_UART_ReceiveString:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _UART1_Read *****************
  2998 ;; Defined at:
  2999 ;;		line 145 in file "mcc_generated_files/uart1.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      unsigned char 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, pcl, pclath, pclatu, tosl, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        0 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 1
  3020 ;; This function calls:
  3021 ;;		NULL
  3022 ;;		_UART1_DefaultErrorHandler
  3023 ;;		_UART1_DefaultFramingErrorHandler
  3024 ;;		_UART1_DefaultOverrunErrorHandler
  3025 ;; This function is called by:
  3026 ;;		_UART_ReceiveString
  3027 ;;		_getch3
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text4
  3032   00B750                     __ptext4:
  3033                           	callstack 0
  3034   00B750                     _UART1_Read:
  3035                           	callstack 28
  3036   00B750                     l182:
  3037                           
  3038                           ;mcc_generated_files/uart1.c: 147:     while(!PIR3bits.U1RXIF)
  3039   00B750  0139               	movlb	57	; () banked
  3040   00B752  A7A3               	btfss	163,3,b	;volatile
  3041   00B754  EFAE  F05B         	goto	u11011
  3042   00B758  EFB0  F05B         	goto	u11010
  3043   00B75C                     u11011:
  3044   00B75C  EFA8  F05B         	goto	l182
  3045   00B760                     u11010:
  3046   00B760                     
  3047                           ; BSR set to: 57
  3048                           ;mcc_generated_files/uart1.c: 151:     uart1RxLastError.status = 0;
  3049   00B760  0E00               	movlw	0
  3050   00B762  0100               	movlb	0	; () banked
  3051   00B764  6FCC               	movwf	_uart1RxLastError& (0+255),b	;volatile
  3052   00B766                     
  3053                           ; BSR set to: 0
  3054                           ;mcc_generated_files/uart1.c: 153:     if(U1ERRIRbits.FERIF){
  3055   00B766  013D               	movlb	61	; () banked
  3056   00B768  A7F9               	btfss	249,3,b	;volatile
  3057   00B76A  EFB9  F05B         	goto	u11021
  3058   00B76E  EFBB  F05B         	goto	u11020
  3059   00B772                     u11021:
  3060   00B772  EFCA  F05B         	goto	l10578
  3061   00B776                     u11020:
  3062   00B776                     
  3063                           ; BSR set to: 61
  3064                           ;mcc_generated_files/uart1.c: 154:         uart1RxLastError.ferr = 1;
  3065   00B776  0100               	movlb	0	; () banked
  3066   00B778  83CC               	bsf	_uart1RxLastError& (0+255),1,b	;volatile
  3067   00B77A                     
  3068                           ; BSR set to: 0
  3069                           ;mcc_generated_files/uart1.c: 155:         UART1_FramingErrorHandler();
  3070   00B77A  D802               	call	u11038
  3071   00B77C  EFCA  F05B         	goto	u11039
  3072   00B780                     u11038:
  3073   00B780  0005               	push	
  3074   00B782  6EFA               	movwf	pclath,c
  3075   00B784  0102               	movlb	2	; () banked
  3076   00B786  5121               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  3077   00B788  6EFD               	movwf	tosl,c
  3078   00B78A  5122               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  3079   00B78C  6EFE               	movwf	tosh,c
  3080   00B78E  6AFF               	clrf	tosu,c
  3081   00B790  50FA               	movf	pclath,w,c
  3082   00B792  0012               	return		;indir
  3083   00B794                     u11039:
  3084   00B794                     l10578:
  3085                           
  3086                           ;mcc_generated_files/uart1.c: 158:     if(U1ERRIRbits.RXFOIF){
  3087   00B794  013D               	movlb	61	; () banked
  3088   00B796  A3F9               	btfss	249,1,b	;volatile
  3089   00B798  EFD0  F05B         	goto	u11041
  3090   00B79C  EFD2  F05B         	goto	u11040
  3091   00B7A0                     u11041:
  3092   00B7A0  EFE1  F05B         	goto	l10584
  3093   00B7A4                     u11040:
  3094   00B7A4                     
  3095                           ; BSR set to: 61
  3096                           ;mcc_generated_files/uart1.c: 159:         uart1RxLastError.oerr = 1;
  3097   00B7A4  0100               	movlb	0	; () banked
  3098   00B7A6  85CC               	bsf	_uart1RxLastError& (0+255),2,b	;volatile
  3099   00B7A8                     
  3100                           ; BSR set to: 0
  3101                           ;mcc_generated_files/uart1.c: 160:         UART1_OverrunErrorHandler();
  3102   00B7A8  D802               	call	u11058
  3103   00B7AA  EFE1  F05B         	goto	u11059
  3104   00B7AE                     u11058:
  3105   00B7AE  0005               	push	
  3106   00B7B0  6EFA               	movwf	pclath,c
  3107   00B7B2  0102               	movlb	2	; () banked
  3108   00B7B4  511F               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  3109   00B7B6  6EFD               	movwf	tosl,c
  3110   00B7B8  5120               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  3111   00B7BA  6EFE               	movwf	tosh,c
  3112   00B7BC  6AFF               	clrf	tosu,c
  3113   00B7BE  50FA               	movf	pclath,w,c
  3114   00B7C0  0012               	return		;indir
  3115   00B7C2                     u11059:
  3116   00B7C2                     l10584:
  3117                           
  3118                           ;mcc_generated_files/uart1.c: 163:     if(uart1RxLastError.status){
  3119   00B7C2  0100               	movlb	0	; () banked
  3120   00B7C4  51CC               	movf	_uart1RxLastError& (0+255),w,b	;volatile
  3121   00B7C6  B4D8               	btfsc	status,2,c
  3122   00B7C8  EFE8  F05B         	goto	u11061
  3123   00B7CC  EFEA  F05B         	goto	u11060
  3124   00B7D0                     u11061:
  3125   00B7D0  EFF7  F05B         	goto	l10588
  3126   00B7D4                     u11060:
  3127   00B7D4                     
  3128                           ; BSR set to: 0
  3129                           ;mcc_generated_files/uart1.c: 164:         UART1_ErrorHandler();
  3130   00B7D4  D802               	call	u11078
  3131   00B7D6  EFF7  F05B         	goto	u11079
  3132   00B7DA                     u11078:
  3133   00B7DA  0005               	push	
  3134   00B7DC  6EFA               	movwf	pclath,c
  3135   00B7DE  0103               	movlb	3	; () banked
  3136   00B7E0  51AC               	movf	_UART1_ErrorHandler& (0+255),w,b
  3137   00B7E2  6EFD               	movwf	tosl,c
  3138   00B7E4  51AD               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  3139   00B7E6  6EFE               	movwf	tosh,c
  3140   00B7E8  6AFF               	clrf	tosu,c
  3141   00B7EA  50FA               	movf	pclath,w,c
  3142   00B7EC  0012               	return		;indir
  3143   00B7EE                     u11079:
  3144   00B7EE                     l10588:
  3145                           
  3146                           ;mcc_generated_files/uart1.c: 167:     return U1RXB;
  3147   00B7EE  013D               	movlb	61	; () banked
  3148   00B7F0  51E8               	movf	232,w,b	;volatile
  3149   00B7F2                     
  3150                           ; BSR set to: 61
  3151   00B7F2  0012               	return		;funcret
  3152   00B7F4                     __end_of_UART1_Read:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  3156 ;; Defined at:
  3157 ;;		line 195 in file "mcc_generated_files/uart1.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		None
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_UART1_Initialize
  3181 ;;		_UART1_Read
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text5
  3186   00A18E                     __ptext5:
  3187                           	callstack 0
  3188   00A18E                     _UART1_DefaultOverrunErrorHandler:
  3189                           	callstack 28
  3190   00A18E  0012               	return		;funcret
  3191   00A190                     __end_of_UART1_DefaultOverrunErrorHandler:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  3195 ;; Defined at:
  3196 ;;		line 193 in file "mcc_generated_files/uart1.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		None
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_UART1_Initialize
  3220 ;;		_UART1_Read
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text6
  3225   00A18C                     __ptext6:
  3226                           	callstack 0
  3227   00A18C                     _UART1_DefaultFramingErrorHandler:
  3228                           	callstack 28
  3229   00A18C  0012               	return		;funcret
  3230   00A18E                     __end_of_UART1_DefaultFramingErrorHandler:
  3231                           	callstack 0
  3232                           
  3233 ;; *************** function _UART1_DefaultErrorHandler *****************
  3234 ;; Defined at:
  3235 ;;		line 197 in file "mcc_generated_files/uart1.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		None
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_UART1_Initialize
  3259 ;;		_UART1_Read
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text7
  3264   00A18A                     __ptext7:
  3265                           	callstack 0
  3266   00A18A                     _UART1_DefaultErrorHandler:
  3267                           	callstack 28
  3268   00A18A  0012               	return		;funcret
  3269   00A18C                     __end_of_UART1_DefaultErrorHandler:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _StoreLastSettings *****************
  3273 ;; Defined at:
  3274 ;;		line 384 in file "main.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  buffer          8   41[COMRAM] unsigned char [8]
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;Total ram usage:        8 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 14
  3295 ;; This function calls:
  3296 ;;		_EEPROM_WriteBlock
  3297 ;;		_memcpy
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text8
  3304   00AA50                     __ptext8:
  3305                           	callstack 0
  3306   00AA50                     _StoreLastSettings:
  3307                           	callstack 16
  3308   00AA50                     
  3309                           ;main.c: 385:     uint8_t buffer[8];;main.c: 387:     memcpy(&buffer[0], &Tm, sizeof(uin
      +                          t32_t));
  3310   00AA50  0E2A               	movlw	low StoreLastSettings@buffer
  3311   00AA52  6E01               	movwf	memcpy@d1^0,c
  3312   00AA54  6A02               	clrf	(memcpy@d1+1)^0,c
  3313   00AA56  0EE5               	movlw	low _Tm
  3314   00AA58  6E03               	movwf	memcpy@s1^0,c
  3315   00AA5A  6A04               	clrf	(memcpy@s1+1)^0,c
  3316   00AA5C  0E00               	movlw	0
  3317   00AA5E  6E06               	movwf	(memcpy@n+1)^0,c
  3318   00AA60  0E04               	movlw	4
  3319   00AA62  6E05               	movwf	memcpy@n^0,c
  3320   00AA64  EC1C  F056         	call	_memcpy	;wreg free
  3321                           
  3322                           ;main.c: 388:     memcpy(&buffer[4], &Ndat, sizeof(uint32_t));
  3323   00AA68  0E2E               	movlw	low (StoreLastSettings@buffer+4)
  3324   00AA6A  6E01               	movwf	memcpy@d1^0,c
  3325   00AA6C  6A02               	clrf	(memcpy@d1+1)^0,c
  3326   00AA6E  0EE9               	movlw	low _Ndat
  3327   00AA70  6E03               	movwf	memcpy@s1^0,c
  3328   00AA72  6A04               	clrf	(memcpy@s1+1)^0,c
  3329   00AA74  0E00               	movlw	0
  3330   00AA76  6E06               	movwf	(memcpy@n+1)^0,c
  3331   00AA78  0E04               	movlw	4
  3332   00AA7A  6E05               	movwf	memcpy@n^0,c
  3333   00AA7C  EC1C  F056         	call	_memcpy	;wreg free
  3334   00AA80                     
  3335                           ;main.c: 389:     EEPROM_WriteBlock(0x50, 0x0002, buffer, 8);
  3336   00AA80  0E00               	movlw	0
  3337   00AA82  6E24               	movwf	(EEPROM_WriteBlock@memoryAddress+1)^0,c
  3338   00AA84  0E02               	movlw	2
  3339   00AA86  6E23               	movwf	EEPROM_WriteBlock@memoryAddress^0,c
  3340   00AA88  0E2A               	movlw	low StoreLastSettings@buffer
  3341   00AA8A  6E25               	movwf	EEPROM_WriteBlock@data^0,c
  3342   00AA8C  6A26               	clrf	(EEPROM_WriteBlock@data+1)^0,c
  3343   00AA8E  0E08               	movlw	8
  3344   00AA90  6E27               	movwf	EEPROM_WriteBlock@size^0,c
  3345   00AA92  0E50               	movlw	80
  3346   00AA94  ECEF  F053         	call	_EEPROM_WriteBlock
  3347   00AA98  0012               	return		;funcret
  3348   00AA9A                     __end_of_StoreLastSettings:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _StartLogging *****************
  3352 ;; Defined at:
  3353 ;;		line 294 in file "main.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  startReadAdd    4    4[BANK2 ] unsigned long 
  3358 ;;  startReadAdd    4    0[BANK2 ] unsigned long 
  3359 ;;  buffer        200    0        unsigned char [200]
  3360 ;;  loggedDataCo    4   16[BANK2 ] unsigned long 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Locals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Totals:         0       2       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;Total ram usage:       22 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 15
  3377 ;; This function calls:
  3378 ;;		_EEPROM_WriteBlock
  3379 ;;		_MPU6050_ReadSensorData
  3380 ;;		_ReadAndSendEEPROMData
  3381 ;;		_StoreCurrentAddressEEPROM
  3382 ;;		_UART_SendString
  3383 ;;		___lmul
  3384 ;;		_custom_delay_ms
  3385 ;;		_memcpy
  3386 ;; This function is called by:
  3387 ;;		_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text9
  3392   00D382                     __ptext9:
  3393                           	callstack 0
  3394   00D382                     _StartLogging:
  3395                           	callstack 15
  3396   00D382                     
  3397                           ;main.c: 295:     uint32_t loggedDataCount = 0;
  3398   00D382  0E00               	movlw	0
  3399   00D384  0102               	movlb	2	; () banked
  3400   00D386  6F10               	movwf	StartLogging@loggedDataCount& (0+255),b
  3401   00D388  0E00               	movlw	0
  3402   00D38A  6F11               	movwf	(StartLogging@loggedDataCount+1)& (0+255),b
  3403   00D38C  0E00               	movlw	0
  3404   00D38E  6F12               	movwf	(StartLogging@loggedDataCount+2)& (0+255),b
  3405   00D390  0E00               	movlw	0
  3406   00D392  6F13               	movwf	(StartLogging@loggedDataCount+3)& (0+255),b
  3407                           
  3408                           ;main.c: 296:     char buffer[200];;main.c: 297:     while (loggedDataCount < Ndat) {
  3409   00D394  EF6C  F06A         	goto	l10804
  3410   00D398                     l10782:
  3411                           
  3412                           ; BSR set to: 2
  3413                           ;main.c: 299:         MPU6050_ReadSensorData(&ax, &ay, &az, &gx, &gy, &gz);
  3414   00D398  0EE1               	movlw	low _ax
  3415   00D39A  6E28               	movwf	MPU6050_ReadSensorData@ax^0,c
  3416   00D39C  0EDD               	movlw	low _ay
  3417   00D39E  6E29               	movwf	MPU6050_ReadSensorData@ay^0,c
  3418   00D3A0  0ED9               	movlw	low _az
  3419   00D3A2  6E2A               	movwf	MPU6050_ReadSensorData@az^0,c
  3420   00D3A4  0ED5               	movlw	low _gx
  3421   00D3A6  6E2B               	movwf	MPU6050_ReadSensorData@gx^0,c
  3422   00D3A8  0ED1               	movlw	low _gy
  3423   00D3AA  6E2C               	movwf	MPU6050_ReadSensorData@gy^0,c
  3424   00D3AC  0ECD               	movlw	low _gz
  3425   00D3AE  6E2D               	movwf	MPU6050_ReadSensorData@gz^0,c
  3426   00D3B0  EC65  F068         	call	_MPU6050_ReadSensorData	;wreg free
  3427   00D3B4                     
  3428                           ;main.c: 302:         memcpy(&eepromBuffer[0], &ax, sizeof(float));
  3429   00D3B4  0E94               	movlw	low _eepromBuffer
  3430   00D3B6  6E01               	movwf	memcpy@d1^0,c
  3431   00D3B8  0E03               	movlw	high _eepromBuffer
  3432   00D3BA  6E02               	movwf	(memcpy@d1+1)^0,c
  3433   00D3BC  0EE1               	movlw	low _ax
  3434   00D3BE  6E03               	movwf	memcpy@s1^0,c
  3435   00D3C0  6A04               	clrf	(memcpy@s1+1)^0,c
  3436   00D3C2  0E00               	movlw	0
  3437   00D3C4  6E06               	movwf	(memcpy@n+1)^0,c
  3438   00D3C6  0E04               	movlw	4
  3439   00D3C8  6E05               	movwf	memcpy@n^0,c
  3440   00D3CA  EC1C  F056         	call	_memcpy	;wreg free
  3441   00D3CE                     
  3442                           ;main.c: 303:         memcpy(&eepromBuffer[4], &ay, sizeof(float));
  3443   00D3CE  0E98               	movlw	low (_eepromBuffer+4)
  3444   00D3D0  6E01               	movwf	memcpy@d1^0,c
  3445   00D3D2  0E03               	movlw	high (_eepromBuffer+4)
  3446   00D3D4  6E02               	movwf	(memcpy@d1+1)^0,c
  3447   00D3D6  0EDD               	movlw	low _ay
  3448   00D3D8  6E03               	movwf	memcpy@s1^0,c
  3449   00D3DA  6A04               	clrf	(memcpy@s1+1)^0,c
  3450   00D3DC  0E00               	movlw	0
  3451   00D3DE  6E06               	movwf	(memcpy@n+1)^0,c
  3452   00D3E0  0E04               	movlw	4
  3453   00D3E2  6E05               	movwf	memcpy@n^0,c
  3454   00D3E4  EC1C  F056         	call	_memcpy	;wreg free
  3455   00D3E8                     
  3456                           ;main.c: 304:         memcpy(&eepromBuffer[8], &az, sizeof(float));
  3457   00D3E8  0E9C               	movlw	low (_eepromBuffer+8)
  3458   00D3EA  6E01               	movwf	memcpy@d1^0,c
  3459   00D3EC  0E03               	movlw	high (_eepromBuffer+8)
  3460   00D3EE  6E02               	movwf	(memcpy@d1+1)^0,c
  3461   00D3F0  0ED9               	movlw	low _az
  3462   00D3F2  6E03               	movwf	memcpy@s1^0,c
  3463   00D3F4  6A04               	clrf	(memcpy@s1+1)^0,c
  3464   00D3F6  0E00               	movlw	0
  3465   00D3F8  6E06               	movwf	(memcpy@n+1)^0,c
  3466   00D3FA  0E04               	movlw	4
  3467   00D3FC  6E05               	movwf	memcpy@n^0,c
  3468   00D3FE  EC1C  F056         	call	_memcpy	;wreg free
  3469   00D402                     
  3470                           ;main.c: 305:         memcpy(&eepromBuffer[12], &gx, sizeof(float));
  3471   00D402  0EA0               	movlw	low (_eepromBuffer+12)
  3472   00D404  6E01               	movwf	memcpy@d1^0,c
  3473   00D406  0E03               	movlw	high (_eepromBuffer+12)
  3474   00D408  6E02               	movwf	(memcpy@d1+1)^0,c
  3475   00D40A  0ED5               	movlw	low _gx
  3476   00D40C  6E03               	movwf	memcpy@s1^0,c
  3477   00D40E  6A04               	clrf	(memcpy@s1+1)^0,c
  3478   00D410  0E00               	movlw	0
  3479   00D412  6E06               	movwf	(memcpy@n+1)^0,c
  3480   00D414  0E04               	movlw	4
  3481   00D416  6E05               	movwf	memcpy@n^0,c
  3482   00D418  EC1C  F056         	call	_memcpy	;wreg free
  3483   00D41C                     
  3484                           ;main.c: 306:         memcpy(&eepromBuffer[16], &gy, sizeof(float));
  3485   00D41C  0EA4               	movlw	low (_eepromBuffer+16)
  3486   00D41E  6E01               	movwf	memcpy@d1^0,c
  3487   00D420  0E03               	movlw	high (_eepromBuffer+16)
  3488   00D422  6E02               	movwf	(memcpy@d1+1)^0,c
  3489   00D424  0ED1               	movlw	low _gy
  3490   00D426  6E03               	movwf	memcpy@s1^0,c
  3491   00D428  6A04               	clrf	(memcpy@s1+1)^0,c
  3492   00D42A  0E00               	movlw	0
  3493   00D42C  6E06               	movwf	(memcpy@n+1)^0,c
  3494   00D42E  0E04               	movlw	4
  3495   00D430  6E05               	movwf	memcpy@n^0,c
  3496   00D432  EC1C  F056         	call	_memcpy	;wreg free
  3497   00D436                     
  3498                           ;main.c: 307:         memcpy(&eepromBuffer[20], &gz, sizeof(float));
  3499   00D436  0EA8               	movlw	low (_eepromBuffer+20)
  3500   00D438  6E01               	movwf	memcpy@d1^0,c
  3501   00D43A  0E03               	movlw	high (_eepromBuffer+20)
  3502   00D43C  6E02               	movwf	(memcpy@d1+1)^0,c
  3503   00D43E  0ECD               	movlw	low _gz
  3504   00D440  6E03               	movwf	memcpy@s1^0,c
  3505   00D442  6A04               	clrf	(memcpy@s1+1)^0,c
  3506   00D444  0E00               	movlw	0
  3507   00D446  6E06               	movwf	(memcpy@n+1)^0,c
  3508   00D448  0E04               	movlw	4
  3509   00D44A  6E05               	movwf	memcpy@n^0,c
  3510   00D44C  EC1C  F056         	call	_memcpy	;wreg free
  3511                           
  3512                           ;main.c: 315:         EEPROM_WriteBlock(0x50, currentBlockEEPROM1, eepromBuffer, 12);
  3513   00D450  C0C7  F023         	movff	_currentBlockEEPROM1,EEPROM_WriteBlock@memoryAddress
  3514   00D454  C0C8  F024         	movff	_currentBlockEEPROM1+1,EEPROM_WriteBlock@memoryAddress+1
  3515   00D458  0E94               	movlw	low _eepromBuffer
  3516   00D45A  6E25               	movwf	EEPROM_WriteBlock@data^0,c
  3517   00D45C  0E03               	movlw	high _eepromBuffer
  3518   00D45E  6E26               	movwf	(EEPROM_WriteBlock@data+1)^0,c
  3519   00D460  0E0C               	movlw	12
  3520   00D462  6E27               	movwf	EEPROM_WriteBlock@size^0,c
  3521   00D464  0E50               	movlw	80
  3522   00D466  ECEF  F053         	call	_EEPROM_WriteBlock
  3523                           
  3524                           ;main.c: 324:         EEPROM_WriteBlock(0x51, currentBlockEEPROM2, &eepromBuffer[12], 12
      +                          );
  3525   00D46A  C0C5  F023         	movff	_currentBlockEEPROM2,EEPROM_WriteBlock@memoryAddress
  3526   00D46E  C0C6  F024         	movff	_currentBlockEEPROM2+1,EEPROM_WriteBlock@memoryAddress+1
  3527   00D472  0EA0               	movlw	low (_eepromBuffer+12)
  3528   00D474  6E25               	movwf	EEPROM_WriteBlock@data^0,c
  3529   00D476  0E03               	movlw	high (_eepromBuffer+12)
  3530   00D478  6E26               	movwf	(EEPROM_WriteBlock@data+1)^0,c
  3531   00D47A  0E0C               	movlw	12
  3532   00D47C  6E27               	movwf	EEPROM_WriteBlock@size^0,c
  3533   00D47E  0E51               	movlw	81
  3534   00D480  ECEF  F053         	call	_EEPROM_WriteBlock
  3535   00D484                     
  3536                           ;main.c: 327:         currentBlockEEPROM1 = (currentBlockEEPROM1 + 12) % 32768;
  3537   00D484  0E0C               	movlw	12
  3538   00D486  0100               	movlb	0	; () banked
  3539   00D488  25C7               	addwf	_currentBlockEEPROM1& (0+255),w,b
  3540   00D48A  6FB7               	movwf	??_StartLogging& (0+255),b
  3541   00D48C  0E00               	movlw	0
  3542   00D48E  21C8               	addwfc	(_currentBlockEEPROM1+1)& (0+255),w,b
  3543   00D490  6FB8               	movwf	(??_StartLogging+1)& (0+255),b
  3544   00D492  0EFF               	movlw	255
  3545   00D494  15B7               	andwf	??_StartLogging& (0+255),w,b
  3546   00D496  6FC7               	movwf	_currentBlockEEPROM1& (0+255),b
  3547   00D498  0E7F               	movlw	127
  3548   00D49A  15B8               	andwf	(??_StartLogging+1)& (0+255),w,b
  3549   00D49C  6FC8               	movwf	(_currentBlockEEPROM1+1)& (0+255),b
  3550   00D49E                     
  3551                           ; BSR set to: 0
  3552                           ;main.c: 328:         currentBlockEEPROM2 = (currentBlockEEPROM2 + 12) % 32768;
  3553   00D49E  0E0C               	movlw	12
  3554   00D4A0  25C5               	addwf	_currentBlockEEPROM2& (0+255),w,b
  3555   00D4A2  6FB7               	movwf	??_StartLogging& (0+255),b
  3556   00D4A4  0E00               	movlw	0
  3557   00D4A6  21C6               	addwfc	(_currentBlockEEPROM2+1)& (0+255),w,b
  3558   00D4A8  6FB8               	movwf	(??_StartLogging+1)& (0+255),b
  3559   00D4AA  0EFF               	movlw	255
  3560   00D4AC  15B7               	andwf	??_StartLogging& (0+255),w,b
  3561   00D4AE  6FC5               	movwf	_currentBlockEEPROM2& (0+255),b
  3562   00D4B0  0E7F               	movlw	127
  3563   00D4B2  15B8               	andwf	(??_StartLogging+1)& (0+255),w,b
  3564   00D4B4  6FC6               	movwf	(_currentBlockEEPROM2+1)& (0+255),b
  3565   00D4B6                     
  3566                           ; BSR set to: 0
  3567                           ;main.c: 330:         loggedDataCount++;
  3568   00D4B6  0E01               	movlw	1
  3569   00D4B8  0102               	movlb	2	; () banked
  3570   00D4BA  2710               	addwf	StartLogging@loggedDataCount& (0+255),f,b
  3571   00D4BC  0E00               	movlw	0
  3572   00D4BE  2311               	addwfc	(StartLogging@loggedDataCount+1)& (0+255),f,b
  3573   00D4C0  2312               	addwfc	(StartLogging@loggedDataCount+2)& (0+255),f,b
  3574   00D4C2  2313               	addwfc	(StartLogging@loggedDataCount+3)& (0+255),f,b
  3575   00D4C4                     
  3576                           ; BSR set to: 2
  3577                           ;main.c: 331:         custom_delay_ms(Tm);
  3578   00D4C4  C0E5  F001         	movff	_Tm,custom_delay_ms@milliseconds
  3579   00D4C8  C0E6  F002         	movff	_Tm+1,custom_delay_ms@milliseconds+1
  3580   00D4CC  C0E7  F003         	movff	_Tm+2,custom_delay_ms@milliseconds+2
  3581   00D4D0  C0E8  F004         	movff	_Tm+3,custom_delay_ms@milliseconds+3
  3582   00D4D4  EC93  F053         	call	_custom_delay_ms	;wreg free
  3583   00D4D8                     l10804:
  3584                           
  3585                           ;main.c: 297:     while (loggedDataCount < Ndat) {
  3586   00D4D8  0100               	movlb	0	; () banked
  3587   00D4DA  51E9               	movf	_Ndat& (0+255),w,b
  3588   00D4DC  0102               	movlb	2	; () banked
  3589   00D4DE  5D10               	subwf	StartLogging@loggedDataCount& (0+255),w,b
  3590   00D4E0  0100               	movlb	0	; () banked
  3591   00D4E2  51EA               	movf	(_Ndat+1)& (0+255),w,b
  3592   00D4E4  0102               	movlb	2	; () banked
  3593   00D4E6  5911               	subwfb	(StartLogging@loggedDataCount+1)& (0+255),w,b
  3594   00D4E8  0100               	movlb	0	; () banked
  3595   00D4EA  51EB               	movf	(_Ndat+2)& (0+255),w,b
  3596   00D4EC  0102               	movlb	2	; () banked
  3597   00D4EE  5912               	subwfb	(StartLogging@loggedDataCount+2)& (0+255),w,b
  3598   00D4F0  0100               	movlb	0	; () banked
  3599   00D4F2  51EC               	movf	(_Ndat+3)& (0+255),w,b
  3600   00D4F4  0102               	movlb	2	; () banked
  3601   00D4F6  5913               	subwfb	(StartLogging@loggedDataCount+3)& (0+255),w,b
  3602   00D4F8  A0D8               	btfss	status,0,c
  3603   00D4FA  EF81  F06A         	goto	u11181
  3604   00D4FE  EF83  F06A         	goto	u11180
  3605   00D502                     u11181:
  3606   00D502  EFCC  F069         	goto	l10782
  3607   00D506                     u11180:
  3608   00D506                     
  3609                           ; BSR set to: 2
  3610                           ;main.c: 334:     if (loggedDataCount == Ndat) {
  3611   00D506  0100               	movlb	0	; () banked
  3612   00D508  51E9               	movf	_Ndat& (0+255),w,b
  3613   00D50A  0102               	movlb	2	; () banked
  3614   00D50C  1910               	xorwf	StartLogging@loggedDataCount& (0+255),w,b
  3615   00D50E  E113               	bnz	u11191
  3616   00D510  0100               	movlb	0	; () banked
  3617   00D512  51EA               	movf	(_Ndat+1)& (0+255),w,b
  3618   00D514  0102               	movlb	2	; () banked
  3619   00D516  1911               	xorwf	(StartLogging@loggedDataCount+1)& (0+255),w,b
  3620   00D518  E10E               	bnz	u11191
  3621   00D51A  0100               	movlb	0	; () banked
  3622   00D51C  51EB               	movf	(_Ndat+2)& (0+255),w,b
  3623   00D51E  0102               	movlb	2	; () banked
  3624   00D520  1912               	xorwf	(StartLogging@loggedDataCount+2)& (0+255),w,b
  3625   00D522  E109               	bnz	u11191
  3626   00D524  0100               	movlb	0	; () banked
  3627   00D526  51EC               	movf	(_Ndat+3)& (0+255),w,b
  3628   00D528  0102               	movlb	2	; () banked
  3629   00D52A  1913               	xorwf	(StartLogging@loggedDataCount+3)& (0+255),w,b
  3630   00D52C  A4D8               	btfss	status,2,c
  3631   00D52E  EF9B  F06A         	goto	u11191
  3632   00D532  EF9D  F06A         	goto	u11190
  3633   00D536                     u11191:
  3634   00D536  EF2F  F06B         	goto	l10830
  3635   00D53A                     u11190:
  3636   00D53A                     
  3637                           ; BSR set to: 2
  3638                           ;main.c: 335:     UART_SendString("------------LOG_OK-------------\n");
  3639   00D53A  0E4C               	movlw	low STR_6
  3640   00D53C  6E02               	movwf	UART_SendString@str^0,c
  3641   00D53E  0EFF               	movlw	high STR_6
  3642   00D540  6E03               	movwf	(UART_SendString@str+1)^0,c
  3643   00D542  EC22  F058         	call	_UART_SendString	;wreg free
  3644   00D546                     
  3645                           ;main.c: 337:     unsigned long startReadAddressEEPROM1 = (currentBlockEEPROM1 == 0 ? 32
      +                          768 : currentBlockEEPROM1) - (Ndat * 12);
  3646   00D546  0100               	movlb	0	; () banked
  3647   00D548  51C7               	movf	_currentBlockEEPROM1& (0+255),w,b
  3648   00D54A  11C8               	iorwf	(_currentBlockEEPROM1+1)& (0+255),w,b
  3649   00D54C  B4D8               	btfsc	status,2,c
  3650   00D54E  EFAB  F06A         	goto	u11201
  3651   00D552  EFAD  F06A         	goto	u11200
  3652   00D556                     u11201:
  3653   00D556  EFB6  F06A         	goto	l10814
  3654   00D55A                     u11200:
  3655   00D55A                     
  3656                           ; BSR set to: 0
  3657   00D55A  C0C7  F208         	movff	_currentBlockEEPROM1,_StartLogging$1474
  3658   00D55E  C0C8  F209         	movff	_currentBlockEEPROM1+1,_StartLogging$1474+1
  3659   00D562  0102               	movlb	2	; () banked
  3660   00D564  6B0A               	clrf	(_StartLogging$1474+2)& (0+255),b
  3661   00D566  6B0B               	clrf	(_StartLogging$1474+3)& (0+255),b
  3662   00D568  EFBF  F06A         	goto	l10816
  3663   00D56C                     l10814:
  3664                           
  3665                           ; BSR set to: 0
  3666   00D56C  0E00               	movlw	0
  3667   00D56E  0102               	movlb	2	; () banked
  3668   00D570  6F08               	movwf	_StartLogging$1474& (0+255),b
  3669   00D572  0E80               	movlw	128
  3670   00D574  6F09               	movwf	(_StartLogging$1474+1)& (0+255),b
  3671   00D576  0E00               	movlw	0
  3672   00D578  6F0A               	movwf	(_StartLogging$1474+2)& (0+255),b
  3673   00D57A  0E00               	movlw	0
  3674   00D57C  6F0B               	movwf	(_StartLogging$1474+3)& (0+255),b
  3675   00D57E                     l10816:
  3676                           
  3677                           ; BSR set to: 2
  3678   00D57E  C0E9  F001         	movff	_Ndat,___lmul@multiplier
  3679   00D582  C0EA  F002         	movff	_Ndat+1,___lmul@multiplier+1
  3680   00D586  C0EB  F003         	movff	_Ndat+2,___lmul@multiplier+2
  3681   00D58A  C0EC  F004         	movff	_Ndat+3,___lmul@multiplier+3
  3682   00D58E  0EF4               	movlw	244
  3683   00D590  6E05               	movwf	___lmul@multiplicand^0,c
  3684   00D592  0EFF               	movlw	255
  3685   00D594  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3686   00D596  0EFF               	movlw	255
  3687   00D598  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3688   00D59A  0EFF               	movlw	255
  3689   00D59C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3690   00D59E  EC7D  F057         	call	___lmul	;wreg free
  3691   00D5A2  0102               	movlb	2	; () banked
  3692   00D5A4  5108               	movf	_StartLogging$1474& (0+255),w,b
  3693   00D5A6  2401               	addwf	?___lmul^0,w,c
  3694   00D5A8  6F00               	movwf	StartLogging@startReadAddressEEPROM1& (0+255),b
  3695   00D5AA  5109               	movf	(_StartLogging$1474+1)& (0+255),w,b
  3696   00D5AC  2002               	addwfc	(?___lmul+1)^0,w,c
  3697   00D5AE  6F01               	movwf	(StartLogging@startReadAddressEEPROM1+1)& (0+255),b
  3698   00D5B0  510A               	movf	(_StartLogging$1474+2)& (0+255),w,b
  3699   00D5B2  2003               	addwfc	(?___lmul+2)^0,w,c
  3700   00D5B4  6F02               	movwf	(StartLogging@startReadAddressEEPROM1+2)& (0+255),b
  3701   00D5B6  510B               	movf	(_StartLogging$1474+3)& (0+255),w,b
  3702   00D5B8  2004               	addwfc	(?___lmul+3)^0,w,c
  3703   00D5BA  6F03               	movwf	(StartLogging@startReadAddressEEPROM1+3)& (0+255),b
  3704   00D5BC                     
  3705                           ; BSR set to: 2
  3706                           ;main.c: 338:     unsigned long startReadAddressEEPROM2 = (currentBlockEEPROM2 == 0 ? 32
      +                          768 : currentBlockEEPROM2) - (Ndat * 12);
  3707   00D5BC  0100               	movlb	0	; () banked
  3708   00D5BE  51C5               	movf	_currentBlockEEPROM2& (0+255),w,b
  3709   00D5C0  11C6               	iorwf	(_currentBlockEEPROM2+1)& (0+255),w,b
  3710   00D5C2  B4D8               	btfsc	status,2,c
  3711   00D5C4  EFE6  F06A         	goto	u11211
  3712   00D5C8  EFE8  F06A         	goto	u11210
  3713   00D5CC                     u11211:
  3714   00D5CC  EFF1  F06A         	goto	l10822
  3715   00D5D0                     u11210:
  3716   00D5D0                     
  3717                           ; BSR set to: 0
  3718   00D5D0  C0C5  F20C         	movff	_currentBlockEEPROM2,_StartLogging$1476
  3719   00D5D4  C0C6  F20D         	movff	_currentBlockEEPROM2+1,_StartLogging$1476+1
  3720   00D5D8  0102               	movlb	2	; () banked
  3721   00D5DA  6B0E               	clrf	(_StartLogging$1476+2)& (0+255),b
  3722   00D5DC  6B0F               	clrf	(_StartLogging$1476+3)& (0+255),b
  3723   00D5DE  EFFA  F06A         	goto	l10824
  3724   00D5E2                     l10822:
  3725                           
  3726                           ; BSR set to: 0
  3727   00D5E2  0E00               	movlw	0
  3728   00D5E4  0102               	movlb	2	; () banked
  3729   00D5E6  6F0C               	movwf	_StartLogging$1476& (0+255),b
  3730   00D5E8  0E80               	movlw	128
  3731   00D5EA  6F0D               	movwf	(_StartLogging$1476+1)& (0+255),b
  3732   00D5EC  0E00               	movlw	0
  3733   00D5EE  6F0E               	movwf	(_StartLogging$1476+2)& (0+255),b
  3734   00D5F0  0E00               	movlw	0
  3735   00D5F2  6F0F               	movwf	(_StartLogging$1476+3)& (0+255),b
  3736   00D5F4                     l10824:
  3737                           
  3738                           ; BSR set to: 2
  3739   00D5F4  C0E9  F001         	movff	_Ndat,___lmul@multiplier
  3740   00D5F8  C0EA  F002         	movff	_Ndat+1,___lmul@multiplier+1
  3741   00D5FC  C0EB  F003         	movff	_Ndat+2,___lmul@multiplier+2
  3742   00D600  C0EC  F004         	movff	_Ndat+3,___lmul@multiplier+3
  3743   00D604  0EF4               	movlw	244
  3744   00D606  6E05               	movwf	___lmul@multiplicand^0,c
  3745   00D608  0EFF               	movlw	255
  3746   00D60A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3747   00D60C  0EFF               	movlw	255
  3748   00D60E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3749   00D610  0EFF               	movlw	255
  3750   00D612  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3751   00D614  EC7D  F057         	call	___lmul	;wreg free
  3752   00D618  0102               	movlb	2	; () banked
  3753   00D61A  510C               	movf	_StartLogging$1476& (0+255),w,b
  3754   00D61C  2401               	addwf	?___lmul^0,w,c
  3755   00D61E  6F04               	movwf	StartLogging@startReadAddressEEPROM2& (0+255),b
  3756   00D620  510D               	movf	(_StartLogging$1476+1)& (0+255),w,b
  3757   00D622  2002               	addwfc	(?___lmul+1)^0,w,c
  3758   00D624  6F05               	movwf	(StartLogging@startReadAddressEEPROM2+1)& (0+255),b
  3759   00D626  510E               	movf	(_StartLogging$1476+2)& (0+255),w,b
  3760   00D628  2003               	addwfc	(?___lmul+2)^0,w,c
  3761   00D62A  6F06               	movwf	(StartLogging@startReadAddressEEPROM2+2)& (0+255),b
  3762   00D62C  510F               	movf	(_StartLogging$1476+3)& (0+255),w,b
  3763   00D62E  2004               	addwfc	(?___lmul+3)^0,w,c
  3764   00D630  6F07               	movwf	(StartLogging@startReadAddressEEPROM2+3)& (0+255),b
  3765   00D632                     
  3766                           ; BSR set to: 2
  3767                           ;main.c: 363:     ReadAndSendEEPROMData(Ndat, (uint16_t)startReadAddressEEPROM1, (uint16
      +                          _t)startReadAddressEEPROM2);
  3768   00D632  C0E9  F0AF         	movff	_Ndat,ReadAndSendEEPROMData@Ndat
  3769   00D636  C0EA  F0B0         	movff	_Ndat+1,ReadAndSendEEPROMData@Ndat+1
  3770   00D63A  C0EB  F0B1         	movff	_Ndat+2,ReadAndSendEEPROMData@Ndat+2
  3771   00D63E  C0EC  F0B2         	movff	_Ndat+3,ReadAndSendEEPROMData@Ndat+3
  3772   00D642  C200  F0B3         	movff	StartLogging@startReadAddressEEPROM1,ReadAndSendEEPROMData@startAddressEEPROM1
  3773   00D646  C201  F0B4         	movff	StartLogging@startReadAddressEEPROM1+1,ReadAndSendEEPROMData@startAddressEEPROM1+
      +                          1
  3774   00D64A  C204  F0B5         	movff	StartLogging@startReadAddressEEPROM2,ReadAndSendEEPROMData@startAddressEEPROM2
  3775   00D64E  C205  F0B6         	movff	StartLogging@startReadAddressEEPROM2+1,ReadAndSendEEPROMData@startAddressEEPROM2+
      +                          1
  3776   00D652  EC4E  F064         	call	_ReadAndSendEEPROMData	;wreg free
  3777   00D656                     
  3778                           ;main.c: 365:     StoreCurrentAddressEEPROM();
  3779   00D656  EC3A  F052         	call	_StoreCurrentAddressEEPROM	;wreg free
  3780                           
  3781                           ;main.c: 367:     } else {
  3782   00D65A  EF35  F06B         	goto	l10832
  3783   00D65E                     l10830:
  3784                           
  3785                           ; BSR set to: 2
  3786                           ;main.c: 368:         UART_SendString("LOG_ERR\n");
  3787   00D65E  0EC7               	movlw	low STR_7
  3788   00D660  6E02               	movwf	UART_SendString@str^0,c
  3789   00D662  0EFF               	movlw	high STR_7
  3790   00D664  6E03               	movwf	(UART_SendString@str+1)^0,c
  3791   00D666  EC22  F058         	call	_UART_SendString	;wreg free
  3792   00D66A                     l10832:
  3793                           
  3794                           ;main.c: 370:     logging = 0;
  3795   00D66A  0E00               	movlw	0
  3796   00D66C  0100               	movlb	0	; () banked
  3797   00D66E  6FCB               	movwf	_logging& (0+255),b
  3798   00D670                     
  3799                           ; BSR set to: 0
  3800   00D670  0012               	return		;funcret
  3801   00D672                     __end_of_StartLogging:
  3802                           	callstack 0
  3803                           
  3804 ;; *************** function _custom_delay_ms *****************
  3805 ;; Defined at:
  3806 ;;		line 232 in file "main.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  milliseconds    4    0[COMRAM] unsigned long 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;Total ram usage:        5 bytes
  3825 ;; Hardware stack levels used: 1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_StartLogging
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text10
  3834   00A726                     __ptext10:
  3835                           	callstack 0
  3836   00A726                     _custom_delay_ms:
  3837                           	callstack 29
  3838   00A726                     
  3839                           ;main.c: 233:     while(milliseconds--) {
  3840   00A726  EF9C  F053         	goto	l10656
  3841   00A72A                     l10654:
  3842                           
  3843                           ;main.c: 234:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3844   00A72A  0E03               	movlw	3
  3845   00A72C  6E05               	movwf	??_custom_delay_ms^0,c
  3846   00A72E  0E98               	movlw	152
  3847   00A730                     u11437:
  3848   00A730  2EE8               	decfsz	wreg,f,c
  3849   00A732  D7FE               	bra	u11437
  3850   00A734  2E05               	decfsz	??_custom_delay_ms^0,f,c
  3851   00A736  D7FC               	bra	u11437
  3852   00A738                     l10656:
  3853                           
  3854                           ;main.c: 233:     while(milliseconds--) {
  3855   00A738  0601               	decf	custom_delay_ms@milliseconds^0,f,c
  3856   00A73A  0E00               	movlw	0
  3857   00A73C  5A02               	subwfb	(custom_delay_ms@milliseconds+1)^0,f,c
  3858   00A73E  5A03               	subwfb	(custom_delay_ms@milliseconds+2)^0,f,c
  3859   00A740  5A04               	subwfb	(custom_delay_ms@milliseconds+3)^0,f,c
  3860   00A742  2801               	incf	custom_delay_ms@milliseconds^0,w,c
  3861   00A744  E10A               	bnz	u11081
  3862   00A746  2802               	incf	(custom_delay_ms@milliseconds+1)^0,w,c
  3863   00A748  E108               	bnz	u11081
  3864   00A74A  2803               	incf	(custom_delay_ms@milliseconds+2)^0,w,c
  3865   00A74C  E106               	bnz	u11081
  3866   00A74E  2804               	incf	(custom_delay_ms@milliseconds+3)^0,w,c
  3867   00A750  A4D8               	btfss	status,2,c
  3868   00A752  EFAD  F053         	goto	u11081
  3869   00A756  EFAF  F053         	goto	u11080
  3870   00A75A                     u11081:
  3871   00A75A  EF95  F053         	goto	l10654
  3872   00A75E                     u11080:
  3873   00A75E  0012               	return		;funcret
  3874   00A760                     __end_of_custom_delay_ms:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function ___lmul *****************
  3878 ;; Defined at:
  3879 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  multiplier      4    0[COMRAM] unsigned long 
  3882 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  product         4    8[COMRAM] unsigned long 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  4    0[COMRAM] unsigned long 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:       12 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_StartLogging
  3904 ;;		_main
  3905 ;;		_Handle_LOG_READ
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text11
  3910   00AEFA                     __ptext11:
  3911                           	callstack 0
  3912   00AEFA                     ___lmul:
  3913                           	callstack 30
  3914   00AEFA  0E00               	movlw	0
  3915   00AEFC  6E09               	movwf	___lmul@product^0,c
  3916   00AEFE  0E00               	movlw	0
  3917   00AF00  6E0A               	movwf	(___lmul@product+1)^0,c
  3918   00AF02  0E00               	movlw	0
  3919   00AF04  6E0B               	movwf	(___lmul@product+2)^0,c
  3920   00AF06  0E00               	movlw	0
  3921   00AF08  6E0C               	movwf	(___lmul@product+3)^0,c
  3922   00AF0A                     l10704:
  3923   00AF0A  A001               	btfss	___lmul@multiplier^0,0,c
  3924   00AF0C  EF8A  F057         	goto	u11101
  3925   00AF10  EF8C  F057         	goto	u11100
  3926   00AF14                     u11101:
  3927   00AF14  EF94  F057         	goto	l10708
  3928   00AF18                     u11100:
  3929   00AF18  5005               	movf	___lmul@multiplicand^0,w,c
  3930   00AF1A  2609               	addwf	___lmul@product^0,f,c
  3931   00AF1C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  3932   00AF1E  220A               	addwfc	(___lmul@product+1)^0,f,c
  3933   00AF20  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  3934   00AF22  220B               	addwfc	(___lmul@product+2)^0,f,c
  3935   00AF24  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  3936   00AF26  220C               	addwfc	(___lmul@product+3)^0,f,c
  3937   00AF28                     l10708:
  3938   00AF28  90D8               	bcf	status,0,c
  3939   00AF2A  3605               	rlcf	___lmul@multiplicand^0,f,c
  3940   00AF2C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3941   00AF2E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3942   00AF30  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3943   00AF32  90D8               	bcf	status,0,c
  3944   00AF34  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  3945   00AF36  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  3946   00AF38  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  3947   00AF3A  3201               	rrcf	___lmul@multiplier^0,f,c
  3948   00AF3C  5001               	movf	___lmul@multiplier^0,w,c
  3949   00AF3E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  3950   00AF40  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  3951   00AF42  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  3952   00AF44  A4D8               	btfss	status,2,c
  3953   00AF46  EFA7  F057         	goto	u11111
  3954   00AF4A  EFA9  F057         	goto	u11110
  3955   00AF4E                     u11111:
  3956   00AF4E  EF85  F057         	goto	l10704
  3957   00AF52                     u11110:
  3958   00AF52  C009  F001         	movff	___lmul@product,?___lmul
  3959   00AF56  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3960   00AF5A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3961   00AF5E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3962   00AF62  0012               	return		;funcret
  3963   00AF64                     __end_of___lmul:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _StoreCurrentAddressEEPROM *****************
  3967 ;; Defined at:
  3968 ;;		line 272 in file "main.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  addressBuffe    2   41[COMRAM] unsigned char [2]
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;Total ram usage:        2 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 14
  3989 ;; This function calls:
  3990 ;;		_EEPROM_WriteBlock
  3991 ;; This function is called by:
  3992 ;;		_StartLogging
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text12
  3997   00A474                     __ptext12:
  3998                           	callstack 0
  3999   00A474                     _StoreCurrentAddressEEPROM:
  4000                           	callstack 15
  4001   00A474                     
  4002                           ;main.c: 273:     uint8_t addressBuffer[2];;main.c: 275:     addressBuffer[0] = (current
      +                          BlockEEPROM1 >> 8) & 0xFF;
  4003   00A474  0100               	movlb	0	; () banked
  4004   00A476  51C8               	movf	(_currentBlockEEPROM1+1)& (0+255),w,b
  4005   00A478  6E2A               	movwf	StoreCurrentAddressEEPROM@addressBuffer^0,c
  4006   00A47A                     
  4007                           ; BSR set to: 0
  4008                           ;main.c: 276:     addressBuffer[1] = currentBlockEEPROM1 & 0xFF;
  4009   00A47A  C0C7  F02B         	movff	_currentBlockEEPROM1,StoreCurrentAddressEEPROM@addressBuffer+1
  4010   00A47E                     
  4011                           ; BSR set to: 0
  4012                           ;main.c: 277:     EEPROM_WriteBlock(0x50, 0x0000, addressBuffer, 2);
  4013   00A47E  0E00               	movlw	0
  4014   00A480  6E24               	movwf	(EEPROM_WriteBlock@memoryAddress+1)^0,c
  4015   00A482  0E00               	movlw	0
  4016   00A484  6E23               	movwf	EEPROM_WriteBlock@memoryAddress^0,c
  4017   00A486  0E2A               	movlw	low StoreCurrentAddressEEPROM@addressBuffer
  4018   00A488  6E25               	movwf	EEPROM_WriteBlock@data^0,c
  4019   00A48A  6A26               	clrf	(EEPROM_WriteBlock@data+1)^0,c
  4020   00A48C  0E02               	movlw	2
  4021   00A48E  6E27               	movwf	EEPROM_WriteBlock@size^0,c
  4022   00A490  0E50               	movlw	80
  4023   00A492  ECEF  F053         	call	_EEPROM_WriteBlock
  4024   00A496  0012               	return		;funcret
  4025   00A498                     __end_of_StoreCurrentAddressEEPROM:
  4026                           	callstack 0
  4027                           
  4028 ;; *************** function _EEPROM_WriteBlock *****************
  4029 ;; Defined at:
  4030 ;;		line 141 in file "main.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  deviceAddres    1    wreg     unsigned char 
  4033 ;;  memoryAddres    2   34[COMRAM] unsigned short 
  4034 ;;  data            2   36[COMRAM] PTR unsigned char 
  4035 ;;		 -> StoreLastSettings@buffer(8), eepromBuffer(24), StoreCurrentAddressEEPROM@addressBuffer(2), 
  4036 ;;  size            1   38[COMRAM] unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  deviceAddres    1   39[COMRAM] unsigned char 
  4039 ;;  i               1   40[COMRAM] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4049 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;Total ram usage:        7 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; Hardware stack levels required when called: 13
  4056 ;; This function calls:
  4057 ;;		_EEPROM_WriteByte
  4058 ;; This function is called by:
  4059 ;;		_StoreCurrentAddressEEPROM
  4060 ;;		_StartLogging
  4061 ;;		_StoreLastSettings
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text13
  4066   00A7DE                     __ptext13:
  4067                           	callstack 0
  4068   00A7DE                     _EEPROM_WriteBlock:
  4069                           	callstack 16
  4070                           
  4071                           ;incstack = 0
  4072                           ;EEPROM_WriteBlock@deviceAddress stored from wreg
  4073   00A7DE  6E28               	movwf	EEPROM_WriteBlock@deviceAddress^0,c
  4074   00A7E0                     
  4075                           ;main.c: 142:     for (uint8_t i = 0; i < size; i++){
  4076   00A7E0  0E00               	movlw	0
  4077   00A7E2  6E29               	movwf	EEPROM_WriteBlock@i^0,c
  4078   00A7E4  EF06  F054         	goto	l10452
  4079   00A7E8                     l10448:
  4080                           
  4081                           ;main.c: 143:         EEPROM_WriteByte(deviceAddress, memoryAddress + i, data[i]);
  4082   00A7E8  5029               	movf	EEPROM_WriteBlock@i^0,w,c
  4083   00A7EA  2423               	addwf	EEPROM_WriteBlock@memoryAddress^0,w,c
  4084   00A7EC  6E1B               	movwf	EEPROM_WriteByte@memoryAddress^0,c
  4085   00A7EE  0E00               	movlw	0
  4086   00A7F0  2024               	addwfc	(EEPROM_WriteBlock@memoryAddress+1)^0,w,c
  4087   00A7F2  6E1C               	movwf	(EEPROM_WriteByte@memoryAddress+1)^0,c
  4088   00A7F4  5029               	movf	EEPROM_WriteBlock@i^0,w,c
  4089   00A7F6  2425               	addwf	EEPROM_WriteBlock@data^0,w,c
  4090   00A7F8  6ED9               	movwf	fsr2l,c
  4091   00A7FA  0E00               	movlw	0
  4092   00A7FC  2026               	addwfc	(EEPROM_WriteBlock@data+1)^0,w,c
  4093   00A7FE  6EDA               	movwf	fsr2h,c
  4094   00A800  50DF               	movf	indf2,w,c
  4095   00A802  6E1D               	movwf	EEPROM_WriteByte@data^0,c
  4096   00A804  5028               	movf	EEPROM_WriteBlock@deviceAddress^0,w,c
  4097   00A806  EC27  F053         	call	_EEPROM_WriteByte
  4098   00A80A                     
  4099                           ;main.c: 144:     }
  4100   00A80A  2A29               	incf	EEPROM_WriteBlock@i^0,f,c
  4101   00A80C                     l10452:
  4102   00A80C  5027               	movf	EEPROM_WriteBlock@size^0,w,c
  4103   00A80E  5C29               	subwf	EEPROM_WriteBlock@i^0,w,c
  4104   00A810  A0D8               	btfss	status,0,c
  4105   00A812  EF0D  F054         	goto	u10831
  4106   00A816  EF0F  F054         	goto	u10830
  4107   00A81A                     u10831:
  4108   00A81A  EFF4  F053         	goto	l10448
  4109   00A81E                     u10830:
  4110   00A81E  0012               	return		;funcret
  4111   00A820                     __end_of_EEPROM_WriteBlock:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _EEPROM_WriteByte *****************
  4115 ;; Defined at:
  4116 ;;		line 114 in file "main.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  deviceAddres    1    wreg     unsigned char 
  4119 ;;  memoryAddres    2   26[COMRAM] unsigned short 
  4120 ;;  data            1   28[COMRAM] unsigned char 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  deviceAddres    1   30[COMRAM] unsigned char 
  4123 ;;  buffer          3   31[COMRAM] unsigned char [3]
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4133 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;Total ram usage:        8 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 12
  4140 ;; This function calls:
  4141 ;;		_I2C1_WriteNBytes
  4142 ;; This function is called by:
  4143 ;;		_EEPROM_WriteBlock
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text14
  4148   00A64E                     __ptext14:
  4149                           	callstack 0
  4150   00A64E                     _EEPROM_WriteByte:
  4151                           	callstack 16
  4152                           
  4153                           ;incstack = 0
  4154                           ;EEPROM_WriteByte@deviceAddress stored from wreg
  4155   00A64E  6E1F               	movwf	EEPROM_WriteByte@deviceAddress^0,c
  4156   00A650                     
  4157                           ;main.c: 115:     uint8_t buffer[3];;main.c: 116:     buffer[0] = (memoryAddress >> 8) &
      +                           0xFF;
  4158   00A650  501C               	movf	(EEPROM_WriteByte@memoryAddress+1)^0,w,c
  4159   00A652  6E20               	movwf	EEPROM_WriteByte@buffer^0,c
  4160   00A654                     
  4161                           ;main.c: 117:     buffer[1] = memoryAddress & 0xFF;
  4162   00A654  C01B  F021         	movff	EEPROM_WriteByte@memoryAddress,EEPROM_WriteByte@buffer+1
  4163   00A658                     
  4164                           ;main.c: 118:     buffer[2] = data;
  4165   00A658  C01D  F022         	movff	EEPROM_WriteByte@data,EEPROM_WriteByte@buffer+2
  4166   00A65C                     
  4167                           ;main.c: 120:     I2C1_WriteNBytes(deviceAddress, buffer, 3);
  4168   00A65C  0E20               	movlw	low EEPROM_WriteByte@buffer
  4169   00A65E  6E17               	movwf	I2C1_WriteNBytes@data^0,c
  4170   00A660  0E00               	movlw	0
  4171   00A662  6E19               	movwf	(I2C1_WriteNBytes@len+1)^0,c
  4172   00A664  0E03               	movlw	3
  4173   00A666  6E18               	movwf	I2C1_WriteNBytes@len^0,c
  4174   00A668  501F               	movf	EEPROM_WriteByte@deviceAddress^0,w,c
  4175   00A66A  ECF0  F055         	call	_I2C1_WriteNBytes
  4176   00A66E                     
  4177                           ;main.c: 122:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4178   00A66E  0E0D               	movlw	13
  4179   00A670  6E1E               	movwf	??_EEPROM_WriteByte^0,c
  4180   00A672  0EFC               	movlw	252
  4181   00A674                     u11447:
  4182   00A674  2EE8               	decfsz	wreg,f,c
  4183   00A676  D7FE               	bra	u11447
  4184   00A678  2E1E               	decfsz	??_EEPROM_WriteByte^0,f,c
  4185   00A67A  D7FC               	bra	u11447
  4186   00A67C  0012               	return		;funcret
  4187   00A67E                     __end_of_EEPROM_WriteByte:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _ReadAndSendEEPROMData *****************
  4191 ;; Defined at:
  4192 ;;		line 239 in file "main.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  Ndat            4   79[BANK0 ] unsigned long 
  4195 ;;  startAddress    2   83[BANK0 ] unsigned short 
  4196 ;;  startAddress    2   85[BANK0 ] unsigned short 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  i               4  224[BANK1 ] unsigned long 
  4199 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  4200 ;;  eepromReadBu   24  200[BANK1 ] unsigned char [24]
  4201 ;;  gz_read         4  248[BANK1 ] float 
  4202 ;;  gy_read         4  244[BANK1 ] float 
  4203 ;;  gx_read         4  240[BANK1 ] float 
  4204 ;;  az_read         4  236[BANK1 ] float 
  4205 ;;  ay_read         4  232[BANK1 ] float 
  4206 ;;  ax_read         4  228[BANK1 ] float 
  4207 ;;  readBlockEEP    2  254[BANK1 ] unsigned short 
  4208 ;;  readBlockEEP    2  252[BANK1 ] unsigned short 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4218 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Locals:         0       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Totals:         2       8     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;Total ram usage:      266 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 14
  4225 ;; This function calls:
  4226 ;;		_EEPROM_ReadBlock
  4227 ;;		_UART_SendString
  4228 ;;		_memcpy
  4229 ;;		_sprintf
  4230 ;; This function is called by:
  4231 ;;		_StartLogging
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text15
  4236   00C89C                     __ptext15:
  4237                           	callstack 0
  4238   00C89C                     _ReadAndSendEEPROMData:
  4239                           	callstack 15
  4240   00C89C                     
  4241                           ;main.c: 241:     uint16_t readBlockEEPROM1 = startAddressEEPROM1;
  4242   00C89C  C0B3  F1FC         	movff	ReadAndSendEEPROMData@startAddressEEPROM1,ReadAndSendEEPROMData@readBlockEEPROM1
  4243   00C8A0  C0B4  F1FD         	movff	ReadAndSendEEPROMData@startAddressEEPROM1+1,ReadAndSendEEPROMData@readBlockEEPROM
      +                          1+1
  4244                           
  4245                           ;main.c: 242:     uint16_t readBlockEEPROM2 = startAddressEEPROM2;
  4246   00C8A4  C0B5  F1FE         	movff	ReadAndSendEEPROMData@startAddressEEPROM2,ReadAndSendEEPROMData@readBlockEEPROM2
  4247   00C8A8  C0B6  F1FF         	movff	ReadAndSendEEPROMData@startAddressEEPROM2+1,ReadAndSendEEPROMData@readBlockEEPROM
      +                          2+1
  4248   00C8AC                     
  4249                           ;main.c: 243:     uint8_t eepromReadBuffer[24];;main.c: 244:     float ax_read, ay_read,
      +                           az_read, gx_read, gy_read, gz_read;;main.c: 245:     char buffer[200];;main.c: 247:    
      +                           for (uint32_t i = 0; i < Ndat; i++) {
  4250   00C8AC  0E00               	movlw	0
  4251   00C8AE  0101               	movlb	1	; () banked
  4252   00C8B0  6FE0               	movwf	ReadAndSendEEPROMData@i& (0+255),b
  4253   00C8B2  0E00               	movlw	0
  4254   00C8B4  6FE1               	movwf	(ReadAndSendEEPROMData@i+1)& (0+255),b
  4255   00C8B6  0E00               	movlw	0
  4256   00C8B8  6FE2               	movwf	(ReadAndSendEEPROMData@i+2)& (0+255),b
  4257   00C8BA  0E00               	movlw	0
  4258   00C8BC  6FE3               	movwf	(ReadAndSendEEPROMData@i+3)& (0+255),b
  4259   00C8BE  EF2F  F065         	goto	l10682
  4260   00C8C2                     l10662:
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;main.c: 249:         EEPROM_ReadBlock(0x50, readBlockEEPROM1, eepromReadBuffer, 12);
  4264   00C8C2  C1FC  F021         	movff	ReadAndSendEEPROMData@readBlockEEPROM1,EEPROM_ReadBlock@memoryAddress
  4265   00C8C6  C1FD  F022         	movff	ReadAndSendEEPROMData@readBlockEEPROM1+1,EEPROM_ReadBlock@memoryAddress+1
  4266   00C8CA  0EC8               	movlw	low ReadAndSendEEPROMData@eepromReadBuffer
  4267   00C8CC  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  4268   00C8CE  0E01               	movlw	high ReadAndSendEEPROMData@eepromReadBuffer
  4269   00C8D0  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  4270   00C8D2  0E0C               	movlw	12
  4271   00C8D4  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  4272   00C8D6  0E50               	movlw	80
  4273   00C8D8  EC98  F054         	call	_EEPROM_ReadBlock
  4274   00C8DC                     
  4275                           ;main.c: 250:         memcpy(&ax_read, &eepromReadBuffer[0], sizeof(float));
  4276   00C8DC  0EE4               	movlw	low ReadAndSendEEPROMData@ax_read
  4277   00C8DE  6E01               	movwf	memcpy@d1^0,c
  4278   00C8E0  0E01               	movlw	high ReadAndSendEEPROMData@ax_read
  4279   00C8E2  6E02               	movwf	(memcpy@d1+1)^0,c
  4280   00C8E4  0EC8               	movlw	low ReadAndSendEEPROMData@eepromReadBuffer
  4281   00C8E6  6E03               	movwf	memcpy@s1^0,c
  4282   00C8E8  0E01               	movlw	high ReadAndSendEEPROMData@eepromReadBuffer
  4283   00C8EA  6E04               	movwf	(memcpy@s1+1)^0,c
  4284   00C8EC  0E00               	movlw	0
  4285   00C8EE  6E06               	movwf	(memcpy@n+1)^0,c
  4286   00C8F0  0E04               	movlw	4
  4287   00C8F2  6E05               	movwf	memcpy@n^0,c
  4288   00C8F4  EC1C  F056         	call	_memcpy	;wreg free
  4289   00C8F8                     
  4290                           ;main.c: 251:         memcpy(&ay_read, &eepromReadBuffer[4], sizeof(float));
  4291   00C8F8  0EE8               	movlw	low ReadAndSendEEPROMData@ay_read
  4292   00C8FA  6E01               	movwf	memcpy@d1^0,c
  4293   00C8FC  0E01               	movlw	high ReadAndSendEEPROMData@ay_read
  4294   00C8FE  6E02               	movwf	(memcpy@d1+1)^0,c
  4295   00C900  0ECC               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+4)
  4296   00C902  6E03               	movwf	memcpy@s1^0,c
  4297   00C904  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+4)
  4298   00C906  6E04               	movwf	(memcpy@s1+1)^0,c
  4299   00C908  0E00               	movlw	0
  4300   00C90A  6E06               	movwf	(memcpy@n+1)^0,c
  4301   00C90C  0E04               	movlw	4
  4302   00C90E  6E05               	movwf	memcpy@n^0,c
  4303   00C910  EC1C  F056         	call	_memcpy	;wreg free
  4304   00C914                     
  4305                           ;main.c: 252:         memcpy(&az_read, &eepromReadBuffer[8], sizeof(float));
  4306   00C914  0EEC               	movlw	low ReadAndSendEEPROMData@az_read
  4307   00C916  6E01               	movwf	memcpy@d1^0,c
  4308   00C918  0E01               	movlw	high ReadAndSendEEPROMData@az_read
  4309   00C91A  6E02               	movwf	(memcpy@d1+1)^0,c
  4310   00C91C  0ED0               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+8)
  4311   00C91E  6E03               	movwf	memcpy@s1^0,c
  4312   00C920  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+8)
  4313   00C922  6E04               	movwf	(memcpy@s1+1)^0,c
  4314   00C924  0E00               	movlw	0
  4315   00C926  6E06               	movwf	(memcpy@n+1)^0,c
  4316   00C928  0E04               	movlw	4
  4317   00C92A  6E05               	movwf	memcpy@n^0,c
  4318   00C92C  EC1C  F056         	call	_memcpy	;wreg free
  4319   00C930                     
  4320                           ;main.c: 255:         EEPROM_ReadBlock(0x51, readBlockEEPROM2, &eepromReadBuffer[12], 12
      +                          );
  4321   00C930  C1FE  F021         	movff	ReadAndSendEEPROMData@readBlockEEPROM2,EEPROM_ReadBlock@memoryAddress
  4322   00C934  C1FF  F022         	movff	ReadAndSendEEPROMData@readBlockEEPROM2+1,EEPROM_ReadBlock@memoryAddress+1
  4323   00C938  0ED4               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+12)
  4324   00C93A  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  4325   00C93C  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+12)
  4326   00C93E  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  4327   00C940  0E0C               	movlw	12
  4328   00C942  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  4329   00C944  0E51               	movlw	81
  4330   00C946  EC98  F054         	call	_EEPROM_ReadBlock
  4331                           
  4332                           ;main.c: 256:         memcpy(&gx_read, &eepromReadBuffer[12], sizeof(float));
  4333   00C94A  0EF0               	movlw	low ReadAndSendEEPROMData@gx_read
  4334   00C94C  6E01               	movwf	memcpy@d1^0,c
  4335   00C94E  0E01               	movlw	high ReadAndSendEEPROMData@gx_read
  4336   00C950  6E02               	movwf	(memcpy@d1+1)^0,c
  4337   00C952  0ED4               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+12)
  4338   00C954  6E03               	movwf	memcpy@s1^0,c
  4339   00C956  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+12)
  4340   00C958  6E04               	movwf	(memcpy@s1+1)^0,c
  4341   00C95A  0E00               	movlw	0
  4342   00C95C  6E06               	movwf	(memcpy@n+1)^0,c
  4343   00C95E  0E04               	movlw	4
  4344   00C960  6E05               	movwf	memcpy@n^0,c
  4345   00C962  EC1C  F056         	call	_memcpy	;wreg free
  4346                           
  4347                           ;main.c: 257:         memcpy(&gy_read, &eepromReadBuffer[16], sizeof(float));
  4348   00C966  0EF4               	movlw	low ReadAndSendEEPROMData@gy_read
  4349   00C968  6E01               	movwf	memcpy@d1^0,c
  4350   00C96A  0E01               	movlw	high ReadAndSendEEPROMData@gy_read
  4351   00C96C  6E02               	movwf	(memcpy@d1+1)^0,c
  4352   00C96E  0ED8               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+16)
  4353   00C970  6E03               	movwf	memcpy@s1^0,c
  4354   00C972  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+16)
  4355   00C974  6E04               	movwf	(memcpy@s1+1)^0,c
  4356   00C976  0E00               	movlw	0
  4357   00C978  6E06               	movwf	(memcpy@n+1)^0,c
  4358   00C97A  0E04               	movlw	4
  4359   00C97C  6E05               	movwf	memcpy@n^0,c
  4360   00C97E  EC1C  F056         	call	_memcpy	;wreg free
  4361                           
  4362                           ;main.c: 258:         memcpy(&gz_read, &eepromReadBuffer[20], sizeof(float));
  4363   00C982  0EF8               	movlw	low ReadAndSendEEPROMData@gz_read
  4364   00C984  6E01               	movwf	memcpy@d1^0,c
  4365   00C986  0E01               	movlw	high ReadAndSendEEPROMData@gz_read
  4366   00C988  6E02               	movwf	(memcpy@d1+1)^0,c
  4367   00C98A  0EDC               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+20)
  4368   00C98C  6E03               	movwf	memcpy@s1^0,c
  4369   00C98E  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+20)
  4370   00C990  6E04               	movwf	(memcpy@s1+1)^0,c
  4371   00C992  0E00               	movlw	0
  4372   00C994  6E06               	movwf	(memcpy@n+1)^0,c
  4373   00C996  0E04               	movlw	4
  4374   00C998  6E05               	movwf	memcpy@n^0,c
  4375   00C99A  EC1C  F056         	call	_memcpy	;wreg free
  4376   00C99E                     
  4377                           ;main.c: 261:         sprintf(buffer, "EEPROM - AX: %.2f, AY: %.2f, AZ: %.2f, GX: %.2f, 
      +                          GY: %.2f, GZ: %.2f\n", ax_read, ay_read, az_read, gx_read, gy_read, gz_read);
  4378   00C99E  0E00               	movlw	low ReadAndSendEEPROMData@buffer
  4379   00C9A0  0100               	movlb	0	; () banked
  4380   00C9A2  6F93               	movwf	sprintf@s& (0+255),b
  4381   00C9A4  0E01               	movlw	high ReadAndSendEEPROMData@buffer
  4382   00C9A6  6F94               	movwf	(sprintf@s+1)& (0+255),b
  4383   00C9A8  0E15               	movlw	low STR_5
  4384   00C9AA  6F95               	movwf	sprintf@fmt& (0+255),b
  4385   00C9AC  0EFE               	movlw	high STR_5
  4386   00C9AE  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  4387   00C9B0  C1E4  F097         	movff	ReadAndSendEEPROMData@ax_read,?_sprintf+4
  4388   00C9B4  C1E5  F098         	movff	ReadAndSendEEPROMData@ax_read+1,?_sprintf+5
  4389   00C9B8  C1E6  F099         	movff	ReadAndSendEEPROMData@ax_read+2,?_sprintf+6
  4390   00C9BC  C1E7  F09A         	movff	ReadAndSendEEPROMData@ax_read+3,?_sprintf+7
  4391   00C9C0  C1E8  F09B         	movff	ReadAndSendEEPROMData@ay_read,?_sprintf+8
  4392   00C9C4  C1E9  F09C         	movff	ReadAndSendEEPROMData@ay_read+1,?_sprintf+9
  4393   00C9C8  C1EA  F09D         	movff	ReadAndSendEEPROMData@ay_read+2,?_sprintf+10
  4394   00C9CC  C1EB  F09E         	movff	ReadAndSendEEPROMData@ay_read+3,?_sprintf+11
  4395   00C9D0  C1EC  F09F         	movff	ReadAndSendEEPROMData@az_read,?_sprintf+12
  4396   00C9D4  C1ED  F0A0         	movff	ReadAndSendEEPROMData@az_read+1,?_sprintf+13
  4397   00C9D8  C1EE  F0A1         	movff	ReadAndSendEEPROMData@az_read+2,?_sprintf+14
  4398   00C9DC  C1EF  F0A2         	movff	ReadAndSendEEPROMData@az_read+3,?_sprintf+15
  4399   00C9E0  C1F0  F0A3         	movff	ReadAndSendEEPROMData@gx_read,?_sprintf+16
  4400   00C9E4  C1F1  F0A4         	movff	ReadAndSendEEPROMData@gx_read+1,?_sprintf+17
  4401   00C9E8  C1F2  F0A5         	movff	ReadAndSendEEPROMData@gx_read+2,?_sprintf+18
  4402   00C9EC  C1F3  F0A6         	movff	ReadAndSendEEPROMData@gx_read+3,?_sprintf+19
  4403   00C9F0  C1F4  F0A7         	movff	ReadAndSendEEPROMData@gy_read,?_sprintf+20
  4404   00C9F4  C1F5  F0A8         	movff	ReadAndSendEEPROMData@gy_read+1,?_sprintf+21
  4405   00C9F8  C1F6  F0A9         	movff	ReadAndSendEEPROMData@gy_read+2,?_sprintf+22
  4406   00C9FC  C1F7  F0AA         	movff	ReadAndSendEEPROMData@gy_read+3,?_sprintf+23
  4407   00CA00  C1F8  F0AB         	movff	ReadAndSendEEPROMData@gz_read,?_sprintf+24
  4408   00CA04  C1F9  F0AC         	movff	ReadAndSendEEPROMData@gz_read+1,?_sprintf+25
  4409   00CA08  C1FA  F0AD         	movff	ReadAndSendEEPROMData@gz_read+2,?_sprintf+26
  4410   00CA0C  C1FB  F0AE         	movff	ReadAndSendEEPROMData@gz_read+3,?_sprintf+27
  4411   00CA10  EC76  F054         	call	_sprintf	;wreg free
  4412   00CA14                     
  4413                           ;main.c: 262:         UART_SendString(buffer);
  4414   00CA14  0E00               	movlw	low ReadAndSendEEPROMData@buffer
  4415   00CA16  6E02               	movwf	UART_SendString@str^0,c
  4416   00CA18  0E01               	movlw	high ReadAndSendEEPROMData@buffer
  4417   00CA1A  6E03               	movwf	(UART_SendString@str+1)^0,c
  4418   00CA1C  EC22  F058         	call	_UART_SendString	;wreg free
  4419   00CA20                     
  4420                           ;main.c: 265:         readBlockEEPROM1 = (readBlockEEPROM1 + 12) % 32768;
  4421   00CA20  0E0C               	movlw	12
  4422   00CA22  0101               	movlb	1	; () banked
  4423   00CA24  25FC               	addwf	ReadAndSendEEPROMData@readBlockEEPROM1& (0+255),w,b
  4424   00CA26  6E5C               	movwf	??_ReadAndSendEEPROMData^0,c
  4425   00CA28  0E00               	movlw	0
  4426   00CA2A  21FD               	addwfc	(ReadAndSendEEPROMData@readBlockEEPROM1+1)& (0+255),w,b
  4427   00CA2C  6E5D               	movwf	(??_ReadAndSendEEPROMData+1)^0,c
  4428   00CA2E  0EFF               	movlw	255
  4429   00CA30  145C               	andwf	??_ReadAndSendEEPROMData^0,w,c
  4430   00CA32  6FFC               	movwf	ReadAndSendEEPROMData@readBlockEEPROM1& (0+255),b
  4431   00CA34  0E7F               	movlw	127
  4432   00CA36  145D               	andwf	(??_ReadAndSendEEPROMData+1)^0,w,c
  4433   00CA38  6FFD               	movwf	(ReadAndSendEEPROMData@readBlockEEPROM1+1)& (0+255),b
  4434   00CA3A                     
  4435                           ; BSR set to: 1
  4436                           ;main.c: 266:         readBlockEEPROM2 = (readBlockEEPROM2 + 12) % 32768;
  4437   00CA3A  0E0C               	movlw	12
  4438   00CA3C  25FE               	addwf	ReadAndSendEEPROMData@readBlockEEPROM2& (0+255),w,b
  4439   00CA3E  6E5C               	movwf	??_ReadAndSendEEPROMData^0,c
  4440   00CA40  0E00               	movlw	0
  4441   00CA42  21FF               	addwfc	(ReadAndSendEEPROMData@readBlockEEPROM2+1)& (0+255),w,b
  4442   00CA44  6E5D               	movwf	(??_ReadAndSendEEPROMData+1)^0,c
  4443   00CA46  0EFF               	movlw	255
  4444   00CA48  145C               	andwf	??_ReadAndSendEEPROMData^0,w,c
  4445   00CA4A  6FFE               	movwf	ReadAndSendEEPROMData@readBlockEEPROM2& (0+255),b
  4446   00CA4C  0E7F               	movlw	127
  4447   00CA4E  145D               	andwf	(??_ReadAndSendEEPROMData+1)^0,w,c
  4448   00CA50  6FFF               	movwf	(ReadAndSendEEPROMData@readBlockEEPROM2+1)& (0+255),b
  4449   00CA52                     
  4450                           ; BSR set to: 1
  4451                           ;main.c: 267:     }
  4452   00CA52  0E01               	movlw	1
  4453   00CA54  27E0               	addwf	ReadAndSendEEPROMData@i& (0+255),f,b
  4454   00CA56  0E00               	movlw	0
  4455   00CA58  23E1               	addwfc	(ReadAndSendEEPROMData@i+1)& (0+255),f,b
  4456   00CA5A  23E2               	addwfc	(ReadAndSendEEPROMData@i+2)& (0+255),f,b
  4457   00CA5C  23E3               	addwfc	(ReadAndSendEEPROMData@i+3)& (0+255),f,b
  4458   00CA5E                     l10682:
  4459                           
  4460                           ; BSR set to: 1
  4461   00CA5E  0100               	movlb	0	; () banked
  4462   00CA60  51AF               	movf	ReadAndSendEEPROMData@Ndat& (0+255),w,b
  4463   00CA62  0101               	movlb	1	; () banked
  4464   00CA64  5DE0               	subwf	ReadAndSendEEPROMData@i& (0+255),w,b
  4465   00CA66  0100               	movlb	0	; () banked
  4466   00CA68  51B0               	movf	(ReadAndSendEEPROMData@Ndat+1)& (0+255),w,b
  4467   00CA6A  0101               	movlb	1	; () banked
  4468   00CA6C  59E1               	subwfb	(ReadAndSendEEPROMData@i+1)& (0+255),w,b
  4469   00CA6E  0100               	movlb	0	; () banked
  4470   00CA70  51B1               	movf	(ReadAndSendEEPROMData@Ndat+2)& (0+255),w,b
  4471   00CA72  0101               	movlb	1	; () banked
  4472   00CA74  59E2               	subwfb	(ReadAndSendEEPROMData@i+2)& (0+255),w,b
  4473   00CA76  0100               	movlb	0	; () banked
  4474   00CA78  51B2               	movf	(ReadAndSendEEPROMData@Ndat+3)& (0+255),w,b
  4475   00CA7A  0101               	movlb	1	; () banked
  4476   00CA7C  59E3               	subwfb	(ReadAndSendEEPROMData@i+3)& (0+255),w,b
  4477   00CA7E  A0D8               	btfss	status,0,c
  4478   00CA80  EF44  F065         	goto	u11091
  4479   00CA84  EF46  F065         	goto	u11090
  4480   00CA88                     u11091:
  4481   00CA88  EF61  F064         	goto	l10662
  4482   00CA8C                     u11090:
  4483   00CA8C                     
  4484                           ; BSR set to: 1
  4485   00CA8C  0012               	return		;funcret
  4486   00CA8E                     __end_of_ReadAndSendEEPROMData:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function _MPU6050_ReadSensorData *****************
  4490 ;; Defined at:
  4491 ;;		line 94 in file "main.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  ax              1   39[COMRAM] PTR float 
  4494 ;;		 -> ax(4), 
  4495 ;;  ay              1   40[COMRAM] PTR float 
  4496 ;;		 -> ay(4), 
  4497 ;;  az              1   41[COMRAM] PTR float 
  4498 ;;		 -> az(4), 
  4499 ;;  gx              1   42[COMRAM] PTR float 
  4500 ;;		 -> gx(4), 
  4501 ;;  gy              1   43[COMRAM] PTR float 
  4502 ;;		 -> gy(4), 
  4503 ;;  gz              1   44[COMRAM] PTR float 
  4504 ;;		 -> gz(4), 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  buffer         12   47[COMRAM] unsigned char [12]
  4507 ;;  gz_raw          2   69[COMRAM] short 
  4508 ;;  gy_raw          2   67[COMRAM] short 
  4509 ;;  gx_raw          2   65[COMRAM] short 
  4510 ;;  az_raw          2   63[COMRAM] short 
  4511 ;;  ay_raw          2   61[COMRAM] short 
  4512 ;;  ax_raw          2   59[COMRAM] short 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4522 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;Total ram usage:       32 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 12
  4529 ;; This function calls:
  4530 ;;		_I2C1_ReadDataBlock
  4531 ;;		___fldiv
  4532 ;;		___xxtofl
  4533 ;; This function is called by:
  4534 ;;		_StartLogging
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text16
  4539   00D0CA                     __ptext16:
  4540                           	callstack 0
  4541   00D0CA                     _MPU6050_ReadSensorData:
  4542                           	callstack 17
  4543   00D0CA                     
  4544                           ;main.c: 95:     uint8_t buffer[12];;main.c: 96:     I2C1_ReadDataBlock(0x68, 0x3B, buff
      +                          er, 12);
  4545   00D0CA  0E3B               	movlw	59
  4546   00D0CC  6E17               	movwf	I2C1_ReadDataBlock@reg^0,c
  4547   00D0CE  0E30               	movlw	low MPU6050_ReadSensorData@buffer
  4548   00D0D0  6E18               	movwf	I2C1_ReadDataBlock@data^0,c
  4549   00D0D2  0E00               	movlw	0
  4550   00D0D4  6E1A               	movwf	(I2C1_ReadDataBlock@len+1)^0,c
  4551   00D0D6  0E0C               	movlw	12
  4552   00D0D8  6E19               	movwf	I2C1_ReadDataBlock@len^0,c
  4553   00D0DA  0E68               	movlw	104
  4554   00D0DC  EC95  F058         	call	_I2C1_ReadDataBlock
  4555   00D0E0                     
  4556                           ;main.c: 98:     int16_t ax_raw = (buffer[0] << 8) | buffer[1];
  4557   00D0E0  5031               	movf	(MPU6050_ReadSensorData@buffer+1)^0,w,c
  4558   00D0E2  C030  F02E         	movff	MPU6050_ReadSensorData@buffer,??_MPU6050_ReadSensorData
  4559   00D0E6  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4560   00D0E8  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4561   00D0EC  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4562   00D0EE  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4563   00D0F0  6E3C               	movwf	MPU6050_ReadSensorData@ax_raw^0,c
  4564   00D0F2  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4565   00D0F4  6E3D               	movwf	(MPU6050_ReadSensorData@ax_raw+1)^0,c
  4566   00D0F6                     
  4567                           ;main.c: 99:     int16_t ay_raw = (buffer[2] << 8) | buffer[3];
  4568   00D0F6  5033               	movf	(MPU6050_ReadSensorData@buffer+3)^0,w,c
  4569   00D0F8  C032  F02E         	movff	MPU6050_ReadSensorData@buffer+2,??_MPU6050_ReadSensorData
  4570   00D0FC  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4571   00D0FE  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4572   00D102  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4573   00D104  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4574   00D106  6E3E               	movwf	MPU6050_ReadSensorData@ay_raw^0,c
  4575   00D108  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4576   00D10A  6E3F               	movwf	(MPU6050_ReadSensorData@ay_raw+1)^0,c
  4577   00D10C                     
  4578                           ;main.c: 100:     int16_t az_raw = (buffer[4] << 8) | buffer[5];
  4579   00D10C  5035               	movf	(MPU6050_ReadSensorData@buffer+5)^0,w,c
  4580   00D10E  C034  F02E         	movff	MPU6050_ReadSensorData@buffer+4,??_MPU6050_ReadSensorData
  4581   00D112  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4582   00D114  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4583   00D118  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4584   00D11A  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4585   00D11C  6E40               	movwf	MPU6050_ReadSensorData@az_raw^0,c
  4586   00D11E  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4587   00D120  6E41               	movwf	(MPU6050_ReadSensorData@az_raw+1)^0,c
  4588   00D122                     
  4589                           ;main.c: 101:     int16_t gx_raw = (buffer[6] << 8) | buffer[7];
  4590   00D122  5037               	movf	(MPU6050_ReadSensorData@buffer+7)^0,w,c
  4591   00D124  C036  F02E         	movff	MPU6050_ReadSensorData@buffer+6,??_MPU6050_ReadSensorData
  4592   00D128  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4593   00D12A  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4594   00D12E  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4595   00D130  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4596   00D132  6E42               	movwf	MPU6050_ReadSensorData@gx_raw^0,c
  4597   00D134  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4598   00D136  6E43               	movwf	(MPU6050_ReadSensorData@gx_raw+1)^0,c
  4599   00D138                     
  4600                           ;main.c: 102:     int16_t gy_raw = (buffer[8] << 8) | buffer[9];
  4601   00D138  5039               	movf	(MPU6050_ReadSensorData@buffer+9)^0,w,c
  4602   00D13A  C038  F02E         	movff	MPU6050_ReadSensorData@buffer+8,??_MPU6050_ReadSensorData
  4603   00D13E  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4604   00D140  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4605   00D144  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4606   00D146  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4607   00D148  6E44               	movwf	MPU6050_ReadSensorData@gy_raw^0,c
  4608   00D14A  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4609   00D14C  6E45               	movwf	(MPU6050_ReadSensorData@gy_raw+1)^0,c
  4610   00D14E                     
  4611                           ;main.c: 103:     int16_t gz_raw = (buffer[10] << 8) | buffer[11];
  4612   00D14E  503B               	movf	(MPU6050_ReadSensorData@buffer+11)^0,w,c
  4613   00D150  C03A  F02E         	movff	MPU6050_ReadSensorData@buffer+10,??_MPU6050_ReadSensorData
  4614   00D154  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4615   00D156  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4616   00D15A  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4617   00D15C  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4618   00D15E  6E46               	movwf	MPU6050_ReadSensorData@gz_raw^0,c
  4619   00D160  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4620   00D162  6E47               	movwf	(MPU6050_ReadSensorData@gz_raw+1)^0,c
  4621   00D164                     
  4622                           ;main.c: 105:     *ax = ax_raw / 16384.0f;
  4623   00D164  C03C  F001         	movff	MPU6050_ReadSensorData@ax_raw,___xxtofl@val
  4624   00D168  C03D  F002         	movff	MPU6050_ReadSensorData@ax_raw+1,___xxtofl@val+1
  4625   00D16C  0E00               	movlw	0
  4626   00D16E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4627   00D170  0EFF               	movlw	-1
  4628   00D172  6E03               	movwf	(___xxtofl@val+2)^0,c
  4629   00D174  6E04               	movwf	(___xxtofl@val+3)^0,c
  4630   00D176  0E01               	movlw	1
  4631   00D178  EC7B  F062         	call	___xxtofl
  4632   00D17C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4633   00D180  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4634   00D184  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4635   00D188  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4636   00D18C  0E00               	movlw	0
  4637   00D18E  6E13               	movwf	___fldiv@a^0,c
  4638   00D190  0E00               	movlw	0
  4639   00D192  6E14               	movwf	(___fldiv@a+1)^0,c
  4640   00D194  0E80               	movlw	128
  4641   00D196  6E15               	movwf	(___fldiv@a+2)^0,c
  4642   00D198  0E46               	movlw	70
  4643   00D19A  6E16               	movwf	(___fldiv@a+3)^0,c
  4644   00D19C  ECCF  F06C         	call	___fldiv	;wreg free
  4645   00D1A0  5028               	movf	MPU6050_ReadSensorData@ax^0,w,c
  4646   00D1A2  6ED9               	movwf	fsr2l,c
  4647   00D1A4  6ADA               	clrf	fsr2h,c
  4648   00D1A6  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4649   00D1AC  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4650   00D1B2  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4651   00D1B8  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4652   00D1BE                     
  4653                           ;main.c: 106:     *ay = ay_raw / 16384.0f;
  4654   00D1BE  C03E  F001         	movff	MPU6050_ReadSensorData@ay_raw,___xxtofl@val
  4655   00D1C2  C03F  F002         	movff	MPU6050_ReadSensorData@ay_raw+1,___xxtofl@val+1
  4656   00D1C6  0E00               	movlw	0
  4657   00D1C8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4658   00D1CA  0EFF               	movlw	-1
  4659   00D1CC  6E03               	movwf	(___xxtofl@val+2)^0,c
  4660   00D1CE  6E04               	movwf	(___xxtofl@val+3)^0,c
  4661   00D1D0  0E01               	movlw	1
  4662   00D1D2  EC7B  F062         	call	___xxtofl
  4663   00D1D6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4664   00D1DA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4665   00D1DE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4666   00D1E2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4667   00D1E6  0E00               	movlw	0
  4668   00D1E8  6E13               	movwf	___fldiv@a^0,c
  4669   00D1EA  0E00               	movlw	0
  4670   00D1EC  6E14               	movwf	(___fldiv@a+1)^0,c
  4671   00D1EE  0E80               	movlw	128
  4672   00D1F0  6E15               	movwf	(___fldiv@a+2)^0,c
  4673   00D1F2  0E46               	movlw	70
  4674   00D1F4  6E16               	movwf	(___fldiv@a+3)^0,c
  4675   00D1F6  ECCF  F06C         	call	___fldiv	;wreg free
  4676   00D1FA  5029               	movf	MPU6050_ReadSensorData@ay^0,w,c
  4677   00D1FC  6ED9               	movwf	fsr2l,c
  4678   00D1FE  6ADA               	clrf	fsr2h,c
  4679   00D200  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4680   00D206  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4681   00D20C  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4682   00D212  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4683   00D218                     
  4684                           ;main.c: 107:     *az = az_raw / 16384.0f;
  4685   00D218  C040  F001         	movff	MPU6050_ReadSensorData@az_raw,___xxtofl@val
  4686   00D21C  C041  F002         	movff	MPU6050_ReadSensorData@az_raw+1,___xxtofl@val+1
  4687   00D220  0E00               	movlw	0
  4688   00D222  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4689   00D224  0EFF               	movlw	-1
  4690   00D226  6E03               	movwf	(___xxtofl@val+2)^0,c
  4691   00D228  6E04               	movwf	(___xxtofl@val+3)^0,c
  4692   00D22A  0E01               	movlw	1
  4693   00D22C  EC7B  F062         	call	___xxtofl
  4694   00D230  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4695   00D234  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4696   00D238  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4697   00D23C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4698   00D240  0E00               	movlw	0
  4699   00D242  6E13               	movwf	___fldiv@a^0,c
  4700   00D244  0E00               	movlw	0
  4701   00D246  6E14               	movwf	(___fldiv@a+1)^0,c
  4702   00D248  0E80               	movlw	128
  4703   00D24A  6E15               	movwf	(___fldiv@a+2)^0,c
  4704   00D24C  0E46               	movlw	70
  4705   00D24E  6E16               	movwf	(___fldiv@a+3)^0,c
  4706   00D250  ECCF  F06C         	call	___fldiv	;wreg free
  4707   00D254  502A               	movf	MPU6050_ReadSensorData@az^0,w,c
  4708   00D256  6ED9               	movwf	fsr2l,c
  4709   00D258  6ADA               	clrf	fsr2h,c
  4710   00D25A  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4711   00D260  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4712   00D266  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4713   00D26C  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4714   00D272                     
  4715                           ;main.c: 108:     *gx = gx_raw / 131.0f;
  4716   00D272  C042  F001         	movff	MPU6050_ReadSensorData@gx_raw,___xxtofl@val
  4717   00D276  C043  F002         	movff	MPU6050_ReadSensorData@gx_raw+1,___xxtofl@val+1
  4718   00D27A  0E00               	movlw	0
  4719   00D27C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4720   00D27E  0EFF               	movlw	-1
  4721   00D280  6E03               	movwf	(___xxtofl@val+2)^0,c
  4722   00D282  6E04               	movwf	(___xxtofl@val+3)^0,c
  4723   00D284  0E01               	movlw	1
  4724   00D286  EC7B  F062         	call	___xxtofl
  4725   00D28A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4726   00D28E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4727   00D292  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4728   00D296  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4729   00D29A  0E00               	movlw	0
  4730   00D29C  6E13               	movwf	___fldiv@a^0,c
  4731   00D29E  0E00               	movlw	0
  4732   00D2A0  6E14               	movwf	(___fldiv@a+1)^0,c
  4733   00D2A2  0E03               	movlw	3
  4734   00D2A4  6E15               	movwf	(___fldiv@a+2)^0,c
  4735   00D2A6  0E43               	movlw	67
  4736   00D2A8  6E16               	movwf	(___fldiv@a+3)^0,c
  4737   00D2AA  ECCF  F06C         	call	___fldiv	;wreg free
  4738   00D2AE  502B               	movf	MPU6050_ReadSensorData@gx^0,w,c
  4739   00D2B0  6ED9               	movwf	fsr2l,c
  4740   00D2B2  6ADA               	clrf	fsr2h,c
  4741   00D2B4  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4742   00D2BA  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4743   00D2C0  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4744   00D2C6  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4745   00D2CC                     
  4746                           ;main.c: 109:     *gy = gy_raw / 131.0f;
  4747   00D2CC  C044  F001         	movff	MPU6050_ReadSensorData@gy_raw,___xxtofl@val
  4748   00D2D0  C045  F002         	movff	MPU6050_ReadSensorData@gy_raw+1,___xxtofl@val+1
  4749   00D2D4  0E00               	movlw	0
  4750   00D2D6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4751   00D2D8  0EFF               	movlw	-1
  4752   00D2DA  6E03               	movwf	(___xxtofl@val+2)^0,c
  4753   00D2DC  6E04               	movwf	(___xxtofl@val+3)^0,c
  4754   00D2DE  0E01               	movlw	1
  4755   00D2E0  EC7B  F062         	call	___xxtofl
  4756   00D2E4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4757   00D2E8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4758   00D2EC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4759   00D2F0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4760   00D2F4  0E00               	movlw	0
  4761   00D2F6  6E13               	movwf	___fldiv@a^0,c
  4762   00D2F8  0E00               	movlw	0
  4763   00D2FA  6E14               	movwf	(___fldiv@a+1)^0,c
  4764   00D2FC  0E03               	movlw	3
  4765   00D2FE  6E15               	movwf	(___fldiv@a+2)^0,c
  4766   00D300  0E43               	movlw	67
  4767   00D302  6E16               	movwf	(___fldiv@a+3)^0,c
  4768   00D304  ECCF  F06C         	call	___fldiv	;wreg free
  4769   00D308  502C               	movf	MPU6050_ReadSensorData@gy^0,w,c
  4770   00D30A  6ED9               	movwf	fsr2l,c
  4771   00D30C  6ADA               	clrf	fsr2h,c
  4772   00D30E  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4773   00D314  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4774   00D31A  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4775   00D320  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4776   00D326                     
  4777                           ;main.c: 110:     *gz = gz_raw / 131.0f;
  4778   00D326  C046  F001         	movff	MPU6050_ReadSensorData@gz_raw,___xxtofl@val
  4779   00D32A  C047  F002         	movff	MPU6050_ReadSensorData@gz_raw+1,___xxtofl@val+1
  4780   00D32E  0E00               	movlw	0
  4781   00D330  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4782   00D332  0EFF               	movlw	-1
  4783   00D334  6E03               	movwf	(___xxtofl@val+2)^0,c
  4784   00D336  6E04               	movwf	(___xxtofl@val+3)^0,c
  4785   00D338  0E01               	movlw	1
  4786   00D33A  EC7B  F062         	call	___xxtofl
  4787   00D33E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4788   00D342  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4789   00D346  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4790   00D34A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4791   00D34E  0E00               	movlw	0
  4792   00D350  6E13               	movwf	___fldiv@a^0,c
  4793   00D352  0E00               	movlw	0
  4794   00D354  6E14               	movwf	(___fldiv@a+1)^0,c
  4795   00D356  0E03               	movlw	3
  4796   00D358  6E15               	movwf	(___fldiv@a+2)^0,c
  4797   00D35A  0E43               	movlw	67
  4798   00D35C  6E16               	movwf	(___fldiv@a+3)^0,c
  4799   00D35E  ECCF  F06C         	call	___fldiv	;wreg free
  4800   00D362  502D               	movf	MPU6050_ReadSensorData@gz^0,w,c
  4801   00D364  6ED9               	movwf	fsr2l,c
  4802   00D366  6ADA               	clrf	fsr2h,c
  4803   00D368  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4804   00D36E  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4805   00D374  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4806   00D37A  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4807   00D380  0012               	return		;funcret
  4808   00D382                     __end_of_MPU6050_ReadSensorData:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function ___xxtofl *****************
  4812 ;; Defined at:
  4813 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  sign            1    wreg     unsigned char 
  4816 ;;  val             4    0[COMRAM] long 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  sign            1    8[COMRAM] unsigned char 
  4819 ;;  arg             4   10[COMRAM] unsigned long 
  4820 ;;  exp             1    9[COMRAM] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  4    0[COMRAM] unsigned char 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;Total ram usage:       14 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_MPU6050_ReadSensorData
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text17
  4844   00C4F6                     __ptext17:
  4845                           	callstack 0
  4846   00C4F6                     ___xxtofl:
  4847                           	callstack 28
  4848                           
  4849                           ;incstack = 0
  4850                           ;___xxtofl@sign stored from wreg
  4851   00C4F6  6E09               	movwf	___xxtofl@sign^0,c
  4852   00C4F8  5009               	movf	___xxtofl@sign^0,w,c
  4853   00C4FA  B4D8               	btfsc	status,2,c
  4854   00C4FC  EF82  F062         	goto	u10851
  4855   00C500  EF84  F062         	goto	u10850
  4856   00C504                     u10851:
  4857   00C504  EFA6  F062         	goto	l1635
  4858   00C508                     u10850:
  4859   00C508  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4860   00C50A  EF8B  F062         	goto	u10860
  4861   00C50E  EF89  F062         	goto	u10861
  4862   00C512                     u10861:
  4863   00C512  EFA6  F062         	goto	l1635
  4864   00C516                     u10860:
  4865   00C516  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4866   00C51A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4867   00C51E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4868   00C522  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4869   00C526  1E05               	comf	??___xxtofl^0,f,c
  4870   00C528  1E06               	comf	(??___xxtofl+1)^0,f,c
  4871   00C52A  1E07               	comf	(??___xxtofl+2)^0,f,c
  4872   00C52C  1E08               	comf	(??___xxtofl+3)^0,f,c
  4873   00C52E  2A05               	incf	??___xxtofl^0,f,c
  4874   00C530  0E00               	movlw	0
  4875   00C532  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4876   00C534  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4877   00C536  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4878   00C538  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4879   00C53C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4880   00C540  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4881   00C544  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4882   00C548  EFAE  F062         	goto	l10480
  4883   00C54C                     l1635:
  4884   00C54C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4885   00C550  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4886   00C554  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4887   00C558  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4888   00C55C                     l10480:
  4889   00C55C  5001               	movf	___xxtofl@val^0,w,c
  4890   00C55E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4891   00C560  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4892   00C562  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4893   00C564  A4D8               	btfss	status,2,c
  4894   00C566  EFB7  F062         	goto	u10871
  4895   00C56A  EFB9  F062         	goto	u10870
  4896   00C56E                     u10871:
  4897   00C56E  EFC3  F062         	goto	l10486
  4898   00C572                     u10870:
  4899   00C572  0E00               	movlw	0
  4900   00C574  6E01               	movwf	?___xxtofl^0,c
  4901   00C576  0E00               	movlw	0
  4902   00C578  6E02               	movwf	(?___xxtofl+1)^0,c
  4903   00C57A  0E00               	movlw	0
  4904   00C57C  6E03               	movwf	(?___xxtofl+2)^0,c
  4905   00C57E  0E00               	movlw	0
  4906   00C580  6E04               	movwf	(?___xxtofl+3)^0,c
  4907   00C582  EF54  F063         	goto	l1638
  4908   00C586                     l10486:
  4909   00C586  0E96               	movlw	150
  4910   00C588  6E0A               	movwf	___xxtofl@exp^0,c
  4911   00C58A  EFCD  F062         	goto	l10490
  4912   00C58E                     l10488:
  4913   00C58E  2A0A               	incf	___xxtofl@exp^0,f,c
  4914   00C590  90D8               	bcf	status,0,c
  4915   00C592  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4916   00C594  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4917   00C596  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4918   00C598  320B               	rrcf	___xxtofl@arg^0,f,c
  4919   00C59A                     l10490:
  4920   00C59A  0E00               	movlw	0
  4921   00C59C  140B               	andwf	___xxtofl@arg^0,w,c
  4922   00C59E  6E05               	movwf	??___xxtofl^0,c
  4923   00C5A0  0E00               	movlw	0
  4924   00C5A2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4925   00C5A4  6E06               	movwf	(??___xxtofl+1)^0,c
  4926   00C5A6  0E00               	movlw	0
  4927   00C5A8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4928   00C5AA  6E07               	movwf	(??___xxtofl+2)^0,c
  4929   00C5AC  0EFE               	movlw	254
  4930   00C5AE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4931   00C5B0  6E08               	movwf	(??___xxtofl+3)^0,c
  4932   00C5B2  5005               	movf	??___xxtofl^0,w,c
  4933   00C5B4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4934   00C5B6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4935   00C5B8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4936   00C5BA  A4D8               	btfss	status,2,c
  4937   00C5BC  EFE2  F062         	goto	u10881
  4938   00C5C0  EFE4  F062         	goto	u10880
  4939   00C5C4                     u10881:
  4940   00C5C4  EFC7  F062         	goto	l10488
  4941   00C5C8                     u10880:
  4942   00C5C8  EFF2  F062         	goto	l1642
  4943   00C5CC                     l10492:
  4944   00C5CC  2A0A               	incf	___xxtofl@exp^0,f,c
  4945   00C5CE  0E01               	movlw	1
  4946   00C5D0  260B               	addwf	___xxtofl@arg^0,f,c
  4947   00C5D2  0E00               	movlw	0
  4948   00C5D4  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4949   00C5D6  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4950   00C5D8  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4951   00C5DA  90D8               	bcf	status,0,c
  4952   00C5DC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4953   00C5DE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4954   00C5E0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4955   00C5E2  320B               	rrcf	___xxtofl@arg^0,f,c
  4956   00C5E4                     l1642:
  4957   00C5E4  0E00               	movlw	0
  4958   00C5E6  140B               	andwf	___xxtofl@arg^0,w,c
  4959   00C5E8  6E05               	movwf	??___xxtofl^0,c
  4960   00C5EA  0E00               	movlw	0
  4961   00C5EC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4962   00C5EE  6E06               	movwf	(??___xxtofl+1)^0,c
  4963   00C5F0  0E00               	movlw	0
  4964   00C5F2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4965   00C5F4  6E07               	movwf	(??___xxtofl+2)^0,c
  4966   00C5F6  0EFF               	movlw	255
  4967   00C5F8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4968   00C5FA  6E08               	movwf	(??___xxtofl+3)^0,c
  4969   00C5FC  5005               	movf	??___xxtofl^0,w,c
  4970   00C5FE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4971   00C600  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4972   00C602  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4973   00C604  A4D8               	btfss	status,2,c
  4974   00C606  EF07  F063         	goto	u10891
  4975   00C60A  EF09  F063         	goto	u10890
  4976   00C60E                     u10891:
  4977   00C60E  EFE6  F062         	goto	l10492
  4978   00C612                     u10890:
  4979   00C612  EF11  F063         	goto	l10500
  4980   00C616                     l10498:
  4981   00C616  060A               	decf	___xxtofl@exp^0,f,c
  4982   00C618  90D8               	bcf	status,0,c
  4983   00C61A  360B               	rlcf	___xxtofl@arg^0,f,c
  4984   00C61C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4985   00C61E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4986   00C620  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4987   00C622                     l10500:
  4988   00C622  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4989   00C624  EF16  F063         	goto	u10901
  4990   00C628  EF18  F063         	goto	u10900
  4991   00C62C                     u10901:
  4992   00C62C  EF20  F063         	goto	l1649
  4993   00C630                     u10900:
  4994   00C630  0E02               	movlw	2
  4995   00C632  600A               	cpfslt	___xxtofl@exp^0,c
  4996   00C634  EF1E  F063         	goto	u10911
  4997   00C638  EF20  F063         	goto	u10910
  4998   00C63C                     u10911:
  4999   00C63C  EF0B  F063         	goto	l10498
  5000   00C640                     u10910:
  5001   00C640                     l1649:
  5002   00C640  B00A               	btfsc	___xxtofl@exp^0,0,c
  5003   00C642  EF25  F063         	goto	u10921
  5004   00C646  EF27  F063         	goto	u10920
  5005   00C64A                     u10921:
  5006   00C64A  EF28  F063         	goto	l10506
  5007   00C64E                     u10920:
  5008   00C64E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5009   00C650                     l10506:
  5010   00C650  90D8               	bcf	status,0,c
  5011   00C652  320A               	rrcf	___xxtofl@exp^0,f,c
  5012   00C654  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5013   00C658  6A06               	clrf	(??___xxtofl+1)^0,c
  5014   00C65A  6A07               	clrf	(??___xxtofl+2)^0,c
  5015   00C65C  6A08               	clrf	(??___xxtofl+3)^0,c
  5016   00C65E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5017   00C662  6A07               	clrf	(??___xxtofl+2)^0,c
  5018   00C664  6A06               	clrf	(??___xxtofl+1)^0,c
  5019   00C666  6A05               	clrf	??___xxtofl^0,c
  5020   00C668  5005               	movf	??___xxtofl^0,w,c
  5021   00C66A  120B               	iorwf	___xxtofl@arg^0,f,c
  5022   00C66C  5006               	movf	(??___xxtofl+1)^0,w,c
  5023   00C66E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5024   00C670  5007               	movf	(??___xxtofl+2)^0,w,c
  5025   00C672  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5026   00C674  5008               	movf	(??___xxtofl+3)^0,w,c
  5027   00C676  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5028   00C678  5009               	movf	___xxtofl@sign^0,w,c
  5029   00C67A  B4D8               	btfsc	status,2,c
  5030   00C67C  EF42  F063         	goto	u10931
  5031   00C680  EF44  F063         	goto	u10930
  5032   00C684                     u10931:
  5033   00C684  EF4C  F063         	goto	l10516
  5034   00C688                     u10930:
  5035   00C688  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5036   00C68A  EF4B  F063         	goto	u10940
  5037   00C68E  EF49  F063         	goto	u10941
  5038   00C692                     u10941:
  5039   00C692  EF4C  F063         	goto	l10516
  5040   00C696                     u10940:
  5041   00C696  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5042   00C698                     l10516:
  5043   00C698  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5044   00C69C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5045   00C6A0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5046   00C6A4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5047   00C6A8                     l1638:
  5048   00C6A8  0012               	return		;funcret
  5049   00C6AA                     __end_of___xxtofl:
  5050                           	callstack 0
  5051                           
  5052 ;; *************** function _I2C1_ReadDataBlock *****************
  5053 ;; Defined at:
  5054 ;;		line 128 in file "mcc_generated_files/examples/i2c1_master_example.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  address         1    wreg     unsigned char 
  5057 ;;  reg             1   22[COMRAM] unsigned char 
  5058 ;;  data            1   23[COMRAM] PTR unsigned char 
  5059 ;;		 -> MPU6050_ReadSensorData@buffer(12), 
  5060 ;;  len             2   24[COMRAM] unsigned int 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  address         1   26[COMRAM] unsigned char 
  5063 ;;  bufferBlock     3   27[COMRAM] struct .
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;Total ram usage:        8 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 11
  5080 ;; This function calls:
  5081 ;;		_I2C1_Close
  5082 ;;		_I2C1_MasterWrite
  5083 ;;		_I2C1_Open
  5084 ;;		_I2C1_SetAddressNackCallback
  5085 ;;		_I2C1_SetBuffer
  5086 ;;		_I2C1_SetDataCompleteCallback
  5087 ;; This function is called by:
  5088 ;;		_MPU6050_ReadSensorData
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text18
  5093   00B12A                     __ptext18:
  5094                           	callstack 0
  5095   00B12A                     _I2C1_ReadDataBlock:
  5096                           	callstack 17
  5097                           
  5098                           ;incstack = 0
  5099                           ;I2C1_ReadDataBlock@address stored from wreg
  5100   00B12A  6E1B               	movwf	I2C1_ReadDataBlock@address^0,c
  5101   00B12C                     
  5102                           ;mcc_generated_files/examples/i2c1_master_example.c: 128: void I2C1_ReadDataBlock(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t *data, size_t len);mcc_generated_files/examples/i
      +                          2c1_master_example.c: 129: {;mcc_generated_files/examples/i2c1_master_example.c: 130:   
      +                            i2c1_buffer_t bufferBlock;;mcc_generated_files/examples/i2c1_master_example.c: 131:   
      +                            bufferBlock.data = data;
  5103   00B12C  C018  F01E         	movff	I2C1_ReadDataBlock@data,I2C1_ReadDataBlock@bufferBlock+2
  5104                           
  5105                           ;mcc_generated_files/examples/i2c1_master_example.c: 132:     bufferBlock.len = len;
  5106   00B130  C019  F01C         	movff	I2C1_ReadDataBlock@len,I2C1_ReadDataBlock@bufferBlock
  5107   00B134  C01A  F01D         	movff	I2C1_ReadDataBlock@len+1,I2C1_ReadDataBlock@bufferBlock+1
  5108   00B138                     l10420:
  5109   00B138  501B               	movf	I2C1_ReadDataBlock@address^0,w,c
  5110   00B13A  ECCE  F059         	call	_I2C1_Open
  5111   00B13E  0900               	iorlw	0
  5112   00B140  B4D8               	btfsc	status,2,c
  5113   00B142  EFA5  F058         	goto	u10781
  5114   00B146  EFA7  F058         	goto	u10780
  5115   00B14A                     u10781:
  5116   00B14A  EF9C  F058         	goto	l10420
  5117   00B14E                     u10780:
  5118   00B14E                     
  5119                           ;mcc_generated_files/examples/i2c1_master_example.c: 135:     I2C1_SetDataCompleteCallba
      +                          ck(rdBlkRegCompleteHandler,&bufferBlock);
  5120   00B14E  0EBC               	movlw	low _rdBlkRegCompleteHandler
  5121   00B150  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
  5122   00B152  0EA9               	movlw	high _rdBlkRegCompleteHandler
  5123   00B154  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
  5124   00B156  0E1C               	movlw	low I2C1_ReadDataBlock@bufferBlock
  5125   00B158  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
  5126   00B15A  6A09               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
  5127   00B15C  ECB6  F051         	call	_I2C1_SetDataCompleteCallback	;wreg free
  5128   00B160                     
  5129                           ;mcc_generated_files/examples/i2c1_master_example.c: 136:     I2C1_SetBuffer(&reg,1);
  5130   00B160  0E17               	movlw	low I2C1_ReadDataBlock@reg
  5131   00B162  6E01               	movwf	I2C1_SetBuffer@buffer^0,c
  5132   00B164  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
  5133   00B166  0E00               	movlw	0
  5134   00B168  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
  5135   00B16A  0E01               	movlw	1
  5136   00B16C  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
  5137   00B16E  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
  5138   00B172                     
  5139                           ;mcc_generated_files/examples/i2c1_master_example.c: 137:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
  5140   00B172  0E00               	movlw	0
  5141   00B174  6E06               	movwf	I2C1_SetAddressNackCallback@cb^0,c
  5142   00B176  0E00               	movlw	0
  5143   00B178  6E07               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
  5144   00B17A  0E00               	movlw	0
  5145   00B17C  6E08               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
  5146   00B17E  0E00               	movlw	0
  5147   00B180  6E09               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
  5148   00B182  ECC2  F051         	call	_I2C1_SetAddressNackCallback	;wreg free
  5149   00B186                     
  5150                           ;mcc_generated_files/examples/i2c1_master_example.c: 138:     I2C1_MasterWrite();
  5151   00B186  EC05  F051         	call	_I2C1_MasterWrite	;wreg free
  5152   00B18A                     l10430:
  5153   00B18A  EC75  F052         	call	_I2C1_Close	;wreg free
  5154   00B18E  06E8               	decf	wreg,f,c
  5155   00B190  B4D8               	btfsc	status,2,c
  5156   00B192  EFCD  F058         	goto	u10791
  5157   00B196  EFCF  F058         	goto	u10790
  5158   00B19A                     u10791:
  5159   00B19A  EFC5  F058         	goto	l10430
  5160   00B19E                     u10790:
  5161   00B19E  0012               	return		;funcret
  5162   00B1A0                     __end_of_I2C1_ReadDataBlock:
  5163                           	callstack 0
  5164                           
  5165 ;; *************** function _SYSTEM_Initialize *****************
  5166 ;; Defined at:
  5167 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;		None
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;		None
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      void 
  5174 ;; Registers used:
  5175 ;;		wreg, status,2, status,0, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;Total ram usage:        0 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; Hardware stack levels required when called: 2
  5188 ;; This function calls:
  5189 ;;		_I2C1_Initialize
  5190 ;;		_OSCILLATOR_Initialize
  5191 ;;		_PIN_MANAGER_Initialize
  5192 ;;		_PMD_Initialize
  5193 ;;		_UART1_Initialize
  5194 ;; This function is called by:
  5195 ;;		_main
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text19
  5200   00A356                     __ptext19:
  5201                           	callstack 0
  5202   00A356                     _SYSTEM_Initialize:
  5203                           	callstack 28
  5204   00A356                     
  5205                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  5206   00A356  EC28  F052         	call	_PMD_Initialize	;wreg free
  5207                           
  5208                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  5209   00A35A  EC05  F052         	call	_I2C1_Initialize	;wreg free
  5210                           
  5211                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5212   00A35E  EC4F  F05C         	call	_PIN_MANAGER_Initialize	;wreg free
  5213                           
  5214                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5215   00A362  ECCE  F051         	call	_OSCILLATOR_Initialize	;wreg free
  5216   00A366                     
  5217                           ;mcc_generated_files/mcc.c: 56:     UART1_Initialize();
  5218   00A366  EC48  F057         	call	_UART1_Initialize	;wreg free
  5219   00A36A  0012               	return		;funcret
  5220   00A36C                     __end_of_SYSTEM_Initialize:
  5221                           	callstack 0
  5222                           
  5223 ;; *************** function _UART1_Initialize *****************
  5224 ;; Defined at:
  5225 ;;		line 66 in file "mcc_generated_files/uart1.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used: 1
  5245 ;; Hardware stack levels required when called: 1
  5246 ;; This function calls:
  5247 ;;		_UART1_SetErrorHandler
  5248 ;;		_UART1_SetFramingErrorHandler
  5249 ;;		_UART1_SetOverrunErrorHandler
  5250 ;; This function is called by:
  5251 ;;		_SYSTEM_Initialize
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text20
  5256   00AE90                     __ptext20:
  5257                           	callstack 0
  5258   00AE90                     _UART1_Initialize:
  5259                           	callstack 28
  5260   00AE90                     
  5261                           ;mcc_generated_files/uart1.c: 73:     U1P1L = 0x00;
  5262   00AE90  0E00               	movlw	0
  5263   00AE92  013D               	movlb	61	; () banked
  5264   00AE94  6FEC               	movwf	236,b	;volatile
  5265                           
  5266                           ;mcc_generated_files/uart1.c: 76:     U1P1H = 0x00;
  5267   00AE96  0E00               	movlw	0
  5268   00AE98  6FED               	movwf	237,b	;volatile
  5269                           
  5270                           ;mcc_generated_files/uart1.c: 79:     U1P2L = 0x00;
  5271   00AE9A  0E00               	movlw	0
  5272   00AE9C  6FEE               	movwf	238,b	;volatile
  5273                           
  5274                           ;mcc_generated_files/uart1.c: 82:     U1P2H = 0x00;
  5275   00AE9E  0E00               	movlw	0
  5276   00AEA0  6FEF               	movwf	239,b	;volatile
  5277                           
  5278                           ;mcc_generated_files/uart1.c: 85:     U1P3L = 0x00;
  5279   00AEA2  0E00               	movlw	0
  5280   00AEA4  6FF0               	movwf	240,b	;volatile
  5281                           
  5282                           ;mcc_generated_files/uart1.c: 88:     U1P3H = 0x00;
  5283   00AEA6  0E00               	movlw	0
  5284   00AEA8  6FF1               	movwf	241,b	;volatile
  5285                           
  5286                           ;mcc_generated_files/uart1.c: 91:     U1CON0 = 0xB0;
  5287   00AEAA  0EB0               	movlw	176
  5288   00AEAC  6FF2               	movwf	242,b	;volatile
  5289                           
  5290                           ;mcc_generated_files/uart1.c: 94:     U1CON1 = 0x80;
  5291   00AEAE  0E80               	movlw	128
  5292   00AEB0  6FF3               	movwf	243,b	;volatile
  5293                           
  5294                           ;mcc_generated_files/uart1.c: 97:     U1CON2 = 0x00;
  5295   00AEB2  0E00               	movlw	0
  5296   00AEB4  6FF4               	movwf	244,b	;volatile
  5297                           
  5298                           ;mcc_generated_files/uart1.c: 100:     U1BRGL = 0xCF;
  5299   00AEB6  0ECF               	movlw	207
  5300   00AEB8  6FF5               	movwf	245,b	;volatile
  5301                           
  5302                           ;mcc_generated_files/uart1.c: 103:     U1BRGH = 0x00;
  5303   00AEBA  0E00               	movlw	0
  5304   00AEBC  6FF6               	movwf	246,b	;volatile
  5305                           
  5306                           ;mcc_generated_files/uart1.c: 106:     U1FIFO = 0x00;
  5307   00AEBE  0E00               	movlw	0
  5308   00AEC0  6FF7               	movwf	247,b	;volatile
  5309                           
  5310                           ;mcc_generated_files/uart1.c: 109:     U1UIR = 0x00;
  5311   00AEC2  0E00               	movlw	0
  5312   00AEC4  6FF8               	movwf	248,b	;volatile
  5313                           
  5314                           ;mcc_generated_files/uart1.c: 112:     U1ERRIR = 0x00;
  5315   00AEC6  0E00               	movlw	0
  5316   00AEC8  6FF9               	movwf	249,b	;volatile
  5317                           
  5318                           ;mcc_generated_files/uart1.c: 115:     U1ERRIE = 0x00;
  5319   00AECA  0E00               	movlw	0
  5320   00AECC  6FFA               	movwf	250,b	;volatile
  5321   00AECE                     
  5322                           ; BSR set to: 61
  5323                           ;mcc_generated_files/uart1.c: 118:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  5324   00AECE  0E8C               	movlw	low _UART1_DefaultFramingErrorHandler
  5325   00AED0  6E01               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  5326   00AED2  0EA1               	movlw	high _UART1_DefaultFramingErrorHandler
  5327   00AED4  6E02               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5328   00AED6  EC22  F051         	call	_UART1_SetFramingErrorHandler	;wreg free
  5329   00AEDA                     
  5330                           ;mcc_generated_files/uart1.c: 119:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  5331   00AEDA  0E8E               	movlw	low _UART1_DefaultOverrunErrorHandler
  5332   00AEDC  6E01               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  5333   00AEDE  0EA1               	movlw	high _UART1_DefaultOverrunErrorHandler
  5334   00AEE0  6E02               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5335   00AEE2  EC27  F051         	call	_UART1_SetOverrunErrorHandler	;wreg free
  5336   00AEE6                     
  5337                           ;mcc_generated_files/uart1.c: 120:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  5338   00AEE6  0E8A               	movlw	low _UART1_DefaultErrorHandler
  5339   00AEE8  6E01               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  5340   00AEEA  0EA1               	movlw	high _UART1_DefaultErrorHandler
  5341   00AEEC  6E02               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  5342   00AEEE  EC1D  F051         	call	_UART1_SetErrorHandler	;wreg free
  5343   00AEF2                     
  5344                           ;mcc_generated_files/uart1.c: 122:     uart1RxLastError.status = 0;
  5345   00AEF2  0E00               	movlw	0
  5346   00AEF4  0100               	movlb	0	; () banked
  5347   00AEF6  6FCC               	movwf	_uart1RxLastError& (0+255),b	;volatile
  5348   00AEF8                     
  5349                           ; BSR set to: 0
  5350   00AEF8  0012               	return		;funcret
  5351   00AEFA                     __end_of_UART1_Initialize:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  5355 ;; Defined at:
  5356 ;;		line 204 in file "mcc_generated_files/uart1.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5359 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;Total ram usage:        2 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_UART1_Initialize
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text21
  5385   00A24E                     __ptext21:
  5386                           	callstack 0
  5387   00A24E                     _UART1_SetOverrunErrorHandler:
  5388                           	callstack 28
  5389   00A24E                     
  5390                           ;mcc_generated_files/uart1.c: 205:     UART1_OverrunErrorHandler = interruptHandler;
  5391   00A24E  C001  F21F         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  5392   00A252  C002  F220         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  5393   00A256  0012               	return		;funcret
  5394   00A258                     __end_of_UART1_SetOverrunErrorHandler:
  5395                           	callstack 0
  5396                           
  5397 ;; *************** function _UART1_SetFramingErrorHandler *****************
  5398 ;; Defined at:
  5399 ;;		line 200 in file "mcc_generated_files/uart1.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5402 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, status,2, status,0
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;Total ram usage:        2 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_UART1_Initialize
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text22
  5428   00A244                     __ptext22:
  5429                           	callstack 0
  5430   00A244                     _UART1_SetFramingErrorHandler:
  5431                           	callstack 28
  5432   00A244                     
  5433                           ;mcc_generated_files/uart1.c: 201:     UART1_FramingErrorHandler = interruptHandler;
  5434   00A244  C001  F221         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  5435   00A248  C002  F222         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  5436   00A24C  0012               	return		;funcret
  5437   00A24E                     __end_of_UART1_SetFramingErrorHandler:
  5438                           	callstack 0
  5439                           
  5440 ;; *************** function _UART1_SetErrorHandler *****************
  5441 ;; Defined at:
  5442 ;;		line 208 in file "mcc_generated_files/uart1.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5445 ;;		 -> UART1_DefaultErrorHandler(1), 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;Total ram usage:        2 bytes
  5462 ;; Hardware stack levels used: 1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_UART1_Initialize
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text23
  5471   00A23A                     __ptext23:
  5472                           	callstack 0
  5473   00A23A                     _UART1_SetErrorHandler:
  5474                           	callstack 28
  5475   00A23A                     
  5476                           ;mcc_generated_files/uart1.c: 209:     UART1_ErrorHandler = interruptHandler;
  5477   00A23A  C001  F3AC         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  5478   00A23E  C002  F3AD         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  5479   00A242  0012               	return		;funcret
  5480   00A244                     __end_of_UART1_SetErrorHandler:
  5481                           	callstack 0
  5482                           
  5483 ;; *************** function _PMD_Initialize *****************
  5484 ;; Defined at:
  5485 ;;		line 73 in file "mcc_generated_files/mcc.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;		None
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;		None
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  1    wreg      void 
  5492 ;; Registers used:
  5493 ;;		wreg, status,2
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;Total ram usage:        0 bytes
  5504 ;; Hardware stack levels used: 1
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_SYSTEM_Initialize
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text24
  5513   00A450                     __ptext24:
  5514                           	callstack 0
  5515   00A450                     _PMD_Initialize:
  5516                           	callstack 29
  5517   00A450                     
  5518                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  5519   00A450  0E00               	movlw	0
  5520   00A452  0139               	movlb	57	; () banked
  5521   00A454  6FC0               	movwf	192,b	;volatile
  5522                           
  5523                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  5524   00A456  0E00               	movlw	0
  5525   00A458  6FC1               	movwf	193,b	;volatile
  5526                           
  5527                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  5528   00A45A  0E00               	movlw	0
  5529   00A45C  6FC2               	movwf	194,b	;volatile
  5530                           
  5531                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  5532   00A45E  0E00               	movlw	0
  5533   00A460  6FC3               	movwf	195,b	;volatile
  5534                           
  5535                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  5536   00A462  0E00               	movlw	0
  5537   00A464  6FC4               	movwf	196,b	;volatile
  5538                           
  5539                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  5540   00A466  0E00               	movlw	0
  5541   00A468  6FC5               	movwf	197,b	;volatile
  5542                           
  5543                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
  5544   00A46A  0E00               	movlw	0
  5545   00A46C  6FC6               	movwf	198,b	;volatile
  5546                           
  5547                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
  5548   00A46E  0E00               	movlw	0
  5549   00A470  6FC7               	movwf	199,b	;volatile
  5550   00A472                     
  5551                           ; BSR set to: 57
  5552   00A472  0012               	return		;funcret
  5553   00A474                     __end_of_PMD_Initialize:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _PIN_MANAGER_Initialize *****************
  5557 ;; Defined at:
  5558 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;Total ram usage:        0 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_SYSTEM_Initialize
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text25
  5586   00B89E                     __ptext25:
  5587                           	callstack 0
  5588   00B89E                     _PIN_MANAGER_Initialize:
  5589                           	callstack 29
  5590   00B89E                     
  5591                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5592   00B89E  0E00               	movlw	0
  5593   00B8A0  6EBE               	movwf	190,c	;volatile
  5594                           
  5595                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5596   00B8A2  0E00               	movlw	0
  5597   00B8A4  6EBD               	movwf	189,c	;volatile
  5598                           
  5599                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5600   00B8A6  0E00               	movlw	0
  5601   00B8A8  6EBA               	movwf	186,c	;volatile
  5602                           
  5603                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5604   00B8AA  0E00               	movlw	0
  5605   00B8AC  6EBB               	movwf	187,c	;volatile
  5606                           
  5607                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5608   00B8AE  0E00               	movlw	0
  5609   00B8B0  6EBC               	movwf	188,c	;volatile
  5610                           
  5611                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5612   00B8B2  0E07               	movlw	7
  5613   00B8B4  6EC6               	movwf	198,c	;volatile
  5614   00B8B6                     
  5615                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5616   00B8B6  68C2               	setf	194,c	;volatile
  5617                           
  5618                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF9;
  5619   00B8B8  0EF9               	movlw	249
  5620   00B8BA  6EC3               	movwf	195,c	;volatile
  5621                           
  5622                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  5623   00B8BC  0EBF               	movlw	191
  5624   00B8BE  6EC4               	movwf	196,c	;volatile
  5625                           
  5626                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFC;
  5627   00B8C0  0EFC               	movlw	252
  5628   00B8C2  6EC5               	movwf	197,c	;volatile
  5629   00B8C4                     
  5630                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5631   00B8C4  013A               	movlb	58	; () banked
  5632   00B8C6  6970               	setf	112,b	;volatile
  5633                           
  5634                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x7F;
  5635   00B8C8  0E7F               	movlw	127
  5636   00B8CA  6F60               	movwf	96,b	;volatile
  5637                           
  5638                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xF9;
  5639   00B8CC  0EF9               	movlw	249
  5640   00B8CE  6F50               	movwf	80,b	;volatile
  5641                           
  5642                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  5643   00B8D0  0E07               	movlw	7
  5644   00B8D2  6F80               	movwf	128,b	;volatile
  5645   00B8D4                     
  5646                           ; BSR set to: 58
  5647                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5648   00B8D4  6940               	setf	64,b	;volatile
  5649                           
  5650                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5651   00B8D6  0E00               	movlw	0
  5652   00B8D8  6F71               	movwf	113,b	;volatile
  5653                           
  5654                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5655   00B8DA  0E00               	movlw	0
  5656   00B8DC  6F81               	movwf	129,b	;volatile
  5657                           
  5658                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5659   00B8DE  0E00               	movlw	0
  5660   00B8E0  6F51               	movwf	81,b	;volatile
  5661                           
  5662                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5663   00B8E2  0E00               	movlw	0
  5664   00B8E4  6F41               	movwf	65,b	;volatile
  5665                           
  5666                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5667   00B8E6  0E00               	movlw	0
  5668   00B8E8  6F61               	movwf	97,b	;volatile
  5669                           
  5670                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  5671   00B8EA  0E00               	movlw	0
  5672   00B8EC  6F5A               	movwf	90,b	;volatile
  5673                           
  5674                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  5675   00B8EE  0E00               	movlw	0
  5676   00B8F0  6F5B               	movwf	91,b	;volatile
  5677                           
  5678                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  5679   00B8F2  0E00               	movlw	0
  5680   00B8F4  6F6A               	movwf	106,b	;volatile
  5681                           
  5682                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  5683   00B8F6  0E00               	movlw	0
  5684   00B8F8  6F6B               	movwf	107,b	;volatile
  5685                           
  5686                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  5687   00B8FA  0E00               	movlw	0
  5688   00B8FC  6F7A               	movwf	122,b	;volatile
  5689                           
  5690                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  5691   00B8FE  0E00               	movlw	0
  5692   00B900  6F7B               	movwf	123,b	;volatile
  5693                           
  5694                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  5695   00B902  0E00               	movlw	0
  5696   00B904  6F82               	movwf	130,b	;volatile
  5697                           
  5698                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  5699   00B906  0E00               	movlw	0
  5700   00B908  6F42               	movwf	66,b	;volatile
  5701                           
  5702                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x26;
  5703   00B90A  0E26               	movlw	38
  5704   00B90C  6F52               	movwf	82,b	;volatile
  5705                           
  5706                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x18;
  5707   00B90E  0E18               	movlw	24
  5708   00B910  6F62               	movwf	98,b	;volatile
  5709                           
  5710                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  5711   00B912  0E00               	movlw	0
  5712   00B914  6F72               	movwf	114,b	;volatile
  5713   00B916                     
  5714                           ; BSR set to: 58
  5715                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  5716   00B916  6943               	setf	67,b	;volatile
  5717   00B918                     
  5718                           ; BSR set to: 58
  5719                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  5720   00B918  6953               	setf	83,b	;volatile
  5721   00B91A                     
  5722                           ; BSR set to: 58
  5723                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  5724   00B91A  6963               	setf	99,b	;volatile
  5725   00B91C                     
  5726                           ; BSR set to: 58
  5727                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  5728   00B91C  6973               	setf	115,b	;volatile
  5729                           
  5730                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  5731   00B91E  0E07               	movlw	7
  5732   00B920  6F83               	movwf	131,b	;volatile
  5733   00B922                     
  5734                           ; BSR set to: 58
  5735                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  5736   00B922  6944               	setf	68,b	;volatile
  5737   00B924                     
  5738                           ; BSR set to: 58
  5739                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  5740   00B924  6954               	setf	84,b	;volatile
  5741   00B926                     
  5742                           ; BSR set to: 58
  5743                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  5744   00B926  6964               	setf	100,b	;volatile
  5745   00B928                     
  5746                           ; BSR set to: 58
  5747                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  5748   00B928  6974               	setf	116,b	;volatile
  5749                           
  5750                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  5751   00B92A  0E0F               	movlw	15
  5752   00B92C  6F84               	movwf	132,b	;volatile
  5753                           
  5754                           ;mcc_generated_files/pin_manager.c: 137:     I2C1SDAPPS = 0x0A;
  5755   00B92E  0E0A               	movlw	10
  5756   00B930  6FE2               	movwf	226,b	;volatile
  5757                           
  5758                           ;mcc_generated_files/pin_manager.c: 138:     RB1PPS = 0x21;
  5759   00B932  0E21               	movlw	33
  5760   00B934  6F09               	movwf	9,b	;volatile
  5761                           
  5762                           ;mcc_generated_files/pin_manager.c: 139:     RB2PPS = 0x22;
  5763   00B936  0E22               	movlw	34
  5764   00B938  6F0A               	movwf	10,b	;volatile
  5765                           
  5766                           ;mcc_generated_files/pin_manager.c: 140:     RC6PPS = 0x13;
  5767   00B93A  0E13               	movlw	19
  5768   00B93C  6F16               	movwf	22,b	;volatile
  5769                           
  5770                           ;mcc_generated_files/pin_manager.c: 141:     U1RXPPS = 0x17;
  5771   00B93E  0E17               	movlw	23
  5772   00B940  6FE5               	movwf	229,b	;volatile
  5773                           
  5774                           ;mcc_generated_files/pin_manager.c: 142:     I2C1SCLPPS = 0x09;
  5775   00B942  0E09               	movlw	9
  5776   00B944  6FE1               	movwf	225,b	;volatile
  5777   00B946                     
  5778                           ; BSR set to: 58
  5779   00B946  0012               	return		;funcret
  5780   00B948                     __end_of_PIN_MANAGER_Initialize:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _OSCILLATOR_Initialize *****************
  5784 ;; Defined at:
  5785 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;Total ram usage:        0 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_SYSTEM_Initialize
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text26
  5813   00A39C                     __ptext26:
  5814                           	callstack 0
  5815   00A39C                     _OSCILLATOR_Initialize:
  5816                           	callstack 29
  5817   00A39C                     
  5818                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x71;
  5819   00A39C  0E71               	movlw	113
  5820   00A39E  0139               	movlb	57	; () banked
  5821   00A3A0  6FD9               	movwf	217,b	;volatile
  5822                           
  5823                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  5824   00A3A2  0E00               	movlw	0
  5825   00A3A4  6FDB               	movwf	219,b	;volatile
  5826                           
  5827                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  5828   00A3A6  0E00               	movlw	0
  5829   00A3A8  6FDD               	movwf	221,b	;volatile
  5830                           
  5831                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x01;
  5832   00A3AA  0E01               	movlw	1
  5833   00A3AC  6FDF               	movwf	223,b	;volatile
  5834                           
  5835                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  5836   00A3AE  0E00               	movlw	0
  5837   00A3B0  6FDE               	movwf	222,b	;volatile
  5838   00A3B2                     
  5839                           ; BSR set to: 57
  5840   00A3B2  0012               	return		;funcret
  5841   00A3B4                     __end_of_OSCILLATOR_Initialize:
  5842                           	callstack 0
  5843                           
  5844 ;; *************** function _I2C1_Initialize *****************
  5845 ;; Defined at:
  5846 ;;		line 183 in file "mcc_generated_files/i2c1_master.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;		None
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;		None
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, status,2
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;Total ram usage:        0 bytes
  5865 ;; Hardware stack levels used: 1
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_SYSTEM_Initialize
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text27
  5874   00A40A                     __ptext27:
  5875                           	callstack 0
  5876   00A40A                     _I2C1_Initialize:
  5877                           	callstack 29
  5878   00A40A                     
  5879                           ;mcc_generated_files/i2c1_master.c: 186:     I2C1CON0 = 0x04;
  5880   00A40A  0E04               	movlw	4
  5881   00A40C  013D               	movlb	61	; () banked
  5882   00A40E  6F73               	movwf	115,b	;volatile
  5883                           
  5884                           ;mcc_generated_files/i2c1_master.c: 188:     I2C1CON1 = 0x80;
  5885   00A410  0E80               	movlw	128
  5886   00A412  6F74               	movwf	116,b	;volatile
  5887                           
  5888                           ;mcc_generated_files/i2c1_master.c: 190:     I2C1CON2 = 0x18;
  5889   00A414  0E18               	movlw	24
  5890   00A416  6F75               	movwf	117,b	;volatile
  5891                           
  5892                           ;mcc_generated_files/i2c1_master.c: 192:     I2C1CLK = 0x00;
  5893   00A418  0E00               	movlw	0
  5894   00A41A  6F7B               	movwf	123,b	;volatile
  5895                           
  5896                           ;mcc_generated_files/i2c1_master.c: 194:     I2C1PIR = 0x00;
  5897   00A41C  0E00               	movlw	0
  5898   00A41E  6F79               	movwf	121,b	;volatile
  5899                           
  5900                           ;mcc_generated_files/i2c1_master.c: 196:     I2C1PIE = 0x00;
  5901   00A420  0E00               	movlw	0
  5902   00A422  6F7A               	movwf	122,b	;volatile
  5903                           
  5904                           ;mcc_generated_files/i2c1_master.c: 198:     I2C1ERR = 0x00;
  5905   00A424  0E00               	movlw	0
  5906   00A426  6F76               	movwf	118,b	;volatile
  5907   00A428                     
  5908                           ; BSR set to: 61
  5909                           ;mcc_generated_files/i2c1_master.c: 200:     I2C1CNT = 0xFF;
  5910   00A428  696C               	setf	108,b	;volatile
  5911   00A42A                     
  5912                           ; BSR set to: 61
  5913   00A42A  0012               	return		;funcret
  5914   00A42C                     __end_of_I2C1_Initialize:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function _ReadAndSendEEPROMDataCSV *****************
  5918 ;; Defined at:
  5919 ;;		line 189 in file "main.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  Ndat            4   79[BANK0 ] unsigned long 
  5922 ;;  startAddress    2   83[BANK0 ] unsigned short 
  5923 ;;  startAddress    2   85[BANK0 ] unsigned short 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  i               4  224[BANK1 ] unsigned long 
  5926 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  5927 ;;  eepromReadBu   24  200[BANK1 ] unsigned char [24]
  5928 ;;  gz_read         4  248[BANK1 ] float 
  5929 ;;  gy_read         4  244[BANK1 ] float 
  5930 ;;  gx_read         4  240[BANK1 ] float 
  5931 ;;  az_read         4  236[BANK1 ] float 
  5932 ;;  ay_read         4  232[BANK1 ] float 
  5933 ;;  ax_read         4  228[BANK1 ] float 
  5934 ;;  readBlockEEP    2  254[BANK1 ] unsigned short 
  5935 ;;  readBlockEEP    2  252[BANK1 ] unsigned short 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5945 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Locals:         0       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Totals:         2       8     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;Total ram usage:      266 bytes
  5950 ;; Hardware stack levels used: 1
  5951 ;; Hardware stack levels required when called: 14
  5952 ;; This function calls:
  5953 ;;		_EEPROM_ReadBlock
  5954 ;;		_UART_SendString
  5955 ;;		_memcpy
  5956 ;;		_sprintf
  5957 ;; This function is called by:
  5958 ;;		_main
  5959 ;;		_Handle_LOG_READ
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text28
  5964   00CA8E                     __ptext28:
  5965                           	callstack 0
  5966   00CA8E                     _ReadAndSendEEPROMDataCSV:
  5967                           	callstack 16
  5968   00CA8E                     
  5969                           ;main.c: 190:     uint16_t readBlockEEPROM1 = startAddressEEPROM1;
  5970   00CA8E  C0B3  F1FC         	movff	ReadAndSendEEPROMDataCSV@startAddressEEPROM1,ReadAndSendEEPROMDataCSV@readBlockEE
      +                          PROM1
  5971   00CA92  C0B4  F1FD         	movff	ReadAndSendEEPROMDataCSV@startAddressEEPROM1+1,ReadAndSendEEPROMDataCSV@readBlock
      +                          EEPROM1+1
  5972                           
  5973                           ;main.c: 191:     uint16_t readBlockEEPROM2 = startAddressEEPROM2;
  5974   00CA96  C0B5  F1FE         	movff	ReadAndSendEEPROMDataCSV@startAddressEEPROM2,ReadAndSendEEPROMDataCSV@readBlockEE
      +                          PROM2
  5975   00CA9A  C0B6  F1FF         	movff	ReadAndSendEEPROMDataCSV@startAddressEEPROM2+1,ReadAndSendEEPROMDataCSV@readBlock
      +                          EEPROM2+1
  5976   00CA9E                     
  5977                           ;main.c: 192:     uint8_t eepromReadBuffer[24];;main.c: 193:     float ax_read, ay_read,
      +                           az_read, gx_read, gy_read, gz_read;;main.c: 194:     char buffer[200];;main.c: 197:    
      +                           UART_SendString("AX,AY,AZ,GX,GY,GZ\n");
  5978   00CA9E  0E8C               	movlw	low STR_2
  5979   00CAA0  6E02               	movwf	UART_SendString@str^0,c
  5980   00CAA2  0EFF               	movlw	high STR_2
  5981   00CAA4  6E03               	movwf	(UART_SendString@str+1)^0,c
  5982   00CAA6  EC22  F058         	call	_UART_SendString	;wreg free
  5983   00CAAA                     
  5984                           ;main.c: 199:     for (uint32_t i = 0; i < Ndat; i++) {
  5985   00CAAA  0E00               	movlw	0
  5986   00CAAC  0101               	movlb	1	; () banked
  5987   00CAAE  6FE0               	movwf	ReadAndSendEEPROMDataCSV@i& (0+255),b
  5988   00CAB0  0E00               	movlw	0
  5989   00CAB2  6FE1               	movwf	(ReadAndSendEEPROMDataCSV@i+1)& (0+255),b
  5990   00CAB4  0E00               	movlw	0
  5991   00CAB6  6FE2               	movwf	(ReadAndSendEEPROMDataCSV@i+2)& (0+255),b
  5992   00CAB8  0E00               	movlw	0
  5993   00CABA  6FE3               	movwf	(ReadAndSendEEPROMDataCSV@i+3)& (0+255),b
  5994   00CABC  EF2E  F066         	goto	l10772
  5995   00CAC0                     l10752:
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;main.c: 201:         EEPROM_ReadBlock(0x50, readBlockEEPROM1, eepromReadBuffer, 12);
  5999   00CAC0  C1FC  F021         	movff	ReadAndSendEEPROMDataCSV@readBlockEEPROM1,EEPROM_ReadBlock@memoryAddress
  6000   00CAC4  C1FD  F022         	movff	ReadAndSendEEPROMDataCSV@readBlockEEPROM1+1,EEPROM_ReadBlock@memoryAddress+1
  6001   00CAC8  0EC8               	movlw	low ReadAndSendEEPROMDataCSV@eepromReadBuffer
  6002   00CACA  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  6003   00CACC  0E01               	movlw	high ReadAndSendEEPROMDataCSV@eepromReadBuffer
  6004   00CACE  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  6005   00CAD0  0E0C               	movlw	12
  6006   00CAD2  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  6007   00CAD4  0E50               	movlw	80
  6008   00CAD6  EC98  F054         	call	_EEPROM_ReadBlock
  6009   00CADA                     
  6010                           ;main.c: 202:         memcpy(&ax_read, &eepromReadBuffer[0], sizeof(float));
  6011   00CADA  0EE4               	movlw	low ReadAndSendEEPROMDataCSV@ax_read
  6012   00CADC  6E01               	movwf	memcpy@d1^0,c
  6013   00CADE  0E01               	movlw	high ReadAndSendEEPROMDataCSV@ax_read
  6014   00CAE0  6E02               	movwf	(memcpy@d1+1)^0,c
  6015   00CAE2  0EC8               	movlw	low ReadAndSendEEPROMDataCSV@eepromReadBuffer
  6016   00CAE4  6E03               	movwf	memcpy@s1^0,c
  6017   00CAE6  0E01               	movlw	high ReadAndSendEEPROMDataCSV@eepromReadBuffer
  6018   00CAE8  6E04               	movwf	(memcpy@s1+1)^0,c
  6019   00CAEA  0E00               	movlw	0
  6020   00CAEC  6E06               	movwf	(memcpy@n+1)^0,c
  6021   00CAEE  0E04               	movlw	4
  6022   00CAF0  6E05               	movwf	memcpy@n^0,c
  6023   00CAF2  EC1C  F056         	call	_memcpy	;wreg free
  6024   00CAF6                     
  6025                           ;main.c: 203:         memcpy(&ay_read, &eepromReadBuffer[4], sizeof(float));
  6026   00CAF6  0EE8               	movlw	low ReadAndSendEEPROMDataCSV@ay_read
  6027   00CAF8  6E01               	movwf	memcpy@d1^0,c
  6028   00CAFA  0E01               	movlw	high ReadAndSendEEPROMDataCSV@ay_read
  6029   00CAFC  6E02               	movwf	(memcpy@d1+1)^0,c
  6030   00CAFE  0ECC               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+4)
  6031   00CB00  6E03               	movwf	memcpy@s1^0,c
  6032   00CB02  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+4)
  6033   00CB04  6E04               	movwf	(memcpy@s1+1)^0,c
  6034   00CB06  0E00               	movlw	0
  6035   00CB08  6E06               	movwf	(memcpy@n+1)^0,c
  6036   00CB0A  0E04               	movlw	4
  6037   00CB0C  6E05               	movwf	memcpy@n^0,c
  6038   00CB0E  EC1C  F056         	call	_memcpy	;wreg free
  6039   00CB12                     
  6040                           ;main.c: 204:         memcpy(&az_read, &eepromReadBuffer[8], sizeof(float));
  6041   00CB12  0EEC               	movlw	low ReadAndSendEEPROMDataCSV@az_read
  6042   00CB14  6E01               	movwf	memcpy@d1^0,c
  6043   00CB16  0E01               	movlw	high ReadAndSendEEPROMDataCSV@az_read
  6044   00CB18  6E02               	movwf	(memcpy@d1+1)^0,c
  6045   00CB1A  0ED0               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+8)
  6046   00CB1C  6E03               	movwf	memcpy@s1^0,c
  6047   00CB1E  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+8)
  6048   00CB20  6E04               	movwf	(memcpy@s1+1)^0,c
  6049   00CB22  0E00               	movlw	0
  6050   00CB24  6E06               	movwf	(memcpy@n+1)^0,c
  6051   00CB26  0E04               	movlw	4
  6052   00CB28  6E05               	movwf	memcpy@n^0,c
  6053   00CB2A  EC1C  F056         	call	_memcpy	;wreg free
  6054   00CB2E                     
  6055                           ;main.c: 207:         EEPROM_ReadBlock(0x51, readBlockEEPROM2, &eepromReadBuffer[12], 12
      +                          );
  6056   00CB2E  C1FE  F021         	movff	ReadAndSendEEPROMDataCSV@readBlockEEPROM2,EEPROM_ReadBlock@memoryAddress
  6057   00CB32  C1FF  F022         	movff	ReadAndSendEEPROMDataCSV@readBlockEEPROM2+1,EEPROM_ReadBlock@memoryAddress+1
  6058   00CB36  0ED4               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+12)
  6059   00CB38  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  6060   00CB3A  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+12)
  6061   00CB3C  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  6062   00CB3E  0E0C               	movlw	12
  6063   00CB40  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  6064   00CB42  0E51               	movlw	81
  6065   00CB44  EC98  F054         	call	_EEPROM_ReadBlock
  6066                           
  6067                           ;main.c: 208:         memcpy(&gx_read, &eepromReadBuffer[12], sizeof(float));
  6068   00CB48  0EF0               	movlw	low ReadAndSendEEPROMDataCSV@gx_read
  6069   00CB4A  6E01               	movwf	memcpy@d1^0,c
  6070   00CB4C  0E01               	movlw	high ReadAndSendEEPROMDataCSV@gx_read
  6071   00CB4E  6E02               	movwf	(memcpy@d1+1)^0,c
  6072   00CB50  0ED4               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+12)
  6073   00CB52  6E03               	movwf	memcpy@s1^0,c
  6074   00CB54  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+12)
  6075   00CB56  6E04               	movwf	(memcpy@s1+1)^0,c
  6076   00CB58  0E00               	movlw	0
  6077   00CB5A  6E06               	movwf	(memcpy@n+1)^0,c
  6078   00CB5C  0E04               	movlw	4
  6079   00CB5E  6E05               	movwf	memcpy@n^0,c
  6080   00CB60  EC1C  F056         	call	_memcpy	;wreg free
  6081                           
  6082                           ;main.c: 209:         memcpy(&gy_read, &eepromReadBuffer[16], sizeof(float));
  6083   00CB64  0EF4               	movlw	low ReadAndSendEEPROMDataCSV@gy_read
  6084   00CB66  6E01               	movwf	memcpy@d1^0,c
  6085   00CB68  0E01               	movlw	high ReadAndSendEEPROMDataCSV@gy_read
  6086   00CB6A  6E02               	movwf	(memcpy@d1+1)^0,c
  6087   00CB6C  0ED8               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+16)
  6088   00CB6E  6E03               	movwf	memcpy@s1^0,c
  6089   00CB70  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+16)
  6090   00CB72  6E04               	movwf	(memcpy@s1+1)^0,c
  6091   00CB74  0E00               	movlw	0
  6092   00CB76  6E06               	movwf	(memcpy@n+1)^0,c
  6093   00CB78  0E04               	movlw	4
  6094   00CB7A  6E05               	movwf	memcpy@n^0,c
  6095   00CB7C  EC1C  F056         	call	_memcpy	;wreg free
  6096                           
  6097                           ;main.c: 210:         memcpy(&gz_read, &eepromReadBuffer[20], sizeof(float));
  6098   00CB80  0EF8               	movlw	low ReadAndSendEEPROMDataCSV@gz_read
  6099   00CB82  6E01               	movwf	memcpy@d1^0,c
  6100   00CB84  0E01               	movlw	high ReadAndSendEEPROMDataCSV@gz_read
  6101   00CB86  6E02               	movwf	(memcpy@d1+1)^0,c
  6102   00CB88  0EDC               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+20)
  6103   00CB8A  6E03               	movwf	memcpy@s1^0,c
  6104   00CB8C  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+20)
  6105   00CB8E  6E04               	movwf	(memcpy@s1+1)^0,c
  6106   00CB90  0E00               	movlw	0
  6107   00CB92  6E06               	movwf	(memcpy@n+1)^0,c
  6108   00CB94  0E04               	movlw	4
  6109   00CB96  6E05               	movwf	memcpy@n^0,c
  6110   00CB98  EC1C  F056         	call	_memcpy	;wreg free
  6111   00CB9C                     
  6112                           ;main.c: 213:         sprintf(buffer, "%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n", ax_read, ay_rea
      +                          d, az_read, gx_read, gy_read, gz_read);
  6113   00CB9C  0E00               	movlw	low ReadAndSendEEPROMDataCSV@buffer
  6114   00CB9E  0100               	movlb	0	; () banked
  6115   00CBA0  6F93               	movwf	sprintf@s& (0+255),b
  6116   00CBA2  0E01               	movlw	high ReadAndSendEEPROMDataCSV@buffer
  6117   00CBA4  6F94               	movwf	(sprintf@s+1)& (0+255),b
  6118   00CBA6  0E6D               	movlw	low STR_3
  6119   00CBA8  6F95               	movwf	sprintf@fmt& (0+255),b
  6120   00CBAA  0EFF               	movlw	high STR_3
  6121   00CBAC  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  6122   00CBAE  C1E4  F097         	movff	ReadAndSendEEPROMDataCSV@ax_read,?_sprintf+4
  6123   00CBB2  C1E5  F098         	movff	ReadAndSendEEPROMDataCSV@ax_read+1,?_sprintf+5
  6124   00CBB6  C1E6  F099         	movff	ReadAndSendEEPROMDataCSV@ax_read+2,?_sprintf+6
  6125   00CBBA  C1E7  F09A         	movff	ReadAndSendEEPROMDataCSV@ax_read+3,?_sprintf+7
  6126   00CBBE  C1E8  F09B         	movff	ReadAndSendEEPROMDataCSV@ay_read,?_sprintf+8
  6127   00CBC2  C1E9  F09C         	movff	ReadAndSendEEPROMDataCSV@ay_read+1,?_sprintf+9
  6128   00CBC6  C1EA  F09D         	movff	ReadAndSendEEPROMDataCSV@ay_read+2,?_sprintf+10
  6129   00CBCA  C1EB  F09E         	movff	ReadAndSendEEPROMDataCSV@ay_read+3,?_sprintf+11
  6130   00CBCE  C1EC  F09F         	movff	ReadAndSendEEPROMDataCSV@az_read,?_sprintf+12
  6131   00CBD2  C1ED  F0A0         	movff	ReadAndSendEEPROMDataCSV@az_read+1,?_sprintf+13
  6132   00CBD6  C1EE  F0A1         	movff	ReadAndSendEEPROMDataCSV@az_read+2,?_sprintf+14
  6133   00CBDA  C1EF  F0A2         	movff	ReadAndSendEEPROMDataCSV@az_read+3,?_sprintf+15
  6134   00CBDE  C1F0  F0A3         	movff	ReadAndSendEEPROMDataCSV@gx_read,?_sprintf+16
  6135   00CBE2  C1F1  F0A4         	movff	ReadAndSendEEPROMDataCSV@gx_read+1,?_sprintf+17
  6136   00CBE6  C1F2  F0A5         	movff	ReadAndSendEEPROMDataCSV@gx_read+2,?_sprintf+18
  6137   00CBEA  C1F3  F0A6         	movff	ReadAndSendEEPROMDataCSV@gx_read+3,?_sprintf+19
  6138   00CBEE  C1F4  F0A7         	movff	ReadAndSendEEPROMDataCSV@gy_read,?_sprintf+20
  6139   00CBF2  C1F5  F0A8         	movff	ReadAndSendEEPROMDataCSV@gy_read+1,?_sprintf+21
  6140   00CBF6  C1F6  F0A9         	movff	ReadAndSendEEPROMDataCSV@gy_read+2,?_sprintf+22
  6141   00CBFA  C1F7  F0AA         	movff	ReadAndSendEEPROMDataCSV@gy_read+3,?_sprintf+23
  6142   00CBFE  C1F8  F0AB         	movff	ReadAndSendEEPROMDataCSV@gz_read,?_sprintf+24
  6143   00CC02  C1F9  F0AC         	movff	ReadAndSendEEPROMDataCSV@gz_read+1,?_sprintf+25
  6144   00CC06  C1FA  F0AD         	movff	ReadAndSendEEPROMDataCSV@gz_read+2,?_sprintf+26
  6145   00CC0A  C1FB  F0AE         	movff	ReadAndSendEEPROMDataCSV@gz_read+3,?_sprintf+27
  6146   00CC0E  EC76  F054         	call	_sprintf	;wreg free
  6147   00CC12                     
  6148                           ;main.c: 214:         UART_SendString(buffer);
  6149   00CC12  0E00               	movlw	low ReadAndSendEEPROMDataCSV@buffer
  6150   00CC14  6E02               	movwf	UART_SendString@str^0,c
  6151   00CC16  0E01               	movlw	high ReadAndSendEEPROMDataCSV@buffer
  6152   00CC18  6E03               	movwf	(UART_SendString@str+1)^0,c
  6153   00CC1A  EC22  F058         	call	_UART_SendString	;wreg free
  6154   00CC1E                     
  6155                           ;main.c: 217:         readBlockEEPROM1 = (readBlockEEPROM1 + 12) % 32768;
  6156   00CC1E  0E0C               	movlw	12
  6157   00CC20  0101               	movlb	1	; () banked
  6158   00CC22  25FC               	addwf	ReadAndSendEEPROMDataCSV@readBlockEEPROM1& (0+255),w,b
  6159   00CC24  6E5C               	movwf	??_ReadAndSendEEPROMDataCSV^0,c
  6160   00CC26  0E00               	movlw	0
  6161   00CC28  21FD               	addwfc	(ReadAndSendEEPROMDataCSV@readBlockEEPROM1+1)& (0+255),w,b
  6162   00CC2A  6E5D               	movwf	(??_ReadAndSendEEPROMDataCSV+1)^0,c
  6163   00CC2C  0EFF               	movlw	255
  6164   00CC2E  145C               	andwf	??_ReadAndSendEEPROMDataCSV^0,w,c
  6165   00CC30  6FFC               	movwf	ReadAndSendEEPROMDataCSV@readBlockEEPROM1& (0+255),b
  6166   00CC32  0E7F               	movlw	127
  6167   00CC34  145D               	andwf	(??_ReadAndSendEEPROMDataCSV+1)^0,w,c
  6168   00CC36  6FFD               	movwf	(ReadAndSendEEPROMDataCSV@readBlockEEPROM1+1)& (0+255),b
  6169   00CC38                     
  6170                           ; BSR set to: 1
  6171                           ;main.c: 218:         readBlockEEPROM2 = (readBlockEEPROM2 + 12) % 32768;
  6172   00CC38  0E0C               	movlw	12
  6173   00CC3A  25FE               	addwf	ReadAndSendEEPROMDataCSV@readBlockEEPROM2& (0+255),w,b
  6174   00CC3C  6E5C               	movwf	??_ReadAndSendEEPROMDataCSV^0,c
  6175   00CC3E  0E00               	movlw	0
  6176   00CC40  21FF               	addwfc	(ReadAndSendEEPROMDataCSV@readBlockEEPROM2+1)& (0+255),w,b
  6177   00CC42  6E5D               	movwf	(??_ReadAndSendEEPROMDataCSV+1)^0,c
  6178   00CC44  0EFF               	movlw	255
  6179   00CC46  145C               	andwf	??_ReadAndSendEEPROMDataCSV^0,w,c
  6180   00CC48  6FFE               	movwf	ReadAndSendEEPROMDataCSV@readBlockEEPROM2& (0+255),b
  6181   00CC4A  0E7F               	movlw	127
  6182   00CC4C  145D               	andwf	(??_ReadAndSendEEPROMDataCSV+1)^0,w,c
  6183   00CC4E  6FFF               	movwf	(ReadAndSendEEPROMDataCSV@readBlockEEPROM2+1)& (0+255),b
  6184   00CC50                     
  6185                           ; BSR set to: 1
  6186                           ;main.c: 219:     }
  6187   00CC50  0E01               	movlw	1
  6188   00CC52  27E0               	addwf	ReadAndSendEEPROMDataCSV@i& (0+255),f,b
  6189   00CC54  0E00               	movlw	0
  6190   00CC56  23E1               	addwfc	(ReadAndSendEEPROMDataCSV@i+1)& (0+255),f,b
  6191   00CC58  23E2               	addwfc	(ReadAndSendEEPROMDataCSV@i+2)& (0+255),f,b
  6192   00CC5A  23E3               	addwfc	(ReadAndSendEEPROMDataCSV@i+3)& (0+255),f,b
  6193   00CC5C                     l10772:
  6194                           
  6195                           ; BSR set to: 1
  6196   00CC5C  0100               	movlb	0	; () banked
  6197   00CC5E  51AF               	movf	ReadAndSendEEPROMDataCSV@Ndat& (0+255),w,b
  6198   00CC60  0101               	movlb	1	; () banked
  6199   00CC62  5DE0               	subwf	ReadAndSendEEPROMDataCSV@i& (0+255),w,b
  6200   00CC64  0100               	movlb	0	; () banked
  6201   00CC66  51B0               	movf	(ReadAndSendEEPROMDataCSV@Ndat+1)& (0+255),w,b
  6202   00CC68  0101               	movlb	1	; () banked
  6203   00CC6A  59E1               	subwfb	(ReadAndSendEEPROMDataCSV@i+1)& (0+255),w,b
  6204   00CC6C  0100               	movlb	0	; () banked
  6205   00CC6E  51B1               	movf	(ReadAndSendEEPROMDataCSV@Ndat+2)& (0+255),w,b
  6206   00CC70  0101               	movlb	1	; () banked
  6207   00CC72  59E2               	subwfb	(ReadAndSendEEPROMDataCSV@i+2)& (0+255),w,b
  6208   00CC74  0100               	movlb	0	; () banked
  6209   00CC76  51B2               	movf	(ReadAndSendEEPROMDataCSV@Ndat+3)& (0+255),w,b
  6210   00CC78  0101               	movlb	1	; () banked
  6211   00CC7A  59E3               	subwfb	(ReadAndSendEEPROMDataCSV@i+3)& (0+255),w,b
  6212   00CC7C  A0D8               	btfss	status,0,c
  6213   00CC7E  EF43  F066         	goto	u11171
  6214   00CC82  EF45  F066         	goto	u11170
  6215   00CC86                     u11171:
  6216   00CC86  EF60  F065         	goto	l10752
  6217   00CC8A                     u11170:
  6218   00CC8A                     
  6219                           ; BSR set to: 1
  6220   00CC8A  0012               	return		;funcret
  6221   00CC8C                     __end_of_ReadAndSendEEPROMDataCSV:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _ReadAllEEPROMDataCSV *****************
  6225 ;; Defined at:
  6226 ;;		line 401 in file "main.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  totalLogged     4   79[BANK0 ] unsigned long 
  6229 ;;  startAddress    2   83[BANK0 ] unsigned short 
  6230 ;;  startAddress    2   85[BANK0 ] unsigned short 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  i               4  224[BANK1 ] unsigned long 
  6233 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  6234 ;;  eepromReadBu   24  200[BANK1 ] unsigned char [24]
  6235 ;;  gz_read         4  248[BANK1 ] float 
  6236 ;;  gy_read         4  244[BANK1 ] float 
  6237 ;;  gx_read         4  240[BANK1 ] float 
  6238 ;;  az_read         4  236[BANK1 ] float 
  6239 ;;  ay_read         4  232[BANK1 ] float 
  6240 ;;  ax_read         4  228[BANK1 ] float 
  6241 ;;  readBlockEEP    2  254[BANK1 ] unsigned short 
  6242 ;;  readBlockEEP    2  252[BANK1 ] unsigned short 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6252 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Locals:         0       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6255 ;;      Totals:         2       8     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;Total ram usage:      266 bytes
  6257 ;; Hardware stack levels used: 1
  6258 ;; Hardware stack levels required when called: 14
  6259 ;; This function calls:
  6260 ;;		_EEPROM_ReadBlock
  6261 ;;		_UART_SendString
  6262 ;;		_memcpy
  6263 ;;		_sprintf
  6264 ;; This function is called by:
  6265 ;;		_main
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text29
  6270   00C6AA                     __ptext29:
  6271                           	callstack 0
  6272   00C6AA                     _ReadAllEEPROMDataCSV:
  6273                           	callstack 16
  6274   00C6AA                     
  6275                           ;main.c: 403:     uint16_t readBlockEEPROM1 = 0x0000 + 2;
  6276   00C6AA  0E00               	movlw	0
  6277   00C6AC  0101               	movlb	1	; () banked
  6278   00C6AE  6FFD               	movwf	(ReadAllEEPROMDataCSV@readBlockEEPROM1+1)& (0+255),b
  6279   00C6B0  0E02               	movlw	2
  6280   00C6B2  6FFC               	movwf	ReadAllEEPROMDataCSV@readBlockEEPROM1& (0+255),b
  6281                           
  6282                           ;main.c: 404:     uint16_t readBlockEEPROM2 = 0x0000 + 2;
  6283   00C6B4  0E00               	movlw	0
  6284   00C6B6  6FFF               	movwf	(ReadAllEEPROMDataCSV@readBlockEEPROM2+1)& (0+255),b
  6285   00C6B8  0E02               	movlw	2
  6286   00C6BA  6FFE               	movwf	ReadAllEEPROMDataCSV@readBlockEEPROM2& (0+255),b
  6287                           
  6288                           ;main.c: 405:     uint8_t eepromReadBuffer[24];;main.c: 406:     float ax_read, ay_read,
      +                           az_read, gx_read, gy_read, gz_read;;main.c: 407:     char buffer[200];;main.c: 409:    
      +                           for (uint32_t i = 0; i < totalLogged; i++) {
  6289   00C6BC  0E00               	movlw	0
  6290   00C6BE  6FE0               	movwf	ReadAllEEPROMDataCSV@i& (0+255),b
  6291   00C6C0  0E00               	movlw	0
  6292   00C6C2  6FE1               	movwf	(ReadAllEEPROMDataCSV@i+1)& (0+255),b
  6293   00C6C4  0E00               	movlw	0
  6294   00C6C6  6FE2               	movwf	(ReadAllEEPROMDataCSV@i+2)& (0+255),b
  6295   00C6C8  0E00               	movlw	0
  6296   00C6CA  6FE3               	movwf	(ReadAllEEPROMDataCSV@i+3)& (0+255),b
  6297   00C6CC  EF36  F064         	goto	l10878
  6298   00C6D0                     l10858:
  6299                           
  6300                           ; BSR set to: 1
  6301                           ;main.c: 411:         EEPROM_ReadBlock(0x50, readBlockEEPROM1, eepromReadBuffer, 12);
  6302   00C6D0  C1FC  F021         	movff	ReadAllEEPROMDataCSV@readBlockEEPROM1,EEPROM_ReadBlock@memoryAddress
  6303   00C6D4  C1FD  F022         	movff	ReadAllEEPROMDataCSV@readBlockEEPROM1+1,EEPROM_ReadBlock@memoryAddress+1
  6304   00C6D8  0EC8               	movlw	low ReadAllEEPROMDataCSV@eepromReadBuffer
  6305   00C6DA  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  6306   00C6DC  0E01               	movlw	high ReadAllEEPROMDataCSV@eepromReadBuffer
  6307   00C6DE  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  6308   00C6E0  0E0C               	movlw	12
  6309   00C6E2  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  6310   00C6E4  0E50               	movlw	80
  6311   00C6E6  EC98  F054         	call	_EEPROM_ReadBlock
  6312   00C6EA                     
  6313                           ;main.c: 412:         memcpy(&ax_read, &eepromReadBuffer[0], sizeof(float));
  6314   00C6EA  0EE4               	movlw	low ReadAllEEPROMDataCSV@ax_read
  6315   00C6EC  6E01               	movwf	memcpy@d1^0,c
  6316   00C6EE  0E01               	movlw	high ReadAllEEPROMDataCSV@ax_read
  6317   00C6F0  6E02               	movwf	(memcpy@d1+1)^0,c
  6318   00C6F2  0EC8               	movlw	low ReadAllEEPROMDataCSV@eepromReadBuffer
  6319   00C6F4  6E03               	movwf	memcpy@s1^0,c
  6320   00C6F6  0E01               	movlw	high ReadAllEEPROMDataCSV@eepromReadBuffer
  6321   00C6F8  6E04               	movwf	(memcpy@s1+1)^0,c
  6322   00C6FA  0E00               	movlw	0
  6323   00C6FC  6E06               	movwf	(memcpy@n+1)^0,c
  6324   00C6FE  0E04               	movlw	4
  6325   00C700  6E05               	movwf	memcpy@n^0,c
  6326   00C702  EC1C  F056         	call	_memcpy	;wreg free
  6327   00C706                     
  6328                           ;main.c: 413:         memcpy(&ay_read, &eepromReadBuffer[4], sizeof(float));
  6329   00C706  0EE8               	movlw	low ReadAllEEPROMDataCSV@ay_read
  6330   00C708  6E01               	movwf	memcpy@d1^0,c
  6331   00C70A  0E01               	movlw	high ReadAllEEPROMDataCSV@ay_read
  6332   00C70C  6E02               	movwf	(memcpy@d1+1)^0,c
  6333   00C70E  0ECC               	movlw	low (ReadAllEEPROMDataCSV@eepromReadBuffer+4)
  6334   00C710  6E03               	movwf	memcpy@s1^0,c
  6335   00C712  0E01               	movlw	high (ReadAllEEPROMDataCSV@eepromReadBuffer+4)
  6336   00C714  6E04               	movwf	(memcpy@s1+1)^0,c
  6337   00C716  0E00               	movlw	0
  6338   00C718  6E06               	movwf	(memcpy@n+1)^0,c
  6339   00C71A  0E04               	movlw	4
  6340   00C71C  6E05               	movwf	memcpy@n^0,c
  6341   00C71E  EC1C  F056         	call	_memcpy	;wreg free
  6342   00C722                     
  6343                           ;main.c: 414:         memcpy(&az_read, &eepromReadBuffer[8], sizeof(float));
  6344   00C722  0EEC               	movlw	low ReadAllEEPROMDataCSV@az_read
  6345   00C724  6E01               	movwf	memcpy@d1^0,c
  6346   00C726  0E01               	movlw	high ReadAllEEPROMDataCSV@az_read
  6347   00C728  6E02               	movwf	(memcpy@d1+1)^0,c
  6348   00C72A  0ED0               	movlw	low (ReadAllEEPROMDataCSV@eepromReadBuffer+8)
  6349   00C72C  6E03               	movwf	memcpy@s1^0,c
  6350   00C72E  0E01               	movlw	high (ReadAllEEPROMDataCSV@eepromReadBuffer+8)
  6351   00C730  6E04               	movwf	(memcpy@s1+1)^0,c
  6352   00C732  0E00               	movlw	0
  6353   00C734  6E06               	movwf	(memcpy@n+1)^0,c
  6354   00C736  0E04               	movlw	4
  6355   00C738  6E05               	movwf	memcpy@n^0,c
  6356   00C73A  EC1C  F056         	call	_memcpy	;wreg free
  6357   00C73E                     
  6358                           ;main.c: 417:         EEPROM_ReadBlock(0x51, readBlockEEPROM2, &eepromReadBuffer[12], 12
      +                          );
  6359   00C73E  C1FE  F021         	movff	ReadAllEEPROMDataCSV@readBlockEEPROM2,EEPROM_ReadBlock@memoryAddress
  6360   00C742  C1FF  F022         	movff	ReadAllEEPROMDataCSV@readBlockEEPROM2+1,EEPROM_ReadBlock@memoryAddress+1
  6361   00C746  0ED4               	movlw	low (ReadAllEEPROMDataCSV@eepromReadBuffer+12)
  6362   00C748  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  6363   00C74A  0E01               	movlw	high (ReadAllEEPROMDataCSV@eepromReadBuffer+12)
  6364   00C74C  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  6365   00C74E  0E0C               	movlw	12
  6366   00C750  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  6367   00C752  0E51               	movlw	81
  6368   00C754  EC98  F054         	call	_EEPROM_ReadBlock
  6369                           
  6370                           ;main.c: 418:         memcpy(&gx_read, &eepromReadBuffer[12], sizeof(float));
  6371   00C758  0EF0               	movlw	low ReadAllEEPROMDataCSV@gx_read
  6372   00C75A  6E01               	movwf	memcpy@d1^0,c
  6373   00C75C  0E01               	movlw	high ReadAllEEPROMDataCSV@gx_read
  6374   00C75E  6E02               	movwf	(memcpy@d1+1)^0,c
  6375   00C760  0ED4               	movlw	low (ReadAllEEPROMDataCSV@eepromReadBuffer+12)
  6376   00C762  6E03               	movwf	memcpy@s1^0,c
  6377   00C764  0E01               	movlw	high (ReadAllEEPROMDataCSV@eepromReadBuffer+12)
  6378   00C766  6E04               	movwf	(memcpy@s1+1)^0,c
  6379   00C768  0E00               	movlw	0
  6380   00C76A  6E06               	movwf	(memcpy@n+1)^0,c
  6381   00C76C  0E04               	movlw	4
  6382   00C76E  6E05               	movwf	memcpy@n^0,c
  6383   00C770  EC1C  F056         	call	_memcpy	;wreg free
  6384                           
  6385                           ;main.c: 419:         memcpy(&gy_read, &eepromReadBuffer[16], sizeof(float));
  6386   00C774  0EF4               	movlw	low ReadAllEEPROMDataCSV@gy_read
  6387   00C776  6E01               	movwf	memcpy@d1^0,c
  6388   00C778  0E01               	movlw	high ReadAllEEPROMDataCSV@gy_read
  6389   00C77A  6E02               	movwf	(memcpy@d1+1)^0,c
  6390   00C77C  0ED8               	movlw	low (ReadAllEEPROMDataCSV@eepromReadBuffer+16)
  6391   00C77E  6E03               	movwf	memcpy@s1^0,c
  6392   00C780  0E01               	movlw	high (ReadAllEEPROMDataCSV@eepromReadBuffer+16)
  6393   00C782  6E04               	movwf	(memcpy@s1+1)^0,c
  6394   00C784  0E00               	movlw	0
  6395   00C786  6E06               	movwf	(memcpy@n+1)^0,c
  6396   00C788  0E04               	movlw	4
  6397   00C78A  6E05               	movwf	memcpy@n^0,c
  6398   00C78C  EC1C  F056         	call	_memcpy	;wreg free
  6399                           
  6400                           ;main.c: 420:         memcpy(&gz_read, &eepromReadBuffer[20], sizeof(float));
  6401   00C790  0EF8               	movlw	low ReadAllEEPROMDataCSV@gz_read
  6402   00C792  6E01               	movwf	memcpy@d1^0,c
  6403   00C794  0E01               	movlw	high ReadAllEEPROMDataCSV@gz_read
  6404   00C796  6E02               	movwf	(memcpy@d1+1)^0,c
  6405   00C798  0EDC               	movlw	low (ReadAllEEPROMDataCSV@eepromReadBuffer+20)
  6406   00C79A  6E03               	movwf	memcpy@s1^0,c
  6407   00C79C  0E01               	movlw	high (ReadAllEEPROMDataCSV@eepromReadBuffer+20)
  6408   00C79E  6E04               	movwf	(memcpy@s1+1)^0,c
  6409   00C7A0  0E00               	movlw	0
  6410   00C7A2  6E06               	movwf	(memcpy@n+1)^0,c
  6411   00C7A4  0E04               	movlw	4
  6412   00C7A6  6E05               	movwf	memcpy@n^0,c
  6413   00C7A8  EC1C  F056         	call	_memcpy	;wreg free
  6414   00C7AC                     
  6415                           ;main.c: 423:         sprintf(buffer, "%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n", ax_read, ay_rea
      +                          d, az_read, gx_read, gy_read, gz_read);
  6416   00C7AC  0E00               	movlw	low ReadAllEEPROMDataCSV@buffer
  6417   00C7AE  0100               	movlb	0	; () banked
  6418   00C7B0  6F93               	movwf	sprintf@s& (0+255),b
  6419   00C7B2  0E01               	movlw	high ReadAllEEPROMDataCSV@buffer
  6420   00C7B4  6F94               	movwf	(sprintf@s+1)& (0+255),b
  6421   00C7B6  0E6D               	movlw	low STR_3
  6422   00C7B8  6F95               	movwf	sprintf@fmt& (0+255),b
  6423   00C7BA  0EFF               	movlw	high STR_3
  6424   00C7BC  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  6425   00C7BE  C1E4  F097         	movff	ReadAllEEPROMDataCSV@ax_read,?_sprintf+4
  6426   00C7C2  C1E5  F098         	movff	ReadAllEEPROMDataCSV@ax_read+1,?_sprintf+5
  6427   00C7C6  C1E6  F099         	movff	ReadAllEEPROMDataCSV@ax_read+2,?_sprintf+6
  6428   00C7CA  C1E7  F09A         	movff	ReadAllEEPROMDataCSV@ax_read+3,?_sprintf+7
  6429   00C7CE  C1E8  F09B         	movff	ReadAllEEPROMDataCSV@ay_read,?_sprintf+8
  6430   00C7D2  C1E9  F09C         	movff	ReadAllEEPROMDataCSV@ay_read+1,?_sprintf+9
  6431   00C7D6  C1EA  F09D         	movff	ReadAllEEPROMDataCSV@ay_read+2,?_sprintf+10
  6432   00C7DA  C1EB  F09E         	movff	ReadAllEEPROMDataCSV@ay_read+3,?_sprintf+11
  6433   00C7DE  C1EC  F09F         	movff	ReadAllEEPROMDataCSV@az_read,?_sprintf+12
  6434   00C7E2  C1ED  F0A0         	movff	ReadAllEEPROMDataCSV@az_read+1,?_sprintf+13
  6435   00C7E6  C1EE  F0A1         	movff	ReadAllEEPROMDataCSV@az_read+2,?_sprintf+14
  6436   00C7EA  C1EF  F0A2         	movff	ReadAllEEPROMDataCSV@az_read+3,?_sprintf+15
  6437   00C7EE  C1F0  F0A3         	movff	ReadAllEEPROMDataCSV@gx_read,?_sprintf+16
  6438   00C7F2  C1F1  F0A4         	movff	ReadAllEEPROMDataCSV@gx_read+1,?_sprintf+17
  6439   00C7F6  C1F2  F0A5         	movff	ReadAllEEPROMDataCSV@gx_read+2,?_sprintf+18
  6440   00C7FA  C1F3  F0A6         	movff	ReadAllEEPROMDataCSV@gx_read+3,?_sprintf+19
  6441   00C7FE  C1F4  F0A7         	movff	ReadAllEEPROMDataCSV@gy_read,?_sprintf+20
  6442   00C802  C1F5  F0A8         	movff	ReadAllEEPROMDataCSV@gy_read+1,?_sprintf+21
  6443   00C806  C1F6  F0A9         	movff	ReadAllEEPROMDataCSV@gy_read+2,?_sprintf+22
  6444   00C80A  C1F7  F0AA         	movff	ReadAllEEPROMDataCSV@gy_read+3,?_sprintf+23
  6445   00C80E  C1F8  F0AB         	movff	ReadAllEEPROMDataCSV@gz_read,?_sprintf+24
  6446   00C812  C1F9  F0AC         	movff	ReadAllEEPROMDataCSV@gz_read+1,?_sprintf+25
  6447   00C816  C1FA  F0AD         	movff	ReadAllEEPROMDataCSV@gz_read+2,?_sprintf+26
  6448   00C81A  C1FB  F0AE         	movff	ReadAllEEPROMDataCSV@gz_read+3,?_sprintf+27
  6449   00C81E  EC76  F054         	call	_sprintf	;wreg free
  6450   00C822                     
  6451                           ;main.c: 424:         UART_SendString(buffer);
  6452   00C822  0E00               	movlw	low ReadAllEEPROMDataCSV@buffer
  6453   00C824  6E02               	movwf	UART_SendString@str^0,c
  6454   00C826  0E01               	movlw	high ReadAllEEPROMDataCSV@buffer
  6455   00C828  6E03               	movwf	(UART_SendString@str+1)^0,c
  6456   00C82A  EC22  F058         	call	_UART_SendString	;wreg free
  6457   00C82E                     
  6458                           ;main.c: 427:         readBlockEEPROM1 = (readBlockEEPROM1 + 12) % 32768;
  6459   00C82E  0E0C               	movlw	12
  6460   00C830  0101               	movlb	1	; () banked
  6461   00C832  25FC               	addwf	ReadAllEEPROMDataCSV@readBlockEEPROM1& (0+255),w,b
  6462   00C834  6E5C               	movwf	??_ReadAllEEPROMDataCSV^0,c
  6463   00C836  0E00               	movlw	0
  6464   00C838  21FD               	addwfc	(ReadAllEEPROMDataCSV@readBlockEEPROM1+1)& (0+255),w,b
  6465   00C83A  6E5D               	movwf	(??_ReadAllEEPROMDataCSV+1)^0,c
  6466   00C83C  0EFF               	movlw	255
  6467   00C83E  145C               	andwf	??_ReadAllEEPROMDataCSV^0,w,c
  6468   00C840  6FFC               	movwf	ReadAllEEPROMDataCSV@readBlockEEPROM1& (0+255),b
  6469   00C842  0E7F               	movlw	127
  6470   00C844  145D               	andwf	(??_ReadAllEEPROMDataCSV+1)^0,w,c
  6471   00C846  6FFD               	movwf	(ReadAllEEPROMDataCSV@readBlockEEPROM1+1)& (0+255),b
  6472   00C848                     
  6473                           ; BSR set to: 1
  6474                           ;main.c: 428:         readBlockEEPROM2 = (readBlockEEPROM2 + 12) % 32768;
  6475   00C848  0E0C               	movlw	12
  6476   00C84A  25FE               	addwf	ReadAllEEPROMDataCSV@readBlockEEPROM2& (0+255),w,b
  6477   00C84C  6E5C               	movwf	??_ReadAllEEPROMDataCSV^0,c
  6478   00C84E  0E00               	movlw	0
  6479   00C850  21FF               	addwfc	(ReadAllEEPROMDataCSV@readBlockEEPROM2+1)& (0+255),w,b
  6480   00C852  6E5D               	movwf	(??_ReadAllEEPROMDataCSV+1)^0,c
  6481   00C854  0EFF               	movlw	255
  6482   00C856  145C               	andwf	??_ReadAllEEPROMDataCSV^0,w,c
  6483   00C858  6FFE               	movwf	ReadAllEEPROMDataCSV@readBlockEEPROM2& (0+255),b
  6484   00C85A  0E7F               	movlw	127
  6485   00C85C  145D               	andwf	(??_ReadAllEEPROMDataCSV+1)^0,w,c
  6486   00C85E  6FFF               	movwf	(ReadAllEEPROMDataCSV@readBlockEEPROM2+1)& (0+255),b
  6487   00C860                     
  6488                           ; BSR set to: 1
  6489                           ;main.c: 429:     }
  6490   00C860  0E01               	movlw	1
  6491   00C862  27E0               	addwf	ReadAllEEPROMDataCSV@i& (0+255),f,b
  6492   00C864  0E00               	movlw	0
  6493   00C866  23E1               	addwfc	(ReadAllEEPROMDataCSV@i+1)& (0+255),f,b
  6494   00C868  23E2               	addwfc	(ReadAllEEPROMDataCSV@i+2)& (0+255),f,b
  6495   00C86A  23E3               	addwfc	(ReadAllEEPROMDataCSV@i+3)& (0+255),f,b
  6496   00C86C                     l10878:
  6497                           
  6498                           ; BSR set to: 1
  6499   00C86C  0100               	movlb	0	; () banked
  6500   00C86E  51AF               	movf	ReadAllEEPROMDataCSV@totalLogged& (0+255),w,b
  6501   00C870  0101               	movlb	1	; () banked
  6502   00C872  5DE0               	subwf	ReadAllEEPROMDataCSV@i& (0+255),w,b
  6503   00C874  0100               	movlb	0	; () banked
  6504   00C876  51B0               	movf	(ReadAllEEPROMDataCSV@totalLogged+1)& (0+255),w,b
  6505   00C878  0101               	movlb	1	; () banked
  6506   00C87A  59E1               	subwfb	(ReadAllEEPROMDataCSV@i+1)& (0+255),w,b
  6507   00C87C  0100               	movlb	0	; () banked
  6508   00C87E  51B1               	movf	(ReadAllEEPROMDataCSV@totalLogged+2)& (0+255),w,b
  6509   00C880  0101               	movlb	1	; () banked
  6510   00C882  59E2               	subwfb	(ReadAllEEPROMDataCSV@i+2)& (0+255),w,b
  6511   00C884  0100               	movlb	0	; () banked
  6512   00C886  51B2               	movf	(ReadAllEEPROMDataCSV@totalLogged+3)& (0+255),w,b
  6513   00C888  0101               	movlb	1	; () banked
  6514   00C88A  59E3               	subwfb	(ReadAllEEPROMDataCSV@i+3)& (0+255),w,b
  6515   00C88C  A0D8               	btfss	status,0,c
  6516   00C88E  EF4B  F064         	goto	u11241
  6517   00C892  EF4D  F064         	goto	u11240
  6518   00C896                     u11241:
  6519   00C896  EF68  F063         	goto	l10858
  6520   00C89A                     u11240:
  6521   00C89A                     
  6522                           ; BSR set to: 1
  6523   00C89A  0012               	return		;funcret
  6524   00C89C                     __end_of_ReadAllEEPROMDataCSV:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function _sprintf *****************
  6528 ;; Defined at:
  6529 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  s               2   51[BANK0 ] PTR unsigned char 
  6532 ;;		 -> main@buffer(200), ReadAllEEPROMDataCSV@buffer(200), ReadAndSendEEPROMData@buffer(200), ReadAndSendEEPROMDataCSV@
      +buffer(200), 
  6533 ;;		 -> Handle_LOG_STAT@buffer(200), 
  6534 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  6535 ;;		 -> STR_19(50), STR_12(46), STR_11(46), STR_10(31), 
  6536 ;;		 -> STR_5(69), STR_3(31), STR_1(50), 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  f              12   79[COMRAM] struct _IO_FILE
  6539 ;;  ret             2    0        int 
  6540 ;;  ap              1   78[COMRAM] PTR void [1]
  6541 ;;		 -> ?_sprintf(2), 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  2   51[BANK0 ] int 
  6544 ;; Registers used:
  6545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6551 ;;      Params:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Totals:        13      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;Total ram usage:       41 bytes
  6556 ;; Hardware stack levels used: 1
  6557 ;; Hardware stack levels required when called: 8
  6558 ;; This function calls:
  6559 ;;		_vfprintf
  6560 ;; This function is called by:
  6561 ;;		_ReadAndSendEEPROMDataCSV
  6562 ;;		_ReadAndSendEEPROMData
  6563 ;;		_ReadAllEEPROMDataCSV
  6564 ;;		_main
  6565 ;;		_Handle_LOG_STAT
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text30
  6570   00A8EC                     __ptext30:
  6571                           	callstack 0
  6572   00A8EC                     _sprintf:
  6573                           	callstack 22
  6574   00A8EC  0E97               	movlw	low (?_sprintf+4)
  6575   00A8EE  6E4F               	movwf	sprintf@ap^0,c
  6576   00A8F0  C093  F050         	movff	sprintf@s,sprintf@f
  6577   00A8F4  C094  F051         	movff	sprintf@s+1,sprintf@f+1
  6578   00A8F8  0E00               	movlw	0
  6579   00A8FA  6E54               	movwf	(sprintf@f+4)^0,c
  6580   00A8FC  0E00               	movlw	0
  6581   00A8FE  6E53               	movwf	(sprintf@f+3)^0,c
  6582   00A900  0E00               	movlw	0
  6583   00A902  6E5B               	movwf	(sprintf@f+11)^0,c
  6584   00A904  0E00               	movlw	0
  6585   00A906  6E5A               	movwf	(sprintf@f+10)^0,c
  6586   00A908  0E50               	movlw	low sprintf@f
  6587   00A90A  0100               	movlb	0	; () banked
  6588   00A90C  6F8F               	movwf	vfprintf@fp& (0+255),b
  6589   00A90E  C095  F090         	movff	sprintf@fmt,vfprintf@fmt
  6590   00A912  C096  F091         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6591   00A916  0E4F               	movlw	low sprintf@ap
  6592   00A918  6F92               	movwf	vfprintf@ap& (0+255),b
  6593   00A91A  EC4D  F055         	call	_vfprintf	;wreg free
  6594   00A91E  5053               	movf	(sprintf@f+3)^0,w,c
  6595   00A920  0100               	movlb	0	; () banked
  6596   00A922  2593               	addwf	sprintf@s& (0+255),w,b
  6597   00A924  6ED9               	movwf	fsr2l,c
  6598   00A926  5054               	movf	(sprintf@f+4)^0,w,c
  6599   00A928  2194               	addwfc	(sprintf@s+1)& (0+255),w,b
  6600   00A92A  6EDA               	movwf	fsr2h,c
  6601   00A92C  6ADF               	clrf	indf2,c
  6602   00A92E                     
  6603                           ; BSR set to: 0
  6604   00A92E  0012               	return		;funcret
  6605   00A930                     __end_of_sprintf:
  6606                           	callstack 0
  6607                           
  6608 ;; *************** function _vfprintf *****************
  6609 ;; Defined at:
  6610 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  fp              1   47[BANK0 ] PTR struct _IO_FILE
  6613 ;;		 -> sprintf@f(12), 
  6614 ;;  fmt             2   48[BANK0 ] PTR const unsigned char 
  6615 ;;		 -> STR_19(50), STR_12(46), STR_11(46), STR_10(31), 
  6616 ;;		 -> STR_5(69), STR_3(31), STR_1(50), 
  6617 ;;  ap              1   50[BANK0 ] PTR PTR void 
  6618 ;;		 -> sprintf@ap(1), 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  6621 ;;		 -> STR_19(50), STR_12(46), STR_11(46), STR_10(31), 
  6622 ;;		 -> STR_5(69), STR_3(31), STR_1(50), 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  2   47[BANK0 ] int 
  6625 ;; Registers used:
  6626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;Total ram usage:        6 bytes
  6637 ;; Hardware stack levels used: 1
  6638 ;; Hardware stack levels required when called: 7
  6639 ;; This function calls:
  6640 ;;		_vfpfcnvrt
  6641 ;; This function is called by:
  6642 ;;		_sprintf
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text31
  6647   00AA9A                     __ptext31:
  6648                           	callstack 0
  6649   00AA9A                     _vfprintf:
  6650                           	callstack 22
  6651   00AA9A                     
  6652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6653   00AA9A  C090  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  6654   00AA9E  C091  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6655                           
  6656                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6657   00AAA2  EF5C  F055         	goto	l10304
  6658   00AAA6                     l10302:
  6659                           
  6660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6661   00AAA6  C08F  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6662   00AAAA  0E4D               	movlw	low vfprintf@cfmt
  6663   00AAAC  0100               	movlb	0	; () banked
  6664   00AAAE  6F8D               	movwf	vfpfcnvrt@fmt& (0+255),b
  6665   00AAB0  C092  F08E         	movff	vfprintf@ap,vfpfcnvrt@ap
  6666   00AAB4  ECB0  F072         	call	_vfpfcnvrt	;wreg free
  6667   00AAB8                     l10304:
  6668                           
  6669                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6670   00AAB8  0060  F137  FFF6   	movff	vfprintf@cfmt,tblptrl
  6671   00AABE  0060  F13B  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  6672   00AAC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6673   00AAC4  6AF8               	clrf	tblptru,c
  6674   00AAC6                     	endif
  6675   00AAC6                     	if	0	;tblptru may be non-zero
  6676   00AAC6                     	endif
  6677   00AAC6  0008               	tblrd		*
  6678   00AAC8  50F5               	movf	tablat,w,c
  6679   00AACA  0900               	iorlw	0
  6680   00AACC  A4D8               	btfss	status,2,c
  6681   00AACE  EF6B  F055         	goto	u10581
  6682   00AAD2  EF6D  F055         	goto	u10580
  6683   00AAD6                     u10581:
  6684   00AAD6  EF53  F055         	goto	l10302
  6685   00AADA                     u10580:
  6686   00AADA                     
  6687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6688   00AADA  0E00               	movlw	0
  6689   00AADC  0100               	movlb	0	; () banked
  6690   00AADE  6F90               	movwf	(?_vfprintf+1)& (0+255),b
  6691   00AAE0  0E00               	movlw	0
  6692   00AAE2  6F8F               	movwf	?_vfprintf& (0+255),b
  6693   00AAE4                     
  6694                           ; BSR set to: 0
  6695   00AAE4  0012               	return		;funcret
  6696   00AAE6                     __end_of_vfprintf:
  6697                           	callstack 0
  6698                           
  6699 ;; *************** function _vfpfcnvrt *****************
  6700 ;; Defined at:
  6701 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  6704 ;;		 -> sprintf@f(12), 
  6705 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  6706 ;;		 -> vfprintf@cfmt(2), 
  6707 ;;  ap              1   46[BANK0 ] PTR PTR void 
  6708 ;;		 -> sprintf@ap(1), 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  convarg         4   69[COMRAM] struct .
  6711 ;;  cp              2   74[COMRAM] PTR unsigned char 
  6712 ;;		 -> STR_19(50), STR_12(46), STR_11(46), STR_10(31), 
  6713 ;;		 -> STR_5(69), STR_3(31), STR_1(50), 
  6714 ;;  c               1   73[COMRAM] unsigned char 
  6715 ;;  done            1    0        _Bool 
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6725 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Totals:         9       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;Total ram usage:       12 bytes
  6730 ;; Hardware stack levels used: 1
  6731 ;; Hardware stack levels required when called: 6
  6732 ;; This function calls:
  6733 ;;		_efgtoa
  6734 ;;		_fputc
  6735 ;;		_read_prec_or_width
  6736 ;;		_utoa
  6737 ;;		_xtoa
  6738 ;; This function is called by:
  6739 ;;		_vfprintf
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text32
  6744   00E560                     __ptext32:
  6745                           	callstack 0
  6746   00E560                     _vfpfcnvrt:
  6747                           	callstack 22
  6748   00E560                     
  6749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6750   00E560  0100               	movlb	0	; () banked
  6751   00E562  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6752   00E564  6ED9               	movwf	fsr2l,c
  6753   00E566  6ADA               	clrf	fsr2h,c
  6754   00E568  006F FF7B FFF6     	movff	postinc2,tblptrl
  6755   00E56E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6756   00E574                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6757   00E574  6AF8               	clrf	tblptru,c
  6758   00E576                     	endif
  6759   00E576                     	if	0	;tblptru may be non-zero
  6760   00E576                     	endif
  6761   00E576  0008               	tblrd		*
  6762   00E578  50F5               	movf	tablat,w,c
  6763   00E57A  0A25               	xorlw	37
  6764   00E57C  A4D8               	btfss	status,2,c
  6765   00E57E  EFC3  F072         	goto	u10381
  6766   00E582  EFC5  F072         	goto	u10380
  6767   00E586                     u10381:
  6768   00E586  EFC3  F074         	goto	l10176
  6769   00E58A                     u10380:
  6770   00E58A                     
  6771                           ; BSR set to: 0
  6772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6773   00E58A  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6774   00E58C  6ED9               	movwf	fsr2l,c
  6775   00E58E  6ADA               	clrf	fsr2h,c
  6776   00E590  2ADE               	incf	postinc2,f,c
  6777   00E592  0E00               	movlw	0
  6778   00E594  22DD               	addwfc	postdec2,f,c
  6779   00E596                     
  6780                           ; BSR set to: 0
  6781                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6782   00E596  0E00               	movlw	0
  6783   00E598  6FC2               	movwf	(_width+1)& (0+255),b
  6784   00E59A  0E00               	movlw	0
  6785   00E59C  6FC1               	movwf	_width& (0+255),b
  6786   00E59E  C0C1  F0CA         	movff	_width,_flags
  6787   00E5A2                     
  6788                           ; BSR set to: 0
  6789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6790   00E5A2  69C3               	setf	_prec& (0+255),b
  6791   00E5A4  69C4               	setf	(_prec+1)& (0+255),b
  6792   00E5A6                     
  6793                           ; BSR set to: 0
  6794                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  6795   00E5A6  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6796   00E5A8  6ED9               	movwf	fsr2l,c
  6797   00E5AA  6ADA               	clrf	fsr2h,c
  6798   00E5AC  006F FF7B FFF6     	movff	postinc2,tblptrl
  6799   00E5B2  006F FF77 FFF7     	movff	postdec2,tblptrh
  6800   00E5B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6801   00E5B8  6AF8               	clrf	tblptru,c
  6802   00E5BA                     	endif
  6803   00E5BA                     	if	0	;tblptru may be non-zero
  6804   00E5BA                     	endif
  6805   00E5BA  0008               	tblrd		*
  6806   00E5BC  50F5               	movf	tablat,w,c
  6807   00E5BE  0A2E               	xorlw	46
  6808   00E5C0  A4D8               	btfss	status,2,c
  6809   00E5C2  EFE5  F072         	goto	u10391
  6810   00E5C6  EFE7  F072         	goto	u10390
  6811   00E5CA                     u10391:
  6812   00E5CA  EFF7  F072         	goto	l10098
  6813   00E5CE                     u10390:
  6814   00E5CE                     
  6815                           ; BSR set to: 0
  6816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  6817   00E5CE  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6818   00E5D0  6ED9               	movwf	fsr2l,c
  6819   00E5D2  6ADA               	clrf	fsr2h,c
  6820   00E5D4  2ADE               	incf	postinc2,f,c
  6821   00E5D6  0E00               	movlw	0
  6822   00E5D8  22DD               	addwfc	postdec2,f,c
  6823   00E5DA                     
  6824                           ; BSR set to: 0
  6825                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  6826   00E5DA  C08D  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6827   00E5DE  C08E  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6828   00E5E2  ECFC  F05C         	call	_read_prec_or_width	;wreg free
  6829   00E5E6  C007  F0C3         	movff	?_read_prec_or_width,_prec
  6830   00E5EA  C008  F0C4         	movff	?_read_prec_or_width+1,_prec+1
  6831   00E5EE                     l10098:
  6832                           
  6833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6834   00E5EE  0100               	movlb	0	; () banked
  6835   00E5F0  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6836   00E5F2  6ED9               	movwf	fsr2l,c
  6837   00E5F4  6ADA               	clrf	fsr2h,c
  6838   00E5F6  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@cp
  6839   00E5FC  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@cp+1
  6840   00E602                     
  6841                           ; BSR set to: 0
  6842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  6843   00E602  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6844   00E608  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6845   00E60E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6846   00E60E  6AF8               	clrf	tblptru,c
  6847   00E610                     	endif
  6848   00E610                     	if	0	;tblptru may be non-zero
  6849   00E610                     	endif
  6850   00E610  0008               	tblrd		*
  6851   00E612  006F FFD4  F04A    	movff	tablat,vfpfcnvrt@c
  6852                           
  6853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  6854   00E618  EF1A  F073         	goto	l10110
  6855   00E61C                     l10102:
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  6859   00E61C  4A4B               	infsnz	vfpfcnvrt@cp^0,f,c
  6860   00E61E  2A4C               	incf	(vfpfcnvrt@cp+1)^0,f,c
  6861                           
  6862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1316:     break;
  6863   00E620  EF33  F073         	goto	l10112
  6864   00E624                     l10104:
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  6868   00E624  0E69               	movlw	105
  6869   00E626  6E4A               	movwf	vfpfcnvrt@c^0,c
  6870                           
  6871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1351:     break;
  6872   00E628  EF33  F073         	goto	l10112
  6873   00E62C                     l10106:
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  6877   00E62C  0E00               	movlw	0
  6878   00E62E  6E4A               	movwf	vfpfcnvrt@c^0,c
  6879                           
  6880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1354:     break;
  6881   00E630  EF33  F073         	goto	l10112
  6882   00E634                     l10110:
  6883                           
  6884                           ; BSR set to: 0
  6885   00E634  504A               	movf	vfpfcnvrt@c^0,w,c
  6886   00E636  6E44               	movwf	??_vfpfcnvrt^0,c
  6887   00E638  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  6888                           
  6889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6890                           ; Switch size 1, requested type "simple"
  6891                           ; Number of cases is 1, Range of values is 0 to 0
  6892                           ; switch strategies available:
  6893                           ; Name         Instructions Cycles
  6894                           ; simple_byte            4     3 (average)
  6895                           ;	Chosen strategy is simple_byte
  6896   00E63A  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  6897   00E63C  0A00               	xorlw	0	; case 0
  6898   00E63E  B4D8               	btfsc	status,2,c
  6899   00E640  EF24  F073         	goto	l11376
  6900   00E644  EF16  F073         	goto	l10106
  6901   00E648                     l11376:
  6902                           
  6903                           ; BSR set to: 0
  6904                           ; Switch size 1, requested type "simple"
  6905                           ; Number of cases is 3, Range of values is 88 to 117
  6906                           ; switch strategies available:
  6907                           ; Name         Instructions Cycles
  6908                           ; simple_byte           10     6 (average)
  6909                           ;	Chosen strategy is simple_byte
  6910   00E648  5044               	movf	??_vfpfcnvrt^0,w,c
  6911   00E64A  0A58               	xorlw	88	; case 88
  6912   00E64C  B4D8               	btfsc	status,2,c
  6913   00E64E  EF12  F073         	goto	l10104
  6914   00E652  0A34               	xorlw	52	; case 108
  6915   00E654  B4D8               	btfsc	status,2,c
  6916   00E656  EF0E  F073         	goto	l10102
  6917   00E65A  0A19               	xorlw	25	; case 117
  6918   00E65C  B4D8               	btfsc	status,2,c
  6919   00E65E  EF12  F073         	goto	l10104
  6920   00E662  EF16  F073         	goto	l10106
  6921   00E666                     l10112:
  6922                           
  6923                           ; BSR set to: 0
  6924   00E666  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6925   00E66C  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6926   00E672                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6927   00E672  6AF8               	clrf	tblptru,c
  6928   00E674                     	endif
  6929   00E674                     	if	0	;tblptru may be non-zero
  6930   00E674                     	endif
  6931   00E674  0008               	tblrd		*
  6932   00E676  50F5               	movf	tablat,w,c
  6933   00E678  0A58               	xorlw	88
  6934   00E67A  B4D8               	btfsc	status,2,c
  6935   00E67C  EF42  F073         	goto	u10401
  6936   00E680  EF44  F073         	goto	u10400
  6937   00E684                     u10401:
  6938   00E684  EF83  F073         	goto	l10122
  6939   00E688                     u10400:
  6940   00E688                     
  6941                           ; BSR set to: 0
  6942   00E688  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6943   00E68E  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6944   00E694                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6945   00E694  6AF8               	clrf	tblptru,c
  6946   00E696                     	endif
  6947   00E696                     	if	0	;tblptru may be non-zero
  6948   00E696                     	endif
  6949   00E696  0008               	tblrd		*
  6950   00E698  50F5               	movf	tablat,w,c
  6951   00E69A  0A75               	xorlw	117
  6952   00E69C  A4D8               	btfss	status,2,c
  6953   00E69E  EF53  F073         	goto	u10411
  6954   00E6A2  EF55  F073         	goto	u10410
  6955   00E6A6                     u10411:
  6956   00E6A6  EFE2  F073         	goto	l10138
  6957   00E6AA                     u10410:
  6958   00E6AA  EF83  F073         	goto	l10122
  6959   00E6AE                     l10116:
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  6963   00E6AE  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  6964   00E6B0  6ED9               	movwf	fsr2l,c
  6965   00E6B2  6ADA               	clrf	fsr2h,c
  6966   00E6B4  50DF               	movf	indf2,w,c
  6967   00E6B6  2ADF               	incf	indf2,f,c
  6968   00E6B8  2ADF               	incf	indf2,f,c
  6969   00E6BA  6ED9               	movwf	fsr2l,c
  6970   00E6BC  6ADA               	clrf	fsr2h,c
  6971   00E6BE  006F FF78  F044    	movff	postinc2,??_vfpfcnvrt
  6972   00E6C4  006F FF74  F045    	movff	postdec2,??_vfpfcnvrt+1
  6973   00E6CA  C044  F046         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
  6974   00E6CE  C045  F047         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
  6975   00E6D2  6A48               	clrf	(vfpfcnvrt@convarg+2)^0,c
  6976   00E6D4  6A49               	clrf	(vfpfcnvrt@convarg+3)^0,c
  6977                           
  6978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1457:      break;
  6979   00E6D6  EF98  F073         	goto	l10124
  6980   00E6DA                     l10118:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  6984   00E6DA  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  6985   00E6DC  6ED9               	movwf	fsr2l,c
  6986   00E6DE  6ADA               	clrf	fsr2h,c
  6987   00E6E0  0E04               	movlw	4
  6988   00E6E2  26DF               	addwf	indf2,f,c
  6989   00E6E4  5CDF               	subwf	indf2,w,c
  6990   00E6E6  6ED9               	movwf	fsr2l,c
  6991   00E6E8  6ADA               	clrf	fsr2h,c
  6992   00E6EA  006F FF78  F046    	movff	postinc2,vfpfcnvrt@convarg
  6993   00E6F0  006F FF78  F047    	movff	postinc2,vfpfcnvrt@convarg+1
  6994   00E6F6  006F FF78  F048    	movff	postinc2,vfpfcnvrt@convarg+2
  6995   00E6FC  006F FF78  F049    	movff	postinc2,vfpfcnvrt@convarg+3
  6996                           
  6997                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1471:      break;
  6998   00E702  EF98  F073         	goto	l10124
  6999   00E706                     l10122:
  7000                           
  7001                           ; BSR set to: 0
  7002   00E706  504A               	movf	vfpfcnvrt@c^0,w,c
  7003   00E708  6E44               	movwf	??_vfpfcnvrt^0,c
  7004   00E70A  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  7005                           
  7006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7007                           ; Switch size 1, requested type "simple"
  7008                           ; Number of cases is 1, Range of values is 0 to 0
  7009                           ; switch strategies available:
  7010                           ; Name         Instructions Cycles
  7011                           ; simple_byte            4     3 (average)
  7012                           ;	Chosen strategy is simple_byte
  7013   00E70C  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  7014   00E70E  0A00               	xorlw	0	; case 0
  7015   00E710  B4D8               	btfsc	status,2,c
  7016   00E712  EF8D  F073         	goto	l11378
  7017   00E716  EF98  F073         	goto	l10124
  7018   00E71A                     l11378:
  7019                           
  7020                           ; BSR set to: 0
  7021                           ; Switch size 1, requested type "simple"
  7022                           ; Number of cases is 2, Range of values is 105 to 108
  7023                           ; switch strategies available:
  7024                           ; Name         Instructions Cycles
  7025                           ; simple_byte            7     4 (average)
  7026                           ;	Chosen strategy is simple_byte
  7027   00E71A  5044               	movf	??_vfpfcnvrt^0,w,c
  7028   00E71C  0A69               	xorlw	105	; case 105
  7029   00E71E  B4D8               	btfsc	status,2,c
  7030   00E720  EF57  F073         	goto	l10116
  7031   00E724  0A05               	xorlw	5	; case 108
  7032   00E726  B4D8               	btfsc	status,2,c
  7033   00E728  EF6D  F073         	goto	l10118
  7034   00E72C  EF98  F073         	goto	l10124
  7035   00E730                     l10124:
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  7039   00E730  0E01               	movlw	1
  7040   00E732  244B               	addwf	vfpfcnvrt@cp^0,w,c
  7041   00E734  6E44               	movwf	??_vfpfcnvrt^0,c
  7042   00E736  0E00               	movlw	0
  7043   00E738  204C               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  7044   00E73A  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  7045   00E73C  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7046   00E73E  6ED9               	movwf	fsr2l,c
  7047   00E740  6ADA               	clrf	fsr2h,c
  7048   00E742  0060  F113  FFDE   	movff	??_vfpfcnvrt,postinc2
  7049   00E748  0060  F117  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  7050                           
  7051                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  7052   00E74E  EFC5  F073         	goto	l10136
  7053   00E752                     l10126:
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  7057   00E752  C08C  F019         	movff	vfpfcnvrt@fp,utoa@fp
  7058   00E756  C046  F01A         	movff	vfpfcnvrt@convarg,utoa@d
  7059   00E75A  C047  F01B         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  7060   00E75E  C048  F01C         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  7061   00E762  C049  F01D         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  7062   00E766  EC2D  F060         	call	_utoa	;wreg free
  7063   00E76A  EFD7  F074         	goto	l1807
  7064   00E76E                     l10130:
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  7068   00E76E  C08C  F019         	movff	vfpfcnvrt@fp,xtoa@fp
  7069   00E772  C046  F01A         	movff	vfpfcnvrt@convarg,xtoa@d
  7070   00E776  C047  F01B         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  7071   00E77A  C048  F01C         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  7072   00E77E  C049  F01D         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  7073   00E782  EC4B  F061         	call	_xtoa	;wreg free
  7074   00E786  EFD7  F074         	goto	l1807
  7075   00E78A                     l10136:
  7076                           
  7077                           ; BSR set to: 0
  7078   00E78A  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  7079   00E790  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  7080   00E796                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7081   00E796  6AF8               	clrf	tblptru,c
  7082   00E798                     	endif
  7083   00E798                     	if	0	;tblptru may be non-zero
  7084   00E798                     	endif
  7085   00E798  0008               	tblrd		*
  7086   00E79A  50F5               	movf	tablat,w,c
  7087   00E79C  6E44               	movwf	??_vfpfcnvrt^0,c
  7088   00E79E  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  7089                           
  7090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7091                           ; Switch size 1, requested type "simple"
  7092                           ; Number of cases is 1, Range of values is 0 to 0
  7093                           ; switch strategies available:
  7094                           ; Name         Instructions Cycles
  7095                           ; simple_byte            4     3 (average)
  7096                           ;	Chosen strategy is simple_byte
  7097   00E7A0  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  7098   00E7A2  0A00               	xorlw	0	; case 0
  7099   00E7A4  B4D8               	btfsc	status,2,c
  7100   00E7A6  EFD7  F073         	goto	l11380
  7101   00E7AA  EFE2  F073         	goto	l10138
  7102   00E7AE                     l11380:
  7103                           
  7104                           ; BSR set to: 0
  7105                           ; Switch size 1, requested type "simple"
  7106                           ; Number of cases is 2, Range of values is 88 to 117
  7107                           ; switch strategies available:
  7108                           ; Name         Instructions Cycles
  7109                           ; simple_byte            7     4 (average)
  7110                           ;	Chosen strategy is simple_byte
  7111   00E7AE  5044               	movf	??_vfpfcnvrt^0,w,c
  7112   00E7B0  0A58               	xorlw	88	; case 88
  7113   00E7B2  B4D8               	btfsc	status,2,c
  7114   00E7B4  EFB7  F073         	goto	l10130
  7115   00E7B8  0A2D               	xorlw	45	; case 117
  7116   00E7BA  B4D8               	btfsc	status,2,c
  7117   00E7BC  EFA9  F073         	goto	l10126
  7118   00E7C0  EFE2  F073         	goto	l10138
  7119   00E7C4                     l10138:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  7123   00E7C4  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7124   00E7C6  6ED9               	movwf	fsr2l,c
  7125   00E7C8  6ADA               	clrf	fsr2h,c
  7126   00E7CA  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@cp
  7127   00E7D0  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@cp+1
  7128   00E7D6                     
  7129                           ; BSR set to: 0
  7130                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  7131   00E7D6  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  7132   00E7DC  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  7133   00E7E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7134   00E7E2  6AF8               	clrf	tblptru,c
  7135   00E7E4                     	endif
  7136   00E7E4                     	if	0	;tblptru may be non-zero
  7137   00E7E4                     	endif
  7138   00E7E4  0008               	tblrd		*
  7139   00E7E6  006F FFD4  F04A    	movff	tablat,vfpfcnvrt@c
  7140                           
  7141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  7142   00E7EC  EF04  F074         	goto	l10150
  7143   00E7F0                     l10142:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  7147   00E7F0  4A4B               	infsnz	vfpfcnvrt@cp^0,f,c
  7148   00E7F2  2A4C               	incf	(vfpfcnvrt@cp+1)^0,f,c
  7149                           
  7150                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  7151   00E7F4  EF1D  F074         	goto	l10152
  7152   00E7F8                     l10144:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  7156   00E7F8  0E6C               	movlw	108
  7157   00E7FA  6E4A               	movwf	vfpfcnvrt@c^0,c
  7158                           
  7159                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  7160   00E7FC  EF1D  F074         	goto	l10152
  7161   00E800                     l10146:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  7165   00E800  0E00               	movlw	0
  7166   00E802  6E4A               	movwf	vfpfcnvrt@c^0,c
  7167                           
  7168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  7169   00E804  EF1D  F074         	goto	l10152
  7170   00E808                     l10150:
  7171                           
  7172                           ; BSR set to: 0
  7173   00E808  504A               	movf	vfpfcnvrt@c^0,w,c
  7174   00E80A  6E44               	movwf	??_vfpfcnvrt^0,c
  7175   00E80C  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  7176                           
  7177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7178                           ; Switch size 1, requested type "simple"
  7179                           ; Number of cases is 1, Range of values is 0 to 0
  7180                           ; switch strategies available:
  7181                           ; Name         Instructions Cycles
  7182                           ; simple_byte            4     3 (average)
  7183                           ;	Chosen strategy is simple_byte
  7184   00E80E  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  7185   00E810  0A00               	xorlw	0	; case 0
  7186   00E812  B4D8               	btfsc	status,2,c
  7187   00E814  EF0E  F074         	goto	l11382
  7188   00E818  EF00  F074         	goto	l10146
  7189   00E81C                     l11382:
  7190                           
  7191                           ; BSR set to: 0
  7192                           ; Switch size 1, requested type "simple"
  7193                           ; Number of cases is 3, Range of values is 76 to 108
  7194                           ; switch strategies available:
  7195                           ; Name         Instructions Cycles
  7196                           ; simple_byte           10     6 (average)
  7197                           ;	Chosen strategy is simple_byte
  7198   00E81C  5044               	movf	??_vfpfcnvrt^0,w,c
  7199   00E81E  0A4C               	xorlw	76	; case 76
  7200   00E820  B4D8               	btfsc	status,2,c
  7201   00E822  EFF8  F073         	goto	l10142
  7202   00E826  0A2A               	xorlw	42	; case 102
  7203   00E828  B4D8               	btfsc	status,2,c
  7204   00E82A  EFFC  F073         	goto	l10144
  7205   00E82E  0A0A               	xorlw	10	; case 108
  7206   00E830  B4D8               	btfsc	status,2,c
  7207   00E832  EFF8  F073         	goto	l10142
  7208   00E836  EF00  F074         	goto	l10146
  7209   00E83A                     l10152:
  7210                           
  7211                           ; BSR set to: 0
  7212   00E83A  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  7213   00E840  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  7214   00E846                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7215   00E846  6AF8               	clrf	tblptru,c
  7216   00E848                     	endif
  7217   00E848                     	if	0	;tblptru may be non-zero
  7218   00E848                     	endif
  7219   00E848  0008               	tblrd		*
  7220   00E84A  50F5               	movf	tablat,w,c
  7221   00E84C  0A66               	xorlw	102
  7222   00E84E  A4D8               	btfss	status,2,c
  7223   00E850  EF2C  F074         	goto	u10421
  7224   00E854  EF2E  F074         	goto	u10420
  7225   00E858                     u10421:
  7226   00E858  EFBA  F074         	goto	l10172
  7227   00E85C                     u10420:
  7228   00E85C  EF62  F074         	goto	l10160
  7229   00E860                     l10154:
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7233   00E860  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  7234   00E862  6ED9               	movwf	fsr2l,c
  7235   00E864  6ADA               	clrf	fsr2h,c
  7236   00E866  006F FF7C  F044    	movff	indf2,??_vfpfcnvrt
  7237   00E86C  0E04               	movlw	4
  7238   00E86E  26DF               	addwf	indf2,f,c
  7239   00E870  5044               	movf	??_vfpfcnvrt^0,w,c
  7240   00E872  6ED9               	movwf	fsr2l,c
  7241   00E874  6ADA               	clrf	fsr2h,c
  7242   00E876  006F FF78  F046    	movff	postinc2,vfpfcnvrt@convarg
  7243   00E87C  006F FF78  F047    	movff	postinc2,vfpfcnvrt@convarg+1
  7244   00E882  006F FF78  F048    	movff	postinc2,vfpfcnvrt@convarg+2
  7245   00E888  006F FF78  F049    	movff	postinc2,vfpfcnvrt@convarg+3
  7246                           
  7247                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  7248   00E88E  EF77  F074         	goto	l10162
  7249   00E892                     l10156:
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7253   00E892  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  7254   00E894  6ED9               	movwf	fsr2l,c
  7255   00E896  6ADA               	clrf	fsr2h,c
  7256   00E898  006F FF7C  F044    	movff	indf2,??_vfpfcnvrt
  7257   00E89E  0E04               	movlw	4
  7258   00E8A0  26DF               	addwf	indf2,f,c
  7259   00E8A2  5044               	movf	??_vfpfcnvrt^0,w,c
  7260   00E8A4  6ED9               	movwf	fsr2l,c
  7261   00E8A6  6ADA               	clrf	fsr2h,c
  7262   00E8A8  006F FF78  F046    	movff	postinc2,vfpfcnvrt@convarg
  7263   00E8AE  006F FF78  F047    	movff	postinc2,vfpfcnvrt@convarg+1
  7264   00E8B4  006F FF78  F048    	movff	postinc2,vfpfcnvrt@convarg+2
  7265   00E8BA  006F FF78  F049    	movff	postinc2,vfpfcnvrt@convarg+3
  7266                           
  7267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  7268   00E8C0  EF77  F074         	goto	l10162
  7269   00E8C4                     l10160:
  7270                           
  7271                           ; BSR set to: 0
  7272   00E8C4  504A               	movf	vfpfcnvrt@c^0,w,c
  7273   00E8C6  6E44               	movwf	??_vfpfcnvrt^0,c
  7274   00E8C8  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  7275                           
  7276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7277                           ; Switch size 1, requested type "simple"
  7278                           ; Number of cases is 1, Range of values is 0 to 0
  7279                           ; switch strategies available:
  7280                           ; Name         Instructions Cycles
  7281                           ; simple_byte            4     3 (average)
  7282                           ;	Chosen strategy is simple_byte
  7283   00E8CA  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  7284   00E8CC  0A00               	xorlw	0	; case 0
  7285   00E8CE  B4D8               	btfsc	status,2,c
  7286   00E8D0  EF6C  F074         	goto	l11384
  7287   00E8D4  EF77  F074         	goto	l10162
  7288   00E8D8                     l11384:
  7289                           
  7290                           ; BSR set to: 0
  7291                           ; Switch size 1, requested type "simple"
  7292                           ; Number of cases is 2, Range of values is 76 to 108
  7293                           ; switch strategies available:
  7294                           ; Name         Instructions Cycles
  7295                           ; simple_byte            7     4 (average)
  7296                           ;	Chosen strategy is simple_byte
  7297   00E8D8  5044               	movf	??_vfpfcnvrt^0,w,c
  7298   00E8DA  0A4C               	xorlw	76	; case 76
  7299   00E8DC  B4D8               	btfsc	status,2,c
  7300   00E8DE  EF49  F074         	goto	l10156
  7301   00E8E2  0A20               	xorlw	32	; case 108
  7302   00E8E4  B4D8               	btfsc	status,2,c
  7303   00E8E6  EF30  F074         	goto	l10154
  7304   00E8EA  EF77  F074         	goto	l10162
  7305   00E8EE                     l10162:
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  7309   00E8EE  0E01               	movlw	1
  7310   00E8F0  244B               	addwf	vfpfcnvrt@cp^0,w,c
  7311   00E8F2  6E44               	movwf	??_vfpfcnvrt^0,c
  7312   00E8F4  0E00               	movlw	0
  7313   00E8F6  204C               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  7314   00E8F8  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  7315   00E8FA  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7316   00E8FC  6ED9               	movwf	fsr2l,c
  7317   00E8FE  6ADA               	clrf	fsr2h,c
  7318   00E900  0060  F113  FFDE   	movff	??_vfpfcnvrt,postinc2
  7319   00E906  0060  F117  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  7320                           
  7321                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  7322   00E90C  EFA1  F074         	goto	l10170
  7323   00E910                     l10164:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  7327   00E910  C08C  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  7328   00E914  C046  F03D         	movff	vfpfcnvrt@convarg,efgtoa@f
  7329   00E918  C047  F03E         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  7330   00E91C  C048  F03F         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  7331   00E920  C049  F040         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  7332   00E924  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  7333   00E92A  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  7334   00E930                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7335   00E930  6AF8               	clrf	tblptru,c
  7336   00E932                     	endif
  7337   00E932                     	if	0	;tblptru may be non-zero
  7338   00E932                     	endif
  7339   00E932  0008               	tblrd		*
  7340   00E934  006F FFD4  F041    	movff	tablat,efgtoa@c
  7341   00E93A  ECFE  F079         	call	_efgtoa	;wreg free
  7342   00E93E  EFD7  F074         	goto	l1807
  7343   00E942                     l10170:
  7344                           
  7345                           ; BSR set to: 0
  7346   00E942  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  7347   00E948  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  7348   00E94E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7349   00E94E  6AF8               	clrf	tblptru,c
  7350   00E950                     	endif
  7351   00E950                     	if	0	;tblptru may be non-zero
  7352   00E950                     	endif
  7353   00E950  0008               	tblrd		*
  7354   00E952  50F5               	movf	tablat,w,c
  7355   00E954  6E44               	movwf	??_vfpfcnvrt^0,c
  7356   00E956  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  7357                           
  7358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7359                           ; Switch size 1, requested type "simple"
  7360                           ; Number of cases is 1, Range of values is 0 to 0
  7361                           ; switch strategies available:
  7362                           ; Name         Instructions Cycles
  7363                           ; simple_byte            4     3 (average)
  7364                           ;	Chosen strategy is simple_byte
  7365   00E958  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  7366   00E95A  0A00               	xorlw	0	; case 0
  7367   00E95C  B4D8               	btfsc	status,2,c
  7368   00E95E  EFB3  F074         	goto	l11386
  7369   00E962  EFBA  F074         	goto	l10172
  7370   00E966                     l11386:
  7371                           
  7372                           ; BSR set to: 0
  7373                           ; Switch size 1, requested type "simple"
  7374                           ; Number of cases is 1, Range of values is 102 to 102
  7375                           ; switch strategies available:
  7376                           ; Name         Instructions Cycles
  7377                           ; simple_byte            4     3 (average)
  7378                           ;	Chosen strategy is simple_byte
  7379   00E966  5044               	movf	??_vfpfcnvrt^0,w,c
  7380   00E968  0A66               	xorlw	102	; case 102
  7381   00E96A  B4D8               	btfsc	status,2,c
  7382   00E96C  EF88  F074         	goto	l10164
  7383   00E970  EFBA  F074         	goto	l10172
  7384   00E974                     l10172:
  7385                           
  7386                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7387   00E974  0100               	movlb	0	; () banked
  7388   00E976  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7389   00E978  6ED9               	movwf	fsr2l,c
  7390   00E97A  6ADA               	clrf	fsr2h,c
  7391   00E97C  2ADE               	incf	postinc2,f,c
  7392   00E97E  0E00               	movlw	0
  7393   00E980  22DD               	addwfc	postdec2,f,c
  7394   00E982  EFD7  F074         	goto	l1807
  7395   00E986                     l10176:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7399   00E986  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7400   00E988  6ED9               	movwf	fsr2l,c
  7401   00E98A  6ADA               	clrf	fsr2h,c
  7402   00E98C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7403   00E992  006F FF77 FFF7     	movff	postdec2,tblptrh
  7404   00E998                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7405   00E998  6AF8               	clrf	tblptru,c
  7406   00E99A                     	endif
  7407   00E99A                     	if	0	;tblptru may be non-zero
  7408   00E99A                     	endif
  7409   00E99A  0008               	tblrd		*
  7410   00E99C  50F5               	movf	tablat,w,c
  7411   00E99E  6E03               	movwf	fputc@c^0,c
  7412   00E9A0  6A04               	clrf	(fputc@c+1)^0,c
  7413   00E9A2  C08C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7414   00E9A6  EC5B  F05D         	call	_fputc	;wreg free
  7415   00E9AA  EFBA  F074         	goto	l10172
  7416   00E9AE                     l1807:
  7417   00E9AE  0012               	return		;funcret
  7418   00E9B0                     __end_of_vfpfcnvrt:
  7419                           	callstack 0
  7420                           
  7421 ;; *************** function _xtoa *****************
  7422 ;; Defined at:
  7423 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  7426 ;;		 -> sprintf@f(12), 
  7427 ;;  d               4   25[COMRAM] unsigned long 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  i               2   38[COMRAM] int 
  7430 ;;  p               2   35[COMRAM] int 
  7431 ;;  w               2   33[COMRAM] int 
  7432 ;;  c               1   37[COMRAM] unsigned char 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      void 
  7435 ;; Registers used:
  7436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7442 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;Total ram usage:       16 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 5
  7449 ;; This function calls:
  7450 ;;		_pad
  7451 ;; This function is called by:
  7452 ;;		_vfpfcnvrt
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text33
  7457   00C296                     __ptext33:
  7458                           	callstack 0
  7459   00C296                     _xtoa:
  7460                           	callstack 22
  7461   00C296                     
  7462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c
      +                          : 1065:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 10
      +                          80:     p = (0 <= prec) ? prec : 1;
  7463   00C296  0100               	movlb	0	; () banked
  7464   00C298  BFC4               	btfsc	(_prec+1)& (0+255),7,b
  7465   00C29A  EF53  F061         	goto	u9820
  7466   00C29E  EF51  F061         	goto	u9821
  7467   00C2A2                     u9821:
  7468   00C2A2  EF59  F061         	goto	l1769
  7469   00C2A6                     u9820:
  7470   00C2A6                     
  7471                           ; BSR set to: 0
  7472   00C2A6  0E00               	movlw	0
  7473   00C2A8  6E25               	movwf	(xtoa@p+1)^0,c
  7474   00C2AA  0E01               	movlw	1
  7475   00C2AC  6E24               	movwf	xtoa@p^0,c
  7476   00C2AE  EF5D  F061         	goto	l1771
  7477   00C2B2                     l1769:
  7478                           
  7479                           ; BSR set to: 0
  7480   00C2B2  C0C3  F024         	movff	_prec,xtoa@p
  7481   00C2B6  C0C4  F025         	movff	_prec+1,xtoa@p+1
  7482   00C2BA                     l1771:
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  7486   00C2BA  C0C1  F022         	movff	_width,xtoa@w
  7487   00C2BE  C0C2  F023         	movff	_width+1,xtoa@w+1
  7488   00C2C2                     
  7489                           ; BSR set to: 0
  7490                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  7491   00C2C2  0E00               	movlw	0
  7492   00C2C4  6E28               	movwf	(xtoa@i+1)^0,c
  7493   00C2C6  0E4F               	movlw	79
  7494   00C2C8  6E27               	movwf	xtoa@i^0,c
  7495   00C2CA                     
  7496                           ; BSR set to: 0
  7497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  7498   00C2CA  0E00               	movlw	0
  7499   00C2CC  0103               	movlb	3	; () banked
  7500   00C2CE  6F73               	movwf	(_dbuf+79)& (0+255),b
  7501                           
  7502                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  7503   00C2D0  EFA8  F061         	goto	l9880
  7504   00C2D4                     l9862:
  7505                           
  7506                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1107:         --i;
  7507   00C2D4  0627               	decf	xtoa@i^0,f,c
  7508   00C2D6  A0D8               	btfss	status,0,c
  7509   00C2D8  0628               	decf	(xtoa@i+1)^0,f,c
  7510   00C2DA                     
  7511                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  7512   00C2DA  501A               	movf	xtoa@d^0,w,c
  7513   00C2DC  0B0F               	andlw	15
  7514   00C2DE  6E26               	movwf	xtoa@c^0,c
  7515   00C2E0                     
  7516                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  7517   00C2E0  0E0A               	movlw	10
  7518   00C2E2  6026               	cpfslt	xtoa@c^0,c
  7519   00C2E4  EF76  F061         	goto	u9831
  7520   00C2E8  EF78  F061         	goto	u9830
  7521   00C2EC                     u9831:
  7522   00C2EC  EF7C  F061         	goto	l9870
  7523   00C2F0                     u9830:
  7524   00C2F0                     
  7525                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  7526   00C2F0  0E30               	movlw	48
  7527   00C2F2  2626               	addwf	xtoa@c^0,f,c
  7528                           
  7529                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1111:   }
  7530   00C2F4  EF7E  F061         	goto	l9872
  7531   00C2F8                     l9870:
  7532                           
  7533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1118:    c += 'A'
      +                           - 10;
  7534   00C2F8  0E37               	movlw	55
  7535   00C2FA  2626               	addwf	xtoa@c^0,f,c
  7536   00C2FC                     l9872:
  7537                           
  7538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  7539   00C2FC  0E24               	movlw	low _dbuf
  7540   00C2FE  2427               	addwf	xtoa@i^0,w,c
  7541   00C300  6ED9               	movwf	fsr2l,c
  7542   00C302  0E03               	movlw	high _dbuf
  7543   00C304  2028               	addwfc	(xtoa@i+1)^0,w,c
  7544   00C306  6EDA               	movwf	fsr2h,c
  7545   00C308  0060  F09B  FFDF   	movff	xtoa@c,indf2
  7546   00C30E                     
  7547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
  7548   00C30E  0624               	decf	xtoa@p^0,f,c
  7549   00C310  A0D8               	btfss	status,0,c
  7550   00C312  0625               	decf	(xtoa@p+1)^0,f,c
  7551   00C314                     
  7552                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  7553   00C314  0622               	decf	xtoa@w^0,f,c
  7554   00C316  A0D8               	btfss	status,0,c
  7555   00C318  0623               	decf	(xtoa@w+1)^0,f,c
  7556   00C31A                     
  7557                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  7558   00C31A  C01A  F01E         	movff	xtoa@d,??_xtoa
  7559   00C31E  C01B  F01F         	movff	xtoa@d+1,??_xtoa+1
  7560   00C322  C01C  F020         	movff	xtoa@d+2,??_xtoa+2
  7561   00C326  C01D  F021         	movff	xtoa@d+3,??_xtoa+3
  7562   00C32A  0E05               	movlw	5
  7563   00C32C  EF9D  F061         	goto	u9840
  7564   00C330                     u9845:
  7565   00C330  90D8               	bcf	status,0,c
  7566   00C332  3221               	rrcf	(??_xtoa+3)^0,f,c
  7567   00C334  3220               	rrcf	(??_xtoa+2)^0,f,c
  7568   00C336  321F               	rrcf	(??_xtoa+1)^0,f,c
  7569   00C338  321E               	rrcf	??_xtoa^0,f,c
  7570   00C33A                     u9840:
  7571   00C33A  2EE8               	decfsz	wreg,f,c
  7572   00C33C  EF98  F061         	goto	u9845
  7573   00C340  C01E  F01A         	movff	??_xtoa,xtoa@d
  7574   00C344  C01F  F01B         	movff	??_xtoa+1,xtoa@d+1
  7575   00C348  C020  F01C         	movff	??_xtoa+2,xtoa@d+2
  7576   00C34C  C021  F01D         	movff	??_xtoa+3,xtoa@d+3
  7577   00C350                     l9880:
  7578                           
  7579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  7580   00C350  BE28               	btfsc	(xtoa@i+1)^0,7,c
  7581   00C352  EFB4  F061         	goto	u9851
  7582   00C356  5028               	movf	(xtoa@i+1)^0,w,c
  7583   00C358  E109               	bnz	u9850
  7584   00C35A  0E02               	movlw	2
  7585   00C35C  5C27               	subwf	xtoa@i^0,w,c
  7586   00C35E  A0D8               	btfss	status,0,c
  7587   00C360  EFB4  F061         	goto	u9851
  7588   00C364  EFB6  F061         	goto	u9850
  7589   00C368                     u9851:
  7590   00C368  EFCE  F061         	goto	l9886
  7591   00C36C                     u9850:
  7592   00C36C  501A               	movf	xtoa@d^0,w,c
  7593   00C36E  101B               	iorwf	(xtoa@d+1)^0,w,c
  7594   00C370  101C               	iorwf	(xtoa@d+2)^0,w,c
  7595   00C372  101D               	iorwf	(xtoa@d+3)^0,w,c
  7596   00C374  A4D8               	btfss	status,2,c
  7597   00C376  EFBF  F061         	goto	u9861
  7598   00C37A  EFC1  F061         	goto	u9860
  7599   00C37E                     u9861:
  7600   00C37E  EF6A  F061         	goto	l9862
  7601   00C382                     u9860:
  7602   00C382  BE25               	btfsc	(xtoa@p+1)^0,7,c
  7603   00C384  EFCE  F061         	goto	u9870
  7604   00C388  5025               	movf	(xtoa@p+1)^0,w,c
  7605   00C38A  E106               	bnz	u9871
  7606   00C38C  0424               	decf	xtoa@p^0,w,c
  7607   00C38E  B0D8               	btfsc	status,0,c
  7608   00C390  EFCC  F061         	goto	u9871
  7609   00C394  EFCE  F061         	goto	u9870
  7610   00C398                     u9871:
  7611   00C398  EF6A  F061         	goto	l9862
  7612   00C39C                     u9870:
  7613   00C39C                     l9886:
  7614                           
  7615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7616   00C39C  C019  F011         	movff	xtoa@fp,pad@fp
  7617   00C3A0  0E24               	movlw	low _dbuf
  7618   00C3A2  2427               	addwf	xtoa@i^0,w,c
  7619   00C3A4  6E12               	movwf	pad@buf^0,c
  7620   00C3A6  0E03               	movlw	high _dbuf
  7621   00C3A8  2028               	addwfc	(xtoa@i+1)^0,w,c
  7622   00C3AA  6E13               	movwf	(pad@buf+1)^0,c
  7623   00C3AC  C022  F014         	movff	xtoa@w,pad@p
  7624   00C3B0  C023  F015         	movff	xtoa@w+1,pad@p+1
  7625   00C3B4  EC77  F056         	call	_pad	;wreg free
  7626   00C3B8  0012               	return		;funcret
  7627   00C3BA                     __end_of_xtoa:
  7628                           	callstack 0
  7629                           
  7630 ;; *************** function _utoa *****************
  7631 ;; Defined at:
  7632 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  7635 ;;		 -> sprintf@f(12), 
  7636 ;;  d               4   25[COMRAM] unsigned long 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  i               2   33[COMRAM] int 
  7639 ;;  p               2   31[COMRAM] int 
  7640 ;;  w               2   29[COMRAM] int 
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      void 
  7643 ;; Registers used:
  7644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7650 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7651 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7653 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;Total ram usage:       11 bytes
  7655 ;; Hardware stack levels used: 1
  7656 ;; Hardware stack levels required when called: 5
  7657 ;; This function calls:
  7658 ;;		___lldiv
  7659 ;;		___llmod
  7660 ;;		_pad
  7661 ;; This function is called by:
  7662 ;;		_vfpfcnvrt
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           	psect	text34
  7667   00C05A                     __ptext34:
  7668                           	callstack 0
  7669   00C05A                     _utoa:
  7670                           	callstack 22
  7671   00C05A                     
  7672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
  7673   00C05A  0100               	movlb	0	; () banked
  7674   00C05C  BFC4               	btfsc	(_prec+1)& (0+255),7,b
  7675   00C05E  EF35  F060         	goto	u9780
  7676   00C062  EF33  F060         	goto	u9781
  7677   00C066                     u9781:
  7678   00C066  EF3B  F060         	goto	l1757
  7679   00C06A                     u9780:
  7680   00C06A                     
  7681                           ; BSR set to: 0
  7682   00C06A  0E00               	movlw	0
  7683   00C06C  6E21               	movwf	(utoa@p+1)^0,c
  7684   00C06E  0E01               	movlw	1
  7685   00C070  6E20               	movwf	utoa@p^0,c
  7686   00C072  EF3F  F060         	goto	l1759
  7687   00C076                     l1757:
  7688                           
  7689                           ; BSR set to: 0
  7690   00C076  C0C3  F020         	movff	_prec,utoa@p
  7691   00C07A  C0C4  F021         	movff	_prec+1,utoa@p+1
  7692   00C07E                     l1759:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  7696   00C07E  C0C1  F01E         	movff	_width,utoa@w
  7697   00C082  C0C2  F01F         	movff	_width+1,utoa@w+1
  7698   00C086                     
  7699                           ; BSR set to: 0
  7700                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  7701   00C086  0E00               	movlw	0
  7702   00C088  6E23               	movwf	(utoa@i+1)^0,c
  7703   00C08A  0E4F               	movlw	79
  7704   00C08C  6E22               	movwf	utoa@i^0,c
  7705   00C08E                     
  7706                           ; BSR set to: 0
  7707                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  7708   00C08E  0E00               	movlw	0
  7709   00C090  0103               	movlb	3	; () banked
  7710   00C092  6F73               	movwf	(_dbuf+79)& (0+255),b
  7711                           
  7712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  7713   00C094  EF8A  F060         	goto	l9844
  7714   00C098                     l9834:
  7715                           
  7716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1034:         --i;
  7717   00C098  0622               	decf	utoa@i^0,f,c
  7718   00C09A  A0D8               	btfss	status,0,c
  7719   00C09C  0623               	decf	(utoa@i+1)^0,f,c
  7720   00C09E                     
  7721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  7722   00C09E  0E24               	movlw	low _dbuf
  7723   00C0A0  2422               	addwf	utoa@i^0,w,c
  7724   00C0A2  6ED9               	movwf	fsr2l,c
  7725   00C0A4  0E03               	movlw	high _dbuf
  7726   00C0A6  2023               	addwfc	(utoa@i+1)^0,w,c
  7727   00C0A8  6EDA               	movwf	fsr2h,c
  7728   00C0AA  C01A  F001         	movff	utoa@d,___llmod@dividend
  7729   00C0AE  C01B  F002         	movff	utoa@d+1,___llmod@dividend+1
  7730   00C0B2  C01C  F003         	movff	utoa@d+2,___llmod@dividend+2
  7731   00C0B6  C01D  F004         	movff	utoa@d+3,___llmod@dividend+3
  7732   00C0BA  0E0A               	movlw	10
  7733   00C0BC  6E05               	movwf	___llmod@divisor^0,c
  7734   00C0BE  0E00               	movlw	0
  7735   00C0C0  6E06               	movwf	(___llmod@divisor+1)^0,c
  7736   00C0C2  0E00               	movlw	0
  7737   00C0C4  6E07               	movwf	(___llmod@divisor+2)^0,c
  7738   00C0C6  0E00               	movlw	0
  7739   00C0C8  6E08               	movwf	(___llmod@divisor+3)^0,c
  7740   00C0CA  EC8A  F059         	call	___llmod	;wreg free
  7741   00C0CE  5001               	movf	?___llmod^0,w,c
  7742   00C0D0  0F30               	addlw	48
  7743   00C0D2  6EDF               	movwf	indf2,c
  7744   00C0D4                     
  7745                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  7746   00C0D4  0620               	decf	utoa@p^0,f,c
  7747   00C0D6  A0D8               	btfss	status,0,c
  7748   00C0D8  0621               	decf	(utoa@p+1)^0,f,c
  7749   00C0DA                     
  7750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  7751   00C0DA  061E               	decf	utoa@w^0,f,c
  7752   00C0DC  A0D8               	btfss	status,0,c
  7753   00C0DE  061F               	decf	(utoa@w+1)^0,f,c
  7754   00C0E0                     
  7755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  7756   00C0E0  C01A  F001         	movff	utoa@d,___lldiv@dividend
  7757   00C0E4  C01B  F002         	movff	utoa@d+1,___lldiv@dividend+1
  7758   00C0E8  C01C  F003         	movff	utoa@d+2,___lldiv@dividend+2
  7759   00C0EC  C01D  F004         	movff	utoa@d+3,___lldiv@dividend+3
  7760   00C0F0  0E0A               	movlw	10
  7761   00C0F2  6E05               	movwf	___lldiv@divisor^0,c
  7762   00C0F4  0E00               	movlw	0
  7763   00C0F6  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7764   00C0F8  0E00               	movlw	0
  7765   00C0FA  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7766   00C0FC  0E00               	movlw	0
  7767   00C0FE  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7768   00C100  EC56  F05B         	call	___lldiv	;wreg free
  7769   00C104  C001  F01A         	movff	?___lldiv,utoa@d
  7770   00C108  C002  F01B         	movff	?___lldiv+1,utoa@d+1
  7771   00C10C  C003  F01C         	movff	?___lldiv+2,utoa@d+2
  7772   00C110  C004  F01D         	movff	?___lldiv+3,utoa@d+3
  7773   00C114                     l9844:
  7774                           
  7775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  7776   00C114  5022               	movf	utoa@i^0,w,c
  7777   00C116  1023               	iorwf	(utoa@i+1)^0,w,c
  7778   00C118  B4D8               	btfsc	status,2,c
  7779   00C11A  EF91  F060         	goto	u9791
  7780   00C11E  EF93  F060         	goto	u9790
  7781   00C122                     u9791:
  7782   00C122  EFAB  F060         	goto	l9850
  7783   00C126                     u9790:
  7784   00C126  501A               	movf	utoa@d^0,w,c
  7785   00C128  101B               	iorwf	(utoa@d+1)^0,w,c
  7786   00C12A  101C               	iorwf	(utoa@d+2)^0,w,c
  7787   00C12C  101D               	iorwf	(utoa@d+3)^0,w,c
  7788   00C12E  A4D8               	btfss	status,2,c
  7789   00C130  EF9C  F060         	goto	u9801
  7790   00C134  EF9E  F060         	goto	u9800
  7791   00C138                     u9801:
  7792   00C138  EF4C  F060         	goto	l9834
  7793   00C13C                     u9800:
  7794   00C13C  BE21               	btfsc	(utoa@p+1)^0,7,c
  7795   00C13E  EFAB  F060         	goto	u9810
  7796   00C142  5021               	movf	(utoa@p+1)^0,w,c
  7797   00C144  E106               	bnz	u9811
  7798   00C146  0420               	decf	utoa@p^0,w,c
  7799   00C148  B0D8               	btfsc	status,0,c
  7800   00C14A  EFA9  F060         	goto	u9811
  7801   00C14E  EFAB  F060         	goto	u9810
  7802   00C152                     u9811:
  7803   00C152  EF4C  F060         	goto	l9834
  7804   00C156                     u9810:
  7805   00C156                     l9850:
  7806                           
  7807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7808   00C156  C019  F011         	movff	utoa@fp,pad@fp
  7809   00C15A  0E24               	movlw	low _dbuf
  7810   00C15C  2422               	addwf	utoa@i^0,w,c
  7811   00C15E  6E12               	movwf	pad@buf^0,c
  7812   00C160  0E03               	movlw	high _dbuf
  7813   00C162  2023               	addwfc	(utoa@i+1)^0,w,c
  7814   00C164  6E13               	movwf	(pad@buf+1)^0,c
  7815   00C166  C01E  F014         	movff	utoa@w,pad@p
  7816   00C16A  C01F  F015         	movff	utoa@w+1,pad@p+1
  7817   00C16E  EC77  F056         	call	_pad	;wreg free
  7818   00C172  0012               	return		;funcret
  7819   00C174                     __end_of_utoa:
  7820                           	callstack 0
  7821                           
  7822 ;; *************** function ___llmod *****************
  7823 ;; Defined at:
  7824 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  dividend        4    0[COMRAM] unsigned long 
  7827 ;;  divisor         4    4[COMRAM] unsigned long 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  counter         1    8[COMRAM] unsigned char 
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  4    0[COMRAM] unsigned long 
  7832 ;; Registers used:
  7833 ;;		wreg, status,2, status,0
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7839 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7842 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7843 ;;Total ram usage:        9 bytes
  7844 ;; Hardware stack levels used: 1
  7845 ;; This function calls:
  7846 ;;		Nothing
  7847 ;; This function is called by:
  7848 ;;		_utoa
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text35
  7853   00B314                     __ptext35:
  7854                           	callstack 0
  7855   00B314                     ___llmod:
  7856                           	callstack 26
  7857   00B314  5005               	movf	___llmod@divisor^0,w,c
  7858   00B316  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  7859   00B318  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  7860   00B31A  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  7861   00B31C  B4D8               	btfsc	status,2,c
  7862   00B31E  EF93  F059         	goto	u9121
  7863   00B322  EF95  F059         	goto	u9120
  7864   00B326                     u9121:
  7865   00B326  EFC5  F059         	goto	l1400
  7866   00B32A                     u9120:
  7867   00B32A  0E01               	movlw	1
  7868   00B32C  6E09               	movwf	___llmod@counter^0,c
  7869   00B32E  EF9F  F059         	goto	l9404
  7870   00B332                     l9402:
  7871   00B332  90D8               	bcf	status,0,c
  7872   00B334  3605               	rlcf	___llmod@divisor^0,f,c
  7873   00B336  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  7874   00B338  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  7875   00B33A  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  7876   00B33C  2A09               	incf	___llmod@counter^0,f,c
  7877   00B33E                     l9404:
  7878   00B33E  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  7879   00B340  EFA4  F059         	goto	u9131
  7880   00B344  EFA6  F059         	goto	u9130
  7881   00B348                     u9131:
  7882   00B348  EF99  F059         	goto	l9402
  7883   00B34C                     u9130:
  7884   00B34C                     l9406:
  7885   00B34C  5005               	movf	___llmod@divisor^0,w,c
  7886   00B34E  5C01               	subwf	___llmod@dividend^0,w,c
  7887   00B350  5006               	movf	(___llmod@divisor+1)^0,w,c
  7888   00B352  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  7889   00B354  5007               	movf	(___llmod@divisor+2)^0,w,c
  7890   00B356  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  7891   00B358  5008               	movf	(___llmod@divisor+3)^0,w,c
  7892   00B35A  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  7893   00B35C  A0D8               	btfss	status,0,c
  7894   00B35E  EFB3  F059         	goto	u9141
  7895   00B362  EFB5  F059         	goto	u9140
  7896   00B366                     u9141:
  7897   00B366  EFBD  F059         	goto	l9410
  7898   00B36A                     u9140:
  7899   00B36A  5005               	movf	___llmod@divisor^0,w,c
  7900   00B36C  5E01               	subwf	___llmod@dividend^0,f,c
  7901   00B36E  5006               	movf	(___llmod@divisor+1)^0,w,c
  7902   00B370  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  7903   00B372  5007               	movf	(___llmod@divisor+2)^0,w,c
  7904   00B374  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  7905   00B376  5008               	movf	(___llmod@divisor+3)^0,w,c
  7906   00B378  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  7907   00B37A                     l9410:
  7908   00B37A  90D8               	bcf	status,0,c
  7909   00B37C  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  7910   00B37E  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  7911   00B380  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  7912   00B382  3205               	rrcf	___llmod@divisor^0,f,c
  7913   00B384  2E09               	decfsz	___llmod@counter^0,f,c
  7914   00B386  EFA6  F059         	goto	l9406
  7915   00B38A                     l1400:
  7916   00B38A  C001  F001         	movff	___llmod@dividend,?___llmod
  7917   00B38E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  7918   00B392  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  7919   00B396  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  7920   00B39A  0012               	return		;funcret
  7921   00B39C                     __end_of___llmod:
  7922                           	callstack 0
  7923                           
  7924 ;; *************** function ___lldiv *****************
  7925 ;; Defined at:
  7926 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  dividend        4    0[COMRAM] unsigned long 
  7929 ;;  divisor         4    4[COMRAM] unsigned long 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  quotient        4    8[COMRAM] unsigned long 
  7932 ;;  counter         1   12[COMRAM] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  4    0[COMRAM] unsigned long 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7942 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;Total ram usage:       13 bytes
  7947 ;; Hardware stack levels used: 1
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_utoa
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text36
  7956   00B6AC                     __ptext36:
  7957                           	callstack 0
  7958   00B6AC                     ___lldiv:
  7959                           	callstack 26
  7960   00B6AC  0E00               	movlw	0
  7961   00B6AE  6E09               	movwf	___lldiv@quotient^0,c
  7962   00B6B0  0E00               	movlw	0
  7963   00B6B2  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7964   00B6B4  0E00               	movlw	0
  7965   00B6B6  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7966   00B6B8  0E00               	movlw	0
  7967   00B6BA  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7968   00B6BC  5005               	movf	___lldiv@divisor^0,w,c
  7969   00B6BE  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7970   00B6C0  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7971   00B6C2  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7972   00B6C4  B4D8               	btfsc	status,2,c
  7973   00B6C6  EF67  F05B         	goto	u8511
  7974   00B6CA  EF69  F05B         	goto	u8510
  7975   00B6CE                     u8511:
  7976   00B6CE  EF9F  F05B         	goto	l1007
  7977   00B6D2                     u8510:
  7978   00B6D2  0E01               	movlw	1
  7979   00B6D4  6E0D               	movwf	___lldiv@counter^0,c
  7980   00B6D6  EF73  F05B         	goto	l9020
  7981   00B6DA                     l9018:
  7982   00B6DA  90D8               	bcf	status,0,c
  7983   00B6DC  3605               	rlcf	___lldiv@divisor^0,f,c
  7984   00B6DE  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7985   00B6E0  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7986   00B6E2  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7987   00B6E4  2A0D               	incf	___lldiv@counter^0,f,c
  7988   00B6E6                     l9020:
  7989   00B6E6  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7990   00B6E8  EF78  F05B         	goto	u8521
  7991   00B6EC  EF7A  F05B         	goto	u8520
  7992   00B6F0                     u8521:
  7993   00B6F0  EF6D  F05B         	goto	l9018
  7994   00B6F4                     u8520:
  7995   00B6F4                     l9022:
  7996   00B6F4  90D8               	bcf	status,0,c
  7997   00B6F6  3609               	rlcf	___lldiv@quotient^0,f,c
  7998   00B6F8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7999   00B6FA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8000   00B6FC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8001   00B6FE  5005               	movf	___lldiv@divisor^0,w,c
  8002   00B700  5C01               	subwf	___lldiv@dividend^0,w,c
  8003   00B702  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8004   00B704  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  8005   00B706  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8006   00B708  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  8007   00B70A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8008   00B70C  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  8009   00B70E  A0D8               	btfss	status,0,c
  8010   00B710  EF8C  F05B         	goto	u8531
  8011   00B714  EF8E  F05B         	goto	u8530
  8012   00B718                     u8531:
  8013   00B718  EF97  F05B         	goto	l9030
  8014   00B71C                     u8530:
  8015   00B71C  5005               	movf	___lldiv@divisor^0,w,c
  8016   00B71E  5E01               	subwf	___lldiv@dividend^0,f,c
  8017   00B720  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8018   00B722  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  8019   00B724  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8020   00B726  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  8021   00B728  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8022   00B72A  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  8023   00B72C  8009               	bsf	___lldiv@quotient^0,0,c
  8024   00B72E                     l9030:
  8025   00B72E  90D8               	bcf	status,0,c
  8026   00B730  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  8027   00B732  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  8028   00B734  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  8029   00B736  3205               	rrcf	___lldiv@divisor^0,f,c
  8030   00B738  2E0D               	decfsz	___lldiv@counter^0,f,c
  8031   00B73A  EF7A  F05B         	goto	l9022
  8032   00B73E                     l1007:
  8033   00B73E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  8034   00B742  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8035   00B746  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8036   00B74A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8037   00B74E  0012               	return		;funcret
  8038   00B750                     __end_of___lldiv:
  8039                           	callstack 0
  8040                           
  8041 ;; *************** function _read_prec_or_width *****************
  8042 ;; Defined at:
  8043 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  8046 ;;		 -> vfprintf@cfmt(2), 
  8047 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  8048 ;;		 -> sprintf@ap(1), 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  c               1    8[COMRAM] unsigned char 
  8051 ;;  n               2    9[COMRAM] int 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  2    6[COMRAM] int 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;Total ram usage:        5 bytes
  8066 ;; Hardware stack levels used: 1
  8067 ;; Hardware stack levels required when called: 1
  8068 ;; This function calls:
  8069 ;;		___wmul
  8070 ;; This function is called by:
  8071 ;;		_vfpfcnvrt
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text37
  8076   00B9F8                     __ptext37:
  8077                           	callstack 0
  8078   00B9F8                     _read_prec_or_width:
  8079                           	callstack 26
  8080   00B9F8                     
  8081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  8082   00B9F8  0E00               	movlw	0
  8083   00B9FA  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  8084   00B9FC  0E00               	movlw	0
  8085   00B9FE  6E0A               	movwf	read_prec_or_width@n^0,c
  8086   00BA00                     
  8087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  8088   00BA00  5007               	movf	read_prec_or_width@fmt^0,w,c
  8089   00BA02  6ED9               	movwf	fsr2l,c
  8090   00BA04  6ADA               	clrf	fsr2h,c
  8091   00BA06  006F FF7B FFF6     	movff	postinc2,tblptrl
  8092   00BA0C  006F FF77 FFF7     	movff	postdec2,tblptrh
  8093   00BA12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8094   00BA12  6AF8               	clrf	tblptru,c
  8095   00BA14                     	endif
  8096   00BA14                     	if	0	;tblptru may be non-zero
  8097   00BA14                     	endif
  8098   00BA14  0008               	tblrd		*
  8099   00BA16  50F5               	movf	tablat,w,c
  8100   00BA18  0A2A               	xorlw	42
  8101   00BA1A  A4D8               	btfss	status,2,c
  8102   00BA1C  EF12  F05D         	goto	u9881
  8103   00BA20  EF14  F05D         	goto	u9880
  8104   00BA24                     u9881:
  8105   00BA24  EF40  F05D         	goto	l9902
  8106   00BA28                     u9880:
  8107   00BA28                     
  8108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  8109   00BA28  5007               	movf	read_prec_or_width@fmt^0,w,c
  8110   00BA2A  6ED9               	movwf	fsr2l,c
  8111   00BA2C  6ADA               	clrf	fsr2h,c
  8112   00BA2E  2ADE               	incf	postinc2,f,c
  8113   00BA30  0E00               	movlw	0
  8114   00BA32  22DD               	addwfc	postdec2,f,c
  8115   00BA34                     
  8116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  8117   00BA34  5008               	movf	read_prec_or_width@ap^0,w,c
  8118   00BA36  6ED9               	movwf	fsr2l,c
  8119   00BA38  6ADA               	clrf	fsr2h,c
  8120   00BA3A  0E02               	movlw	2
  8121   00BA3C  26DF               	addwf	indf2,f,c
  8122   00BA3E  5CDF               	subwf	indf2,w,c
  8123   00BA40  6ED9               	movwf	fsr2l,c
  8124   00BA42  6ADA               	clrf	fsr2h,c
  8125   00BA44  006F FF78  F00A    	movff	postinc2,read_prec_or_width@n
  8126   00BA4A  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n+1
  8127                           
  8128                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  8129   00BA50  EF56  F05D         	goto	l1783
  8130   00BA54                     l9898:
  8131                           
  8132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  8133   00BA54  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  8134   00BA58  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  8135   00BA5C  0E00               	movlw	0
  8136   00BA5E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8137   00BA60  0E0A               	movlw	10
  8138   00BA62  6E03               	movwf	___wmul@multiplicand^0,c
  8139   00BA64  EC60  F052         	call	___wmul	;wreg free
  8140   00BA68  5009               	movf	read_prec_or_width@c^0,w,c
  8141   00BA6A  2401               	addwf	?___wmul^0,w,c
  8142   00BA6C  6E0A               	movwf	read_prec_or_width@n^0,c
  8143   00BA6E  0E00               	movlw	0
  8144   00BA70  2002               	addwfc	(?___wmul+1)^0,w,c
  8145   00BA72  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  8146   00BA74                     
  8147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  8148   00BA74  5007               	movf	read_prec_or_width@fmt^0,w,c
  8149   00BA76  6ED9               	movwf	fsr2l,c
  8150   00BA78  6ADA               	clrf	fsr2h,c
  8151   00BA7A  2ADE               	incf	postinc2,f,c
  8152   00BA7C  0E00               	movlw	0
  8153   00BA7E  22DD               	addwfc	postdec2,f,c
  8154   00BA80                     l9902:
  8155                           
  8156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  8157   00BA80  5007               	movf	read_prec_or_width@fmt^0,w,c
  8158   00BA82  6ED9               	movwf	fsr2l,c
  8159   00BA84  6ADA               	clrf	fsr2h,c
  8160   00BA86  006F FF7B FFF6     	movff	postinc2,tblptrl
  8161   00BA8C  006F FF77 FFF7     	movff	postdec2,tblptrh
  8162   00BA92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8163   00BA92  6AF8               	clrf	tblptru,c
  8164   00BA94                     	endif
  8165   00BA94                     	if	0	;tblptru may be non-zero
  8166   00BA94                     	endif
  8167   00BA94  0008               	tblrd		*
  8168   00BA96  50F5               	movf	tablat,w,c
  8169   00BA98  0FD0               	addlw	208
  8170   00BA9A  6E09               	movwf	read_prec_or_width@c^0,c
  8171   00BA9C  0E09               	movlw	9
  8172   00BA9E  6409               	cpfsgt	read_prec_or_width@c^0,c
  8173   00BAA0  EF54  F05D         	goto	u9891
  8174   00BAA4  EF56  F05D         	goto	u9890
  8175   00BAA8                     u9891:
  8176   00BAA8  EF2A  F05D         	goto	l9898
  8177   00BAAC                     u9890:
  8178   00BAAC                     l1783:
  8179                           
  8180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  8181   00BAAC  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  8182   00BAB0  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  8183   00BAB4  0012               	return		;funcret
  8184   00BAB6                     __end_of_read_prec_or_width:
  8185                           	callstack 0
  8186                           
  8187 ;; *************** function ___wmul *****************
  8188 ;; Defined at:
  8189 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  multiplier      2    0[COMRAM] unsigned int 
  8192 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  product         2    4[COMRAM] unsigned int 
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  2    0[COMRAM] unsigned int 
  8197 ;; Registers used:
  8198 ;;		wreg, status,2, status,0, prodl, prodh
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;Total ram usage:        6 bytes
  8209 ;; Hardware stack levels used: 1
  8210 ;; This function calls:
  8211 ;;		Nothing
  8212 ;; This function is called by:
  8213 ;;		_read_prec_or_width
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text38
  8218   00A4C0                     __ptext38:
  8219                           	callstack 0
  8220   00A4C0                     ___wmul:
  8221                           	callstack 26
  8222   00A4C0  5001               	movf	___wmul@multiplier^0,w,c
  8223   00A4C2  0203               	mulwf	___wmul@multiplicand^0,c
  8224   00A4C4  006F FFCC  F005    	movff	prodl,___wmul@product
  8225   00A4CA  006F FFD0  F006    	movff	prodh,___wmul@product+1
  8226   00A4D0  5001               	movf	___wmul@multiplier^0,w,c
  8227   00A4D2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8228   00A4D4  50F3               	movf	243,w,c
  8229   00A4D6  2606               	addwf	(___wmul@product+1)^0,f,c
  8230   00A4D8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8231   00A4DA  0203               	mulwf	___wmul@multiplicand^0,c
  8232   00A4DC  50F3               	movf	243,w,c
  8233   00A4DE  2606               	addwf	(___wmul@product+1)^0,f,c
  8234   00A4E0  C005  F001         	movff	___wmul@product,?___wmul
  8235   00A4E4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8236   00A4E8  0012               	return		;funcret
  8237   00A4EA                     __end_of___wmul:
  8238                           	callstack 0
  8239                           
  8240 ;; *************** function _efgtoa *****************
  8241 ;; Defined at:
  8242 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  fp              1   59[COMRAM] PTR struct _IO_FILE
  8245 ;;		 -> sprintf@f(12), 
  8246 ;;  f               4   60[COMRAM] PTR struct _IO_FILE
  8247 ;;  c               1   64[COMRAM] unsigned char 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  u               4   40[BANK0 ] struct flui
  8250 ;;  g               4   34[BANK0 ] struct flui
  8251 ;;  l               4   29[BANK0 ] struct flui
  8252 ;;  h               4   25[BANK0 ] struct flui
  8253 ;;  ou              4   19[BANK0 ] struct flui
  8254 ;;  n               2   38[BANK0 ] int 
  8255 ;;  i               2   23[BANK0 ] int 
  8256 ;;  w               2   17[BANK0 ] int 
  8257 ;;  e               2   15[BANK0 ] int 
  8258 ;;  m               2   13[BANK0 ] int 
  8259 ;;  d               2   11[BANK0 ] int 
  8260 ;;  t               2    4[BANK0 ] int 
  8261 ;;  p               2    2[BANK0 ] int 
  8262 ;;  ne              2    0[BANK0 ] int 
  8263 ;;  sign            1   33[BANK0 ] unsigned char 
  8264 ;;  nmode           1   10[BANK0 ] unsigned char 
  8265 ;;  mode            1    9[BANK0 ] unsigned char 
  8266 ;;  pp              1    8[BANK0 ] unsigned char 
  8267 ;;  esign           1    0        unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8277 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;Total ram usage:       52 bytes
  8282 ;; Hardware stack levels used: 1
  8283 ;; Hardware stack levels required when called: 5
  8284 ;; This function calls:
  8285 ;;		___fladd
  8286 ;;		___fldiv
  8287 ;;		___fleq
  8288 ;;		___flge
  8289 ;;		___flmul
  8290 ;;		___flneg
  8291 ;;		___flsub
  8292 ;;		___fltol
  8293 ;;		___fpclassifyf
  8294 ;;		_floorf
  8295 ;;		_labs
  8296 ;;		_memcpy
  8297 ;;		_pad
  8298 ;;		_strcpy
  8299 ;; This function is called by:
  8300 ;;		_vfpfcnvrt
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text39
  8305   00F3FC                     __ptext39:
  8306                           	callstack 0
  8307   00F3FC                     _efgtoa:
  8308                           	callstack 22
  8309   00F3FC                     
  8310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  8311   00F3FC  0E00               	movlw	0
  8312   00F3FE  0100               	movlb	0	; () banked
  8313   00F400  6F81               	movwf	efgtoa@sign& (0+255),b
  8314   00F402                     
  8315                           ; BSR set to: 0
  8316                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  8317   00F402  C03D  F082         	movff	efgtoa@f,efgtoa@g
  8318   00F406  C03E  F083         	movff	efgtoa@f+1,efgtoa@g+1
  8319   00F40A  C03F  F084         	movff	efgtoa@f+2,efgtoa@g+2
  8320   00F40E  C040  F085         	movff	efgtoa@f+3,efgtoa@g+3
  8321   00F412                     
  8322                           ; BSR set to: 0
  8323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  8324   00F412  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8325   00F414  EF10  F07A         	goto	u9460
  8326   00F418  EF0E  F07A         	goto	u9461
  8327   00F41C                     u9461:
  8328   00F41C  EF24  F07A         	goto	l9614
  8329   00F420                     u9460:
  8330   00F420                     
  8331                           ; BSR set to: 0
  8332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  8333   00F420  0E01               	movlw	1
  8334   00F422  6F81               	movwf	efgtoa@sign& (0+255),b
  8335   00F424                     
  8336                           ; BSR set to: 0
  8337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  8338   00F424  C082  F001         	movff	efgtoa@g,___flneg@f1
  8339   00F428  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  8340   00F42C  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  8341   00F430  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  8342   00F434  EC5A  F053         	call	___flneg	;wreg free
  8343   00F438  C001  F082         	movff	?___flneg,efgtoa@g
  8344   00F43C  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  8345   00F440  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  8346   00F444  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  8347   00F448                     l9614:
  8348                           
  8349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  8350   00F448  0E00               	movlw	0
  8351   00F44A  0100               	movlb	0	; () banked
  8352   00F44C  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  8353   00F44E  0E00               	movlw	0
  8354   00F450  6F86               	movwf	efgtoa@n& (0+255),b
  8355   00F452                     
  8356                           ; BSR set to: 0
  8357                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  8358   00F452  C0C1  F071         	movff	_width,efgtoa@w
  8359   00F456  C0C2  F072         	movff	_width+1,efgtoa@w+1
  8360   00F45A                     
  8361                           ; BSR set to: 0
  8362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  8363   00F45A  5181               	movf	efgtoa@sign& (0+255),w,b
  8364   00F45C  B4D8               	btfsc	status,2,c
  8365   00F45E  EF33  F07A         	goto	u9471
  8366   00F462  EF35  F07A         	goto	u9470
  8367   00F466                     u9471:
  8368   00F466  EF49  F07A         	goto	l9628
  8369   00F46A                     u9470:
  8370   00F46A                     
  8371                           ; BSR set to: 0
  8372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  8373   00F46A  5181               	movf	efgtoa@sign& (0+255),w,b
  8374   00F46C  A4D8               	btfss	status,2,c
  8375   00F46E  EF3B  F07A         	goto	u9481
  8376   00F472  EF3D  F07A         	goto	u9480
  8377   00F476                     u9481:
  8378   00F476  EF43  F07A         	goto	l9624
  8379   00F47A                     u9480:
  8380   00F47A                     
  8381                           ; BSR set to: 0
  8382   00F47A  0E00               	movlw	0
  8383   00F47C  6F67               	movwf	(_efgtoa$2113+1)& (0+255),b
  8384   00F47E  0E2B               	movlw	43
  8385   00F480  6F66               	movwf	_efgtoa$2113& (0+255),b
  8386   00F482  EF47  F07A         	goto	l9626
  8387   00F486                     l9624:
  8388                           
  8389                           ; BSR set to: 0
  8390   00F486  0E00               	movlw	0
  8391   00F488  6F67               	movwf	(_efgtoa$2113+1)& (0+255),b
  8392   00F48A  0E2D               	movlw	45
  8393   00F48C  6F66               	movwf	_efgtoa$2113& (0+255),b
  8394   00F48E                     l9626:
  8395                           
  8396                           ; BSR set to: 0
  8397   00F48E  C066  F081         	movff	_efgtoa$2113,efgtoa@sign
  8398   00F492                     l9628:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  8402   00F492  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  8403   00F496  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8404   00F49A  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8405   00F49E  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8406   00F4A2  EC21  F05E         	call	___fpclassifyf	;wreg free
  8407   00F4A6  0401               	decf	?___fpclassifyf^0,w,c
  8408   00F4A8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8409   00F4AA  A4D8               	btfss	status,2,c
  8410   00F4AC  EF5A  F07A         	goto	u9491
  8411   00F4B0  EF5C  F07A         	goto	u9490
  8412   00F4B4                     u9491:
  8413   00F4B4  EF8D  F07A         	goto	l9646
  8414   00F4B8                     u9490:
  8415   00F4B8                     
  8416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  8417   00F4B8  0100               	movlb	0	; () banked
  8418   00F4BA  5181               	movf	efgtoa@sign& (0+255),w,b
  8419   00F4BC  B4D8               	btfsc	status,2,c
  8420   00F4BE  EF63  F07A         	goto	u9501
  8421   00F4C2  EF65  F07A         	goto	u9500
  8422   00F4C6                     u9501:
  8423   00F4C6  EF6E  F07A         	goto	l9638
  8424   00F4CA                     u9500:
  8425   00F4CA                     
  8426                           ; BSR set to: 0
  8427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  8428   00F4CA  C081  F324         	movff	efgtoa@sign,_dbuf
  8429   00F4CE                     
  8430                           ; BSR set to: 0
  8431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  8432   00F4CE  0771               	decf	efgtoa@w& (0+255),f,b
  8433   00F4D0  A0D8               	btfss	status,0,c
  8434   00F4D2  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  8435   00F4D4                     
  8436                           ; BSR set to: 0
  8437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  8438   00F4D4  0E00               	movlw	0
  8439   00F4D6  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  8440   00F4D8  0E01               	movlw	1
  8441   00F4DA  6F86               	movwf	efgtoa@n& (0+255),b
  8442   00F4DC                     l9638:
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  8446   00F4DC  0E24               	movlw	low _dbuf
  8447   00F4DE  2586               	addwf	efgtoa@n& (0+255),w,b
  8448   00F4E0  6E01               	movwf	strcpy@dest^0,c
  8449   00F4E2  0E03               	movlw	high _dbuf
  8450   00F4E4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8451   00F4E6  6E02               	movwf	(strcpy@dest+1)^0,c
  8452   00F4E8  0EEF               	movlw	low STR_21
  8453   00F4EA  6E03               	movwf	strcpy@src^0,c
  8454   00F4EC  0EFF               	movlw	high STR_21
  8455   00F4EE  6E04               	movwf	(strcpy@src+1)^0,c
  8456   00F4F0  EC54  F054         	call	_strcpy	;wreg free
  8457   00F4F4                     l9640:
  8458                           
  8459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  8460   00F4F4  0100               	movlb	0	; () banked
  8461   00F4F6  0EFD               	movlw	253
  8462   00F4F8  2771               	addwf	efgtoa@w& (0+255),f,b
  8463   00F4FA  0EFF               	movlw	255
  8464   00F4FC  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8465   00F4FE                     
  8466                           ; BSR set to: 0
  8467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  8468   00F4FE  C03C  F011         	movff	efgtoa@fp,pad@fp
  8469   00F502  0E24               	movlw	low _dbuf
  8470   00F504  6E12               	movwf	pad@buf^0,c
  8471   00F506  0E03               	movlw	high _dbuf
  8472   00F508  6E13               	movwf	(pad@buf+1)^0,c
  8473   00F50A  C071  F014         	movff	efgtoa@w,pad@p
  8474   00F50E  C072  F015         	movff	efgtoa@w+1,pad@p+1
  8475   00F512  EC77  F056         	call	_pad	;wreg free
  8476   00F516  EFF6  F07E         	goto	l1712
  8477   00F51A                     l9646:
  8478                           
  8479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  8480   00F51A  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  8481   00F51E  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8482   00F522  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8483   00F526  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8484   00F52A  EC21  F05E         	call	___fpclassifyf	;wreg free
  8485   00F52E  5001               	movf	?___fpclassifyf^0,w,c
  8486   00F530  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8487   00F532  A4D8               	btfss	status,2,c
  8488   00F534  EF9E  F07A         	goto	u9511
  8489   00F538  EFA0  F07A         	goto	u9510
  8490   00F53C                     u9511:
  8491   00F53C  EFC0  F07A         	goto	l9664
  8492   00F540                     u9510:
  8493   00F540                     
  8494                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  8495   00F540  0100               	movlb	0	; () banked
  8496   00F542  5181               	movf	efgtoa@sign& (0+255),w,b
  8497   00F544  B4D8               	btfsc	status,2,c
  8498   00F546  EFA7  F07A         	goto	u9521
  8499   00F54A  EFA9  F07A         	goto	u9520
  8500   00F54E                     u9521:
  8501   00F54E  EFB2  F07A         	goto	l9656
  8502   00F552                     u9520:
  8503   00F552                     
  8504                           ; BSR set to: 0
  8505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  8506   00F552  C081  F324         	movff	efgtoa@sign,_dbuf
  8507   00F556                     
  8508                           ; BSR set to: 0
  8509                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  8510   00F556  0771               	decf	efgtoa@w& (0+255),f,b
  8511   00F558  A0D8               	btfss	status,0,c
  8512   00F55A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  8513   00F55C                     
  8514                           ; BSR set to: 0
  8515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  8516   00F55C  0E00               	movlw	0
  8517   00F55E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  8518   00F560  0E01               	movlw	1
  8519   00F562  6F86               	movwf	efgtoa@n& (0+255),b
  8520   00F564                     l9656:
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  8524   00F564  0E24               	movlw	low _dbuf
  8525   00F566  2586               	addwf	efgtoa@n& (0+255),w,b
  8526   00F568  6E01               	movwf	strcpy@dest^0,c
  8527   00F56A  0E03               	movlw	high _dbuf
  8528   00F56C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8529   00F56E  6E02               	movwf	(strcpy@dest+1)^0,c
  8530   00F570  0EF3               	movlw	low STR_24
  8531   00F572  6E03               	movwf	strcpy@src^0,c
  8532   00F574  0EFF               	movlw	high STR_24
  8533   00F576  6E04               	movwf	(strcpy@src+1)^0,c
  8534   00F578  EC54  F054         	call	_strcpy	;wreg free
  8535   00F57C  EF7A  F07A         	goto	l9640
  8536   00F580                     l9664:
  8537                           
  8538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  8539   00F580  0E00               	movlw	0
  8540   00F582  0100               	movlb	0	; () banked
  8541   00F584  6F88               	movwf	efgtoa@u& (0+255),b
  8542   00F586  0E00               	movlw	0
  8543   00F588  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  8544   00F58A  0E80               	movlw	128
  8545   00F58C  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  8546   00F58E  0E3F               	movlw	63
  8547   00F590  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  8548                           
  8549                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  8550   00F592  0E00               	movlw	0
  8551   00F594  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  8552   00F596  0E00               	movlw	0
  8553   00F598  6F6F               	movwf	efgtoa@e& (0+255),b
  8554   00F59A                     
  8555                           ; BSR set to: 0
  8556                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  8557   00F59A  C082  F001         	movff	efgtoa@g,___fleq@ff1
  8558   00F59E  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  8559   00F5A2  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  8560   00F5A6  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  8561   00F5AA  0E00               	movlw	0
  8562   00F5AC  6E05               	movwf	___fleq@ff2^0,c
  8563   00F5AE  0E00               	movlw	0
  8564   00F5B0  6E06               	movwf	(___fleq@ff2+1)^0,c
  8565   00F5B2  0E00               	movlw	0
  8566   00F5B4  6E07               	movwf	(___fleq@ff2+2)^0,c
  8567   00F5B6  0E00               	movlw	0
  8568   00F5B8  6E08               	movwf	(___fleq@ff2+3)^0,c
  8569   00F5BA  ECFA  F05B         	call	___fleq	;wreg free
  8570   00F5BE  B0D8               	btfsc	status,0,c
  8571   00F5C0  EFE4  F07A         	goto	u9531
  8572   00F5C4  EFE6  F07A         	goto	u9530
  8573   00F5C8                     u9531:
  8574   00F5C8  EFC5  F07B         	goto	l1715
  8575   00F5CC                     u9530:
  8576   00F5CC  EFF3  F07A         	goto	l9672
  8577   00F5D0                     l1717:
  8578                           
  8579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  8580   00F5D0  C073  F088         	movff	efgtoa@ou,efgtoa@u
  8581   00F5D4  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  8582   00F5D8  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  8583   00F5DC  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  8584   00F5E0                     
  8585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  8586   00F5E0  0100               	movlb	0	; () banked
  8587   00F5E2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  8588   00F5E4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  8589   00F5E6                     l9672:
  8590                           
  8591                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  8592   00F5E6  C088  F001         	movff	efgtoa@u,___flmul@b
  8593   00F5EA  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  8594   00F5EE  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  8595   00F5F2  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  8596   00F5F6  0E00               	movlw	0
  8597   00F5F8  6E05               	movwf	___flmul@a^0,c
  8598   00F5FA  0E00               	movlw	0
  8599   00F5FC  6E06               	movwf	(___flmul@a+1)^0,c
  8600   00F5FE  0E20               	movlw	32
  8601   00F600  6E07               	movwf	(___flmul@a+2)^0,c
  8602   00F602  0E41               	movlw	65
  8603   00F604  6E08               	movwf	(___flmul@a+3)^0,c
  8604   00F606  EC89  F070         	call	___flmul	;wreg free
  8605   00F60A  C001  F073         	movff	?___flmul,efgtoa@ou
  8606   00F60E  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  8607   00F612  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  8608   00F616  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  8609   00F61A  0100               	movlb	0	; () banked
  8610   00F61C  5173               	movf	efgtoa@ou& (0+255),w,b
  8611   00F61E  5D82               	subwf	efgtoa@g& (0+255),w,b
  8612   00F620  6E01               	movwf	labs@a^0,c
  8613   00F622  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  8614   00F624  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8615   00F626  6E02               	movwf	(labs@a+1)^0,c
  8616   00F628  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  8617   00F62A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8618   00F62C  6E03               	movwf	(labs@a+2)^0,c
  8619   00F62E  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  8620   00F630  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8621   00F632  6E04               	movwf	(labs@a+3)^0,c
  8622   00F634  ECC5  F055         	call	_labs	;wreg free
  8623   00F638  BE04               	btfsc	(?_labs+3)^0,7,c
  8624   00F63A  EF2A  F07B         	goto	u9541
  8625   00F63E  5004               	movf	(?_labs+3)^0,w,c
  8626   00F640  1003               	iorwf	(?_labs+2)^0,w,c
  8627   00F642  1002               	iorwf	(?_labs+1)^0,w,c
  8628   00F644  E109               	bnz	u9540
  8629   00F646  0E02               	movlw	2
  8630   00F648  5C01               	subwf	?_labs^0,w,c
  8631   00F64A  A0D8               	btfss	status,0,c
  8632   00F64C  EF2A  F07B         	goto	u9541
  8633   00F650  EF2C  F07B         	goto	u9540
  8634   00F654                     u9541:
  8635   00F654  EFE8  F07A         	goto	l1717
  8636   00F658                     u9540:
  8637   00F658  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  8638   00F65C  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  8639   00F660  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  8640   00F664  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  8641   00F668  C082  F01E         	movff	efgtoa@g,___flge@ff2
  8642   00F66C  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  8643   00F670  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  8644   00F674  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  8645   00F678  ECA0  F05E         	call	___flge	;wreg free
  8646   00F67C  A0D8               	btfss	status,0,c
  8647   00F67E  EF43  F07B         	goto	u9551
  8648   00F682  EF45  F07B         	goto	u9550
  8649   00F686                     u9551:
  8650   00F686  EFE8  F07A         	goto	l1717
  8651   00F68A                     u9550:
  8652   00F68A                     
  8653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  8654   00F68A  0100               	movlb	0	; () banked
  8655   00F68C  5188               	movf	efgtoa@u& (0+255),w,b
  8656   00F68E  5D82               	subwf	efgtoa@g& (0+255),w,b
  8657   00F690  6E01               	movwf	labs@a^0,c
  8658   00F692  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  8659   00F694  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8660   00F696  6E02               	movwf	(labs@a+1)^0,c
  8661   00F698  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  8662   00F69A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8663   00F69C  6E03               	movwf	(labs@a+2)^0,c
  8664   00F69E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  8665   00F6A0  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8666   00F6A2  6E04               	movwf	(labs@a+3)^0,c
  8667   00F6A4  ECC5  F055         	call	_labs	;wreg free
  8668   00F6A8  BE04               	btfsc	(?_labs+3)^0,7,c
  8669   00F6AA  EF64  F07B         	goto	u9560
  8670   00F6AE  5004               	movf	(?_labs+3)^0,w,c
  8671   00F6B0  1003               	iorwf	(?_labs+2)^0,w,c
  8672   00F6B2  1002               	iorwf	(?_labs+1)^0,w,c
  8673   00F6B4  E107               	bnz	u9561
  8674   00F6B6  0E02               	movlw	2
  8675   00F6B8  5C01               	subwf	?_labs^0,w,c
  8676   00F6BA  B0D8               	btfsc	status,0,c
  8677   00F6BC  EF62  F07B         	goto	u9561
  8678   00F6C0  EF64  F07B         	goto	u9560
  8679   00F6C4                     u9561:
  8680   00F6C4  EFAC  F07B         	goto	l9690
  8681   00F6C8                     u9560:
  8682   00F6C8                     l9680:
  8683                           
  8684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  8685   00F6C8  C088  F082         	movff	efgtoa@u,efgtoa@g
  8686   00F6CC  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  8687   00F6D0  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  8688   00F6D4  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  8689                           
  8690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  8691   00F6D8  EFC5  F07B         	goto	l1715
  8692   00F6DC                     l9682:
  8693                           
  8694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  8695   00F6DC  C088  F00F         	movff	efgtoa@u,___fldiv@b
  8696   00F6E0  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  8697   00F6E4  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  8698   00F6E8  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  8699   00F6EC  0E00               	movlw	0
  8700   00F6EE  6E13               	movwf	___fldiv@a^0,c
  8701   00F6F0  0E00               	movlw	0
  8702   00F6F2  6E14               	movwf	(___fldiv@a+1)^0,c
  8703   00F6F4  0E20               	movlw	32
  8704   00F6F6  6E15               	movwf	(___fldiv@a+2)^0,c
  8705   00F6F8  0E41               	movlw	65
  8706   00F6FA  6E16               	movwf	(___fldiv@a+3)^0,c
  8707   00F6FC  ECCF  F06C         	call	___fldiv	;wreg free
  8708   00F700  C00F  F088         	movff	?___fldiv,efgtoa@u
  8709   00F704  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  8710   00F708  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  8711   00F70C  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  8712   00F710                     
  8713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  8714   00F710  0100               	movlb	0	; () banked
  8715   00F712  076F               	decf	efgtoa@e& (0+255),f,b
  8716   00F714  A0D8               	btfss	status,0,c
  8717   00F716  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  8718   00F718                     
  8719                           ; BSR set to: 0
  8720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  8721   00F718  5188               	movf	efgtoa@u& (0+255),w,b
  8722   00F71A  5D82               	subwf	efgtoa@g& (0+255),w,b
  8723   00F71C  6E01               	movwf	labs@a^0,c
  8724   00F71E  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  8725   00F720  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8726   00F722  6E02               	movwf	(labs@a+1)^0,c
  8727   00F724  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  8728   00F726  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8729   00F728  6E03               	movwf	(labs@a+2)^0,c
  8730   00F72A  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  8731   00F72C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8732   00F72E  6E04               	movwf	(labs@a+3)^0,c
  8733   00F730  ECC5  F055         	call	_labs	;wreg free
  8734   00F734  BE04               	btfsc	(?_labs+3)^0,7,c
  8735   00F736  EFAA  F07B         	goto	u9570
  8736   00F73A  5004               	movf	(?_labs+3)^0,w,c
  8737   00F73C  1003               	iorwf	(?_labs+2)^0,w,c
  8738   00F73E  1002               	iorwf	(?_labs+1)^0,w,c
  8739   00F740  E107               	bnz	u9571
  8740   00F742  0E02               	movlw	2
  8741   00F744  5C01               	subwf	?_labs^0,w,c
  8742   00F746  B0D8               	btfsc	status,0,c
  8743   00F748  EFA8  F07B         	goto	u9571
  8744   00F74C  EFAA  F07B         	goto	u9570
  8745   00F750                     u9571:
  8746   00F750  EFAC  F07B         	goto	l9690
  8747   00F754                     u9570:
  8748   00F754  EF64  F07B         	goto	l9680
  8749   00F758                     l9690:
  8750                           
  8751                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  8752   00F758  C082  F01A         	movff	efgtoa@g,___flge@ff1
  8753   00F75C  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  8754   00F760  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  8755   00F764  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  8756   00F768  C088  F01E         	movff	efgtoa@u,___flge@ff2
  8757   00F76C  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  8758   00F770  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  8759   00F774  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  8760   00F778  ECA0  F05E         	call	___flge	;wreg free
  8761   00F77C  A0D8               	btfss	status,0,c
  8762   00F77E  EFC3  F07B         	goto	u9581
  8763   00F782  EFC5  F07B         	goto	u9580
  8764   00F786                     u9581:
  8765   00F786  EF6E  F07B         	goto	l9682
  8766   00F78A                     u9580:
  8767   00F78A                     l1715:
  8768                           
  8769                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8770   00F78A  C041  F069         	movff	efgtoa@c,efgtoa@mode
  8771                           
  8772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  8773   00F78E  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  8774   00F792                     
  8775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  8776   00F792  0100               	movlb	0	; () banked
  8777   00F794  BFC4               	btfsc	(_prec+1)& (0+255),7,b
  8778   00F796  EFCF  F07B         	goto	u9591
  8779   00F79A  EFD1  F07B         	goto	u9590
  8780   00F79E                     u9591:
  8781   00F79E  EFD7  F07B         	goto	l9696
  8782   00F7A2                     u9590:
  8783   00F7A2                     
  8784                           ; BSR set to: 0
  8785   00F7A2  C0C3  F062         	movff	_prec,efgtoa@p
  8786   00F7A6  C0C4  F063         	movff	_prec+1,efgtoa@p+1
  8787   00F7AA  EFDB  F07B         	goto	l9698
  8788   00F7AE                     l9696:
  8789                           
  8790                           ; BSR set to: 0
  8791   00F7AE  0E00               	movlw	0
  8792   00F7B0  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  8793   00F7B2  0E06               	movlw	6
  8794   00F7B4  6F62               	movwf	efgtoa@p& (0+255),b
  8795   00F7B6                     l9698:
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  8799   00F7B6  C062  F06D         	movff	efgtoa@p,efgtoa@m
  8800   00F7BA  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  8801   00F7BE                     
  8802                           ; BSR set to: 0
  8803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  8804   00F7BE  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  8805   00F7C0  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  8806   00F7C2                     
  8807                           ; BSR set to: 0
  8808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  8809   00F7C2  0E66               	movlw	102
  8810   00F7C4  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  8811   00F7C6  A4D8               	btfss	status,2,c
  8812   00F7C8  EFE8  F07B         	goto	u9601
  8813   00F7CC  EFEA  F07B         	goto	u9600
  8814   00F7D0                     u9601:
  8815   00F7D0  EF0A  F07C         	goto	l9712
  8816   00F7D4                     u9600:
  8817   00F7D4                     
  8818                           ; BSR set to: 0
  8819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  8820   00F7D4  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8821   00F7D6  EFF1  F07B         	goto	u9610
  8822   00F7DA  EFEF  F07B         	goto	u9611
  8823   00F7DE                     u9611:
  8824   00F7DE  EFFD  F07B         	goto	l9708
  8825   00F7E2                     u9610:
  8826   00F7E2                     
  8827                           ; BSR set to: 0
  8828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  8829   00F7E2  0E00               	movlw	0
  8830   00F7E4  6F88               	movwf	efgtoa@u& (0+255),b
  8831   00F7E6  0E00               	movlw	0
  8832   00F7E8  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  8833   00F7EA  0E80               	movlw	128
  8834   00F7EC  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  8835   00F7EE  0E3F               	movlw	63
  8836   00F7F0  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  8837                           
  8838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  8839   00F7F2  0E00               	movlw	0
  8840   00F7F4  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  8841   00F7F6  0E00               	movlw	0
  8842   00F7F8  6F6F               	movwf	efgtoa@e& (0+255),b
  8843   00F7FA                     l9708:
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  8847   00F7FA  0E67               	movlw	103
  8848   00F7FC  1969               	xorwf	efgtoa@mode& (0+255),w,b
  8849   00F7FE  B4D8               	btfsc	status,2,c
  8850   00F800  EF04  F07C         	goto	u9621
  8851   00F804  EF06  F07C         	goto	u9620
  8852   00F808                     u9621:
  8853   00F808  EF0A  F07C         	goto	l9712
  8854   00F80C                     u9620:
  8855   00F80C                     
  8856                           ; BSR set to: 0
  8857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  8858   00F80C  516F               	movf	efgtoa@e& (0+255),w,b
  8859   00F80E  276D               	addwf	efgtoa@m& (0+255),f,b
  8860   00F810  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  8861   00F812  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8862   00F814                     l9712:
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  8866   00F814  0E00               	movlw	0
  8867   00F816  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  8868   00F818  0E00               	movlw	0
  8869   00F81A  6F77               	movwf	efgtoa@i& (0+255),b
  8870   00F81C                     
  8871                           ; BSR set to: 0
  8872                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8873   00F81C  C082  F079         	movff	efgtoa@g,efgtoa@h
  8874   00F820  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  8875   00F824  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  8876   00F828  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  8877   00F82C                     
  8878                           ; BSR set to: 0
  8879                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8880   00F82C  C088  F073         	movff	efgtoa@u,efgtoa@ou
  8881   00F830  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  8882   00F834  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  8883   00F838  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  8884                           
  8885                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8886   00F83C  EF9B  F07C         	goto	l9726
  8887   00F840                     l9718:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  8891   00F840  C079  F00F         	movff	efgtoa@h,___fldiv@b
  8892   00F844  C07A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  8893   00F848  C07B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  8894   00F84C  C07C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  8895   00F850  C088  F013         	movff	efgtoa@u,___fldiv@a
  8896   00F854  C089  F014         	movff	efgtoa@u+1,___fldiv@a+1
  8897   00F858  C08A  F015         	movff	efgtoa@u+2,___fldiv@a+2
  8898   00F85C  C08B  F016         	movff	efgtoa@u+3,___fldiv@a+3
  8899   00F860  ECCF  F06C         	call	___fldiv	;wreg free
  8900   00F864  C00F  F028         	movff	?___fldiv,floorf@x
  8901   00F868  C010  F029         	movff	?___fldiv+1,floorf@x+1
  8902   00F86C  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  8903   00F870  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  8904   00F874  EC46  F066         	call	_floorf	;wreg free
  8905   00F878  C028  F07D         	movff	?_floorf,efgtoa@l
  8906   00F87C  C029  F07E         	movff	?_floorf+1,efgtoa@l+1
  8907   00F880  C02A  F07F         	movff	?_floorf+2,efgtoa@l+2
  8908   00F884  C02B  F080         	movff	?_floorf+3,efgtoa@l+3
  8909                           
  8910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  8911   00F888  C07D  F001         	movff	efgtoa@l,___fltol@f1
  8912   00F88C  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  8913   00F890  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  8914   00F894  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  8915   00F898  EC22  F05F         	call	___fltol	;wreg free
  8916   00F89C  C001  F06B         	movff	?___fltol,efgtoa@d
  8917   00F8A0  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  8918   00F8A4                     
  8919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  8920   00F8A4  C079  F01A         	movff	efgtoa@h,___flsub@b
  8921   00F8A8  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  8922   00F8AC  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  8923   00F8B0  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  8924   00F8B4  C07D  F005         	movff	efgtoa@l,___flmul@a
  8925   00F8B8  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  8926   00F8BC  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  8927   00F8C0  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  8928   00F8C4  C088  F001         	movff	efgtoa@u,___flmul@b
  8929   00F8C8  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  8930   00F8CC  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  8931   00F8D0  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  8932   00F8D4  EC89  F070         	call	___flmul	;wreg free
  8933   00F8D8  C001  F01E         	movff	?___flmul,___flsub@a
  8934   00F8DC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  8935   00F8E0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  8936   00F8E4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  8937   00F8E8  ECBB  F054         	call	___flsub	;wreg free
  8938   00F8EC  C01A  F079         	movff	?___flsub,efgtoa@h
  8939   00F8F0  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  8940   00F8F4  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  8941   00F8F8  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  8942   00F8FC                     
  8943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  8944   00F8FC  C088  F00F         	movff	efgtoa@u,___fldiv@b
  8945   00F900  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  8946   00F904  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  8947   00F908  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  8948   00F90C  0E00               	movlw	0
  8949   00F90E  6E13               	movwf	___fldiv@a^0,c
  8950   00F910  0E00               	movlw	0
  8951   00F912  6E14               	movwf	(___fldiv@a+1)^0,c
  8952   00F914  0E20               	movlw	32
  8953   00F916  6E15               	movwf	(___fldiv@a+2)^0,c
  8954   00F918  0E41               	movlw	65
  8955   00F91A  6E16               	movwf	(___fldiv@a+3)^0,c
  8956   00F91C  ECCF  F06C         	call	___fldiv	;wreg free
  8957   00F920  C00F  F088         	movff	?___fldiv,efgtoa@u
  8958   00F924  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  8959   00F928  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  8960   00F92C  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  8961   00F930                     
  8962                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  8963   00F930  0100               	movlb	0	; () banked
  8964   00F932  4B77               	infsnz	efgtoa@i& (0+255),f,b
  8965   00F934  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  8966   00F936                     l9726:
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8970   00F936  516D               	movf	efgtoa@m& (0+255),w,b
  8971   00F938  5D77               	subwf	efgtoa@i& (0+255),w,b
  8972   00F93A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  8973   00F93C  0A80               	xorlw	128
  8974   00F93E  6E42               	movwf	??_efgtoa^0,c
  8975   00F940  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  8976   00F942  0A80               	xorlw	128
  8977   00F944  5842               	subwfb	??_efgtoa^0,w,c
  8978   00F946  A0D8               	btfss	status,0,c
  8979   00F948  EFA8  F07C         	goto	u9631
  8980   00F94C  EFAA  F07C         	goto	u9630
  8981   00F950                     u9631:
  8982   00F950  EF20  F07C         	goto	l9718
  8983   00F954                     u9630:
  8984   00F954                     
  8985                           ; BSR set to: 0
  8986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  8987   00F954  C088  F001         	movff	efgtoa@u,___flmul@b
  8988   00F958  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  8989   00F95C  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  8990   00F960  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  8991   00F964  0E00               	movlw	0
  8992   00F966  6E05               	movwf	___flmul@a^0,c
  8993   00F968  0E00               	movlw	0
  8994   00F96A  6E06               	movwf	(___flmul@a+1)^0,c
  8995   00F96C  0EA0               	movlw	160
  8996   00F96E  6E07               	movwf	(___flmul@a+2)^0,c
  8997   00F970  0E40               	movlw	64
  8998   00F972  6E08               	movwf	(___flmul@a+3)^0,c
  8999   00F974  EC89  F070         	call	___flmul	;wreg free
  9000   00F978  C001  F07D         	movff	?___flmul,efgtoa@l
  9001   00F97C  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  9002   00F980  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  9003   00F984  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  9004   00F988                     
  9005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  9006   00F988  C079  F01A         	movff	efgtoa@h,___flge@ff1
  9007   00F98C  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  9008   00F990  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  9009   00F994  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  9010   00F998  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  9011   00F99C  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  9012   00F9A0  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  9013   00F9A4  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  9014   00F9A8  ECA0  F05E         	call	___flge	;wreg free
  9015   00F9AC  B0D8               	btfsc	status,0,c
  9016   00F9AE  EFDB  F07C         	goto	u9641
  9017   00F9B2  EFDD  F07C         	goto	u9640
  9018   00F9B6                     u9641:
  9019   00F9B6  EFE8  F07C         	goto	l9734
  9020   00F9BA                     u9640:
  9021   00F9BA                     
  9022                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  9023   00F9BA  0E00               	movlw	0
  9024   00F9BC  0100               	movlb	0	; () banked
  9025   00F9BE  6F7D               	movwf	efgtoa@l& (0+255),b
  9026   00F9C0  0E00               	movlw	0
  9027   00F9C2  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  9028   00F9C4  0E00               	movlw	0
  9029   00F9C6  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  9030   00F9C8  0E00               	movlw	0
  9031   00F9CA  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  9032                           
  9033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  9034   00F9CC  EF11  F07D         	goto	l9740
  9035   00F9D0                     l9734:
  9036                           
  9037                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  9038   00F9D0  C079  F001         	movff	efgtoa@h,___fleq@ff1
  9039   00F9D4  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  9040   00F9D8  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  9041   00F9DC  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  9042   00F9E0  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  9043   00F9E4  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  9044   00F9E8  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  9045   00F9EC  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  9046   00F9F0  ECFA  F05B         	call	___fleq	;wreg free
  9047   00F9F4  A0D8               	btfss	status,0,c
  9048   00F9F6  EFFF  F07C         	goto	u9651
  9049   00F9FA  EF01  F07D         	goto	u9650
  9050   00F9FE                     u9651:
  9051   00F9FE  EF11  F07D         	goto	l9740
  9052   00FA02                     u9650:
  9053   00FA02  0100               	movlb	0	; () banked
  9054   00FA04  B16B               	btfsc	efgtoa@d& (0+255),0,b
  9055   00FA06  EF07  F07D         	goto	u9661
  9056   00FA0A  EF09  F07D         	goto	u9660
  9057   00FA0E                     u9661:
  9058   00FA0E  EF11  F07D         	goto	l9740
  9059   00FA12                     u9660:
  9060   00FA12                     
  9061                           ; BSR set to: 0
  9062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  9063   00FA12  0E00               	movlw	0
  9064   00FA14  6F7D               	movwf	efgtoa@l& (0+255),b
  9065   00FA16  0E00               	movlw	0
  9066   00FA18  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  9067   00FA1A  0E00               	movlw	0
  9068   00FA1C  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  9069   00FA1E  0E00               	movlw	0
  9070   00FA20  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  9071   00FA22                     l9740:
  9072                           
  9073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  9074   00FA22  C082  F001         	movff	efgtoa@g,___fladd@b
  9075   00FA26  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  9076   00FA2A  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  9077   00FA2E  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  9078   00FA32  C07D  F005         	movff	efgtoa@l,___fladd@a
  9079   00FA36  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  9080   00FA3A  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  9081   00FA3E  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  9082   00FA42  ECD8  F074         	call	___fladd	;wreg free
  9083   00FA46  C001  F079         	movff	?___fladd,efgtoa@h
  9084   00FA4A  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  9085   00FA4E  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  9086   00FA52  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  9087   00FA56                     
  9088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  9089   00FA56  C079  F01A         	movff	efgtoa@h,___flge@ff1
  9090   00FA5A  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  9091   00FA5E  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  9092   00FA62  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  9093   00FA66  0E00               	movlw	0
  9094   00FA68  6E05               	movwf	___flmul@a^0,c
  9095   00FA6A  0E00               	movlw	0
  9096   00FA6C  6E06               	movwf	(___flmul@a+1)^0,c
  9097   00FA6E  0E20               	movlw	32
  9098   00FA70  6E07               	movwf	(___flmul@a+2)^0,c
  9099   00FA72  0E41               	movlw	65
  9100   00FA74  6E08               	movwf	(___flmul@a+3)^0,c
  9101   00FA76  C073  F001         	movff	efgtoa@ou,___flmul@b
  9102   00FA7A  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  9103   00FA7E  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  9104   00FA82  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  9105   00FA86  EC89  F070         	call	___flmul	;wreg free
  9106   00FA8A  C001  F01E         	movff	?___flmul,___flge@ff2
  9107   00FA8E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  9108   00FA92  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  9109   00FA96  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  9110   00FA9A  ECA0  F05E         	call	___flge	;wreg free
  9111   00FA9E  A0D8               	btfss	status,0,c
  9112   00FAA0  EF54  F07D         	goto	u9671
  9113   00FAA4  EF56  F07D         	goto	u9670
  9114   00FAA8                     u9671:
  9115   00FAA8  EF7F  F07D         	goto	l9752
  9116   00FAAC                     u9670:
  9117   00FAAC                     
  9118                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  9119   00FAAC  0100               	movlb	0	; () banked
  9120   00FAAE  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  9121   00FAB0  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  9122   00FAB2                     
  9123                           ; BSR set to: 0
  9124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  9125   00FAB2  C073  F001         	movff	efgtoa@ou,___flmul@b
  9126   00FAB6  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  9127   00FABA  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  9128   00FABE  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  9129   00FAC2  0E00               	movlw	0
  9130   00FAC4  6E05               	movwf	___flmul@a^0,c
  9131   00FAC6  0E00               	movlw	0
  9132   00FAC8  6E06               	movwf	(___flmul@a+1)^0,c
  9133   00FACA  0E20               	movlw	32
  9134   00FACC  6E07               	movwf	(___flmul@a+2)^0,c
  9135   00FACE  0E41               	movlw	65
  9136   00FAD0  6E08               	movwf	(___flmul@a+3)^0,c
  9137   00FAD2  EC89  F070         	call	___flmul	;wreg free
  9138   00FAD6  C001  F073         	movff	?___flmul,efgtoa@ou
  9139   00FADA  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  9140   00FADE  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  9141   00FAE2  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  9142   00FAE6                     
  9143                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  9144   00FAE6  0E66               	movlw	102
  9145   00FAE8  0100               	movlb	0	; () banked
  9146   00FAEA  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  9147   00FAEC  A4D8               	btfss	status,2,c
  9148   00FAEE  EF7B  F07D         	goto	u9681
  9149   00FAF2  EF7D  F07D         	goto	u9680
  9150   00FAF6                     u9681:
  9151   00FAF6  EF7F  F07D         	goto	l9752
  9152   00FAFA                     u9680:
  9153   00FAFA                     
  9154                           ; BSR set to: 0
  9155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  9156   00FAFA  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  9157   00FAFC  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  9158   00FAFE                     l9752:
  9159                           
  9160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  9161   00FAFE  C073  F088         	movff	efgtoa@ou,efgtoa@u
  9162   00FB02  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  9163   00FB06  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  9164   00FB0A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  9165   00FB0E                     
  9166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  9167   00FB0E  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  9168   00FB12  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  9169   00FB16                     
  9170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  9171   00FB16  0E00               	movlw	0
  9172   00FB18  0100               	movlb	0	; () banked
  9173   00FB1A  6F68               	movwf	efgtoa@pp& (0+255),b
  9174   00FB1C                     
  9175                           ; BSR set to: 0
  9176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  9177   00FB1C  0E00               	movlw	0
  9178   00FB1E  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  9179   00FB20  0E00               	movlw	0
  9180   00FB22  6F64               	movwf	efgtoa@t& (0+255),b
  9181   00FB24                     
  9182                           ; BSR set to: 0
  9183                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  9184   00FB24  0E00               	movlw	0
  9185   00FB26  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  9186   00FB28  0E00               	movlw	0
  9187   00FB2A  6F77               	movwf	efgtoa@i& (0+255),b
  9188                           
  9189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9190   00FB2C  EF7D  F07E         	goto	l9802
  9191   00FB30                     l9762:
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  9195   00FB30  C079  F00F         	movff	efgtoa@h,___fldiv@b
  9196   00FB34  C07A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  9197   00FB38  C07B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  9198   00FB3C  C07C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  9199   00FB40  C088  F013         	movff	efgtoa@u,___fldiv@a
  9200   00FB44  C089  F014         	movff	efgtoa@u+1,___fldiv@a+1
  9201   00FB48  C08A  F015         	movff	efgtoa@u+2,___fldiv@a+2
  9202   00FB4C  C08B  F016         	movff	efgtoa@u+3,___fldiv@a+3
  9203   00FB50  ECCF  F06C         	call	___fldiv	;wreg free
  9204   00FB54  C00F  F028         	movff	?___fldiv,floorf@x
  9205   00FB58  C010  F029         	movff	?___fldiv+1,floorf@x+1
  9206   00FB5C  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  9207   00FB60  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  9208   00FB64  EC46  F066         	call	_floorf	;wreg free
  9209   00FB68  C028  F07D         	movff	?_floorf,efgtoa@l
  9210   00FB6C  C029  F07E         	movff	?_floorf+1,efgtoa@l+1
  9211   00FB70  C02A  F07F         	movff	?_floorf+2,efgtoa@l+2
  9212   00FB74  C02B  F080         	movff	?_floorf+3,efgtoa@l+3
  9213                           
  9214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  9215   00FB78  C07D  F001         	movff	efgtoa@l,___fltol@f1
  9216   00FB7C  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  9217   00FB80  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  9218   00FB84  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  9219   00FB88  EC22  F05F         	call	___fltol	;wreg free
  9220   00FB8C  BE02               	btfsc	(?___fltol+1)^0,7,c
  9221   00FB8E  EFD4  F07D         	goto	u9690
  9222   00FB92  5002               	movf	(?___fltol+1)^0,w,c
  9223   00FB94  E107               	bnz	u9691
  9224   00FB96  0E0A               	movlw	10
  9225   00FB98  5C01               	subwf	?___fltol^0,w,c
  9226   00FB9A  B0D8               	btfsc	status,0,c
  9227   00FB9C  EFD2  F07D         	goto	u9691
  9228   00FBA0  EFD4  F07D         	goto	u9690
  9229   00FBA4                     u9691:
  9230   00FBA4  EFE4  F07D         	goto	l9766
  9231   00FBA8                     u9690:
  9232   00FBA8  C07D  F001         	movff	efgtoa@l,___fltol@f1
  9233   00FBAC  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  9234   00FBB0  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  9235   00FBB4  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  9236   00FBB8  EC22  F05F         	call	___fltol	;wreg free
  9237   00FBBC  C001  F06B         	movff	?___fltol,efgtoa@d
  9238   00FBC0  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  9239   00FBC4  EFE9  F07D         	goto	l1745
  9240   00FBC8                     l9766:
  9241   00FBC8  0E00               	movlw	0
  9242   00FBCA  0100               	movlb	0	; () banked
  9243   00FBCC  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  9244   00FBCE  0E09               	movlw	9
  9245   00FBD0  6F6B               	movwf	efgtoa@d& (0+255),b
  9246   00FBD2                     l1745:
  9247                           
  9248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  9249   00FBD2  0100               	movlb	0	; () banked
  9250   00FBD4  5168               	movf	efgtoa@pp& (0+255),w,b
  9251   00FBD6  A4D8               	btfss	status,2,c
  9252   00FBD8  EFF0  F07D         	goto	u9701
  9253   00FBDC  EFF2  F07D         	goto	u9700
  9254   00FBE0                     u9701:
  9255   00FBE0  EF1A  F07E         	goto	l9786
  9256   00FBE4                     u9700:
  9257   00FBE4                     
  9258                           ; BSR set to: 0
  9259   00FBE4  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9260   00FBE6  EFF9  F07D         	goto	u9710
  9261   00FBEA  EFF7  F07D         	goto	u9711
  9262   00FBEE                     u9711:
  9263   00FBEE  EF1A  F07E         	goto	l9786
  9264   00FBF2                     u9710:
  9265   00FBF2                     
  9266                           ; BSR set to: 0
  9267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  9268   00FBF2  0E24               	movlw	low _dbuf
  9269   00FBF4  2586               	addwf	efgtoa@n& (0+255),w,b
  9270   00FBF6  6ED9               	movwf	fsr2l,c
  9271   00FBF8  0E03               	movlw	high _dbuf
  9272   00FBFA  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9273   00FBFC  6EDA               	movwf	fsr2h,c
  9274   00FBFE  0E2E               	movlw	46
  9275   00FC00  6EDF               	movwf	indf2,c
  9276   00FC02                     
  9277                           ; BSR set to: 0
  9278   00FC02  4B86               	infsnz	efgtoa@n& (0+255),f,b
  9279   00FC04  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  9280   00FC06                     
  9281                           ; BSR set to: 0
  9282                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  9283   00FC06  0771               	decf	efgtoa@w& (0+255),f,b
  9284   00FC08  A0D8               	btfss	status,0,c
  9285   00FC0A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  9286   00FC0C                     
  9287                           ; BSR set to: 0
  9288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  9289   00FC0C  0E01               	movlw	1
  9290   00FC0E  6F68               	movwf	efgtoa@pp& (0+255),b
  9291   00FC10  EF1A  F07E         	goto	l9786
  9292   00FC14                     l9778:
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  9296   00FC14  0E24               	movlw	low _dbuf
  9297   00FC16  2586               	addwf	efgtoa@n& (0+255),w,b
  9298   00FC18  6ED9               	movwf	fsr2l,c
  9299   00FC1A  0E03               	movlw	high _dbuf
  9300   00FC1C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9301   00FC1E  6EDA               	movwf	fsr2h,c
  9302   00FC20  0E30               	movlw	48
  9303   00FC22  6EDF               	movwf	indf2,c
  9304   00FC24                     
  9305                           ; BSR set to: 0
  9306   00FC24  4B86               	infsnz	efgtoa@n& (0+255),f,b
  9307   00FC26  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  9308   00FC28                     
  9309                           ; BSR set to: 0
  9310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  9311   00FC28  0771               	decf	efgtoa@w& (0+255),f,b
  9312   00FC2A  A0D8               	btfss	status,0,c
  9313   00FC2C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  9314   00FC2E                     
  9315                           ; BSR set to: 0
  9316                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  9317   00FC2E  0764               	decf	efgtoa@t& (0+255),f,b
  9318   00FC30  A0D8               	btfss	status,0,c
  9319   00FC32  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  9320   00FC34                     l9786:
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  9324   00FC34  5164               	movf	efgtoa@t& (0+255),w,b
  9325   00FC36  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9326   00FC38  A4D8               	btfss	status,2,c
  9327   00FC3A  EF21  F07E         	goto	u9721
  9328   00FC3E  EF23  F07E         	goto	u9720
  9329   00FC42                     u9721:
  9330   00FC42  EF0A  F07E         	goto	l9778
  9331   00FC46                     u9720:
  9332   00FC46                     
  9333                           ; BSR set to: 0
  9334                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  9335   00FC46  0E24               	movlw	low _dbuf
  9336   00FC48  2586               	addwf	efgtoa@n& (0+255),w,b
  9337   00FC4A  6ED9               	movwf	fsr2l,c
  9338   00FC4C  0E03               	movlw	high _dbuf
  9339   00FC4E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9340   00FC50  6EDA               	movwf	fsr2h,c
  9341   00FC52  516B               	movf	efgtoa@d& (0+255),w,b
  9342   00FC54  0F30               	addlw	48
  9343   00FC56  6EDF               	movwf	indf2,c
  9344   00FC58                     
  9345                           ; BSR set to: 0
  9346   00FC58  4B86               	infsnz	efgtoa@n& (0+255),f,b
  9347   00FC5A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  9348   00FC5C                     
  9349                           ; BSR set to: 0
  9350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  9351   00FC5C  0771               	decf	efgtoa@w& (0+255),f,b
  9352   00FC5E  A0D8               	btfss	status,0,c
  9353   00FC60  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  9354   00FC62                     
  9355                           ; BSR set to: 0
  9356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  9357   00FC62  C079  F01A         	movff	efgtoa@h,___flsub@b
  9358   00FC66  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  9359   00FC6A  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  9360   00FC6E  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  9361   00FC72  C07D  F005         	movff	efgtoa@l,___flmul@a
  9362   00FC76  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  9363   00FC7A  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  9364   00FC7E  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  9365   00FC82  C088  F001         	movff	efgtoa@u,___flmul@b
  9366   00FC86  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  9367   00FC8A  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  9368   00FC8E  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  9369   00FC92  EC89  F070         	call	___flmul	;wreg free
  9370   00FC96  C001  F01E         	movff	?___flmul,___flsub@a
  9371   00FC9A  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  9372   00FC9E  C003  F020         	movff	?___flmul+2,___flsub@a+2
  9373   00FCA2  C004  F021         	movff	?___flmul+3,___flsub@a+3
  9374   00FCA6  ECBB  F054         	call	___flsub	;wreg free
  9375   00FCAA  C01A  F079         	movff	?___flsub,efgtoa@h
  9376   00FCAE  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  9377   00FCB2  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  9378   00FCB6  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  9379   00FCBA                     
  9380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  9381   00FCBA  C088  F00F         	movff	efgtoa@u,___fldiv@b
  9382   00FCBE  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  9383   00FCC2  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  9384   00FCC6  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  9385   00FCCA  0E00               	movlw	0
  9386   00FCCC  6E13               	movwf	___fldiv@a^0,c
  9387   00FCCE  0E00               	movlw	0
  9388   00FCD0  6E14               	movwf	(___fldiv@a+1)^0,c
  9389   00FCD2  0E20               	movlw	32
  9390   00FCD4  6E15               	movwf	(___fldiv@a+2)^0,c
  9391   00FCD6  0E41               	movlw	65
  9392   00FCD8  6E16               	movwf	(___fldiv@a+3)^0,c
  9393   00FCDA  ECCF  F06C         	call	___fldiv	;wreg free
  9394   00FCDE  C00F  F088         	movff	?___fldiv,efgtoa@u
  9395   00FCE2  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  9396   00FCE6  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  9397   00FCEA  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  9398   00FCEE                     
  9399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  9400   00FCEE  0100               	movlb	0	; () banked
  9401   00FCF0  0760               	decf	efgtoa@ne& (0+255),f,b
  9402   00FCF2  A0D8               	btfss	status,0,c
  9403   00FCF4  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  9404   00FCF6                     
  9405                           ; BSR set to: 0
  9406                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  9407   00FCF6  4B77               	infsnz	efgtoa@i& (0+255),f,b
  9408   00FCF8  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  9409   00FCFA                     l9802:
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9413   00FCFA  516D               	movf	efgtoa@m& (0+255),w,b
  9414   00FCFC  5D77               	subwf	efgtoa@i& (0+255),w,b
  9415   00FCFE  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  9416   00FD00  0A80               	xorlw	128
  9417   00FD02  6E42               	movwf	??_efgtoa^0,c
  9418   00FD04  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  9419   00FD06  0A80               	xorlw	128
  9420   00FD08  5842               	subwfb	??_efgtoa^0,w,c
  9421   00FD0A  B0D8               	btfsc	status,0,c
  9422   00FD0C  EF8A  F07E         	goto	u9731
  9423   00FD10  EF8C  F07E         	goto	u9730
  9424   00FD14                     u9731:
  9425   00FD14  EF9A  F07E         	goto	l9806
  9426   00FD18                     u9730:
  9427   00FD18                     
  9428                           ; BSR set to: 0
  9429   00FD18  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9430   00FD1A  EF98  F07E         	goto	u9741
  9431   00FD1E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  9432   00FD20  E109               	bnz	u9740
  9433   00FD22  0E4B               	movlw	75
  9434   00FD24  5D86               	subwf	efgtoa@n& (0+255),w,b
  9435   00FD26  A0D8               	btfss	status,0,c
  9436   00FD28  EF98  F07E         	goto	u9741
  9437   00FD2C  EF9A  F07E         	goto	u9740
  9438   00FD30                     u9741:
  9439   00FD30  EF98  F07D         	goto	l9762
  9440   00FD34                     u9740:
  9441   00FD34                     l9806:
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  9445   00FD34  0E00               	movlw	0
  9446   00FD36  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  9447   00FD38  0E4F               	movlw	79
  9448   00FD3A  6F77               	movwf	efgtoa@i& (0+255),b
  9449   00FD3C                     
  9450                           ; BSR set to: 0
  9451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  9452   00FD3C  0E24               	movlw	low _dbuf
  9453   00FD3E  2577               	addwf	efgtoa@i& (0+255),w,b
  9454   00FD40  6ED9               	movwf	fsr2l,c
  9455   00FD42  0E03               	movlw	high _dbuf
  9456   00FD44  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9457   00FD46  6EDA               	movwf	fsr2h,c
  9458   00FD48  6ADF               	clrf	indf2,c
  9459   00FD4A                     
  9460                           ; BSR set to: 0
  9461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  9462   00FD4A  0E24               	movlw	low _dbuf
  9463   00FD4C  6E42               	movwf	??_efgtoa^0,c
  9464   00FD4E  0E03               	movlw	high _dbuf
  9465   00FD50  6E43               	movwf	(??_efgtoa+1)^0,c
  9466   00FD52  5186               	movf	efgtoa@n& (0+255),w,b
  9467   00FD54  5E42               	subwf	??_efgtoa^0,f,c
  9468   00FD56  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  9469   00FD58  5A43               	subwfb	(??_efgtoa+1)^0,f,c
  9470   00FD5A  5177               	movf	efgtoa@i& (0+255),w,b
  9471   00FD5C  2442               	addwf	??_efgtoa^0,w,c
  9472   00FD5E  6E01               	movwf	memcpy@d1^0,c
  9473   00FD60  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  9474   00FD62  2043               	addwfc	(??_efgtoa+1)^0,w,c
  9475   00FD64  6E02               	movwf	(memcpy@d1+1)^0,c
  9476   00FD66  0E24               	movlw	low _dbuf
  9477   00FD68  6E03               	movwf	memcpy@s1^0,c
  9478   00FD6A  0E03               	movlw	high _dbuf
  9479   00FD6C  6E04               	movwf	(memcpy@s1+1)^0,c
  9480   00FD6E  C086  F005         	movff	efgtoa@n,memcpy@n
  9481   00FD72  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  9482   00FD76  EC1C  F056         	call	_memcpy	;wreg free
  9483   00FD7A                     
  9484                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  9485   00FD7A  0100               	movlb	0	; () banked
  9486   00FD7C  5186               	movf	efgtoa@n& (0+255),w,b
  9487   00FD7E  5D77               	subwf	efgtoa@i& (0+255),w,b
  9488   00FD80  6F86               	movwf	efgtoa@n& (0+255),b
  9489   00FD82  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  9490   00FD84  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  9491   00FD86  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  9492   00FD88                     
  9493                           ; BSR set to: 0
  9494                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  9495   00FD88  5181               	movf	efgtoa@sign& (0+255),w,b
  9496   00FD8A  A4D8               	btfss	status,2,c
  9497   00FD8C  EFCA  F07E         	goto	u9751
  9498   00FD90  EFCD  F07E         	goto	u9750
  9499   00FD94                     u9751:
  9500   00FD94  0E01               	movlw	1
  9501   00FD96  EFCE  F07E         	goto	u9760
  9502   00FD9A                     u9750:
  9503   00FD9A  0E00               	movlw	0
  9504   00FD9C                     u9760:
  9505   00FD9C  6F77               	movwf	efgtoa@i& (0+255),b
  9506   00FD9E  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  9507   00FDA0                     
  9508                           ; BSR set to: 0
  9509                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  9510   00FDA0  5181               	movf	efgtoa@sign& (0+255),w,b
  9511   00FDA2  B4D8               	btfsc	status,2,c
  9512   00FDA4  EFD6  F07E         	goto	u9771
  9513   00FDA8  EFD8  F07E         	goto	u9770
  9514   00FDAC                     u9771:
  9515   00FDAC  EFE4  F07E         	goto	l9820
  9516   00FDB0                     u9770:
  9517   00FDB0                     
  9518                           ; BSR set to: 0
  9519                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  9520   00FDB0  0786               	decf	efgtoa@n& (0+255),f,b
  9521   00FDB2  A0D8               	btfss	status,0,c
  9522   00FDB4  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  9523   00FDB6  0E24               	movlw	low _dbuf
  9524   00FDB8  2586               	addwf	efgtoa@n& (0+255),w,b
  9525   00FDBA  6ED9               	movwf	fsr2l,c
  9526   00FDBC  0E03               	movlw	high _dbuf
  9527   00FDBE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9528   00FDC0  6EDA               	movwf	fsr2h,c
  9529   00FDC2  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  9530   00FDC8                     l9820:
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  9534   00FDC8  5177               	movf	efgtoa@i& (0+255),w,b
  9535   00FDCA  5F71               	subwf	efgtoa@w& (0+255),f,b
  9536   00FDCC  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  9537   00FDCE  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  9538   00FDD0                     
  9539                           ; BSR set to: 0
  9540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  9541   00FDD0  C03C  F011         	movff	efgtoa@fp,pad@fp
  9542   00FDD4  0E24               	movlw	low _dbuf
  9543   00FDD6  2586               	addwf	efgtoa@n& (0+255),w,b
  9544   00FDD8  6E12               	movwf	pad@buf^0,c
  9545   00FDDA  0E03               	movlw	high _dbuf
  9546   00FDDC  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9547   00FDDE  6E13               	movwf	(pad@buf+1)^0,c
  9548   00FDE0  C071  F014         	movff	efgtoa@w,pad@p
  9549   00FDE4  C072  F015         	movff	efgtoa@w+1,pad@p+1
  9550   00FDE8  EC77  F056         	call	_pad	;wreg free
  9551   00FDEC                     l1712:
  9552   00FDEC  0012               	return		;funcret
  9553   00FDEE                     __end_of_efgtoa:
  9554                           	callstack 0
  9555                           
  9556 ;; *************** function _strcpy *****************
  9557 ;; Defined at:
  9558 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9561 ;;		 -> dbuf(80), 
  9562 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9563 ;;		 -> STR_24(4), STR_21(4), 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  d               2    4[COMRAM] PTR unsigned char 
  9566 ;;		 -> dbuf(80), 
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  2    0[COMRAM] PTR unsigned char 
  9569 ;; Registers used:
  9570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9580 ;;Total ram usage:        6 bytes
  9581 ;; Hardware stack levels used: 1
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		_efgtoa
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text40
  9590   00A8A8                     __ptext40:
  9591                           	callstack 0
  9592   00A8A8                     _strcpy:
  9593                           	callstack 26
  9594   00A8A8  C001  F005         	movff	strcpy@dest,strcpy@d
  9595   00A8AC  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  9596   00A8B0                     l9450:
  9597   00A8B0  0060  F00F  FFF6   	movff	strcpy@src,tblptrl
  9598   00A8B6  0060  F013  FFF7   	movff	strcpy@src+1,tblptrh
  9599   00A8BC  4A03               	infsnz	strcpy@src^0,f,c
  9600   00A8BE  2A04               	incf	(strcpy@src+1)^0,f,c
  9601   00A8C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9602   00A8C0  6AF8               	clrf	tblptru,c
  9603   00A8C2                     	endif
  9604   00A8C2                     	if	0	;tblptru may be non-zero
  9605   00A8C2                     	endif
  9606   00A8C2  0060  F017  FFD9   	movff	strcpy@d,fsr2l
  9607   00A8C8  0060  F01B  FFDA   	movff	strcpy@d+1,fsr2h
  9608   00A8CE  4A05               	infsnz	strcpy@d^0,f,c
  9609   00A8D0  2A06               	incf	(strcpy@d+1)^0,f,c
  9610   00A8D2  0008               	tblrd		*
  9611   00A8D4  006F FFD7 FFDF     	movff	tablat,indf2
  9612   00A8DA  50DF               	movf	indf2,w,c
  9613   00A8DC  A4D8               	btfss	status,2,c
  9614   00A8DE  EF73  F054         	goto	u9241
  9615   00A8E2  EF75  F054         	goto	u9240
  9616   00A8E6                     u9241:
  9617   00A8E6  EF58  F054         	goto	l9450
  9618   00A8EA                     u9240:
  9619   00A8EA  0012               	return		;funcret
  9620   00A8EC                     __end_of_strcpy:
  9621                           	callstack 0
  9622                           
  9623 ;; *************** function _pad *****************
  9624 ;; Defined at:
  9625 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  9628 ;;		 -> sprintf@f(12), 
  9629 ;;  buf             2   17[COMRAM] PTR unsigned char 
  9630 ;;		 -> dbuf(80), 
  9631 ;;  p               2   19[COMRAM] int 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  i               2   22[COMRAM] int 
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      void 
  9636 ;; Registers used:
  9637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9643 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;Total ram usage:        8 bytes
  9648 ;; Hardware stack levels used: 1
  9649 ;; Hardware stack levels required when called: 4
  9650 ;; This function calls:
  9651 ;;		_fputc
  9652 ;;		_fputs
  9653 ;; This function is called by:
  9654 ;;		_efgtoa
  9655 ;;		_utoa
  9656 ;;		_xtoa
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text41
  9661   00ACEE                     __ptext41:
  9662                           	callstack 0
  9663   00ACEE                     _pad:
  9664                           	callstack 22
  9665   00ACEE                     
  9666                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  9667   00ACEE  BE15               	btfsc	(pad@p+1)^0,7,c
  9668   00ACF0  EF7E  F056         	goto	u9150
  9669   00ACF4  EF7C  F056         	goto	u9151
  9670   00ACF8                     u9151:
  9671   00ACF8  EF82  F056         	goto	l1697
  9672   00ACFC                     u9150:
  9673   00ACFC                     
  9674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9675   00ACFC  0E00               	movlw	0
  9676   00ACFE  6E15               	movwf	(pad@p+1)^0,c
  9677   00AD00  0E00               	movlw	0
  9678   00AD02  6E14               	movwf	pad@p^0,c
  9679   00AD04                     l1697:
  9680                           
  9681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9682   00AD04  0E00               	movlw	0
  9683   00AD06  6E18               	movwf	(pad@i+1)^0,c
  9684   00AD08  0E00               	movlw	0
  9685   00AD0A  6E17               	movwf	pad@i^0,c
  9686                           
  9687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9688   00AD0C  EF92  F056         	goto	l9422
  9689   00AD10                     l9418:
  9690                           
  9691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9692   00AD10  0E00               	movlw	0
  9693   00AD12  6E04               	movwf	(fputc@c+1)^0,c
  9694   00AD14  0E20               	movlw	32
  9695   00AD16  6E03               	movwf	fputc@c^0,c
  9696   00AD18  C011  F005         	movff	pad@fp,fputc@fp
  9697   00AD1C  EC5B  F05D         	call	_fputc	;wreg free
  9698   00AD20                     
  9699                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9700   00AD20  4A17               	infsnz	pad@i^0,f,c
  9701   00AD22  2A18               	incf	(pad@i+1)^0,f,c
  9702   00AD24                     l9422:
  9703                           
  9704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9705   00AD24  5014               	movf	pad@p^0,w,c
  9706   00AD26  5C17               	subwf	pad@i^0,w,c
  9707   00AD28  5018               	movf	(pad@i+1)^0,w,c
  9708   00AD2A  0A80               	xorlw	128
  9709   00AD2C  6E16               	movwf	??_pad^0,c
  9710   00AD2E  5015               	movf	(pad@p+1)^0,w,c
  9711   00AD30  0A80               	xorlw	128
  9712   00AD32  5816               	subwfb	??_pad^0,w,c
  9713   00AD34  A0D8               	btfss	status,0,c
  9714   00AD36  EF9F  F056         	goto	u9161
  9715   00AD3A  EFA1  F056         	goto	u9160
  9716   00AD3E                     u9161:
  9717   00AD3E  EF88  F056         	goto	l9418
  9718   00AD42                     u9160:
  9719   00AD42                     
  9720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9721   00AD42  C012  F00B         	movff	pad@buf,fputs@s
  9722   00AD46  C013  F00C         	movff	pad@buf+1,fputs@s+1
  9723   00AD4A  C011  F00D         	movff	pad@fp,fputs@fp
  9724   00AD4E  ECCF  F053         	call	_fputs	;wreg free
  9725   00AD52  0012               	return		;funcret
  9726   00AD54                     __end_of_pad:
  9727                           	callstack 0
  9728                           
  9729 ;; *************** function _fputs *****************
  9730 ;; Defined at:
  9731 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9734 ;;		 -> dbuf(80), 
  9735 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  9736 ;;		 -> sprintf@f(12), 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;  i               2   14[COMRAM] int 
  9739 ;;  c               1   13[COMRAM] unsigned char 
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  2   10[COMRAM] int 
  9742 ;; Registers used:
  9743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9749 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9750 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9752 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;Total ram usage:        6 bytes
  9754 ;; Hardware stack levels used: 1
  9755 ;; Hardware stack levels required when called: 3
  9756 ;; This function calls:
  9757 ;;		_fputc
  9758 ;; This function is called by:
  9759 ;;		_pad
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           	psect	text42
  9764   00A79E                     __ptext42:
  9765                           	callstack 0
  9766   00A79E                     _fputs:
  9767                           	callstack 22
  9768   00A79E  0E00               	movlw	0
  9769   00A7A0  6E10               	movwf	(fputs@i+1)^0,c
  9770   00A7A2  0E00               	movlw	0
  9771   00A7A4  6E0F               	movwf	fputs@i^0,c
  9772   00A7A6  EFDE  F053         	goto	l8936
  9773   00A7AA                     l8932:
  9774   00A7AA  C00E  F003         	movff	fputs@c,fputc@c
  9775   00A7AE  6A04               	clrf	(fputc@c+1)^0,c
  9776   00A7B0  C00D  F005         	movff	fputs@fp,fputc@fp
  9777   00A7B4  EC5B  F05D         	call	_fputc	;wreg free
  9778   00A7B8  4A0F               	infsnz	fputs@i^0,f,c
  9779   00A7BA  2A10               	incf	(fputs@i+1)^0,f,c
  9780   00A7BC                     l8936:
  9781   00A7BC  500F               	movf	fputs@i^0,w,c
  9782   00A7BE  240B               	addwf	fputs@s^0,w,c
  9783   00A7C0  6ED9               	movwf	fsr2l,c
  9784   00A7C2  5010               	movf	(fputs@i+1)^0,w,c
  9785   00A7C4  200C               	addwfc	(fputs@s+1)^0,w,c
  9786   00A7C6  6EDA               	movwf	fsr2h,c
  9787   00A7C8  50DF               	movf	indf2,w,c
  9788   00A7CA  6E0E               	movwf	fputs@c^0,c
  9789   00A7CC  500E               	movf	fputs@c^0,w,c
  9790   00A7CE  A4D8               	btfss	status,2,c
  9791   00A7D0  EFEC  F053         	goto	u8431
  9792   00A7D4  EFEE  F053         	goto	u8430
  9793   00A7D8                     u8431:
  9794   00A7D8  EFD5  F053         	goto	l8932
  9795   00A7DC                     u8430:
  9796   00A7DC  0012               	return		;funcret
  9797   00A7DE                     __end_of_fputs:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _fputc *****************
  9801 ;; Defined at:
  9802 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  c               2    2[COMRAM] int 
  9805 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  9806 ;;		 -> sprintf@f(12), 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  2    2[COMRAM] int 
  9811 ;; Registers used:
  9812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9818 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;Total ram usage:        8 bytes
  9823 ;; Hardware stack levels used: 1
  9824 ;; Hardware stack levels required when called: 2
  9825 ;; This function calls:
  9826 ;;		_putch
  9827 ;; This function is called by:
  9828 ;;		_pad
  9829 ;;		_vfpfcnvrt
  9830 ;;		_fputs
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text43
  9835   00BAB6                     __ptext43:
  9836                           	callstack 0
  9837   00BAB6                     _fputc:
  9838                           	callstack 22
  9839   00BAB6  5005               	movf	fputc@fp^0,w,c
  9840   00BAB8  B4D8               	btfsc	status,2,c
  9841   00BABA  EF61  F05D         	goto	u7991
  9842   00BABE  EF63  F05D         	goto	u7990
  9843   00BAC2                     u7991:
  9844   00BAC2  EF6B  F05D         	goto	l8710
  9845   00BAC6                     u7990:
  9846   00BAC6  5005               	movf	fputc@fp^0,w,c
  9847   00BAC8  A4D8               	btfss	status,2,c
  9848   00BACA  EF69  F05D         	goto	u8001
  9849   00BACE  EF6B  F05D         	goto	u8000
  9850   00BAD2                     u8001:
  9851   00BAD2  EF70  F05D         	goto	l8712
  9852   00BAD6                     u8000:
  9853   00BAD6                     l8710:
  9854   00BAD6  5003               	movf	fputc@c^0,w,c
  9855   00BAD8  EC18  F051         	call	_putch
  9856   00BADC  EFBC  F05D         	goto	l1874
  9857   00BAE0                     l8712:
  9858   00BAE0  5005               	movf	fputc@fp^0,w,c
  9859   00BAE2  6ED9               	movwf	fsr2l,c
  9860   00BAE4  6ADA               	clrf	fsr2h,c
  9861   00BAE6  0E0A               	movlw	10
  9862   00BAE8  26D9               	addwf	fsr2l,f,c
  9863   00BAEA  50DE               	movf	postinc2,w,c
  9864   00BAEC  10DE               	iorwf	postinc2,w,c
  9865   00BAEE  B4D8               	btfsc	status,2,c
  9866   00BAF0  EF7C  F05D         	goto	u8011
  9867   00BAF4  EF7E  F05D         	goto	u8010
  9868   00BAF8                     u8011:
  9869   00BAF8  EF97  F05D         	goto	l8716
  9870   00BAFC                     u8010:
  9871   00BAFC  5005               	movf	fputc@fp^0,w,c
  9872   00BAFE  6ED9               	movwf	fsr2l,c
  9873   00BB00  6ADA               	clrf	fsr2h,c
  9874   00BB02  0E0A               	movlw	10
  9875   00BB04  26D9               	addwf	fsr2l,f,c
  9876   00BB06  5005               	movf	fputc@fp^0,w,c
  9877   00BB08  6EE1               	movwf	fsr1l,c
  9878   00BB0A  6AE2               	clrf	fsr1h,c
  9879   00BB0C  0E03               	movlw	3
  9880   00BB0E  26E1               	addwf	fsr1l,f,c
  9881   00BB10  50DE               	movf	postinc2,w,c
  9882   00BB12  5CE6               	subwf	postinc1,w,c
  9883   00BB14  50E6               	movf	postinc1,w,c
  9884   00BB16  0A80               	xorlw	128
  9885   00BB18  6E0A               	movwf	(??_fputc+4)^0,c
  9886   00BB1A  50DE               	movf	postinc2,w,c
  9887   00BB1C  0A80               	xorlw	128
  9888   00BB1E  580A               	subwfb	(??_fputc+4)^0,w,c
  9889   00BB20  B0D8               	btfsc	status,0,c
  9890   00BB22  EF95  F05D         	goto	u8021
  9891   00BB26  EF97  F05D         	goto	u8020
  9892   00BB2A                     u8021:
  9893   00BB2A  EFBC  F05D         	goto	l1874
  9894   00BB2E                     u8020:
  9895   00BB2E                     l8716:
  9896   00BB2E  5005               	movf	fputc@fp^0,w,c
  9897   00BB30  6ED9               	movwf	fsr2l,c
  9898   00BB32  6ADA               	clrf	fsr2h,c
  9899   00BB34  0E03               	movlw	3
  9900   00BB36  26D9               	addwf	fsr2l,f,c
  9901   00BB38  006F FF78  F006    	movff	postinc2,??_fputc
  9902   00BB3E  006F FF74  F007    	movff	postdec2,??_fputc+1
  9903   00BB44  5005               	movf	fputc@fp^0,w,c
  9904   00BB46  6ED9               	movwf	fsr2l,c
  9905   00BB48  6ADA               	clrf	fsr2h,c
  9906   00BB4A  006F FF78  F008    	movff	postinc2,??_fputc+2
  9907   00BB50  006F FF74  F009    	movff	postdec2,??_fputc+3
  9908   00BB56  5006               	movf	??_fputc^0,w,c
  9909   00BB58  2408               	addwf	(??_fputc+2)^0,w,c
  9910   00BB5A  6ED9               	movwf	fsr2l,c
  9911   00BB5C  5007               	movf	(??_fputc+1)^0,w,c
  9912   00BB5E  2009               	addwfc	(??_fputc+3)^0,w,c
  9913   00BB60  6EDA               	movwf	fsr2h,c
  9914   00BB62  0060  F00F  FFDF   	movff	fputc@c,indf2
  9915   00BB68  5005               	movf	fputc@fp^0,w,c
  9916   00BB6A  6ED9               	movwf	fsr2l,c
  9917   00BB6C  6ADA               	clrf	fsr2h,c
  9918   00BB6E  0E03               	movlw	3
  9919   00BB70  26D9               	addwf	fsr2l,f,c
  9920   00BB72  2ADE               	incf	postinc2,f,c
  9921   00BB74  0E00               	movlw	0
  9922   00BB76  22DD               	addwfc	postdec2,f,c
  9923   00BB78                     l1874:
  9924   00BB78  0012               	return		;funcret
  9925   00BB7A                     __end_of_fputc:
  9926                           	callstack 0
  9927                           
  9928 ;; *************** function _putch *****************
  9929 ;; Defined at:
  9930 ;;		line 184 in file "mcc_generated_files/uart1.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  txData          1    wreg     unsigned char 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;  txData          1    1[COMRAM] unsigned char 
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  1    wreg      void 
  9937 ;; Registers used:
  9938 ;;		wreg, status,2, cstack
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;Total ram usage:        1 bytes
  9949 ;; Hardware stack levels used: 1
  9950 ;; Hardware stack levels required when called: 1
  9951 ;; This function calls:
  9952 ;;		_UART1_Write
  9953 ;; This function is called by:
  9954 ;;		_fputc
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text44
  9959   00A230                     __ptext44:
  9960                           	callstack 0
  9961   00A230                     _putch:
  9962                           	callstack 22
  9963                           
  9964                           ;incstack = 0
  9965                           ;putch@txData stored from wreg
  9966   00A230  6E02               	movwf	putch@txData^0,c
  9967   00A232                     
  9968                           ;mcc_generated_files/uart1.c: 184: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          185: {;mcc_generated_files/uart1.c: 186:     UART1_Write(txData);
  9969   00A232  5002               	movf	putch@txData^0,w,c
  9970   00A234  ECDA  F051         	call	_UART1_Write
  9971   00A238  0012               	return		;funcret
  9972   00A23A                     __end_of_putch:
  9973                           	callstack 0
  9974                           
  9975 ;; *************** function _labs *****************
  9976 ;; Defined at:
  9977 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  a               4    0[COMRAM] long 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  4    0[COMRAM] long 
  9984 ;; Registers used:
  9985 ;;		wreg, status,2, status,0
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;Total ram usage:        8 bytes
  9996 ;; Hardware stack levels used: 1
  9997 ;; This function calls:
  9998 ;;		Nothing
  9999 ;; This function is called by:
 10000 ;;		_efgtoa
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           	psect	text45
 10005   00AB8A                     __ptext45:
 10006                           	callstack 0
 10007   00AB8A                     _labs:
 10008                           	callstack 26
 10009   00AB8A  BE04               	btfsc	(labs@a+3)^0,7,c
 10010   00AB8C  EFCA  F055         	goto	u9251
 10011   00AB90  EFCC  F055         	goto	u9250
 10012   00AB94                     u9251:
 10013   00AB94  EFD6  F055         	goto	l9456
 10014   00AB98                     u9250:
 10015   00AB98  C001  F001         	movff	labs@a,?_labs
 10016   00AB9C  C002  F002         	movff	labs@a+1,?_labs+1
 10017   00ABA0  C003  F003         	movff	labs@a+2,?_labs+2
 10018   00ABA4  C004  F004         	movff	labs@a+3,?_labs+3
 10019   00ABA8  EFEF  F055         	goto	l1862
 10020   00ABAC                     l9456:
 10021   00ABAC  C001  F005         	movff	labs@a,??_labs
 10022   00ABB0  C002  F006         	movff	labs@a+1,??_labs+1
 10023   00ABB4  C003  F007         	movff	labs@a+2,??_labs+2
 10024   00ABB8  C004  F008         	movff	labs@a+3,??_labs+3
 10025   00ABBC  1E05               	comf	??_labs^0,f,c
 10026   00ABBE  1E06               	comf	(??_labs+1)^0,f,c
 10027   00ABC0  1E07               	comf	(??_labs+2)^0,f,c
 10028   00ABC2  1E08               	comf	(??_labs+3)^0,f,c
 10029   00ABC4  2A05               	incf	??_labs^0,f,c
 10030   00ABC6  0E00               	movlw	0
 10031   00ABC8  2206               	addwfc	(??_labs+1)^0,f,c
 10032   00ABCA  2207               	addwfc	(??_labs+2)^0,f,c
 10033   00ABCC  2208               	addwfc	(??_labs+3)^0,f,c
 10034   00ABCE  C005  F001         	movff	??_labs,?_labs
 10035   00ABD2  C006  F002         	movff	??_labs+1,?_labs+1
 10036   00ABD6  C007  F003         	movff	??_labs+2,?_labs+2
 10037   00ABDA  C008  F004         	movff	??_labs+3,?_labs+3
 10038   00ABDE                     l1862:
 10039   00ABDE  0012               	return		;funcret
 10040   00ABE0                     __end_of_labs:
 10041                           	callstack 0
 10042                           
 10043 ;; *************** function _floorf *****************
 10044 ;; Defined at:
 10045 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  x               4   39[COMRAM] float 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;  u               4   55[COMRAM] struct .
 10050 ;;  m               4   49[COMRAM] unsigned long 
 10051 ;;  e               2   53[COMRAM] int 
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  4   39[COMRAM] float 
 10054 ;; Registers used:
 10055 ;;		wreg, status,2, status,0
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10063 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10064 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10065 ;;Total ram usage:       20 bytes
 10066 ;; Hardware stack levels used: 1
 10067 ;; This function calls:
 10068 ;;		Nothing
 10069 ;; This function is called by:
 10070 ;;		_efgtoa
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           	psect	text46
 10075   00CC8C                     __ptext46:
 10076                           	callstack 0
 10077   00CC8C                     _floorf:
 10078                           	callstack 26
 10079   00CC8C  C214  F038         	movff	floorf@F521,floorf@u
 10080   00CC90  C215  F039         	movff	floorf@F521+1,floorf@u+1
 10081   00CC94  C216  F03A         	movff	floorf@F521+2,floorf@u+2
 10082   00CC98  C217  F03B         	movff	floorf@F521+3,floorf@u+3
 10083   00CC9C  C028  F038         	movff	floorf@x,floorf@u
 10084   00CCA0  C029  F039         	movff	floorf@x+1,floorf@u+1
 10085   00CCA4  C02A  F03A         	movff	floorf@x+2,floorf@u+2
 10086   00CCA8  C02B  F03B         	movff	floorf@x+3,floorf@u+3
 10087   00CCAC  0E81               	movlw	129
 10088   00CCAE  6E2C               	movwf	??_floorf^0,c
 10089   00CCB0  0EFF               	movlw	255
 10090   00CCB2  6E2D               	movwf	(??_floorf+1)^0,c
 10091   00CCB4  C038  F02E         	movff	floorf@u,??_floorf+2
 10092   00CCB8  C039  F02F         	movff	floorf@u+1,??_floorf+3
 10093   00CCBC  C03A  F030         	movff	floorf@u+2,??_floorf+4
 10094   00CCC0  C03B  F031         	movff	floorf@u+3,??_floorf+5
 10095   00CCC4  0E18               	movlw	24
 10096   00CCC6  EF6A  F066         	goto	u9260
 10097   00CCCA                     u9265:
 10098   00CCCA  90D8               	bcf	status,0,c
 10099   00CCCC  3231               	rrcf	(??_floorf+5)^0,f,c
 10100   00CCCE  3230               	rrcf	(??_floorf+4)^0,f,c
 10101   00CCD0  322F               	rrcf	(??_floorf+3)^0,f,c
 10102   00CCD2  322E               	rrcf	(??_floorf+2)^0,f,c
 10103   00CCD4                     u9260:
 10104   00CCD4  2EE8               	decfsz	wreg,f,c
 10105   00CCD6  EF65  F066         	goto	u9265
 10106   00CCDA  502E               	movf	(??_floorf+2)^0,w,c
 10107   00CCDC  242C               	addwf	??_floorf^0,w,c
 10108   00CCDE  6E36               	movwf	floorf@e^0,c
 10109   00CCE0  0E00               	movlw	0
 10110   00CCE2  202D               	addwfc	(??_floorf+1)^0,w,c
 10111   00CCE4  6E37               	movwf	(floorf@e+1)^0,c
 10112   00CCE6  BE37               	btfsc	(floorf@e+1)^0,7,c
 10113   00CCE8  EF7F  F066         	goto	u9271
 10114   00CCEC  5037               	movf	(floorf@e+1)^0,w,c
 10115   00CCEE  E109               	bnz	u9270
 10116   00CCF0  0E17               	movlw	23
 10117   00CCF2  5C36               	subwf	floorf@e^0,w,c
 10118   00CCF4  A0D8               	btfss	status,0,c
 10119   00CCF6  EF7F  F066         	goto	u9271
 10120   00CCFA  EF81  F066         	goto	u9270
 10121   00CCFE                     u9271:
 10122   00CCFE  EF8B  F066         	goto	l9466
 10123   00CD02                     u9270:
 10124   00CD02                     l9464:
 10125   00CD02  C028  F028         	movff	floorf@x,?_floorf
 10126   00CD06  C029  F029         	movff	floorf@x+1,?_floorf+1
 10127   00CD0A  C02A  F02A         	movff	floorf@x+2,?_floorf+2
 10128   00CD0E  C02B  F02B         	movff	floorf@x+3,?_floorf+3
 10129   00CD12  EF4E  F067         	goto	l1848
 10130   00CD16                     l9466:
 10131   00CD16  BE37               	btfsc	(floorf@e+1)^0,7,c
 10132   00CD18  EF90  F066         	goto	u9281
 10133   00CD1C  EF92  F066         	goto	u9280
 10134   00CD20                     u9281:
 10135   00CD20  EF02  F067         	goto	l9476
 10136   00CD24                     u9280:
 10137   00CD24  C036  F02C         	movff	floorf@e,??_floorf
 10138   00CD28  0EFF               	movlw	255
 10139   00CD2A  6E2D               	movwf	(??_floorf+1)^0,c
 10140   00CD2C  0EFF               	movlw	255
 10141   00CD2E  6E2E               	movwf	(??_floorf+2)^0,c
 10142   00CD30  0E7F               	movlw	127
 10143   00CD32  6E2F               	movwf	(??_floorf+3)^0,c
 10144   00CD34  0E00               	movlw	0
 10145   00CD36  6E30               	movwf	(??_floorf+4)^0,c
 10146   00CD38                     u9295:
 10147   00CD38  662C               	tstfsz	??_floorf^0,c
 10148   00CD3A  EFA1  F066         	goto	u9296
 10149   00CD3E  EFA9  F066         	goto	u9297
 10150   00CD42                     u9296:
 10151   00CD42  3430               	rlcf	(??_floorf+4)^0,w,c
 10152   00CD44  3230               	rrcf	(??_floorf+4)^0,f,c
 10153   00CD46  322F               	rrcf	(??_floorf+3)^0,f,c
 10154   00CD48  322E               	rrcf	(??_floorf+2)^0,f,c
 10155   00CD4A  322D               	rrcf	(??_floorf+1)^0,f,c
 10156   00CD4C  2E2C               	decfsz	??_floorf^0,f,c
 10157   00CD4E  EF9C  F066         	goto	u9295
 10158   00CD52                     u9297:
 10159   00CD52  C02D  F032         	movff	??_floorf+1,floorf@m
 10160   00CD56  C02E  F033         	movff	??_floorf+2,floorf@m+1
 10161   00CD5A  C02F  F034         	movff	??_floorf+3,floorf@m+2
 10162   00CD5E  C030  F035         	movff	??_floorf+4,floorf@m+3
 10163   00CD62  5032               	movf	floorf@m^0,w,c
 10164   00CD64  1438               	andwf	floorf@u^0,w,c
 10165   00CD66  6E2C               	movwf	??_floorf^0,c
 10166   00CD68  5033               	movf	(floorf@m+1)^0,w,c
 10167   00CD6A  1439               	andwf	(floorf@u+1)^0,w,c
 10168   00CD6C  6E2D               	movwf	(??_floorf+1)^0,c
 10169   00CD6E  5034               	movf	(floorf@m+2)^0,w,c
 10170   00CD70  143A               	andwf	(floorf@u+2)^0,w,c
 10171   00CD72  6E2E               	movwf	(??_floorf+2)^0,c
 10172   00CD74  5035               	movf	(floorf@m+3)^0,w,c
 10173   00CD76  143B               	andwf	(floorf@u+3)^0,w,c
 10174   00CD78  6E2F               	movwf	(??_floorf+3)^0,c
 10175   00CD7A  502C               	movf	??_floorf^0,w,c
 10176   00CD7C  102D               	iorwf	(??_floorf+1)^0,w,c
 10177   00CD7E  102E               	iorwf	(??_floorf+2)^0,w,c
 10178   00CD80  102F               	iorwf	(??_floorf+3)^0,w,c
 10179   00CD82  A4D8               	btfss	status,2,c
 10180   00CD84  EFC6  F066         	goto	u9301
 10181   00CD88  EFC8  F066         	goto	u9300
 10182   00CD8C                     u9301:
 10183   00CD8C  EFCA  F066         	goto	l9472
 10184   00CD90                     u9300:
 10185   00CD90  EF81  F066         	goto	l9464
 10186   00CD94                     l9472:
 10187   00CD94  C038  F02C         	movff	floorf@u,??_floorf
 10188   00CD98  C039  F02D         	movff	floorf@u+1,??_floorf+1
 10189   00CD9C  C03A  F02E         	movff	floorf@u+2,??_floorf+2
 10190   00CDA0  C03B  F02F         	movff	floorf@u+3,??_floorf+3
 10191   00CDA4  0E20               	movlw	32
 10192   00CDA6  EFDA  F066         	goto	u9310
 10193   00CDAA                     u9315:
 10194   00CDAA  90D8               	bcf	status,0,c
 10195   00CDAC  322F               	rrcf	(??_floorf+3)^0,f,c
 10196   00CDAE  322E               	rrcf	(??_floorf+2)^0,f,c
 10197   00CDB0  322D               	rrcf	(??_floorf+1)^0,f,c
 10198   00CDB2  322C               	rrcf	??_floorf^0,f,c
 10199   00CDB4                     u9310:
 10200   00CDB4  2EE8               	decfsz	wreg,f,c
 10201   00CDB6  EFD5  F066         	goto	u9315
 10202   00CDBA  502C               	movf	??_floorf^0,w,c
 10203   00CDBC  102D               	iorwf	(??_floorf+1)^0,w,c
 10204   00CDBE  102E               	iorwf	(??_floorf+2)^0,w,c
 10205   00CDC0  102F               	iorwf	(??_floorf+3)^0,w,c
 10206   00CDC2  B4D8               	btfsc	status,2,c
 10207   00CDC4  EFE6  F066         	goto	u9321
 10208   00CDC8  EFE8  F066         	goto	u9320
 10209   00CDCC                     u9321:
 10210   00CDCC  EFF0  F066         	goto	l1851
 10211   00CDD0                     u9320:
 10212   00CDD0  5032               	movf	floorf@m^0,w,c
 10213   00CDD2  2638               	addwf	floorf@u^0,f,c
 10214   00CDD4  5033               	movf	(floorf@m+1)^0,w,c
 10215   00CDD6  2239               	addwfc	(floorf@u+1)^0,f,c
 10216   00CDD8  5034               	movf	(floorf@m+2)^0,w,c
 10217   00CDDA  223A               	addwfc	(floorf@u+2)^0,f,c
 10218   00CDDC  5035               	movf	(floorf@m+3)^0,w,c
 10219   00CDDE  223B               	addwfc	(floorf@u+3)^0,f,c
 10220   00CDE0                     l1851:
 10221   00CDE0  1C32               	comf	floorf@m^0,w,c
 10222   00CDE2  6E2C               	movwf	??_floorf^0,c
 10223   00CDE4  1C33               	comf	(floorf@m+1)^0,w,c
 10224   00CDE6  6E2D               	movwf	(??_floorf+1)^0,c
 10225   00CDE8  1C34               	comf	(floorf@m+2)^0,w,c
 10226   00CDEA  6E2E               	movwf	(??_floorf+2)^0,c
 10227   00CDEC  1C35               	comf	(floorf@m+3)^0,w,c
 10228   00CDEE  6E2F               	movwf	(??_floorf+3)^0,c
 10229   00CDF0  502C               	movf	??_floorf^0,w,c
 10230   00CDF2  1638               	andwf	floorf@u^0,f,c
 10231   00CDF4  502D               	movf	(??_floorf+1)^0,w,c
 10232   00CDF6  1639               	andwf	(floorf@u+1)^0,f,c
 10233   00CDF8  502E               	movf	(??_floorf+2)^0,w,c
 10234   00CDFA  163A               	andwf	(floorf@u+2)^0,f,c
 10235   00CDFC  502F               	movf	(??_floorf+3)^0,w,c
 10236   00CDFE  163B               	andwf	(floorf@u+3)^0,f,c
 10237   00CE00  EF46  F067         	goto	l9484
 10238   00CE04                     l9476:
 10239   00CE04  C038  F02C         	movff	floorf@u,??_floorf
 10240   00CE08  C039  F02D         	movff	floorf@u+1,??_floorf+1
 10241   00CE0C  C03A  F02E         	movff	floorf@u+2,??_floorf+2
 10242   00CE10  C03B  F02F         	movff	floorf@u+3,??_floorf+3
 10243   00CE14  0E20               	movlw	32
 10244   00CE16  EF12  F067         	goto	u9330
 10245   00CE1A                     u9335:
 10246   00CE1A  90D8               	bcf	status,0,c
 10247   00CE1C  322F               	rrcf	(??_floorf+3)^0,f,c
 10248   00CE1E  322E               	rrcf	(??_floorf+2)^0,f,c
 10249   00CE20  322D               	rrcf	(??_floorf+1)^0,f,c
 10250   00CE22  322C               	rrcf	??_floorf^0,f,c
 10251   00CE24                     u9330:
 10252   00CE24  2EE8               	decfsz	wreg,f,c
 10253   00CE26  EF0D  F067         	goto	u9335
 10254   00CE2A  502C               	movf	??_floorf^0,w,c
 10255   00CE2C  102D               	iorwf	(??_floorf+1)^0,w,c
 10256   00CE2E  102E               	iorwf	(??_floorf+2)^0,w,c
 10257   00CE30  102F               	iorwf	(??_floorf+3)^0,w,c
 10258   00CE32  A4D8               	btfss	status,2,c
 10259   00CE34  EF1E  F067         	goto	u9341
 10260   00CE38  EF20  F067         	goto	u9340
 10261   00CE3C                     u9341:
 10262   00CE3C  EF2A  F067         	goto	l9480
 10263   00CE40                     u9340:
 10264   00CE40  0E00               	movlw	0
 10265   00CE42  6E38               	movwf	floorf@u^0,c
 10266   00CE44  0E00               	movlw	0
 10267   00CE46  6E39               	movwf	(floorf@u+1)^0,c
 10268   00CE48  0E00               	movlw	0
 10269   00CE4A  6E3A               	movwf	(floorf@u+2)^0,c
 10270   00CE4C  0E00               	movlw	0
 10271   00CE4E  6E3B               	movwf	(floorf@u+3)^0,c
 10272   00CE50  EF46  F067         	goto	l9484
 10273   00CE54                     l9480:
 10274   00CE54  90D8               	bcf	status,0,c
 10275   00CE56  3438               	rlcf	floorf@u^0,w,c
 10276   00CE58  6E2C               	movwf	??_floorf^0,c
 10277   00CE5A  3439               	rlcf	(floorf@u+1)^0,w,c
 10278   00CE5C  6E2D               	movwf	(??_floorf+1)^0,c
 10279   00CE5E  343A               	rlcf	(floorf@u+2)^0,w,c
 10280   00CE60  6E2E               	movwf	(??_floorf+2)^0,c
 10281   00CE62  343B               	rlcf	(floorf@u+3)^0,w,c
 10282   00CE64  6E2F               	movwf	(??_floorf+3)^0,c
 10283   00CE66  502C               	movf	??_floorf^0,w,c
 10284   00CE68  102D               	iorwf	(??_floorf+1)^0,w,c
 10285   00CE6A  102E               	iorwf	(??_floorf+2)^0,w,c
 10286   00CE6C  102F               	iorwf	(??_floorf+3)^0,w,c
 10287   00CE6E  B4D8               	btfsc	status,2,c
 10288   00CE70  EF3C  F067         	goto	u9351
 10289   00CE74  EF3E  F067         	goto	u9350
 10290   00CE78                     u9351:
 10291   00CE78  EF46  F067         	goto	l9484
 10292   00CE7C                     u9350:
 10293   00CE7C  0E00               	movlw	0
 10294   00CE7E  6E38               	movwf	floorf@u^0,c
 10295   00CE80  0E00               	movlw	0
 10296   00CE82  6E39               	movwf	(floorf@u+1)^0,c
 10297   00CE84  0E80               	movlw	128
 10298   00CE86  6E3A               	movwf	(floorf@u+2)^0,c
 10299   00CE88  0EBF               	movlw	191
 10300   00CE8A  6E3B               	movwf	(floorf@u+3)^0,c
 10301   00CE8C                     l9484:
 10302   00CE8C  C038  F028         	movff	floorf@u,?_floorf
 10303   00CE90  C039  F029         	movff	floorf@u+1,?_floorf+1
 10304   00CE94  C03A  F02A         	movff	floorf@u+2,?_floorf+2
 10305   00CE98  C03B  F02B         	movff	floorf@u+3,?_floorf+3
 10306   00CE9C                     l1848:
 10307   00CE9C  0012               	return		;funcret
 10308   00CE9E                     __end_of_floorf:
 10309                           	callstack 0
 10310                           
 10311 ;; *************** function ___fpclassifyf *****************
 10312 ;; Defined at:
 10313 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  x               4    0[COMRAM] float 
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;  u               4   10[COMRAM] struct .
 10318 ;;  e               2    8[COMRAM] int 
 10319 ;; Return value:  Size  Location     Type
 10320 ;;                  2    0[COMRAM] int 
 10321 ;; Registers used:
 10322 ;;		wreg, status,2, status,0
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10331 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10332 ;;Total ram usage:       14 bytes
 10333 ;; Hardware stack levels used: 1
 10334 ;; This function calls:
 10335 ;;		Nothing
 10336 ;; This function is called by:
 10337 ;;		_efgtoa
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text47
 10342   00BC42                     __ptext47:
 10343                           	callstack 0
 10344   00BC42                     ___fpclassifyf:
 10345                           	callstack 26
 10346   00BC42  C218  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 10347   00BC46  C219  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 10348   00BC4A  C21A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 10349   00BC4E  C21B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 10350   00BC52  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 10351   00BC56  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10352   00BC5A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10353   00BC5E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10354   00BC62  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10355   00BC66  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10356   00BC6A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10357   00BC6E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10358   00BC72  0E18               	movlw	24
 10359   00BC74  EF41  F05E         	goto	u9170
 10360   00BC78                     u9175:
 10361   00BC78  90D8               	bcf	status,0,c
 10362   00BC7A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 10363   00BC7C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 10364   00BC7E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 10365   00BC80  3205               	rrcf	??___fpclassifyf^0,f,c
 10366   00BC82                     u9170:
 10367   00BC82  2EE8               	decfsz	wreg,f,c
 10368   00BC84  EF3C  F05E         	goto	u9175
 10369   00BC88  5005               	movf	??___fpclassifyf^0,w,c
 10370   00BC8A  6E09               	movwf	___fpclassifyf@e^0,c
 10371   00BC8C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 10372   00BC8E  5009               	movf	___fpclassifyf@e^0,w,c
 10373   00BC90  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10374   00BC92  A4D8               	btfss	status,2,c
 10375   00BC94  EF4E  F05E         	goto	u9181
 10376   00BC98  EF50  F05E         	goto	u9180
 10377   00BC9C                     u9181:
 10378   00BC9C  EF70  F05E         	goto	l9438
 10379   00BCA0                     u9180:
 10380   00BCA0  90D8               	bcf	status,0,c
 10381   00BCA2  340B               	rlcf	___fpclassifyf@u^0,w,c
 10382   00BCA4  6E05               	movwf	??___fpclassifyf^0,c
 10383   00BCA6  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10384   00BCA8  6E06               	movwf	(??___fpclassifyf+1)^0,c
 10385   00BCAA  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10386   00BCAC  6E07               	movwf	(??___fpclassifyf+2)^0,c
 10387   00BCAE  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10388   00BCB0  6E08               	movwf	(??___fpclassifyf+3)^0,c
 10389   00BCB2  5005               	movf	??___fpclassifyf^0,w,c
 10390   00BCB4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10391   00BCB6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10392   00BCB8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10393   00BCBA  A4D8               	btfss	status,2,c
 10394   00BCBC  EF62  F05E         	goto	u9191
 10395   00BCC0  EF64  F05E         	goto	u9190
 10396   00BCC4                     u9191:
 10397   00BCC4  EF6A  F05E         	goto	l9434
 10398   00BCC8                     u9190:
 10399   00BCC8  0E00               	movlw	0
 10400   00BCCA  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10401   00BCCC  0E02               	movlw	2
 10402   00BCCE  6E01               	movwf	?___fpclassifyf^0,c
 10403   00BCD0  EF9F  F05E         	goto	l1841
 10404   00BCD4                     l9434:
 10405   00BCD4  0E00               	movlw	0
 10406   00BCD6  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10407   00BCD8  0E03               	movlw	3
 10408   00BCDA  6E01               	movwf	?___fpclassifyf^0,c
 10409   00BCDC  EF9F  F05E         	goto	l1841
 10410   00BCE0                     l9438:
 10411   00BCE0  2809               	incf	___fpclassifyf@e^0,w,c
 10412   00BCE2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10413   00BCE4  A4D8               	btfss	status,2,c
 10414   00BCE6  EF77  F05E         	goto	u9201
 10415   00BCEA  EF79  F05E         	goto	u9200
 10416   00BCEE                     u9201:
 10417   00BCEE  EF9B  F05E         	goto	l9444
 10418   00BCF2                     u9200:
 10419   00BCF2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10420   00BCF6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10421   00BCFA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10422   00BCFE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10423   00BD02  0E09               	movlw	9
 10424   00BD04                     u9215:
 10425   00BD04  90D8               	bcf	status,0,c
 10426   00BD06  3605               	rlcf	??___fpclassifyf^0,f,c
 10427   00BD08  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 10428   00BD0A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 10429   00BD0C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 10430   00BD0E  2EE8               	decfsz	wreg,f,c
 10431   00BD10  EF82  F05E         	goto	u9215
 10432   00BD14  5005               	movf	??___fpclassifyf^0,w,c
 10433   00BD16  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10434   00BD18  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10435   00BD1A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10436   00BD1C  B4D8               	btfsc	status,2,c
 10437   00BD1E  EF93  F05E         	goto	u9221
 10438   00BD22  EF96  F05E         	goto	u9220
 10439   00BD26                     u9221:
 10440   00BD26  0E01               	movlw	1
 10441   00BD28  EF97  F05E         	goto	u9230
 10442   00BD2C                     u9220:
 10443   00BD2C  0E00               	movlw	0
 10444   00BD2E                     u9230:
 10445   00BD2E  6E01               	movwf	?___fpclassifyf^0,c
 10446   00BD30  6A02               	clrf	(?___fpclassifyf+1)^0,c
 10447   00BD32  EF9F  F05E         	goto	l1841
 10448   00BD36                     l9444:
 10449   00BD36  0E00               	movlw	0
 10450   00BD38  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10451   00BD3A  0E04               	movlw	4
 10452   00BD3C  6E01               	movwf	?___fpclassifyf^0,c
 10453   00BD3E                     l1841:
 10454   00BD3E  0012               	return		;funcret
 10455   00BD40                     __end_of___fpclassifyf:
 10456                           	callstack 0
 10457                           
 10458 ;; *************** function ___fltol *****************
 10459 ;; Defined at:
 10460 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  f1              4    0[COMRAM] int 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  exp1            1    9[COMRAM] unsigned char 
 10465 ;;  sign1           1    8[COMRAM] unsigned char 
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  4    0[COMRAM] long 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;Total ram usage:       10 bytes
 10480 ;; Hardware stack levels used: 1
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_efgtoa
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text48
 10489   00BE44                     __ptext48:
 10490                           	callstack 0
 10491   00BE44                     ___fltol:
 10492                           	callstack 26
 10493   00BE44  3403               	rlcf	(___fltol@f1+2)^0,w,c
 10494   00BE46  3404               	rlcf	(___fltol@f1+3)^0,w,c
 10495   00BE48  6E0A               	movwf	___fltol@exp1^0,c
 10496   00BE4A  500A               	movf	___fltol@exp1^0,w,c
 10497   00BE4C  A4D8               	btfss	status,2,c
 10498   00BE4E  EF2B  F05F         	goto	u9051
 10499   00BE52  EF2D  F05F         	goto	u9050
 10500   00BE56                     u9051:
 10501   00BE56  EF37  F05F         	goto	l9360
 10502   00BE5A                     u9050:
 10503   00BE5A                     l9356:
 10504   00BE5A  0E00               	movlw	0
 10505   00BE5C  6E01               	movwf	?___fltol^0,c
 10506   00BE5E  0E00               	movlw	0
 10507   00BE60  6E02               	movwf	(?___fltol+1)^0,c
 10508   00BE62  0E00               	movlw	0
 10509   00BE64  6E03               	movwf	(?___fltol+2)^0,c
 10510   00BE66  0E00               	movlw	0
 10511   00BE68  6E04               	movwf	(?___fltol+3)^0,c
 10512   00BE6A  EFA4  F05F         	goto	l1277
 10513   00BE6E                     l9360:
 10514   00BE6E  C001  F005         	movff	___fltol@f1,??___fltol
 10515   00BE72  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 10516   00BE76  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 10517   00BE7A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 10518   00BE7E  0E20               	movlw	32
 10519   00BE80  EF47  F05F         	goto	u9060
 10520   00BE84                     u9065:
 10521   00BE84  90D8               	bcf	status,0,c
 10522   00BE86  3208               	rrcf	(??___fltol+3)^0,f,c
 10523   00BE88  3207               	rrcf	(??___fltol+2)^0,f,c
 10524   00BE8A  3206               	rrcf	(??___fltol+1)^0,f,c
 10525   00BE8C  3205               	rrcf	??___fltol^0,f,c
 10526   00BE8E                     u9060:
 10527   00BE8E  2EE8               	decfsz	wreg,f,c
 10528   00BE90  EF42  F05F         	goto	u9065
 10529   00BE94  5005               	movf	??___fltol^0,w,c
 10530   00BE96  6E09               	movwf	___fltol@sign1^0,c
 10531   00BE98  8E03               	bsf	(___fltol@f1+2)^0,7,c
 10532   00BE9A  0EFF               	movlw	255
 10533   00BE9C  1601               	andwf	___fltol@f1^0,f,c
 10534   00BE9E  0EFF               	movlw	255
 10535   00BEA0  1602               	andwf	(___fltol@f1+1)^0,f,c
 10536   00BEA2  0EFF               	movlw	255
 10537   00BEA4  1603               	andwf	(___fltol@f1+2)^0,f,c
 10538   00BEA6  0E00               	movlw	0
 10539   00BEA8  1604               	andwf	(___fltol@f1+3)^0,f,c
 10540   00BEAA  0E96               	movlw	150
 10541   00BEAC  5E0A               	subwf	___fltol@exp1^0,f,c
 10542   00BEAE  BE0A               	btfsc	___fltol@exp1^0,7,c
 10543   00BEB0  EF5E  F05F         	goto	u9070
 10544   00BEB4  EF5C  F05F         	goto	u9071
 10545   00BEB8                     u9071:
 10546   00BEB8  EF74  F05F         	goto	l9380
 10547   00BEBC                     u9070:
 10548   00BEBC  500A               	movf	___fltol@exp1^0,w,c
 10549   00BEBE  0A80               	xorlw	128
 10550   00BEC0  0F97               	addlw	151
 10551   00BEC2  B0D8               	btfsc	status,0,c
 10552   00BEC4  EF66  F05F         	goto	u9081
 10553   00BEC8  EF68  F05F         	goto	u9080
 10554   00BECC                     u9081:
 10555   00BECC  EF6A  F05F         	goto	l9376
 10556   00BED0                     u9080:
 10557   00BED0  EF2D  F05F         	goto	l9356
 10558   00BED4                     l9376:
 10559   00BED4  90D8               	bcf	status,0,c
 10560   00BED6  3204               	rrcf	(___fltol@f1+3)^0,f,c
 10561   00BED8  3203               	rrcf	(___fltol@f1+2)^0,f,c
 10562   00BEDA  3202               	rrcf	(___fltol@f1+1)^0,f,c
 10563   00BEDC  3201               	rrcf	___fltol@f1^0,f,c
 10564   00BEDE  3E0A               	incfsz	___fltol@exp1^0,f,c
 10565   00BEE0  EF6A  F05F         	goto	l9376
 10566   00BEE4  EF8C  F05F         	goto	l9390
 10567   00BEE8                     l9380:
 10568   00BEE8  0E1F               	movlw	31
 10569   00BEEA  640A               	cpfsgt	___fltol@exp1^0,c
 10570   00BEEC  EF7A  F05F         	goto	u9091
 10571   00BEF0  EF7C  F05F         	goto	u9090
 10572   00BEF4                     u9091:
 10573   00BEF4  EF84  F05F         	goto	l9388
 10574   00BEF8                     u9090:
 10575   00BEF8  EF2D  F05F         	goto	l9356
 10576   00BEFC                     l9386:
 10577   00BEFC  90D8               	bcf	status,0,c
 10578   00BEFE  3601               	rlcf	___fltol@f1^0,f,c
 10579   00BF00  3602               	rlcf	(___fltol@f1+1)^0,f,c
 10580   00BF02  3603               	rlcf	(___fltol@f1+2)^0,f,c
 10581   00BF04  3604               	rlcf	(___fltol@f1+3)^0,f,c
 10582   00BF06  060A               	decf	___fltol@exp1^0,f,c
 10583   00BF08                     l9388:
 10584   00BF08  500A               	movf	___fltol@exp1^0,w,c
 10585   00BF0A  A4D8               	btfss	status,2,c
 10586   00BF0C  EF8A  F05F         	goto	u9101
 10587   00BF10  EF8C  F05F         	goto	u9100
 10588   00BF14                     u9101:
 10589   00BF14  EF7E  F05F         	goto	l9386
 10590   00BF18                     u9100:
 10591   00BF18                     l9390:
 10592   00BF18  5009               	movf	___fltol@sign1^0,w,c
 10593   00BF1A  B4D8               	btfsc	status,2,c
 10594   00BF1C  EF92  F05F         	goto	u9111
 10595   00BF20  EF94  F05F         	goto	u9110
 10596   00BF24                     u9111:
 10597   00BF24  EF9C  F05F         	goto	l9394
 10598   00BF28                     u9110:
 10599   00BF28  1E04               	comf	(___fltol@f1+3)^0,f,c
 10600   00BF2A  1E03               	comf	(___fltol@f1+2)^0,f,c
 10601   00BF2C  1E02               	comf	(___fltol@f1+1)^0,f,c
 10602   00BF2E  6C01               	negf	___fltol@f1^0,c
 10603   00BF30  0E00               	movlw	0
 10604   00BF32  2202               	addwfc	(___fltol@f1+1)^0,f,c
 10605   00BF34  2203               	addwfc	(___fltol@f1+2)^0,f,c
 10606   00BF36  2204               	addwfc	(___fltol@f1+3)^0,f,c
 10607   00BF38                     l9394:
 10608   00BF38  C001  F001         	movff	___fltol@f1,?___fltol
 10609   00BF3C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 10610   00BF40  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 10611   00BF44  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 10612   00BF48                     l1277:
 10613   00BF48  0012               	return		;funcret
 10614   00BF4A                     __end_of___fltol:
 10615                           	callstack 0
 10616                           
 10617 ;; *************** function ___flsub *****************
 10618 ;; Defined at:
 10619 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;  b               4   25[COMRAM] long 
 10622 ;;  a               4   29[COMRAM] long 
 10623 ;; Auto vars:     Size  Location     Type
 10624 ;;		None
 10625 ;; Return value:  Size  Location     Type
 10626 ;;                  4   25[COMRAM] long 
 10627 ;; Registers used:
 10628 ;;		wreg, status,2, status,0, cstack
 10629 ;; Tracked objects:
 10630 ;;		On entry : 0/0
 10631 ;;		On exit  : 0/0
 10632 ;;		Unchanged: 0/0
 10633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10634 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;Total ram usage:        8 bytes
 10639 ;; Hardware stack levels used: 1
 10640 ;; Hardware stack levels required when called: 1
 10641 ;; This function calls:
 10642 ;;		___fladd
 10643 ;; This function is called by:
 10644 ;;		_efgtoa
 10645 ;; This function uses a non-reentrant model
 10646 ;;
 10647                           
 10648                           	psect	text49
 10649   00A976                     __ptext49:
 10650                           	callstack 0
 10651   00A976                     ___flsub:
 10652                           	callstack 25
 10653   00A976  0E00               	movlw	0
 10654   00A978  1A1E               	xorwf	___flsub@a^0,f,c
 10655   00A97A  0E00               	movlw	0
 10656   00A97C  1A1F               	xorwf	(___flsub@a+1)^0,f,c
 10657   00A97E  0E00               	movlw	0
 10658   00A980  1A20               	xorwf	(___flsub@a+2)^0,f,c
 10659   00A982  0E80               	movlw	128
 10660   00A984  1A21               	xorwf	(___flsub@a+3)^0,f,c
 10661   00A986  C01A  F001         	movff	___flsub@b,___fladd@b
 10662   00A98A  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
 10663   00A98E  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
 10664   00A992  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
 10665   00A996  C01E  F005         	movff	___flsub@a,___fladd@a
 10666   00A99A  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
 10667   00A99E  C020  F007         	movff	___flsub@a+2,___fladd@a+2
 10668   00A9A2  C021  F008         	movff	___flsub@a+3,___fladd@a+3
 10669   00A9A6  ECD8  F074         	call	___fladd	;wreg free
 10670   00A9AA  C001  F01A         	movff	?___fladd,?___flsub
 10671   00A9AE  C002  F01B         	movff	?___fladd+1,?___flsub+1
 10672   00A9B2  C003  F01C         	movff	?___fladd+2,?___flsub+2
 10673   00A9B6  C004  F01D         	movff	?___fladd+3,?___flsub+3
 10674   00A9BA  0012               	return		;funcret
 10675   00A9BC                     __end_of___flsub:
 10676                           	callstack 0
 10677                           
 10678 ;; *************** function ___fladd *****************
 10679 ;; Defined at:
 10680 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;  b               4    0[COMRAM] long 
 10683 ;;  a               4    4[COMRAM] long 
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;  grs             1   15[COMRAM] unsigned char 
 10686 ;;  bexp            1   14[COMRAM] unsigned char 
 10687 ;;  aexp            1   13[COMRAM] unsigned char 
 10688 ;;  signs           1   12[COMRAM] unsigned char 
 10689 ;; Return value:  Size  Location     Type
 10690 ;;                  4    0[COMRAM] unsigned char 
 10691 ;; Registers used:
 10692 ;;		wreg, status,2, status,0
 10693 ;; Tracked objects:
 10694 ;;		On entry : 0/0
 10695 ;;		On exit  : 0/0
 10696 ;;		Unchanged: 0/0
 10697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10698 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;Total ram usage:       16 bytes
 10703 ;; Hardware stack levels used: 1
 10704 ;; This function calls:
 10705 ;;		Nothing
 10706 ;; This function is called by:
 10707 ;;		___flsub
 10708 ;;		_efgtoa
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           	psect	text50
 10713   00E9B0                     __ptext50:
 10714                           	callstack 0
 10715   00E9B0                     ___fladd:
 10716                           	callstack 25
 10717   00E9B0  5004               	movf	(___fladd@b+3)^0,w,c
 10718   00E9B2  0B80               	andlw	128
 10719   00E9B4  6E0D               	movwf	___fladd@signs^0,c
 10720   00E9B6  5004               	movf	(___fladd@b+3)^0,w,c
 10721   00E9B8  2404               	addwf	(___fladd@b+3)^0,w,c
 10722   00E9BA  6E0F               	movwf	___fladd@bexp^0,c
 10723   00E9BC  AE03               	btfss	(___fladd@b+2)^0,7,c
 10724   00E9BE  EFE3  F074         	goto	u8041
 10725   00E9C2  EFE5  F074         	goto	u8040
 10726   00E9C6                     u8041:
 10727   00E9C6  EFE6  F074         	goto	l8734
 10728   00E9CA                     u8040:
 10729   00E9CA  800F               	bsf	___fladd@bexp^0,0,c
 10730   00E9CC                     l8734:
 10731   00E9CC  500F               	movf	___fladd@bexp^0,w,c
 10732   00E9CE  B4D8               	btfsc	status,2,c
 10733   00E9D0  EFEC  F074         	goto	u8051
 10734   00E9D4  EFEE  F074         	goto	u8050
 10735   00E9D8                     u8051:
 10736   00E9D8  EF03  F075         	goto	l8744
 10737   00E9DC                     u8050:
 10738   00E9DC  280F               	incf	___fladd@bexp^0,w,c
 10739   00E9DE  A4D8               	btfss	status,2,c
 10740   00E9E0  EFF4  F074         	goto	u8061
 10741   00E9E4  EFF6  F074         	goto	u8060
 10742   00E9E8                     u8061:
 10743   00E9E8  EFFE  F074         	goto	l8740
 10744   00E9EC                     u8060:
 10745   00E9EC  0E00               	movlw	0
 10746   00E9EE  6E01               	movwf	___fladd@b^0,c
 10747   00E9F0  0E00               	movlw	0
 10748   00E9F2  6E02               	movwf	(___fladd@b+1)^0,c
 10749   00E9F4  0E00               	movlw	0
 10750   00E9F6  6E03               	movwf	(___fladd@b+2)^0,c
 10751   00E9F8  0E00               	movlw	0
 10752   00E9FA  6E04               	movwf	(___fladd@b+3)^0,c
 10753   00E9FC                     l8740:
 10754   00E9FC  8E03               	bsf	(___fladd@b+2)^0,7,c
 10755   00E9FE  0E00               	movlw	0
 10756   00EA00  6E04               	movwf	(___fladd@b+3)^0,c
 10757   00EA02  EF0B  F075         	goto	l8746
 10758   00EA06                     l8744:
 10759   00EA06  0E00               	movlw	0
 10760   00EA08  6E01               	movwf	___fladd@b^0,c
 10761   00EA0A  0E00               	movlw	0
 10762   00EA0C  6E02               	movwf	(___fladd@b+1)^0,c
 10763   00EA0E  0E00               	movlw	0
 10764   00EA10  6E03               	movwf	(___fladd@b+2)^0,c
 10765   00EA12  0E00               	movlw	0
 10766   00EA14  6E04               	movwf	(___fladd@b+3)^0,c
 10767   00EA16                     l8746:
 10768   00EA16  5008               	movf	(___fladd@a+3)^0,w,c
 10769   00EA18  0B80               	andlw	128
 10770   00EA1A  6E0E               	movwf	___fladd@aexp^0,c
 10771   00EA1C  500D               	movf	___fladd@signs^0,w,c
 10772   00EA1E  180E               	xorwf	___fladd@aexp^0,w,c
 10773   00EA20  B4D8               	btfsc	status,2,c
 10774   00EA22  EF15  F075         	goto	u8071
 10775   00EA26  EF17  F075         	goto	u8070
 10776   00EA2A                     u8071:
 10777   00EA2A  EF18  F075         	goto	l8752
 10778   00EA2E                     u8070:
 10779   00EA2E  8C0D               	bsf	___fladd@signs^0,6,c
 10780   00EA30                     l8752:
 10781   00EA30  5008               	movf	(___fladd@a+3)^0,w,c
 10782   00EA32  2408               	addwf	(___fladd@a+3)^0,w,c
 10783   00EA34  6E0E               	movwf	___fladd@aexp^0,c
 10784   00EA36  AE07               	btfss	(___fladd@a+2)^0,7,c
 10785   00EA38  EF20  F075         	goto	u8081
 10786   00EA3C  EF22  F075         	goto	u8080
 10787   00EA40                     u8081:
 10788   00EA40  EF23  F075         	goto	l8758
 10789   00EA44                     u8080:
 10790   00EA44  800E               	bsf	___fladd@aexp^0,0,c
 10791   00EA46                     l8758:
 10792   00EA46  500E               	movf	___fladd@aexp^0,w,c
 10793   00EA48  B4D8               	btfsc	status,2,c
 10794   00EA4A  EF29  F075         	goto	u8091
 10795   00EA4E  EF2B  F075         	goto	u8090
 10796   00EA52                     u8091:
 10797   00EA52  EF40  F075         	goto	l8768
 10798   00EA56                     u8090:
 10799   00EA56  280E               	incf	___fladd@aexp^0,w,c
 10800   00EA58  A4D8               	btfss	status,2,c
 10801   00EA5A  EF31  F075         	goto	u8101
 10802   00EA5E  EF33  F075         	goto	u8100
 10803   00EA62                     u8101:
 10804   00EA62  EF3B  F075         	goto	l8764
 10805   00EA66                     u8100:
 10806   00EA66  0E00               	movlw	0
 10807   00EA68  6E05               	movwf	___fladd@a^0,c
 10808   00EA6A  0E00               	movlw	0
 10809   00EA6C  6E06               	movwf	(___fladd@a+1)^0,c
 10810   00EA6E  0E00               	movlw	0
 10811   00EA70  6E07               	movwf	(___fladd@a+2)^0,c
 10812   00EA72  0E00               	movlw	0
 10813   00EA74  6E08               	movwf	(___fladd@a+3)^0,c
 10814   00EA76                     l8764:
 10815   00EA76  8E07               	bsf	(___fladd@a+2)^0,7,c
 10816   00EA78  0E00               	movlw	0
 10817   00EA7A  6E08               	movwf	(___fladd@a+3)^0,c
 10818   00EA7C  EF48  F075         	goto	l8770
 10819   00EA80                     l8768:
 10820   00EA80  0E00               	movlw	0
 10821   00EA82  6E05               	movwf	___fladd@a^0,c
 10822   00EA84  0E00               	movlw	0
 10823   00EA86  6E06               	movwf	(___fladd@a+1)^0,c
 10824   00EA88  0E00               	movlw	0
 10825   00EA8A  6E07               	movwf	(___fladd@a+2)^0,c
 10826   00EA8C  0E00               	movlw	0
 10827   00EA8E  6E08               	movwf	(___fladd@a+3)^0,c
 10828   00EA90                     l8770:
 10829   00EA90  500F               	movf	___fladd@bexp^0,w,c
 10830   00EA92  5C0E               	subwf	___fladd@aexp^0,w,c
 10831   00EA94  B0D8               	btfsc	status,0,c
 10832   00EA96  EF4F  F075         	goto	u8111
 10833   00EA9A  EF51  F075         	goto	u8110
 10834   00EA9E                     u8111:
 10835   00EA9E  EF78  F075         	goto	l8806
 10836   00EAA2                     u8110:
 10837   00EAA2  AC0D               	btfss	___fladd@signs^0,6,c
 10838   00EAA4  EF56  F075         	goto	u8121
 10839   00EAA8  EF58  F075         	goto	u8120
 10840   00EAAC                     u8121:
 10841   00EAAC  EF5A  F075         	goto	l8776
 10842   00EAB0                     u8120:
 10843   00EAB0  0E80               	movlw	128
 10844   00EAB2  1A0D               	xorwf	___fladd@signs^0,f,c
 10845   00EAB4                     l8776:
 10846   00EAB4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10847   00EAB8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10848   00EABC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10849   00EAC0  C001  F010         	movff	___fladd@b,___fladd@grs
 10850   00EAC4  C005  F001         	movff	___fladd@a,___fladd@b
 10851   00EAC8  C010  F005         	movff	___fladd@grs,___fladd@a
 10852   00EACC  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10853   00EAD0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10854   00EAD4  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10855   00EAD8  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10856   00EADC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10857   00EAE0  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10858   00EAE4  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10859   00EAE8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10860   00EAEC  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10861   00EAF0                     l8806:
 10862   00EAF0  0E00               	movlw	0
 10863   00EAF2  6E10               	movwf	___fladd@grs^0,c
 10864   00EAF4  500F               	movf	___fladd@bexp^0,w,c
 10865   00EAF6  C00E  F009         	movff	___fladd@aexp,??___fladd
 10866   00EAFA  6A0A               	clrf	(??___fladd+1)^0,c
 10867   00EAFC  5E09               	subwf	??___fladd^0,f,c
 10868   00EAFE  0E00               	movlw	0
 10869   00EB00  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10870   00EB02  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10871   00EB04  EF8D  F075         	goto	u8131
 10872   00EB08  500A               	movf	(??___fladd+1)^0,w,c
 10873   00EB0A  E109               	bnz	u8130
 10874   00EB0C  0E1A               	movlw	26
 10875   00EB0E  5C09               	subwf	??___fladd^0,w,c
 10876   00EB10  A0D8               	btfss	status,0,c
 10877   00EB12  EF8D  F075         	goto	u8131
 10878   00EB16  EF8F  F075         	goto	u8130
 10879   00EB1A                     u8131:
 10880   00EB1A  EFC6  F075         	goto	l1509
 10881   00EB1E                     u8130:
 10882   00EB1E  5001               	movf	___fladd@b^0,w,c
 10883   00EB20  1002               	iorwf	(___fladd@b+1)^0,w,c
 10884   00EB22  1003               	iorwf	(___fladd@b+2)^0,w,c
 10885   00EB24  1004               	iorwf	(___fladd@b+3)^0,w,c
 10886   00EB26  A4D8               	btfss	status,2,c
 10887   00EB28  EF98  F075         	goto	u8141
 10888   00EB2C  EF9B  F075         	goto	u8140
 10889   00EB30                     u8141:
 10890   00EB30  0E01               	movlw	1
 10891   00EB32  EF9C  F075         	goto	u8150
 10892   00EB36                     u8140:
 10893   00EB36  0E00               	movlw	0
 10894   00EB38                     u8150:
 10895   00EB38  6E10               	movwf	___fladd@grs^0,c
 10896   00EB3A  0E00               	movlw	0
 10897   00EB3C  6E01               	movwf	___fladd@b^0,c
 10898   00EB3E  0E00               	movlw	0
 10899   00EB40  6E02               	movwf	(___fladd@b+1)^0,c
 10900   00EB42  0E00               	movlw	0
 10901   00EB44  6E03               	movwf	(___fladd@b+2)^0,c
 10902   00EB46  0E00               	movlw	0
 10903   00EB48  6E04               	movwf	(___fladd@b+3)^0,c
 10904   00EB4A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10905   00EB4E  EFCF  F075         	goto	l1508
 10906   00EB52                     l1510:
 10907   00EB52  A010               	btfss	___fladd@grs^0,0,c
 10908   00EB54  EFAE  F075         	goto	u8161
 10909   00EB58  EFB0  F075         	goto	u8160
 10910   00EB5C                     u8161:
 10911   00EB5C  EFB6  F075         	goto	l8818
 10912   00EB60                     u8160:
 10913   00EB60  90D8               	bcf	status,0,c
 10914   00EB62  3010               	rrcf	___fladd@grs^0,w,c
 10915   00EB64  0901               	iorlw	1
 10916   00EB66  6E10               	movwf	___fladd@grs^0,c
 10917   00EB68  EFB8  F075         	goto	l8820
 10918   00EB6C                     l8818:
 10919   00EB6C  90D8               	bcf	status,0,c
 10920   00EB6E  3210               	rrcf	___fladd@grs^0,f,c
 10921   00EB70                     l8820:
 10922   00EB70  A001               	btfss	___fladd@b^0,0,c
 10923   00EB72  EFBD  F075         	goto	u8171
 10924   00EB76  EFBF  F075         	goto	u8170
 10925   00EB7A                     u8171:
 10926   00EB7A  EFC0  F075         	goto	l8824
 10927   00EB7E                     u8170:
 10928   00EB7E  8E10               	bsf	___fladd@grs^0,7,c
 10929   00EB80                     l8824:
 10930   00EB80  3404               	rlcf	(___fladd@b+3)^0,w,c
 10931   00EB82  3204               	rrcf	(___fladd@b+3)^0,f,c
 10932   00EB84  3203               	rrcf	(___fladd@b+2)^0,f,c
 10933   00EB86  3202               	rrcf	(___fladd@b+1)^0,f,c
 10934   00EB88  3201               	rrcf	___fladd@b^0,f,c
 10935   00EB8A  2A0F               	incf	___fladd@bexp^0,f,c
 10936   00EB8C                     l1509:
 10937   00EB8C  500E               	movf	___fladd@aexp^0,w,c
 10938   00EB8E  5C0F               	subwf	___fladd@bexp^0,w,c
 10939   00EB90  A0D8               	btfss	status,0,c
 10940   00EB92  EFCD  F075         	goto	u8181
 10941   00EB96  EFCF  F075         	goto	u8180
 10942   00EB9A                     u8181:
 10943   00EB9A  EFA9  F075         	goto	l1510
 10944   00EB9E                     u8180:
 10945   00EB9E                     l1508:
 10946   00EB9E  BC0D               	btfsc	___fladd@signs^0,6,c
 10947   00EBA0  EFD4  F075         	goto	u8191
 10948   00EBA4  EFD6  F075         	goto	u8190
 10949   00EBA8                     u8191:
 10950   00EBA8  EF16  F076         	goto	l8852
 10951   00EBAC                     u8190:
 10952   00EBAC  500F               	movf	___fladd@bexp^0,w,c
 10953   00EBAE  A4D8               	btfss	status,2,c
 10954   00EBB0  EFDC  F075         	goto	u8201
 10955   00EBB4  EFDE  F075         	goto	u8200
 10956   00EBB8                     u8201:
 10957   00EBB8  EFE8  F075         	goto	l8834
 10958   00EBBC                     u8200:
 10959   00EBBC  0E00               	movlw	0
 10960   00EBBE  6E01               	movwf	?___fladd^0,c
 10961   00EBC0  0E00               	movlw	0
 10962   00EBC2  6E02               	movwf	(?___fladd+1)^0,c
 10963   00EBC4  0E00               	movlw	0
 10964   00EBC6  6E03               	movwf	(?___fladd+2)^0,c
 10965   00EBC8  0E00               	movlw	0
 10966   00EBCA  6E04               	movwf	(?___fladd+3)^0,c
 10967   00EBCC  EF37  F077         	goto	l1517
 10968   00EBD0                     l8834:
 10969   00EBD0  5005               	movf	___fladd@a^0,w,c
 10970   00EBD2  2601               	addwf	___fladd@b^0,f,c
 10971   00EBD4  5006               	movf	(___fladd@a+1)^0,w,c
 10972   00EBD6  2202               	addwfc	(___fladd@b+1)^0,f,c
 10973   00EBD8  5007               	movf	(___fladd@a+2)^0,w,c
 10974   00EBDA  2203               	addwfc	(___fladd@b+2)^0,f,c
 10975   00EBDC  5008               	movf	(___fladd@a+3)^0,w,c
 10976   00EBDE  2204               	addwfc	(___fladd@b+3)^0,f,c
 10977   00EBE0  A004               	btfss	(___fladd@b+3)^0,0,c
 10978   00EBE2  EFF5  F075         	goto	u8211
 10979   00EBE6  EFF7  F075         	goto	u8210
 10980   00EBEA                     u8211:
 10981   00EBEA  EFA3  F076         	goto	l8888
 10982   00EBEE                     u8210:
 10983   00EBEE  A010               	btfss	___fladd@grs^0,0,c
 10984   00EBF0  EFFC  F075         	goto	u8221
 10985   00EBF4  EFFE  F075         	goto	u8220
 10986   00EBF8                     u8221:
 10987   00EBF8  EF04  F076         	goto	l8842
 10988   00EBFC                     u8220:
 10989   00EBFC  90D8               	bcf	status,0,c
 10990   00EBFE  3010               	rrcf	___fladd@grs^0,w,c
 10991   00EC00  0901               	iorlw	1
 10992   00EC02  6E10               	movwf	___fladd@grs^0,c
 10993   00EC04  EF06  F076         	goto	l8844
 10994   00EC08                     l8842:
 10995   00EC08  90D8               	bcf	status,0,c
 10996   00EC0A  3210               	rrcf	___fladd@grs^0,f,c
 10997   00EC0C                     l8844:
 10998   00EC0C  A001               	btfss	___fladd@b^0,0,c
 10999   00EC0E  EF0B  F076         	goto	u8231
 11000   00EC12  EF0D  F076         	goto	u8230
 11001   00EC16                     u8231:
 11002   00EC16  EF0E  F076         	goto	l8848
 11003   00EC1A                     u8230:
 11004   00EC1A  8E10               	bsf	___fladd@grs^0,7,c
 11005   00EC1C                     l8848:
 11006   00EC1C  3404               	rlcf	(___fladd@b+3)^0,w,c
 11007   00EC1E  3204               	rrcf	(___fladd@b+3)^0,f,c
 11008   00EC20  3203               	rrcf	(___fladd@b+2)^0,f,c
 11009   00EC22  3202               	rrcf	(___fladd@b+1)^0,f,c
 11010   00EC24  3201               	rrcf	___fladd@b^0,f,c
 11011   00EC26  2A0F               	incf	___fladd@bexp^0,f,c
 11012   00EC28  EFA3  F076         	goto	l8888
 11013   00EC2C                     l8852:
 11014   00EC2C  5005               	movf	___fladd@a^0,w,c
 11015   00EC2E  5C01               	subwf	___fladd@b^0,w,c
 11016   00EC30  5006               	movf	(___fladd@a+1)^0,w,c
 11017   00EC32  5802               	subwfb	(___fladd@b+1)^0,w,c
 11018   00EC34  5007               	movf	(___fladd@a+2)^0,w,c
 11019   00EC36  5803               	subwfb	(___fladd@b+2)^0,w,c
 11020   00EC38  5004               	movf	(___fladd@b+3)^0,w,c
 11021   00EC3A  0A80               	xorlw	128
 11022   00EC3C  6E09               	movwf	??___fladd^0,c
 11023   00EC3E  5008               	movf	(___fladd@a+3)^0,w,c
 11024   00EC40  0A80               	xorlw	128
 11025   00EC42  5809               	subwfb	??___fladd^0,w,c
 11026   00EC44  B0D8               	btfsc	status,0,c
 11027   00EC46  EF27  F076         	goto	u8241
 11028   00EC4A  EF29  F076         	goto	u8240
 11029   00EC4E                     u8241:
 11030   00EC4E  EF54  F076         	goto	l8862
 11031   00EC52                     u8240:
 11032   00EC52  5001               	movf	___fladd@b^0,w,c
 11033   00EC54  5C05               	subwf	___fladd@a^0,w,c
 11034   00EC56  6E09               	movwf	??___fladd^0,c
 11035   00EC58  5002               	movf	(___fladd@b+1)^0,w,c
 11036   00EC5A  5806               	subwfb	(___fladd@a+1)^0,w,c
 11037   00EC5C  6E0A               	movwf	(??___fladd+1)^0,c
 11038   00EC5E  5003               	movf	(___fladd@b+2)^0,w,c
 11039   00EC60  5807               	subwfb	(___fladd@a+2)^0,w,c
 11040   00EC62  6E0B               	movwf	(??___fladd+2)^0,c
 11041   00EC64  5004               	movf	(___fladd@b+3)^0,w,c
 11042   00EC66  5808               	subwfb	(___fladd@a+3)^0,w,c
 11043   00EC68  6E0C               	movwf	(??___fladd+3)^0,c
 11044   00EC6A  0EFF               	movlw	255
 11045   00EC6C  2409               	addwf	??___fladd^0,w,c
 11046   00EC6E  6E01               	movwf	___fladd@b^0,c
 11047   00EC70  0EFF               	movlw	255
 11048   00EC72  200A               	addwfc	(??___fladd+1)^0,w,c
 11049   00EC74  6E02               	movwf	(___fladd@b+1)^0,c
 11050   00EC76  0EFF               	movlw	255
 11051   00EC78  200B               	addwfc	(??___fladd+2)^0,w,c
 11052   00EC7A  6E03               	movwf	(___fladd@b+2)^0,c
 11053   00EC7C  0EFF               	movlw	255
 11054   00EC7E  200C               	addwfc	(??___fladd+3)^0,w,c
 11055   00EC80  6E04               	movwf	(___fladd@b+3)^0,c
 11056   00EC82  0E80               	movlw	128
 11057   00EC84  1A0D               	xorwf	___fladd@signs^0,f,c
 11058   00EC86  6C10               	negf	___fladd@grs^0,c
 11059   00EC88  5010               	movf	___fladd@grs^0,w,c
 11060   00EC8A  A4D8               	btfss	status,2,c
 11061   00EC8C  EF4A  F076         	goto	u8251
 11062   00EC90  EF4C  F076         	goto	u8250
 11063   00EC94                     u8251:
 11064   00EC94  EF5C  F076         	goto	l1525
 11065   00EC98                     u8250:
 11066   00EC98  0E01               	movlw	1
 11067   00EC9A  2601               	addwf	___fladd@b^0,f,c
 11068   00EC9C  0E00               	movlw	0
 11069   00EC9E  2202               	addwfc	(___fladd@b+1)^0,f,c
 11070   00ECA0  2203               	addwfc	(___fladd@b+2)^0,f,c
 11071   00ECA2  2204               	addwfc	(___fladd@b+3)^0,f,c
 11072   00ECA4  EF5C  F076         	goto	l1525
 11073   00ECA8                     l8862:
 11074   00ECA8  5005               	movf	___fladd@a^0,w,c
 11075   00ECAA  5E01               	subwf	___fladd@b^0,f,c
 11076   00ECAC  5006               	movf	(___fladd@a+1)^0,w,c
 11077   00ECAE  5A02               	subwfb	(___fladd@b+1)^0,f,c
 11078   00ECB0  5007               	movf	(___fladd@a+2)^0,w,c
 11079   00ECB2  5A03               	subwfb	(___fladd@b+2)^0,f,c
 11080   00ECB4  5008               	movf	(___fladd@a+3)^0,w,c
 11081   00ECB6  5A04               	subwfb	(___fladd@b+3)^0,f,c
 11082   00ECB8                     l1525:
 11083   00ECB8  5001               	movf	___fladd@b^0,w,c
 11084   00ECBA  1002               	iorwf	(___fladd@b+1)^0,w,c
 11085   00ECBC  1003               	iorwf	(___fladd@b+2)^0,w,c
 11086   00ECBE  1004               	iorwf	(___fladd@b+3)^0,w,c
 11087   00ECC0  A4D8               	btfss	status,2,c
 11088   00ECC2  EF65  F076         	goto	u8261
 11089   00ECC6  EF67  F076         	goto	u8260
 11090   00ECCA                     u8261:
 11091   00ECCA  EF9C  F076         	goto	l8886
 11092   00ECCE                     u8260:
 11093   00ECCE  5010               	movf	___fladd@grs^0,w,c
 11094   00ECD0  A4D8               	btfss	status,2,c
 11095   00ECD2  EF6D  F076         	goto	u8271
 11096   00ECD6  EF6F  F076         	goto	u8270
 11097   00ECDA                     u8271:
 11098   00ECDA  EF9C  F076         	goto	l8886
 11099   00ECDE                     u8270:
 11100   00ECDE  0E00               	movlw	0
 11101   00ECE0  6E01               	movwf	?___fladd^0,c
 11102   00ECE2  0E00               	movlw	0
 11103   00ECE4  6E02               	movwf	(?___fladd+1)^0,c
 11104   00ECE6  0E00               	movlw	0
 11105   00ECE8  6E03               	movwf	(?___fladd+2)^0,c
 11106   00ECEA  0E00               	movlw	0
 11107   00ECEC  6E04               	movwf	(?___fladd+3)^0,c
 11108   00ECEE  EF37  F077         	goto	l1517
 11109   00ECF2                     l8870:
 11110   00ECF2  90D8               	bcf	status,0,c
 11111   00ECF4  3601               	rlcf	___fladd@b^0,f,c
 11112   00ECF6  3602               	rlcf	(___fladd@b+1)^0,f,c
 11113   00ECF8  3603               	rlcf	(___fladd@b+2)^0,f,c
 11114   00ECFA  3604               	rlcf	(___fladd@b+3)^0,f,c
 11115   00ECFC  AE10               	btfss	___fladd@grs^0,7,c
 11116   00ECFE  EF83  F076         	goto	u8281
 11117   00ED02  EF85  F076         	goto	u8280
 11118   00ED06                     u8281:
 11119   00ED06  EF86  F076         	goto	l8876
 11120   00ED0A                     u8280:
 11121   00ED0A  8001               	bsf	___fladd@b^0,0,c
 11122   00ED0C                     l8876:
 11123   00ED0C  A010               	btfss	___fladd@grs^0,0,c
 11124   00ED0E  EF8B  F076         	goto	u8291
 11125   00ED12  EF8D  F076         	goto	u8290
 11126   00ED16                     u8291:
 11127   00ED16  EF91  F076         	goto	l8880
 11128   00ED1A                     u8290:
 11129   00ED1A  80D8               	bsf	status,0,c
 11130   00ED1C  3610               	rlcf	___fladd@grs^0,f,c
 11131   00ED1E  EF93  F076         	goto	l8882
 11132   00ED22                     l8880:
 11133   00ED22  90D8               	bcf	status,0,c
 11134   00ED24  3610               	rlcf	___fladd@grs^0,f,c
 11135   00ED26                     l8882:
 11136   00ED26  500F               	movf	___fladd@bexp^0,w,c
 11137   00ED28  B4D8               	btfsc	status,2,c
 11138   00ED2A  EF99  F076         	goto	u8301
 11139   00ED2E  EF9B  F076         	goto	u8300
 11140   00ED32                     u8301:
 11141   00ED32  EF9C  F076         	goto	l8886
 11142   00ED36                     u8300:
 11143   00ED36  060F               	decf	___fladd@bexp^0,f,c
 11144   00ED38                     l8886:
 11145   00ED38  AE03               	btfss	(___fladd@b+2)^0,7,c
 11146   00ED3A  EFA1  F076         	goto	u8311
 11147   00ED3E  EFA3  F076         	goto	u8310
 11148   00ED42                     u8311:
 11149   00ED42  EF79  F076         	goto	l8870
 11150   00ED46                     u8310:
 11151   00ED46                     l8888:
 11152   00ED46  0E00               	movlw	0
 11153   00ED48  6E0E               	movwf	___fladd@aexp^0,c
 11154   00ED4A  AE10               	btfss	___fladd@grs^0,7,c
 11155   00ED4C  EFAA  F076         	goto	u8321
 11156   00ED50  EFAC  F076         	goto	u8320
 11157   00ED54                     u8321:
 11158   00ED54  EFC4  F076         	goto	l1534
 11159   00ED58                     u8320:
 11160   00ED58  C010  F009         	movff	___fladd@grs,??___fladd
 11161   00ED5C  0E7F               	movlw	127
 11162   00ED5E  1609               	andwf	??___fladd^0,f,c
 11163   00ED60  B4D8               	btfsc	status,2,c
 11164   00ED62  EFB5  F076         	goto	u8331
 11165   00ED66  EFB7  F076         	goto	u8330
 11166   00ED6A                     u8331:
 11167   00ED6A  EFBB  F076         	goto	l1535
 11168   00ED6E                     u8330:
 11169   00ED6E                     l8894:
 11170   00ED6E  0E01               	movlw	1
 11171   00ED70  6E0E               	movwf	___fladd@aexp^0,c
 11172   00ED72  EFC4  F076         	goto	l1534
 11173   00ED76                     l1535:
 11174   00ED76  A001               	btfss	___fladd@b^0,0,c
 11175   00ED78  EFC0  F076         	goto	u8341
 11176   00ED7C  EFC2  F076         	goto	u8340
 11177   00ED80                     u8341:
 11178   00ED80  EFC4  F076         	goto	l1534
 11179   00ED84                     u8340:
 11180   00ED84  EFB7  F076         	goto	l8894
 11181   00ED88                     l1534:
 11182   00ED88  500E               	movf	___fladd@aexp^0,w,c
 11183   00ED8A  B4D8               	btfsc	status,2,c
 11184   00ED8C  EFCA  F076         	goto	u8351
 11185   00ED90  EFCC  F076         	goto	u8350
 11186   00ED94                     u8351:
 11187   00ED94  EFF7  F076         	goto	l8906
 11188   00ED98                     u8350:
 11189   00ED98  0E01               	movlw	1
 11190   00ED9A  2601               	addwf	___fladd@b^0,f,c
 11191   00ED9C  0E00               	movlw	0
 11192   00ED9E  2202               	addwfc	(___fladd@b+1)^0,f,c
 11193   00EDA0  2203               	addwfc	(___fladd@b+2)^0,f,c
 11194   00EDA2  2204               	addwfc	(___fladd@b+3)^0,f,c
 11195   00EDA4  A004               	btfss	(___fladd@b+3)^0,0,c
 11196   00EDA6  EFD7  F076         	goto	u8361
 11197   00EDAA  EFD9  F076         	goto	u8360
 11198   00EDAE                     u8361:
 11199   00EDAE  EFF7  F076         	goto	l8906
 11200   00EDB2                     u8360:
 11201   00EDB2  C001  F009         	movff	___fladd@b,??___fladd
 11202   00EDB6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11203   00EDBA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11204   00EDBE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11205   00EDC2  340C               	rlcf	(??___fladd+3)^0,w,c
 11206   00EDC4  320C               	rrcf	(??___fladd+3)^0,f,c
 11207   00EDC6  320B               	rrcf	(??___fladd+2)^0,f,c
 11208   00EDC8  320A               	rrcf	(??___fladd+1)^0,f,c
 11209   00EDCA  3209               	rrcf	??___fladd^0,f,c
 11210   00EDCC  C009  F001         	movff	??___fladd,___fladd@b
 11211   00EDD0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11212   00EDD4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11213   00EDD8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11214   00EDDC  280F               	incf	___fladd@bexp^0,w,c
 11215   00EDDE  B4D8               	btfsc	status,2,c
 11216   00EDE0  EFF4  F076         	goto	u8371
 11217   00EDE4  EFF6  F076         	goto	u8370
 11218   00EDE8                     u8371:
 11219   00EDE8  EFF7  F076         	goto	l8906
 11220   00EDEC                     u8370:
 11221   00EDEC  2A0F               	incf	___fladd@bexp^0,f,c
 11222   00EDEE                     l8906:
 11223   00EDEE  280F               	incf	___fladd@bexp^0,w,c
 11224   00EDF0  B4D8               	btfsc	status,2,c
 11225   00EDF2  EFFD  F076         	goto	u8381
 11226   00EDF6  EFFF  F076         	goto	u8380
 11227   00EDFA                     u8381:
 11228   00EDFA  EF07  F077         	goto	l8910
 11229   00EDFE                     u8380:
 11230   00EDFE  500F               	movf	___fladd@bexp^0,w,c
 11231   00EE00  A4D8               	btfss	status,2,c
 11232   00EE02  EF05  F077         	goto	u8391
 11233   00EE06  EF07  F077         	goto	u8390
 11234   00EE0A                     u8391:
 11235   00EE0A  EF19  F077         	goto	l8914
 11236   00EE0E                     u8390:
 11237   00EE0E                     l8910:
 11238   00EE0E  0E00               	movlw	0
 11239   00EE10  6E01               	movwf	___fladd@b^0,c
 11240   00EE12  0E00               	movlw	0
 11241   00EE14  6E02               	movwf	(___fladd@b+1)^0,c
 11242   00EE16  0E00               	movlw	0
 11243   00EE18  6E03               	movwf	(___fladd@b+2)^0,c
 11244   00EE1A  0E00               	movlw	0
 11245   00EE1C  6E04               	movwf	(___fladd@b+3)^0,c
 11246   00EE1E  500F               	movf	___fladd@bexp^0,w,c
 11247   00EE20  A4D8               	btfss	status,2,c
 11248   00EE22  EF15  F077         	goto	u8401
 11249   00EE26  EF17  F077         	goto	u8400
 11250   00EE2A                     u8401:
 11251   00EE2A  EF19  F077         	goto	l8914
 11252   00EE2E                     u8400:
 11253   00EE2E  0E00               	movlw	0
 11254   00EE30  6E0D               	movwf	___fladd@signs^0,c
 11255   00EE32                     l8914:
 11256   00EE32  A00F               	btfss	___fladd@bexp^0,0,c
 11257   00EE34  EF1E  F077         	goto	u8411
 11258   00EE38  EF20  F077         	goto	u8410
 11259   00EE3C                     u8411:
 11260   00EE3C  EF23  F077         	goto	l8918
 11261   00EE40                     u8410:
 11262   00EE40  8E03               	bsf	(___fladd@b+2)^0,7,c
 11263   00EE42  EF24  F077         	goto	l8920
 11264   00EE46                     l8918:
 11265   00EE46  9E03               	bcf	(___fladd@b+2)^0,7,c
 11266   00EE48                     l8920:
 11267   00EE48  90D8               	bcf	status,0,c
 11268   00EE4A  300F               	rrcf	___fladd@bexp^0,w,c
 11269   00EE4C  6E04               	movwf	(___fladd@b+3)^0,c
 11270   00EE4E  AE0D               	btfss	___fladd@signs^0,7,c
 11271   00EE50  EF2C  F077         	goto	u8421
 11272   00EE54  EF2E  F077         	goto	u8420
 11273   00EE58                     u8421:
 11274   00EE58  EF2F  F077         	goto	l8926
 11275   00EE5C                     u8420:
 11276   00EE5C  8E04               	bsf	(___fladd@b+3)^0,7,c
 11277   00EE5E                     l8926:
 11278   00EE5E  C001  F001         	movff	___fladd@b,?___fladd
 11279   00EE62  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11280   00EE66  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11281   00EE6A  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11282   00EE6E                     l1517:
 11283   00EE6E  0012               	return		;funcret
 11284   00EE70                     __end_of___fladd:
 11285                           	callstack 0
 11286                           
 11287 ;; *************** function ___flneg *****************
 11288 ;; Defined at:
 11289 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 11290 ;; Parameters:    Size  Location     Type
 11291 ;;  f1              4    0[COMRAM] unsigned char 
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;		None
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  4    0[COMRAM] unsigned char 
 11296 ;; Registers used:
 11297 ;;		wreg, status,2, status,0
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;Total ram usage:        4 bytes
 11308 ;; Hardware stack levels used: 1
 11309 ;; This function calls:
 11310 ;;		Nothing
 11311 ;; This function is called by:
 11312 ;;		_efgtoa
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           	psect	text51
 11317   00A6B4                     __ptext51:
 11318                           	callstack 0
 11319   00A6B4                     ___flneg:
 11320                           	callstack 26
 11321   00A6B4  5001               	movf	___flneg@f1^0,w,c
 11322   00A6B6  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11323   00A6B8  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11324   00A6BA  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11325   00A6BC  B4D8               	btfsc	status,2,c
 11326   00A6BE  EF63  F053         	goto	u9041
 11327   00A6C2  EF65  F053         	goto	u9040
 11328   00A6C6                     u9041:
 11329   00A6C6  EF6D  F053         	goto	l9350
 11330   00A6CA                     u9040:
 11331   00A6CA  0E00               	movlw	0
 11332   00A6CC  1A01               	xorwf	___flneg@f1^0,f,c
 11333   00A6CE  0E00               	movlw	0
 11334   00A6D0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11335   00A6D2  0E00               	movlw	0
 11336   00A6D4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11337   00A6D6  0E80               	movlw	128
 11338   00A6D8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11339   00A6DA                     l9350:
 11340   00A6DA  C001  F001         	movff	___flneg@f1,?___flneg
 11341   00A6DE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11342   00A6E2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11343   00A6E6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11344   00A6EA  0012               	return		;funcret
 11345   00A6EC                     __end_of___flneg:
 11346                           	callstack 0
 11347                           
 11348 ;; *************** function ___flmul *****************
 11349 ;; Defined at:
 11350 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;  b               4    0[COMRAM] unsigned char 
 11353 ;;  a               4    4[COMRAM] unsigned char 
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;  prod            4   19[COMRAM] struct .
 11356 ;;  grs             4   14[COMRAM] unsigned long 
 11357 ;;  temp            2   23[COMRAM] struct .
 11358 ;;  bexp            1   18[COMRAM] unsigned char 
 11359 ;;  aexp            1   13[COMRAM] unsigned char 
 11360 ;;  sign            1   12[COMRAM] unsigned char 
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  4    0[COMRAM] unsigned char 
 11363 ;; Registers used:
 11364 ;;		wreg, status,2, status,0, prodl, prodh
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11370 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11371 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11373 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;Total ram usage:       25 bytes
 11375 ;; Hardware stack levels used: 1
 11376 ;; This function calls:
 11377 ;;		Nothing
 11378 ;; This function is called by:
 11379 ;;		_efgtoa
 11380 ;; This function uses a non-reentrant model
 11381 ;;
 11382                           
 11383                           	psect	text52
 11384   00E112                     __ptext52:
 11385                           	callstack 0
 11386   00E112                     ___flmul:
 11387                           	callstack 26
 11388   00E112  5004               	movf	(___flmul@b+3)^0,w,c
 11389   00E114  0B80               	andlw	128
 11390   00E116  6E0D               	movwf	___flmul@sign^0,c
 11391   00E118  5004               	movf	(___flmul@b+3)^0,w,c
 11392   00E11A  2404               	addwf	(___flmul@b+3)^0,w,c
 11393   00E11C  6E13               	movwf	___flmul@bexp^0,c
 11394   00E11E  AE03               	btfss	(___flmul@b+2)^0,7,c
 11395   00E120  EF94  F070         	goto	u8771
 11396   00E124  EF96  F070         	goto	u8770
 11397   00E128                     u8771:
 11398   00E128  EF97  F070         	goto	l9178
 11399   00E12C                     u8770:
 11400   00E12C  8013               	bsf	___flmul@bexp^0,0,c
 11401   00E12E                     l9178:
 11402   00E12E  5013               	movf	___flmul@bexp^0,w,c
 11403   00E130  B4D8               	btfsc	status,2,c
 11404   00E132  EF9D  F070         	goto	u8781
 11405   00E136  EF9F  F070         	goto	u8780
 11406   00E13A                     u8781:
 11407   00E13A  EFB2  F070         	goto	l9186
 11408   00E13E                     u8780:
 11409   00E13E  2813               	incf	___flmul@bexp^0,w,c
 11410   00E140  A4D8               	btfss	status,2,c
 11411   00E142  EFA5  F070         	goto	u8791
 11412   00E146  EFA7  F070         	goto	u8790
 11413   00E14A                     u8791:
 11414   00E14A  EFAF  F070         	goto	l9184
 11415   00E14E                     u8790:
 11416   00E14E  0E00               	movlw	0
 11417   00E150  6E01               	movwf	___flmul@b^0,c
 11418   00E152  0E00               	movlw	0
 11419   00E154  6E02               	movwf	(___flmul@b+1)^0,c
 11420   00E156  0E00               	movlw	0
 11421   00E158  6E03               	movwf	(___flmul@b+2)^0,c
 11422   00E15A  0E00               	movlw	0
 11423   00E15C  6E04               	movwf	(___flmul@b+3)^0,c
 11424   00E15E                     l9184:
 11425   00E15E  8E03               	bsf	(___flmul@b+2)^0,7,c
 11426   00E160  EFBA  F070         	goto	l9188
 11427   00E164                     l9186:
 11428   00E164  0E00               	movlw	0
 11429   00E166  6E01               	movwf	___flmul@b^0,c
 11430   00E168  0E00               	movlw	0
 11431   00E16A  6E02               	movwf	(___flmul@b+1)^0,c
 11432   00E16C  0E00               	movlw	0
 11433   00E16E  6E03               	movwf	(___flmul@b+2)^0,c
 11434   00E170  0E00               	movlw	0
 11435   00E172  6E04               	movwf	(___flmul@b+3)^0,c
 11436   00E174                     l9188:
 11437   00E174  5008               	movf	(___flmul@a+3)^0,w,c
 11438   00E176  0B80               	andlw	128
 11439   00E178  1A0D               	xorwf	___flmul@sign^0,f,c
 11440   00E17A  5008               	movf	(___flmul@a+3)^0,w,c
 11441   00E17C  2408               	addwf	(___flmul@a+3)^0,w,c
 11442   00E17E  6E0E               	movwf	___flmul@aexp^0,c
 11443   00E180  AE07               	btfss	(___flmul@a+2)^0,7,c
 11444   00E182  EFC5  F070         	goto	u8801
 11445   00E186  EFC7  F070         	goto	u8800
 11446   00E18A                     u8801:
 11447   00E18A  EFC8  F070         	goto	l9196
 11448   00E18E                     u8800:
 11449   00E18E  800E               	bsf	___flmul@aexp^0,0,c
 11450   00E190                     l9196:
 11451   00E190  500E               	movf	___flmul@aexp^0,w,c
 11452   00E192  B4D8               	btfsc	status,2,c
 11453   00E194  EFCE  F070         	goto	u8811
 11454   00E198  EFD0  F070         	goto	u8810
 11455   00E19C                     u8811:
 11456   00E19C  EFE3  F070         	goto	l9204
 11457   00E1A0                     u8810:
 11458   00E1A0  280E               	incf	___flmul@aexp^0,w,c
 11459   00E1A2  A4D8               	btfss	status,2,c
 11460   00E1A4  EFD6  F070         	goto	u8821
 11461   00E1A8  EFD8  F070         	goto	u8820
 11462   00E1AC                     u8821:
 11463   00E1AC  EFE0  F070         	goto	l9202
 11464   00E1B0                     u8820:
 11465   00E1B0  0E00               	movlw	0
 11466   00E1B2  6E05               	movwf	___flmul@a^0,c
 11467   00E1B4  0E00               	movlw	0
 11468   00E1B6  6E06               	movwf	(___flmul@a+1)^0,c
 11469   00E1B8  0E00               	movlw	0
 11470   00E1BA  6E07               	movwf	(___flmul@a+2)^0,c
 11471   00E1BC  0E00               	movlw	0
 11472   00E1BE  6E08               	movwf	(___flmul@a+3)^0,c
 11473   00E1C0                     l9202:
 11474   00E1C0  8E07               	bsf	(___flmul@a+2)^0,7,c
 11475   00E1C2  EFEB  F070         	goto	l1594
 11476   00E1C6                     l9204:
 11477   00E1C6  0E00               	movlw	0
 11478   00E1C8  6E05               	movwf	___flmul@a^0,c
 11479   00E1CA  0E00               	movlw	0
 11480   00E1CC  6E06               	movwf	(___flmul@a+1)^0,c
 11481   00E1CE  0E00               	movlw	0
 11482   00E1D0  6E07               	movwf	(___flmul@a+2)^0,c
 11483   00E1D2  0E00               	movlw	0
 11484   00E1D4  6E08               	movwf	(___flmul@a+3)^0,c
 11485   00E1D6                     l1594:
 11486   00E1D6  500E               	movf	___flmul@aexp^0,w,c
 11487   00E1D8  B4D8               	btfsc	status,2,c
 11488   00E1DA  EFF1  F070         	goto	u8831
 11489   00E1DE  EFF3  F070         	goto	u8830
 11490   00E1E2                     u8831:
 11491   00E1E2  EFFB  F070         	goto	l9208
 11492   00E1E6                     u8830:
 11493   00E1E6  5013               	movf	___flmul@bexp^0,w,c
 11494   00E1E8  A4D8               	btfss	status,2,c
 11495   00E1EA  EFF9  F070         	goto	u8841
 11496   00E1EE  EFFB  F070         	goto	u8840
 11497   00E1F2                     u8841:
 11498   00E1F2  EF05  F071         	goto	l9212
 11499   00E1F6                     u8840:
 11500   00E1F6                     l9208:
 11501   00E1F6  0E00               	movlw	0
 11502   00E1F8  6E01               	movwf	?___flmul^0,c
 11503   00E1FA  0E00               	movlw	0
 11504   00E1FC  6E02               	movwf	(?___flmul+1)^0,c
 11505   00E1FE  0E00               	movlw	0
 11506   00E200  6E03               	movwf	(?___flmul+2)^0,c
 11507   00E202  0E00               	movlw	0
 11508   00E204  6E04               	movwf	(?___flmul+3)^0,c
 11509   00E206  EFAF  F072         	goto	l1598
 11510   00E20A                     l9212:
 11511   00E20A  5007               	movf	(___flmul@a+2)^0,w,c
 11512   00E20C  0201               	mulwf	___flmul@b^0,c
 11513   00E20E  006F FFCC  F018    	movff	prodl,___flmul@temp
 11514   00E214  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11515   00E21A  5018               	movf	___flmul@temp^0,w,c
 11516   00E21C  6E0F               	movwf	___flmul@grs^0,c
 11517   00E21E  6A10               	clrf	(___flmul@grs+1)^0,c
 11518   00E220  6A11               	clrf	(___flmul@grs+2)^0,c
 11519   00E222  6A12               	clrf	(___flmul@grs+3)^0,c
 11520   00E224  5019               	movf	(___flmul@temp+1)^0,w,c
 11521   00E226  6E14               	movwf	___flmul@prod^0,c
 11522   00E228  6A15               	clrf	(___flmul@prod+1)^0,c
 11523   00E22A  6A16               	clrf	(___flmul@prod+2)^0,c
 11524   00E22C  6A17               	clrf	(___flmul@prod+3)^0,c
 11525   00E22E  5006               	movf	(___flmul@a+1)^0,w,c
 11526   00E230  0202               	mulwf	(___flmul@b+1)^0,c
 11527   00E232  006F FFCC  F018    	movff	prodl,___flmul@temp
 11528   00E238  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11529   00E23E  5018               	movf	___flmul@temp^0,w,c
 11530   00E240  260F               	addwf	___flmul@grs^0,f,c
 11531   00E242  0E00               	movlw	0
 11532   00E244  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11533   00E246  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11534   00E248  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11535   00E24A  5019               	movf	(___flmul@temp+1)^0,w,c
 11536   00E24C  2614               	addwf	___flmul@prod^0,f,c
 11537   00E24E  0E00               	movlw	0
 11538   00E250  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11539   00E252  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11540   00E254  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11541   00E256  5005               	movf	___flmul@a^0,w,c
 11542   00E258  0203               	mulwf	(___flmul@b+2)^0,c
 11543   00E25A  006F FFCC  F018    	movff	prodl,___flmul@temp
 11544   00E260  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11545   00E266  5018               	movf	___flmul@temp^0,w,c
 11546   00E268  260F               	addwf	___flmul@grs^0,f,c
 11547   00E26A  0E00               	movlw	0
 11548   00E26C  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11549   00E26E  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11550   00E270  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11551   00E272  5019               	movf	(___flmul@temp+1)^0,w,c
 11552   00E274  2614               	addwf	___flmul@prod^0,f,c
 11553   00E276  0E00               	movlw	0
 11554   00E278  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11555   00E27A  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11556   00E27C  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11557   00E27E  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 11558   00E282  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 11559   00E286  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 11560   00E28A  6A0F               	clrf	___flmul@grs^0,c
 11561   00E28C  5005               	movf	___flmul@a^0,w,c
 11562   00E28E  0202               	mulwf	(___flmul@b+1)^0,c
 11563   00E290  006F FFCC  F018    	movff	prodl,___flmul@temp
 11564   00E296  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11565   00E29C  5018               	movf	___flmul@temp^0,w,c
 11566   00E29E  260F               	addwf	___flmul@grs^0,f,c
 11567   00E2A0  5019               	movf	(___flmul@temp+1)^0,w,c
 11568   00E2A2  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11569   00E2A4  0E00               	movlw	0
 11570   00E2A6  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11571   00E2A8  0E00               	movlw	0
 11572   00E2AA  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11573   00E2AC  5006               	movf	(___flmul@a+1)^0,w,c
 11574   00E2AE  0201               	mulwf	___flmul@b^0,c
 11575   00E2B0  006F FFCC  F018    	movff	prodl,___flmul@temp
 11576   00E2B6  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11577   00E2BC  5018               	movf	___flmul@temp^0,w,c
 11578   00E2BE  260F               	addwf	___flmul@grs^0,f,c
 11579   00E2C0  5019               	movf	(___flmul@temp+1)^0,w,c
 11580   00E2C2  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11581   00E2C4  0E00               	movlw	0
 11582   00E2C6  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11583   00E2C8  0E00               	movlw	0
 11584   00E2CA  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11585   00E2CC  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 11586   00E2D0  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 11587   00E2D4  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 11588   00E2D8  6A0F               	clrf	___flmul@grs^0,c
 11589   00E2DA  5005               	movf	___flmul@a^0,w,c
 11590   00E2DC  0201               	mulwf	___flmul@b^0,c
 11591   00E2DE  006F FFCC  F018    	movff	prodl,___flmul@temp
 11592   00E2E4  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11593   00E2EA  5018               	movf	___flmul@temp^0,w,c
 11594   00E2EC  260F               	addwf	___flmul@grs^0,f,c
 11595   00E2EE  5019               	movf	(___flmul@temp+1)^0,w,c
 11596   00E2F0  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11597   00E2F2  0E00               	movlw	0
 11598   00E2F4  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11599   00E2F6  0E00               	movlw	0
 11600   00E2F8  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11601   00E2FA  5007               	movf	(___flmul@a+2)^0,w,c
 11602   00E2FC  0202               	mulwf	(___flmul@b+1)^0,c
 11603   00E2FE  006F FFCC  F018    	movff	prodl,___flmul@temp
 11604   00E304  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11605   00E30A  5018               	movf	___flmul@temp^0,w,c
 11606   00E30C  2614               	addwf	___flmul@prod^0,f,c
 11607   00E30E  5019               	movf	(___flmul@temp+1)^0,w,c
 11608   00E310  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11609   00E312  0E00               	movlw	0
 11610   00E314  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11611   00E316  0E00               	movlw	0
 11612   00E318  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11613   00E31A  5006               	movf	(___flmul@a+1)^0,w,c
 11614   00E31C  0203               	mulwf	(___flmul@b+2)^0,c
 11615   00E31E  006F FFCC  F018    	movff	prodl,___flmul@temp
 11616   00E324  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11617   00E32A  5018               	movf	___flmul@temp^0,w,c
 11618   00E32C  2614               	addwf	___flmul@prod^0,f,c
 11619   00E32E  5019               	movf	(___flmul@temp+1)^0,w,c
 11620   00E330  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11621   00E332  0E00               	movlw	0
 11622   00E334  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11623   00E336  0E00               	movlw	0
 11624   00E338  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11625   00E33A  5007               	movf	(___flmul@a+2)^0,w,c
 11626   00E33C  0203               	mulwf	(___flmul@b+2)^0,c
 11627   00E33E  006F FFCC  F018    	movff	prodl,___flmul@temp
 11628   00E344  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11629   00E34A  5018               	movf	___flmul@temp^0,w,c
 11630   00E34C  6E09               	movwf	??___flmul^0,c
 11631   00E34E  5019               	movf	(___flmul@temp+1)^0,w,c
 11632   00E350  6E0A               	movwf	(??___flmul+1)^0,c
 11633   00E352  6A0B               	clrf	(??___flmul+2)^0,c
 11634   00E354  6A0C               	clrf	(??___flmul+3)^0,c
 11635   00E356  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 11636   00E35A  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 11637   00E35E  C009  F00A         	movff	??___flmul,??___flmul+1
 11638   00E362  6A09               	clrf	??___flmul^0,c
 11639   00E364  5009               	movf	??___flmul^0,w,c
 11640   00E366  2614               	addwf	___flmul@prod^0,f,c
 11641   00E368  500A               	movf	(??___flmul+1)^0,w,c
 11642   00E36A  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11643   00E36C  500B               	movf	(??___flmul+2)^0,w,c
 11644   00E36E  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11645   00E370  500C               	movf	(??___flmul+3)^0,w,c
 11646   00E372  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11647   00E374  C00F  F009         	movff	___flmul@grs,??___flmul
 11648   00E378  C010  F00A         	movff	___flmul@grs+1,??___flmul+1
 11649   00E37C  C011  F00B         	movff	___flmul@grs+2,??___flmul+2
 11650   00E380  C012  F00C         	movff	___flmul@grs+3,??___flmul+3
 11651   00E384  0E19               	movlw	25
 11652   00E386  EFCA  F071         	goto	u8850
 11653   00E38A                     u8855:
 11654   00E38A  90D8               	bcf	status,0,c
 11655   00E38C  320C               	rrcf	(??___flmul+3)^0,f,c
 11656   00E38E  320B               	rrcf	(??___flmul+2)^0,f,c
 11657   00E390  320A               	rrcf	(??___flmul+1)^0,f,c
 11658   00E392  3209               	rrcf	??___flmul^0,f,c
 11659   00E394                     u8850:
 11660   00E394  2EE8               	decfsz	wreg,f,c
 11661   00E396  EFC5  F071         	goto	u8855
 11662   00E39A  5009               	movf	??___flmul^0,w,c
 11663   00E39C  2614               	addwf	___flmul@prod^0,f,c
 11664   00E39E  500A               	movf	(??___flmul+1)^0,w,c
 11665   00E3A0  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11666   00E3A2  500B               	movf	(??___flmul+2)^0,w,c
 11667   00E3A4  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11668   00E3A6  500C               	movf	(??___flmul+3)^0,w,c
 11669   00E3A8  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11670   00E3AA  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 11671   00E3AE  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 11672   00E3B2  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 11673   00E3B6  6A0F               	clrf	___flmul@grs^0,c
 11674   00E3B8  500E               	movf	___flmul@aexp^0,w,c
 11675   00E3BA  C013  F009         	movff	___flmul@bexp,??___flmul
 11676   00E3BE  6A0A               	clrf	(??___flmul+1)^0,c
 11677   00E3C0  2609               	addwf	??___flmul^0,f,c
 11678   00E3C2  0E00               	movlw	0
 11679   00E3C4  220A               	addwfc	(??___flmul+1)^0,f,c
 11680   00E3C6  0E82               	movlw	130
 11681   00E3C8  2409               	addwf	??___flmul^0,w,c
 11682   00E3CA  6E18               	movwf	___flmul@temp^0,c
 11683   00E3CC  0EFF               	movlw	255
 11684   00E3CE  200A               	addwfc	(??___flmul+1)^0,w,c
 11685   00E3D0  6E19               	movwf	(___flmul@temp+1)^0,c
 11686   00E3D2  EF00  F072         	goto	l9260
 11687   00E3D6                     l9254:
 11688   00E3D6  90D8               	bcf	status,0,c
 11689   00E3D8  3614               	rlcf	___flmul@prod^0,f,c
 11690   00E3DA  3615               	rlcf	(___flmul@prod+1)^0,f,c
 11691   00E3DC  3616               	rlcf	(___flmul@prod+2)^0,f,c
 11692   00E3DE  3617               	rlcf	(___flmul@prod+3)^0,f,c
 11693   00E3E0  AE12               	btfss	(___flmul@grs+3)^0,7,c
 11694   00E3E2  EFF5  F071         	goto	u8861
 11695   00E3E6  EFF7  F071         	goto	u8860
 11696   00E3EA                     u8861:
 11697   00E3EA  EFF8  F071         	goto	l1601
 11698   00E3EE                     u8860:
 11699   00E3EE  8014               	bsf	___flmul@prod^0,0,c
 11700   00E3F0                     l1601:
 11701   00E3F0  90D8               	bcf	status,0,c
 11702   00E3F2  360F               	rlcf	___flmul@grs^0,f,c
 11703   00E3F4  3610               	rlcf	(___flmul@grs+1)^0,f,c
 11704   00E3F6  3611               	rlcf	(___flmul@grs+2)^0,f,c
 11705   00E3F8  3612               	rlcf	(___flmul@grs+3)^0,f,c
 11706   00E3FA  0618               	decf	___flmul@temp^0,f,c
 11707   00E3FC  A0D8               	btfss	status,0,c
 11708   00E3FE  0619               	decf	(___flmul@temp+1)^0,f,c
 11709   00E400                     l9260:
 11710   00E400  AE16               	btfss	(___flmul@prod+2)^0,7,c
 11711   00E402  EF05  F072         	goto	u8871
 11712   00E406  EF07  F072         	goto	u8870
 11713   00E40A                     u8871:
 11714   00E40A  EFEB  F071         	goto	l9254
 11715   00E40E                     u8870:
 11716   00E40E  0E00               	movlw	0
 11717   00E410  6E0E               	movwf	___flmul@aexp^0,c
 11718   00E412  AE12               	btfss	(___flmul@grs+3)^0,7,c
 11719   00E414  EF0E  F072         	goto	u8881
 11720   00E418  EF10  F072         	goto	u8880
 11721   00E41C                     u8881:
 11722   00E41C  EF34  F072         	goto	l1603
 11723   00E420                     u8880:
 11724   00E420  0EFF               	movlw	255
 11725   00E422  140F               	andwf	___flmul@grs^0,w,c
 11726   00E424  6E09               	movwf	??___flmul^0,c
 11727   00E426  0EFF               	movlw	255
 11728   00E428  1410               	andwf	(___flmul@grs+1)^0,w,c
 11729   00E42A  6E0A               	movwf	(??___flmul+1)^0,c
 11730   00E42C  0EFF               	movlw	255
 11731   00E42E  1411               	andwf	(___flmul@grs+2)^0,w,c
 11732   00E430  6E0B               	movwf	(??___flmul+2)^0,c
 11733   00E432  0E7F               	movlw	127
 11734   00E434  1412               	andwf	(___flmul@grs+3)^0,w,c
 11735   00E436  6E0C               	movwf	(??___flmul+3)^0,c
 11736   00E438  5009               	movf	??___flmul^0,w,c
 11737   00E43A  100A               	iorwf	(??___flmul+1)^0,w,c
 11738   00E43C  100B               	iorwf	(??___flmul+2)^0,w,c
 11739   00E43E  100C               	iorwf	(??___flmul+3)^0,w,c
 11740   00E440  B4D8               	btfsc	status,2,c
 11741   00E442  EF25  F072         	goto	u8891
 11742   00E446  EF27  F072         	goto	u8890
 11743   00E44A                     u8891:
 11744   00E44A  EF2B  F072         	goto	l1604
 11745   00E44E                     u8890:
 11746   00E44E                     l9268:
 11747   00E44E  0E01               	movlw	1
 11748   00E450  6E0E               	movwf	___flmul@aexp^0,c
 11749   00E452  EF34  F072         	goto	l1603
 11750   00E456                     l1604:
 11751   00E456  A014               	btfss	___flmul@prod^0,0,c
 11752   00E458  EF30  F072         	goto	u8901
 11753   00E45C  EF32  F072         	goto	u8900
 11754   00E460                     u8901:
 11755   00E460  EF34  F072         	goto	l1603
 11756   00E464                     u8900:
 11757   00E464  EF27  F072         	goto	l9268
 11758   00E468                     l1603:
 11759   00E468  500E               	movf	___flmul@aexp^0,w,c
 11760   00E46A  B4D8               	btfsc	status,2,c
 11761   00E46C  EF3A  F072         	goto	u8911
 11762   00E470  EF3C  F072         	goto	u8910
 11763   00E474                     u8911:
 11764   00E474  EF60  F072         	goto	l9280
 11765   00E478                     u8910:
 11766   00E478  0E01               	movlw	1
 11767   00E47A  2614               	addwf	___flmul@prod^0,f,c
 11768   00E47C  0E00               	movlw	0
 11769   00E47E  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11770   00E480  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11771   00E482  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11772   00E484  A017               	btfss	(___flmul@prod+3)^0,0,c
 11773   00E486  EF47  F072         	goto	u8921
 11774   00E48A  EF49  F072         	goto	u8920
 11775   00E48E                     u8921:
 11776   00E48E  EF60  F072         	goto	l9280
 11777   00E492                     u8920:
 11778   00E492  C014  F009         	movff	___flmul@prod,??___flmul
 11779   00E496  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 11780   00E49A  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 11781   00E49E  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 11782   00E4A2  340C               	rlcf	(??___flmul+3)^0,w,c
 11783   00E4A4  320C               	rrcf	(??___flmul+3)^0,f,c
 11784   00E4A6  320B               	rrcf	(??___flmul+2)^0,f,c
 11785   00E4A8  320A               	rrcf	(??___flmul+1)^0,f,c
 11786   00E4AA  3209               	rrcf	??___flmul^0,f,c
 11787   00E4AC  C009  F014         	movff	??___flmul,___flmul@prod
 11788   00E4B0  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 11789   00E4B4  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 11790   00E4B8  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 11791   00E4BC  4A18               	infsnz	___flmul@temp^0,f,c
 11792   00E4BE  2A19               	incf	(___flmul@temp+1)^0,f,c
 11793   00E4C0                     l9280:
 11794   00E4C0  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 11795   00E4C2  EF6B  F072         	goto	u8931
 11796   00E4C6  5019               	movf	(___flmul@temp+1)^0,w,c
 11797   00E4C8  E108               	bnz	u8930
 11798   00E4CA  2818               	incf	___flmul@temp^0,w,c
 11799   00E4CC  A0D8               	btfss	status,0,c
 11800   00E4CE  EF6B  F072         	goto	u8931
 11801   00E4D2  EF6D  F072         	goto	u8930
 11802   00E4D6                     u8931:
 11803   00E4D6  EF77  F072         	goto	l9284
 11804   00E4DA                     u8930:
 11805   00E4DA  0E00               	movlw	0
 11806   00E4DC  6E14               	movwf	___flmul@prod^0,c
 11807   00E4DE  0E00               	movlw	0
 11808   00E4E0  6E15               	movwf	(___flmul@prod+1)^0,c
 11809   00E4E2  0E80               	movlw	128
 11810   00E4E4  6E16               	movwf	(___flmul@prod+2)^0,c
 11811   00E4E6  0E7F               	movlw	127
 11812   00E4E8  6E17               	movwf	(___flmul@prod+3)^0,c
 11813   00E4EA  EFA5  F072         	goto	l9296
 11814   00E4EE                     l9284:
 11815   00E4EE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 11816   00E4F0  EF84  F072         	goto	u8940
 11817   00E4F4  5019               	movf	(___flmul@temp+1)^0,w,c
 11818   00E4F6  E106               	bnz	u8941
 11819   00E4F8  0418               	decf	___flmul@temp^0,w,c
 11820   00E4FA  B0D8               	btfsc	status,0,c
 11821   00E4FC  EF82  F072         	goto	u8941
 11822   00E500  EF84  F072         	goto	u8940
 11823   00E504                     u8941:
 11824   00E504  EF90  F072         	goto	l1611
 11825   00E508                     u8940:
 11826   00E508  0E00               	movlw	0
 11827   00E50A  6E14               	movwf	___flmul@prod^0,c
 11828   00E50C  0E00               	movlw	0
 11829   00E50E  6E15               	movwf	(___flmul@prod+1)^0,c
 11830   00E510  0E00               	movlw	0
 11831   00E512  6E16               	movwf	(___flmul@prod+2)^0,c
 11832   00E514  0E00               	movlw	0
 11833   00E516  6E17               	movwf	(___flmul@prod+3)^0,c
 11834   00E518  0E00               	movlw	0
 11835   00E51A  6E0D               	movwf	___flmul@sign^0,c
 11836   00E51C  EFA5  F072         	goto	l9296
 11837   00E520                     l1611:
 11838   00E520  C018  F013         	movff	___flmul@temp,___flmul@bexp
 11839   00E524  0EFF               	movlw	255
 11840   00E526  1614               	andwf	___flmul@prod^0,f,c
 11841   00E528  0EFF               	movlw	255
 11842   00E52A  1615               	andwf	(___flmul@prod+1)^0,f,c
 11843   00E52C  0E7F               	movlw	127
 11844   00E52E  1616               	andwf	(___flmul@prod+2)^0,f,c
 11845   00E530  0E00               	movlw	0
 11846   00E532  1617               	andwf	(___flmul@prod+3)^0,f,c
 11847   00E534  A013               	btfss	___flmul@bexp^0,0,c
 11848   00E536  EF9F  F072         	goto	u8951
 11849   00E53A  EFA1  F072         	goto	u8950
 11850   00E53E                     u8951:
 11851   00E53E  EFA2  F072         	goto	l9294
 11852   00E542                     u8950:
 11853   00E542  8E16               	bsf	(___flmul@prod+2)^0,7,c
 11854   00E544                     l9294:
 11855   00E544  90D8               	bcf	status,0,c
 11856   00E546  3013               	rrcf	___flmul@bexp^0,w,c
 11857   00E548  6E17               	movwf	(___flmul@prod+3)^0,c
 11858   00E54A                     l9296:
 11859   00E54A  500D               	movf	___flmul@sign^0,w,c
 11860   00E54C  1217               	iorwf	(___flmul@prod+3)^0,f,c
 11861   00E54E  C014  F001         	movff	___flmul@prod,?___flmul
 11862   00E552  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 11863   00E556  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 11864   00E55A  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 11865   00E55E                     l1598:
 11866   00E55E  0012               	return		;funcret
 11867   00E560                     __end_of___flmul:
 11868                           	callstack 0
 11869                           
 11870 ;; *************** function ___flge *****************
 11871 ;; Defined at:
 11872 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 11873 ;; Parameters:    Size  Location     Type
 11874 ;;  ff1             4   25[COMRAM] unsigned char 
 11875 ;;  ff2             4   29[COMRAM] unsigned char 
 11876 ;; Auto vars:     Size  Location     Type
 11877 ;;		None
 11878 ;; Return value:  Size  Location     Type
 11879 ;;		None               void
 11880 ;; Registers used:
 11881 ;;		wreg, status,2, status,0
 11882 ;; Tracked objects:
 11883 ;;		On entry : 0/0
 11884 ;;		On exit  : 0/0
 11885 ;;		Unchanged: 0/0
 11886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11887 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11890 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;Total ram usage:       12 bytes
 11892 ;; Hardware stack levels used: 1
 11893 ;; This function calls:
 11894 ;;		Nothing
 11895 ;; This function is called by:
 11896 ;;		_efgtoa
 11897 ;; This function uses a non-reentrant model
 11898 ;;
 11899                           
 11900                           	psect	text53
 11901   00BD40                     __ptext53:
 11902                           	callstack 0
 11903   00BD40                     ___flge:
 11904                           	callstack 26
 11905   00BD40  0E00               	movlw	0
 11906   00BD42  141A               	andwf	___flge@ff1^0,w,c
 11907   00BD44  6E22               	movwf	??___flge^0,c
 11908   00BD46  0E00               	movlw	0
 11909   00BD48  141B               	andwf	(___flge@ff1+1)^0,w,c
 11910   00BD4A  6E23               	movwf	(??___flge+1)^0,c
 11911   00BD4C  0E80               	movlw	128
 11912   00BD4E  141C               	andwf	(___flge@ff1+2)^0,w,c
 11913   00BD50  6E24               	movwf	(??___flge+2)^0,c
 11914   00BD52  0E7F               	movlw	127
 11915   00BD54  141D               	andwf	(___flge@ff1+3)^0,w,c
 11916   00BD56  6E25               	movwf	(??___flge+3)^0,c
 11917   00BD58  5022               	movf	??___flge^0,w,c
 11918   00BD5A  1023               	iorwf	(??___flge+1)^0,w,c
 11919   00BD5C  1024               	iorwf	(??___flge+2)^0,w,c
 11920   00BD5E  1025               	iorwf	(??___flge+3)^0,w,c
 11921   00BD60  A4D8               	btfss	status,2,c
 11922   00BD62  EFB5  F05E         	goto	u8991
 11923   00BD66  EFB7  F05E         	goto	u8990
 11924   00BD6A                     u8991:
 11925   00BD6A  EFBF  F05E         	goto	l9328
 11926   00BD6E                     u8990:
 11927   00BD6E  0E00               	movlw	0
 11928   00BD70  6E1A               	movwf	___flge@ff1^0,c
 11929   00BD72  0E00               	movlw	0
 11930   00BD74  6E1B               	movwf	(___flge@ff1+1)^0,c
 11931   00BD76  0E00               	movlw	0
 11932   00BD78  6E1C               	movwf	(___flge@ff1+2)^0,c
 11933   00BD7A  0E00               	movlw	0
 11934   00BD7C  6E1D               	movwf	(___flge@ff1+3)^0,c
 11935   00BD7E                     l9328:
 11936   00BD7E  0E00               	movlw	0
 11937   00BD80  141E               	andwf	___flge@ff2^0,w,c
 11938   00BD82  6E22               	movwf	??___flge^0,c
 11939   00BD84  0E00               	movlw	0
 11940   00BD86  141F               	andwf	(___flge@ff2+1)^0,w,c
 11941   00BD88  6E23               	movwf	(??___flge+1)^0,c
 11942   00BD8A  0E80               	movlw	128
 11943   00BD8C  1420               	andwf	(___flge@ff2+2)^0,w,c
 11944   00BD8E  6E24               	movwf	(??___flge+2)^0,c
 11945   00BD90  0E7F               	movlw	127
 11946   00BD92  1421               	andwf	(___flge@ff2+3)^0,w,c
 11947   00BD94  6E25               	movwf	(??___flge+3)^0,c
 11948   00BD96  5022               	movf	??___flge^0,w,c
 11949   00BD98  1023               	iorwf	(??___flge+1)^0,w,c
 11950   00BD9A  1024               	iorwf	(??___flge+2)^0,w,c
 11951   00BD9C  1025               	iorwf	(??___flge+3)^0,w,c
 11952   00BD9E  A4D8               	btfss	status,2,c
 11953   00BDA0  EFD4  F05E         	goto	u9001
 11954   00BDA4  EFD6  F05E         	goto	u9000
 11955   00BDA8                     u9001:
 11956   00BDA8  EFDE  F05E         	goto	l9332
 11957   00BDAC                     u9000:
 11958   00BDAC  0E00               	movlw	0
 11959   00BDAE  6E1E               	movwf	___flge@ff2^0,c
 11960   00BDB0  0E00               	movlw	0
 11961   00BDB2  6E1F               	movwf	(___flge@ff2+1)^0,c
 11962   00BDB4  0E00               	movlw	0
 11963   00BDB6  6E20               	movwf	(___flge@ff2+2)^0,c
 11964   00BDB8  0E00               	movlw	0
 11965   00BDBA  6E21               	movwf	(___flge@ff2+3)^0,c
 11966   00BDBC                     l9332:
 11967   00BDBC  AE1D               	btfss	(___flge@ff1+3)^0,7,c
 11968   00BDBE  EFE3  F05E         	goto	u9011
 11969   00BDC2  EFE5  F05E         	goto	u9010
 11970   00BDC6                     u9011:
 11971   00BDC6  EFEE  F05E         	goto	l9336
 11972   00BDCA                     u9010:
 11973   00BDCA  6C1A               	negf	___flge@ff1^0,c
 11974   00BDCC  1E1B               	comf	(___flge@ff1+1)^0,f,c
 11975   00BDCE  B0D8               	btfsc	status,0,c
 11976   00BDD0  2A1B               	incf	(___flge@ff1+1)^0,f,c
 11977   00BDD2  1E1C               	comf	(___flge@ff1+2)^0,f,c
 11978   00BDD4  B0D8               	btfsc	status,0,c
 11979   00BDD6  2A1C               	incf	(___flge@ff1+2)^0,f,c
 11980   00BDD8  0E80               	movlw	128
 11981   00BDDA  561D               	subfwb	(___flge@ff1+3)^0,f,c
 11982   00BDDC                     l9336:
 11983   00BDDC  AE21               	btfss	(___flge@ff2+3)^0,7,c
 11984   00BDDE  EFF3  F05E         	goto	u9021
 11985   00BDE2  EFF5  F05E         	goto	u9020
 11986   00BDE6                     u9021:
 11987   00BDE6  EFFE  F05E         	goto	l1245
 11988   00BDEA                     u9020:
 11989   00BDEA  6C1E               	negf	___flge@ff2^0,c
 11990   00BDEC  1E1F               	comf	(___flge@ff2+1)^0,f,c
 11991   00BDEE  B0D8               	btfsc	status,0,c
 11992   00BDF0  2A1F               	incf	(___flge@ff2+1)^0,f,c
 11993   00BDF2  1E20               	comf	(___flge@ff2+2)^0,f,c
 11994   00BDF4  B0D8               	btfsc	status,0,c
 11995   00BDF6  2A20               	incf	(___flge@ff2+2)^0,f,c
 11996   00BDF8  0E80               	movlw	128
 11997   00BDFA  5621               	subfwb	(___flge@ff2+3)^0,f,c
 11998   00BDFC                     l1245:
 11999   00BDFC  0E00               	movlw	0
 12000   00BDFE  1A1A               	xorwf	___flge@ff1^0,f,c
 12001   00BE00  0E00               	movlw	0
 12002   00BE02  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
 12003   00BE04  0E00               	movlw	0
 12004   00BE06  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
 12005   00BE08  0E80               	movlw	128
 12006   00BE0A  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
 12007   00BE0C  0E00               	movlw	0
 12008   00BE0E  1A1E               	xorwf	___flge@ff2^0,f,c
 12009   00BE10  0E00               	movlw	0
 12010   00BE12  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
 12011   00BE14  0E00               	movlw	0
 12012   00BE16  1A20               	xorwf	(___flge@ff2+2)^0,f,c
 12013   00BE18  0E80               	movlw	128
 12014   00BE1A  1A21               	xorwf	(___flge@ff2+3)^0,f,c
 12015   00BE1C  501E               	movf	___flge@ff2^0,w,c
 12016   00BE1E  5C1A               	subwf	___flge@ff1^0,w,c
 12017   00BE20  501F               	movf	(___flge@ff2+1)^0,w,c
 12018   00BE22  581B               	subwfb	(___flge@ff1+1)^0,w,c
 12019   00BE24  5020               	movf	(___flge@ff2+2)^0,w,c
 12020   00BE26  581C               	subwfb	(___flge@ff1+2)^0,w,c
 12021   00BE28  5021               	movf	(___flge@ff2+3)^0,w,c
 12022   00BE2A  581D               	subwfb	(___flge@ff1+3)^0,w,c
 12023   00BE2C  B0D8               	btfsc	status,0,c
 12024   00BE2E  EF1B  F05F         	goto	u9031
 12025   00BE32  EF1D  F05F         	goto	u9030
 12026   00BE36                     u9031:
 12027   00BE36  EF20  F05F         	goto	l9342
 12028   00BE3A                     u9030:
 12029   00BE3A  90D8               	bcf	status,0,c
 12030   00BE3C  EF21  F05F         	goto	l1250
 12031   00BE40                     l9342:
 12032   00BE40  80D8               	bsf	status,0,c
 12033   00BE42                     l1250:
 12034   00BE42  0012               	return		;funcret
 12035   00BE44                     __end_of___flge:
 12036                           	callstack 0
 12037                           
 12038 ;; *************** function ___fleq *****************
 12039 ;; Defined at:
 12040 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;  ff1             4    0[COMRAM] unsigned char 
 12043 ;;  ff2             4    4[COMRAM] unsigned char 
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;		None
 12046 ;; Return value:  Size  Location     Type
 12047 ;;		None               void
 12048 ;; Registers used:
 12049 ;;		wreg, status,2, status,0
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12055 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12057 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;Total ram usage:       12 bytes
 12060 ;; Hardware stack levels used: 1
 12061 ;; This function calls:
 12062 ;;		Nothing
 12063 ;; This function is called by:
 12064 ;;		_efgtoa
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           
 12068                           	psect	text54
 12069   00B7F4                     __ptext54:
 12070                           	callstack 0
 12071   00B7F4                     ___fleq:
 12072                           	callstack 26
 12073   00B7F4  0E00               	movlw	0
 12074   00B7F6  1401               	andwf	___fleq@ff1^0,w,c
 12075   00B7F8  6E09               	movwf	??___fleq^0,c
 12076   00B7FA  0E00               	movlw	0
 12077   00B7FC  1402               	andwf	(___fleq@ff1+1)^0,w,c
 12078   00B7FE  6E0A               	movwf	(??___fleq+1)^0,c
 12079   00B800  0E80               	movlw	128
 12080   00B802  1403               	andwf	(___fleq@ff1+2)^0,w,c
 12081   00B804  6E0B               	movwf	(??___fleq+2)^0,c
 12082   00B806  0E7F               	movlw	127
 12083   00B808  1404               	andwf	(___fleq@ff1+3)^0,w,c
 12084   00B80A  6E0C               	movwf	(??___fleq+3)^0,c
 12085   00B80C  5009               	movf	??___fleq^0,w,c
 12086   00B80E  100A               	iorwf	(??___fleq+1)^0,w,c
 12087   00B810  100B               	iorwf	(??___fleq+2)^0,w,c
 12088   00B812  100C               	iorwf	(??___fleq+3)^0,w,c
 12089   00B814  A4D8               	btfss	status,2,c
 12090   00B816  EF0F  F05C         	goto	u8961
 12091   00B81A  EF11  F05C         	goto	u8960
 12092   00B81E                     u8961:
 12093   00B81E  EF19  F05C         	goto	l9312
 12094   00B822                     u8960:
 12095   00B822  0E00               	movlw	0
 12096   00B824  6E01               	movwf	___fleq@ff1^0,c
 12097   00B826  0E00               	movlw	0
 12098   00B828  6E02               	movwf	(___fleq@ff1+1)^0,c
 12099   00B82A  0E00               	movlw	0
 12100   00B82C  6E03               	movwf	(___fleq@ff1+2)^0,c
 12101   00B82E  0E00               	movlw	0
 12102   00B830  6E04               	movwf	(___fleq@ff1+3)^0,c
 12103   00B832                     l9312:
 12104   00B832  0E00               	movlw	0
 12105   00B834  1405               	andwf	___fleq@ff2^0,w,c
 12106   00B836  6E09               	movwf	??___fleq^0,c
 12107   00B838  0E00               	movlw	0
 12108   00B83A  1406               	andwf	(___fleq@ff2+1)^0,w,c
 12109   00B83C  6E0A               	movwf	(??___fleq+1)^0,c
 12110   00B83E  0E80               	movlw	128
 12111   00B840  1407               	andwf	(___fleq@ff2+2)^0,w,c
 12112   00B842  6E0B               	movwf	(??___fleq+2)^0,c
 12113   00B844  0E7F               	movlw	127
 12114   00B846  1408               	andwf	(___fleq@ff2+3)^0,w,c
 12115   00B848  6E0C               	movwf	(??___fleq+3)^0,c
 12116   00B84A  5009               	movf	??___fleq^0,w,c
 12117   00B84C  100A               	iorwf	(??___fleq+1)^0,w,c
 12118   00B84E  100B               	iorwf	(??___fleq+2)^0,w,c
 12119   00B850  100C               	iorwf	(??___fleq+3)^0,w,c
 12120   00B852  A4D8               	btfss	status,2,c
 12121   00B854  EF2E  F05C         	goto	u8971
 12122   00B858  EF30  F05C         	goto	u8970
 12123   00B85C                     u8971:
 12124   00B85C  EF38  F05C         	goto	l9316
 12125   00B860                     u8970:
 12126   00B860  0E00               	movlw	0
 12127   00B862  6E05               	movwf	___fleq@ff2^0,c
 12128   00B864  0E00               	movlw	0
 12129   00B866  6E06               	movwf	(___fleq@ff2+1)^0,c
 12130   00B868  0E00               	movlw	0
 12131   00B86A  6E07               	movwf	(___fleq@ff2+2)^0,c
 12132   00B86C  0E00               	movlw	0
 12133   00B86E  6E08               	movwf	(___fleq@ff2+3)^0,c
 12134   00B870                     l9316:
 12135   00B870  5005               	movf	___fleq@ff2^0,w,c
 12136   00B872  1801               	xorwf	___fleq@ff1^0,w,c
 12137   00B874  E10F               	bnz	u8980
 12138   00B876  5006               	movf	(___fleq@ff2+1)^0,w,c
 12139   00B878  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 12140   00B87A  E10C               	bnz	u8980
 12141   00B87C  5007               	movf	(___fleq@ff2+2)^0,w,c
 12142   00B87E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 12143   00B880  E109               	bnz	u8980
 12144   00B882  5008               	movf	(___fleq@ff2+3)^0,w,c
 12145   00B884  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 12146   00B886  B4D8               	btfsc	status,2,c
 12147   00B888  EF48  F05C         	goto	u8981
 12148   00B88C  EF4A  F05C         	goto	u8980
 12149   00B890                     u8981:
 12150   00B890  EF4D  F05C         	goto	l9320
 12151   00B894                     u8980:
 12152   00B894  90D8               	bcf	status,0,c
 12153   00B896  EF4E  F05C         	goto	l1239
 12154   00B89A                     l9320:
 12155   00B89A  80D8               	bsf	status,0,c
 12156   00B89C                     l1239:
 12157   00B89C  0012               	return		;funcret
 12158   00B89E                     __end_of___fleq:
 12159                           	callstack 0
 12160                           
 12161 ;; *************** function ___fldiv *****************
 12162 ;; Defined at:
 12163 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;  b               4   14[COMRAM] unsigned char 
 12166 ;;  a               4   18[COMRAM] unsigned char 
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;  grs             4   33[COMRAM] unsigned long 
 12169 ;;  rem             4   26[COMRAM] unsigned long 
 12170 ;;  new_exp         2   31[COMRAM] short 
 12171 ;;  aexp            1   38[COMRAM] unsigned char 
 12172 ;;  bexp            1   37[COMRAM] unsigned char 
 12173 ;;  sign            1   30[COMRAM] unsigned char 
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  4   14[COMRAM] unsigned char 
 12176 ;; Registers used:
 12177 ;;		wreg, status,2, status,0
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12183 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12184 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12185 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12186 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12187 ;;Total ram usage:       25 bytes
 12188 ;; Hardware stack levels used: 1
 12189 ;; This function calls:
 12190 ;;		Nothing
 12191 ;; This function is called by:
 12192 ;;		_MPU6050_ReadSensorData
 12193 ;;		_efgtoa
 12194 ;; This function uses a non-reentrant model
 12195 ;;
 12196                           
 12197                           	psect	text55
 12198   00D99E                     __ptext55:
 12199                           	callstack 0
 12200   00D99E                     ___fldiv:
 12201                           	callstack 26
 12202   00D99E  5012               	movf	(___fldiv@b+3)^0,w,c
 12203   00D9A0  0B80               	andlw	128
 12204   00D9A2  6E1F               	movwf	___fldiv@sign^0,c
 12205   00D9A4  5012               	movf	(___fldiv@b+3)^0,w,c
 12206   00D9A6  2412               	addwf	(___fldiv@b+3)^0,w,c
 12207   00D9A8  6E26               	movwf	___fldiv@bexp^0,c
 12208   00D9AA  AE11               	btfss	(___fldiv@b+2)^0,7,c
 12209   00D9AC  EFDA  F06C         	goto	u8541
 12210   00D9B0  EFDC  F06C         	goto	u8540
 12211   00D9B4                     u8541:
 12212   00D9B4  EFDD  F06C         	goto	l9040
 12213   00D9B8                     u8540:
 12214   00D9B8  8026               	bsf	___fldiv@bexp^0,0,c
 12215   00D9BA                     l9040:
 12216   00D9BA  5026               	movf	___fldiv@bexp^0,w,c
 12217   00D9BC  B4D8               	btfsc	status,2,c
 12218   00D9BE  EFE3  F06C         	goto	u8551
 12219   00D9C2  EFE5  F06C         	goto	u8550
 12220   00D9C6                     u8551:
 12221   00D9C6  EFFA  F06C         	goto	l9050
 12222   00D9CA                     u8550:
 12223   00D9CA  2826               	incf	___fldiv@bexp^0,w,c
 12224   00D9CC  A4D8               	btfss	status,2,c
 12225   00D9CE  EFEB  F06C         	goto	u8561
 12226   00D9D2  EFED  F06C         	goto	u8560
 12227   00D9D6                     u8561:
 12228   00D9D6  EFF5  F06C         	goto	l9046
 12229   00D9DA                     u8560:
 12230   00D9DA  0E00               	movlw	0
 12231   00D9DC  6E0F               	movwf	___fldiv@b^0,c
 12232   00D9DE  0E00               	movlw	0
 12233   00D9E0  6E10               	movwf	(___fldiv@b+1)^0,c
 12234   00D9E2  0E00               	movlw	0
 12235   00D9E4  6E11               	movwf	(___fldiv@b+2)^0,c
 12236   00D9E6  0E00               	movlw	0
 12237   00D9E8  6E12               	movwf	(___fldiv@b+3)^0,c
 12238   00D9EA                     l9046:
 12239   00D9EA  8E11               	bsf	(___fldiv@b+2)^0,7,c
 12240   00D9EC  0E00               	movlw	0
 12241   00D9EE  6E12               	movwf	(___fldiv@b+3)^0,c
 12242   00D9F0  EF02  F06D         	goto	l9052
 12243   00D9F4                     l9050:
 12244   00D9F4  0E00               	movlw	0
 12245   00D9F6  6E0F               	movwf	___fldiv@b^0,c
 12246   00D9F8  0E00               	movlw	0
 12247   00D9FA  6E10               	movwf	(___fldiv@b+1)^0,c
 12248   00D9FC  0E00               	movlw	0
 12249   00D9FE  6E11               	movwf	(___fldiv@b+2)^0,c
 12250   00DA00  0E00               	movlw	0
 12251   00DA02  6E12               	movwf	(___fldiv@b+3)^0,c
 12252   00DA04                     l9052:
 12253   00DA04  5016               	movf	(___fldiv@a+3)^0,w,c
 12254   00DA06  0B80               	andlw	128
 12255   00DA08  1A1F               	xorwf	___fldiv@sign^0,f,c
 12256   00DA0A  5016               	movf	(___fldiv@a+3)^0,w,c
 12257   00DA0C  2416               	addwf	(___fldiv@a+3)^0,w,c
 12258   00DA0E  6E27               	movwf	___fldiv@aexp^0,c
 12259   00DA10  AE15               	btfss	(___fldiv@a+2)^0,7,c
 12260   00DA12  EF0D  F06D         	goto	u8571
 12261   00DA16  EF0F  F06D         	goto	u8570
 12262   00DA1A                     u8571:
 12263   00DA1A  EF10  F06D         	goto	l9060
 12264   00DA1E                     u8570:
 12265   00DA1E  8027               	bsf	___fldiv@aexp^0,0,c
 12266   00DA20                     l9060:
 12267   00DA20  5027               	movf	___fldiv@aexp^0,w,c
 12268   00DA22  B4D8               	btfsc	status,2,c
 12269   00DA24  EF16  F06D         	goto	u8581
 12270   00DA28  EF18  F06D         	goto	u8580
 12271   00DA2C                     u8581:
 12272   00DA2C  EF2D  F06D         	goto	l9070
 12273   00DA30                     u8580:
 12274   00DA30  2827               	incf	___fldiv@aexp^0,w,c
 12275   00DA32  A4D8               	btfss	status,2,c
 12276   00DA34  EF1E  F06D         	goto	u8591
 12277   00DA38  EF20  F06D         	goto	u8590
 12278   00DA3C                     u8591:
 12279   00DA3C  EF28  F06D         	goto	l9066
 12280   00DA40                     u8590:
 12281   00DA40  0E00               	movlw	0
 12282   00DA42  6E13               	movwf	___fldiv@a^0,c
 12283   00DA44  0E00               	movlw	0
 12284   00DA46  6E14               	movwf	(___fldiv@a+1)^0,c
 12285   00DA48  0E00               	movlw	0
 12286   00DA4A  6E15               	movwf	(___fldiv@a+2)^0,c
 12287   00DA4C  0E00               	movlw	0
 12288   00DA4E  6E16               	movwf	(___fldiv@a+3)^0,c
 12289   00DA50                     l9066:
 12290   00DA50  8E15               	bsf	(___fldiv@a+2)^0,7,c
 12291   00DA52  0E00               	movlw	0
 12292   00DA54  6E16               	movwf	(___fldiv@a+3)^0,c
 12293   00DA56  EF35  F06D         	goto	l9072
 12294   00DA5A                     l9070:
 12295   00DA5A  0E00               	movlw	0
 12296   00DA5C  6E13               	movwf	___fldiv@a^0,c
 12297   00DA5E  0E00               	movlw	0
 12298   00DA60  6E14               	movwf	(___fldiv@a+1)^0,c
 12299   00DA62  0E00               	movlw	0
 12300   00DA64  6E15               	movwf	(___fldiv@a+2)^0,c
 12301   00DA66  0E00               	movlw	0
 12302   00DA68  6E16               	movwf	(___fldiv@a+3)^0,c
 12303   00DA6A                     l9072:
 12304   00DA6A  5013               	movf	___fldiv@a^0,w,c
 12305   00DA6C  1014               	iorwf	(___fldiv@a+1)^0,w,c
 12306   00DA6E  1015               	iorwf	(___fldiv@a+2)^0,w,c
 12307   00DA70  1016               	iorwf	(___fldiv@a+3)^0,w,c
 12308   00DA72  A4D8               	btfss	status,2,c
 12309   00DA74  EF3E  F06D         	goto	u8601
 12310   00DA78  EF40  F06D         	goto	u8600
 12311   00DA7C                     u8601:
 12312   00DA7C  EF58  F06D         	goto	l9084
 12313   00DA80                     u8600:
 12314   00DA80  0E00               	movlw	0
 12315   00DA82  6E0F               	movwf	___fldiv@b^0,c
 12316   00DA84  0E00               	movlw	0
 12317   00DA86  6E10               	movwf	(___fldiv@b+1)^0,c
 12318   00DA88  0E00               	movlw	0
 12319   00DA8A  6E11               	movwf	(___fldiv@b+2)^0,c
 12320   00DA8C  0E00               	movlw	0
 12321   00DA8E  6E12               	movwf	(___fldiv@b+3)^0,c
 12322   00DA90  0E80               	movlw	128
 12323   00DA92  1211               	iorwf	(___fldiv@b+2)^0,f,c
 12324   00DA94  0E7F               	movlw	127
 12325   00DA96  1212               	iorwf	(___fldiv@b+3)^0,f,c
 12326   00DA98                     l9078:
 12327   00DA98  501F               	movf	___fldiv@sign^0,w,c
 12328   00DA9A  1212               	iorwf	(___fldiv@b+3)^0,f,c
 12329   00DA9C  C00F  F00F         	movff	___fldiv@b,?___fldiv
 12330   00DAA0  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 12331   00DAA4  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 12332   00DAA8  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 12333   00DAAC  EF9B  F06E         	goto	l1562
 12334   00DAB0                     l9084:
 12335   00DAB0  5026               	movf	___fldiv@bexp^0,w,c
 12336   00DAB2  A4D8               	btfss	status,2,c
 12337   00DAB4  EF5E  F06D         	goto	u8611
 12338   00DAB8  EF60  F06D         	goto	u8610
 12339   00DABC                     u8611:
 12340   00DABC  EF6A  F06D         	goto	l9092
 12341   00DAC0                     u8610:
 12342   00DAC0  0E00               	movlw	0
 12343   00DAC2  6E0F               	movwf	?___fldiv^0,c
 12344   00DAC4  0E00               	movlw	0
 12345   00DAC6  6E10               	movwf	(?___fldiv+1)^0,c
 12346   00DAC8  0E00               	movlw	0
 12347   00DACA  6E11               	movwf	(?___fldiv+2)^0,c
 12348   00DACC  0E00               	movlw	0
 12349   00DACE  6E12               	movwf	(?___fldiv+3)^0,c
 12350   00DAD0  EF9B  F06E         	goto	l1562
 12351   00DAD4                     l9092:
 12352   00DAD4  5027               	movf	___fldiv@aexp^0,w,c
 12353   00DAD6  C026  F017         	movff	___fldiv@bexp,??___fldiv
 12354   00DADA  6A18               	clrf	(??___fldiv+1)^0,c
 12355   00DADC  5E17               	subwf	??___fldiv^0,f,c
 12356   00DADE  0E00               	movlw	0
 12357   00DAE0  5A18               	subwfb	(??___fldiv+1)^0,f,c
 12358   00DAE2  0E7F               	movlw	127
 12359   00DAE4  2417               	addwf	??___fldiv^0,w,c
 12360   00DAE6  6E20               	movwf	___fldiv@new_exp^0,c
 12361   00DAE8  0E00               	movlw	0
 12362   00DAEA  2018               	addwfc	(??___fldiv+1)^0,w,c
 12363   00DAEC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 12364   00DAEE  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 12365   00DAF2  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 12366   00DAF6  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 12367   00DAFA  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 12368   00DAFE  0E00               	movlw	0
 12369   00DB00  6E0F               	movwf	___fldiv@b^0,c
 12370   00DB02  0E00               	movlw	0
 12371   00DB04  6E10               	movwf	(___fldiv@b+1)^0,c
 12372   00DB06  0E00               	movlw	0
 12373   00DB08  6E11               	movwf	(___fldiv@b+2)^0,c
 12374   00DB0A  0E00               	movlw	0
 12375   00DB0C  6E12               	movwf	(___fldiv@b+3)^0,c
 12376   00DB0E  0E00               	movlw	0
 12377   00DB10  6E22               	movwf	___fldiv@grs^0,c
 12378   00DB12  0E00               	movlw	0
 12379   00DB14  6E23               	movwf	(___fldiv@grs+1)^0,c
 12380   00DB16  0E00               	movlw	0
 12381   00DB18  6E24               	movwf	(___fldiv@grs+2)^0,c
 12382   00DB1A  0E00               	movlw	0
 12383   00DB1C  6E25               	movwf	(___fldiv@grs+3)^0,c
 12384   00DB1E  0E00               	movlw	0
 12385   00DB20  6E27               	movwf	___fldiv@aexp^0,c
 12386   00DB22  EFCB  F06D         	goto	l1564
 12387   00DB26                     l9102:
 12388   00DB26  5027               	movf	___fldiv@aexp^0,w,c
 12389   00DB28  B4D8               	btfsc	status,2,c
 12390   00DB2A  EF99  F06D         	goto	u8621
 12391   00DB2E  EF9B  F06D         	goto	u8620
 12392   00DB32                     u8621:
 12393   00DB32  EFB2  F06D         	goto	l9110
 12394   00DB36                     u8620:
 12395   00DB36  90D8               	bcf	status,0,c
 12396   00DB38  361B               	rlcf	___fldiv@rem^0,f,c
 12397   00DB3A  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 12398   00DB3C  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 12399   00DB3E  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 12400   00DB40  90D8               	bcf	status,0,c
 12401   00DB42  360F               	rlcf	___fldiv@b^0,f,c
 12402   00DB44  3610               	rlcf	(___fldiv@b+1)^0,f,c
 12403   00DB46  3611               	rlcf	(___fldiv@b+2)^0,f,c
 12404   00DB48  3612               	rlcf	(___fldiv@b+3)^0,f,c
 12405   00DB4A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 12406   00DB4C  EFAA  F06D         	goto	u8631
 12407   00DB50  EFAC  F06D         	goto	u8630
 12408   00DB54                     u8631:
 12409   00DB54  EFAD  F06D         	goto	l1567
 12410   00DB58                     u8630:
 12411   00DB58  800F               	bsf	___fldiv@b^0,0,c
 12412   00DB5A                     l1567:
 12413   00DB5A  90D8               	bcf	status,0,c
 12414   00DB5C  3622               	rlcf	___fldiv@grs^0,f,c
 12415   00DB5E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 12416   00DB60  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 12417   00DB62  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 12418   00DB64                     l9110:
 12419   00DB64  5013               	movf	___fldiv@a^0,w,c
 12420   00DB66  5C1B               	subwf	___fldiv@rem^0,w,c
 12421   00DB68  5014               	movf	(___fldiv@a+1)^0,w,c
 12422   00DB6A  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 12423   00DB6C  5015               	movf	(___fldiv@a+2)^0,w,c
 12424   00DB6E  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 12425   00DB70  5016               	movf	(___fldiv@a+3)^0,w,c
 12426   00DB72  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 12427   00DB74  A0D8               	btfss	status,0,c
 12428   00DB76  EFBF  F06D         	goto	u8641
 12429   00DB7A  EFC1  F06D         	goto	u8640
 12430   00DB7E                     u8641:
 12431   00DB7E  EFCA  F06D         	goto	l9116
 12432   00DB82                     u8640:
 12433   00DB82  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 12434   00DB84  5013               	movf	___fldiv@a^0,w,c
 12435   00DB86  5E1B               	subwf	___fldiv@rem^0,f,c
 12436   00DB88  5014               	movf	(___fldiv@a+1)^0,w,c
 12437   00DB8A  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 12438   00DB8C  5015               	movf	(___fldiv@a+2)^0,w,c
 12439   00DB8E  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 12440   00DB90  5016               	movf	(___fldiv@a+3)^0,w,c
 12441   00DB92  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 12442   00DB94                     l9116:
 12443   00DB94  2A27               	incf	___fldiv@aexp^0,f,c
 12444   00DB96                     l1564:
 12445   00DB96  0E19               	movlw	25
 12446   00DB98  6427               	cpfsgt	___fldiv@aexp^0,c
 12447   00DB9A  EFD1  F06D         	goto	u8651
 12448   00DB9E  EFD3  F06D         	goto	u8650
 12449   00DBA2                     u8651:
 12450   00DBA2  EF93  F06D         	goto	l9102
 12451   00DBA6                     u8650:
 12452   00DBA6  501B               	movf	___fldiv@rem^0,w,c
 12453   00DBA8  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 12454   00DBAA  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 12455   00DBAC  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 12456   00DBAE  B4D8               	btfsc	status,2,c
 12457   00DBB0  EFDC  F06D         	goto	u8661
 12458   00DBB4  EFDE  F06D         	goto	u8660
 12459   00DBB8                     u8661:
 12460   00DBB8  EFF6  F06D         	goto	l9128
 12461   00DBBC                     u8660:
 12462   00DBBC  8022               	bsf	___fldiv@grs^0,0,c
 12463   00DBBE  EFF6  F06D         	goto	l9128
 12464   00DBC2                     l9122:
 12465   00DBC2  90D8               	bcf	status,0,c
 12466   00DBC4  360F               	rlcf	___fldiv@b^0,f,c
 12467   00DBC6  3610               	rlcf	(___fldiv@b+1)^0,f,c
 12468   00DBC8  3611               	rlcf	(___fldiv@b+2)^0,f,c
 12469   00DBCA  3612               	rlcf	(___fldiv@b+3)^0,f,c
 12470   00DBCC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 12471   00DBCE  EFEB  F06D         	goto	u8671
 12472   00DBD2  EFED  F06D         	goto	u8670
 12473   00DBD6                     u8671:
 12474   00DBD6  EFEE  F06D         	goto	l1573
 12475   00DBDA                     u8670:
 12476   00DBDA  800F               	bsf	___fldiv@b^0,0,c
 12477   00DBDC                     l1573:
 12478   00DBDC  90D8               	bcf	status,0,c
 12479   00DBDE  3622               	rlcf	___fldiv@grs^0,f,c
 12480   00DBE0  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 12481   00DBE2  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 12482   00DBE4  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 12483   00DBE6  0620               	decf	___fldiv@new_exp^0,f,c
 12484   00DBE8  A0D8               	btfss	status,0,c
 12485   00DBEA  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 12486   00DBEC                     l9128:
 12487   00DBEC  AE11               	btfss	(___fldiv@b+2)^0,7,c
 12488   00DBEE  EFFB  F06D         	goto	u8681
 12489   00DBF2  EFFD  F06D         	goto	u8680
 12490   00DBF6                     u8681:
 12491   00DBF6  EFE1  F06D         	goto	l9122
 12492   00DBFA                     u8680:
 12493   00DBFA  0E00               	movlw	0
 12494   00DBFC  6E27               	movwf	___fldiv@aexp^0,c
 12495   00DBFE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 12496   00DC00  EF04  F06E         	goto	u8691
 12497   00DC04  EF06  F06E         	goto	u8690
 12498   00DC08                     u8691:
 12499   00DC08  EF2A  F06E         	goto	l1575
 12500   00DC0C                     u8690:
 12501   00DC0C  0EFF               	movlw	255
 12502   00DC0E  1422               	andwf	___fldiv@grs^0,w,c
 12503   00DC10  6E17               	movwf	??___fldiv^0,c
 12504   00DC12  0EFF               	movlw	255
 12505   00DC14  1423               	andwf	(___fldiv@grs+1)^0,w,c
 12506   00DC16  6E18               	movwf	(??___fldiv+1)^0,c
 12507   00DC18  0EFF               	movlw	255
 12508   00DC1A  1424               	andwf	(___fldiv@grs+2)^0,w,c
 12509   00DC1C  6E19               	movwf	(??___fldiv+2)^0,c
 12510   00DC1E  0E7F               	movlw	127
 12511   00DC20  1425               	andwf	(___fldiv@grs+3)^0,w,c
 12512   00DC22  6E1A               	movwf	(??___fldiv+3)^0,c
 12513   00DC24  5017               	movf	??___fldiv^0,w,c
 12514   00DC26  1018               	iorwf	(??___fldiv+1)^0,w,c
 12515   00DC28  1019               	iorwf	(??___fldiv+2)^0,w,c
 12516   00DC2A  101A               	iorwf	(??___fldiv+3)^0,w,c
 12517   00DC2C  B4D8               	btfsc	status,2,c
 12518   00DC2E  EF1B  F06E         	goto	u8701
 12519   00DC32  EF1D  F06E         	goto	u8700
 12520   00DC36                     u8701:
 12521   00DC36  EF21  F06E         	goto	l1576
 12522   00DC3A                     u8700:
 12523   00DC3A                     l9136:
 12524   00DC3A  0E01               	movlw	1
 12525   00DC3C  6E27               	movwf	___fldiv@aexp^0,c
 12526   00DC3E  EF2A  F06E         	goto	l1575
 12527   00DC42                     l1576:
 12528   00DC42  A00F               	btfss	___fldiv@b^0,0,c
 12529   00DC44  EF26  F06E         	goto	u8711
 12530   00DC48  EF28  F06E         	goto	u8710
 12531   00DC4C                     u8711:
 12532   00DC4C  EF2A  F06E         	goto	l1575
 12533   00DC50                     u8710:
 12534   00DC50  EF1D  F06E         	goto	l9136
 12535   00DC54                     l1575:
 12536   00DC54  5027               	movf	___fldiv@aexp^0,w,c
 12537   00DC56  B4D8               	btfsc	status,2,c
 12538   00DC58  EF30  F06E         	goto	u8721
 12539   00DC5C  EF32  F06E         	goto	u8720
 12540   00DC60                     u8721:
 12541   00DC60  EF56  F06E         	goto	l9148
 12542   00DC64                     u8720:
 12543   00DC64  0E01               	movlw	1
 12544   00DC66  260F               	addwf	___fldiv@b^0,f,c
 12545   00DC68  0E00               	movlw	0
 12546   00DC6A  2210               	addwfc	(___fldiv@b+1)^0,f,c
 12547   00DC6C  2211               	addwfc	(___fldiv@b+2)^0,f,c
 12548   00DC6E  2212               	addwfc	(___fldiv@b+3)^0,f,c
 12549   00DC70  A012               	btfss	(___fldiv@b+3)^0,0,c
 12550   00DC72  EF3D  F06E         	goto	u8731
 12551   00DC76  EF3F  F06E         	goto	u8730
 12552   00DC7A                     u8731:
 12553   00DC7A  EF56  F06E         	goto	l9148
 12554   00DC7E                     u8730:
 12555   00DC7E  C00F  F017         	movff	___fldiv@b,??___fldiv
 12556   00DC82  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 12557   00DC86  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 12558   00DC8A  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 12559   00DC8E  341A               	rlcf	(??___fldiv+3)^0,w,c
 12560   00DC90  321A               	rrcf	(??___fldiv+3)^0,f,c
 12561   00DC92  3219               	rrcf	(??___fldiv+2)^0,f,c
 12562   00DC94  3218               	rrcf	(??___fldiv+1)^0,f,c
 12563   00DC96  3217               	rrcf	??___fldiv^0,f,c
 12564   00DC98  C017  F00F         	movff	??___fldiv,___fldiv@b
 12565   00DC9C  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 12566   00DCA0  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 12567   00DCA4  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 12568   00DCA8  4A20               	infsnz	___fldiv@new_exp^0,f,c
 12569   00DCAA  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 12570   00DCAC                     l9148:
 12571   00DCAC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12572   00DCAE  EF61  F06E         	goto	u8741
 12573   00DCB2  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 12574   00DCB4  E108               	bnz	u8740
 12575   00DCB6  2820               	incf	___fldiv@new_exp^0,w,c
 12576   00DCB8  A0D8               	btfss	status,0,c
 12577   00DCBA  EF61  F06E         	goto	u8741
 12578   00DCBE  EF63  F06E         	goto	u8740
 12579   00DCC2                     u8741:
 12580   00DCC2  EF6E  F06E         	goto	l9152
 12581   00DCC6                     u8740:
 12582   00DCC6  0E00               	movlw	0
 12583   00DCC8  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 12584   00DCCA  6820               	setf	___fldiv@new_exp^0,c
 12585   00DCCC  0E00               	movlw	0
 12586   00DCCE  6E0F               	movwf	___fldiv@b^0,c
 12587   00DCD0  0E00               	movlw	0
 12588   00DCD2  6E10               	movwf	(___fldiv@b+1)^0,c
 12589   00DCD4  0E00               	movlw	0
 12590   00DCD6  6E11               	movwf	(___fldiv@b+2)^0,c
 12591   00DCD8  0E00               	movlw	0
 12592   00DCDA  6E12               	movwf	(___fldiv@b+3)^0,c
 12593   00DCDC                     l9152:
 12594   00DCDC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12595   00DCDE  EF7B  F06E         	goto	u8750
 12596   00DCE2  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 12597   00DCE4  E106               	bnz	u8751
 12598   00DCE6  0420               	decf	___fldiv@new_exp^0,w,c
 12599   00DCE8  B0D8               	btfsc	status,0,c
 12600   00DCEA  EF79  F06E         	goto	u8751
 12601   00DCEE  EF7B  F06E         	goto	u8750
 12602   00DCF2                     u8751:
 12603   00DCF2  EF89  F06E         	goto	l9156
 12604   00DCF6                     u8750:
 12605   00DCF6  0E00               	movlw	0
 12606   00DCF8  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 12607   00DCFA  0E00               	movlw	0
 12608   00DCFC  6E20               	movwf	___fldiv@new_exp^0,c
 12609   00DCFE  0E00               	movlw	0
 12610   00DD00  6E0F               	movwf	___fldiv@b^0,c
 12611   00DD02  0E00               	movlw	0
 12612   00DD04  6E10               	movwf	(___fldiv@b+1)^0,c
 12613   00DD06  0E00               	movlw	0
 12614   00DD08  6E11               	movwf	(___fldiv@b+2)^0,c
 12615   00DD0A  0E00               	movlw	0
 12616   00DD0C  6E12               	movwf	(___fldiv@b+3)^0,c
 12617   00DD0E  0E00               	movlw	0
 12618   00DD10  6E1F               	movwf	___fldiv@sign^0,c
 12619   00DD12                     l9156:
 12620   00DD12  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 12621   00DD16  A026               	btfss	___fldiv@bexp^0,0,c
 12622   00DD18  EF90  F06E         	goto	u8761
 12623   00DD1C  EF92  F06E         	goto	u8760
 12624   00DD20                     u8761:
 12625   00DD20  EF95  F06E         	goto	l9162
 12626   00DD24                     u8760:
 12627   00DD24  8E11               	bsf	(___fldiv@b+2)^0,7,c
 12628   00DD26  EF96  F06E         	goto	l9164
 12629   00DD2A                     l9162:
 12630   00DD2A  9E11               	bcf	(___fldiv@b+2)^0,7,c
 12631   00DD2C                     l9164:
 12632   00DD2C  90D8               	bcf	status,0,c
 12633   00DD2E  3026               	rrcf	___fldiv@bexp^0,w,c
 12634   00DD30  6E12               	movwf	(___fldiv@b+3)^0,c
 12635   00DD32  EF4C  F06D         	goto	l9078
 12636   00DD36                     l1562:
 12637   00DD36  0012               	return		;funcret
 12638   00DD38                     __end_of___fldiv:
 12639                           	callstack 0
 12640                           
 12641 ;; *************** function _UART_SendString *****************
 12642 ;; Defined at:
 12643 ;;		line 80 in file "main.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  str             2    1[COMRAM] PTR const unsigned char 
 12646 ;;		 -> STR_20(38), STR_15(2), STR_14(11), main@userInput(20), 
 12647 ;;		 -> STR_13(62), main@buffer(200), ReadAllEEPROMDataCSV@buffer(200), STR_7(9), 
 12648 ;;		 -> STR_6(33), ReadAndSendEEPROMData@buffer(200), STR_4(5), ReadAndSendEEPROMDataCSV@buffer(200), 
 12649 ;;		 -> STR_2(19), Handle_LOG_STAT@buffer(200), 
 12650 ;; Auto vars:     Size  Location     Type
 12651 ;;		None
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  1    wreg      void 
 12654 ;; Registers used:
 12655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12665 ;;Total ram usage:        2 bytes
 12666 ;; Hardware stack levels used: 1
 12667 ;; Hardware stack levels required when called: 1
 12668 ;; This function calls:
 12669 ;;		_UART1_Write
 12670 ;; This function is called by:
 12671 ;;		_ReadAndSendEEPROMDataCSV
 12672 ;;		_ReadAndSendEEPROMData
 12673 ;;		_StartLogging
 12674 ;;		_ReadAllEEPROMDataCSV
 12675 ;;		_main
 12676 ;;		_Handle_LOG_STAT
 12677 ;;		_Handle_LOG_READ
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           	psect	text56
 12682   00B044                     __ptext56:
 12683                           	callstack 0
 12684   00B044                     _UART_SendString:
 12685                           	callstack 29
 12686   00B044                     
 12687                           ;main.c: 81:     while (*str){
 12688   00B044  EF3D  F058         	goto	l10444
 12689   00B048                     l10440:
 12690                           
 12691                           ;main.c: 82:         UART1_Write(*str);
 12692   00B048  0060  F00B  FFF6   	movff	UART_SendString@str,tblptrl
 12693   00B04E  0060  F00F  FFF7   	movff	UART_SendString@str+1,tblptrh
 12694   00B054  0E00               	movlw	low (__mediumconst shr (0+16))
 12695   00B056  6EF8               	movwf	tblptru,c
 12696   00B058  0E0F               	movlw	(high __ramtop+-1)
 12697   00B05A  64F7               	cpfsgt	tblptrh,c
 12698   00B05C  D003               	bra	u10807
 12699   00B05E  0008               	tblrd		*
 12700   00B060  50F5               	movf	tablat,w,c
 12701   00B062  D007               	bra	u10800
 12702   00B064                     u10807:
 12703   00B064  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12704   00B06A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12705   00B070  50EF               	movf	indf0,w,c
 12706   00B072                     u10800:
 12707   00B072  ECDA  F051         	call	_UART1_Write
 12708   00B076                     
 12709                           ;main.c: 83:         str++;
 12710   00B076  4A02               	infsnz	UART_SendString@str^0,f,c
 12711   00B078  2A03               	incf	(UART_SendString@str+1)^0,f,c
 12712   00B07A                     l10444:
 12713                           
 12714                           ;main.c: 81:     while (*str){
 12715   00B07A  0060  F00B  FFF6   	movff	UART_SendString@str,tblptrl
 12716   00B080  0060  F00F  FFF7   	movff	UART_SendString@str+1,tblptrh
 12717   00B086  0E00               	movlw	low (__mediumconst shr (0+16))
 12718   00B088  6EF8               	movwf	tblptru,c
 12719   00B08A  0E0F               	movlw	(high __ramtop+-1)
 12720   00B08C  64F7               	cpfsgt	tblptrh,c
 12721   00B08E  D003               	bra	u10817
 12722   00B090  0008               	tblrd		*
 12723   00B092  50F5               	movf	tablat,w,c
 12724   00B094  D007               	bra	u10810
 12725   00B096                     u10817:
 12726   00B096  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12727   00B09C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12728   00B0A2  50EF               	movf	indf0,w,c
 12729   00B0A4                     u10810:
 12730   00B0A4  0900               	iorlw	0
 12731   00B0A6  A4D8               	btfss	status,2,c
 12732   00B0A8  EF58  F058         	goto	u10821
 12733   00B0AC  EF5A  F058         	goto	u10820
 12734   00B0B0                     u10821:
 12735   00B0B0  EF24  F058         	goto	l10440
 12736   00B0B4                     u10820:
 12737   00B0B4  0012               	return		;funcret
 12738   00B0B6                     __end_of_UART_SendString:
 12739                           	callstack 0
 12740                           
 12741 ;; *************** function _UART1_Write *****************
 12742 ;; Defined at:
 12743 ;;		line 170 in file "mcc_generated_files/uart1.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  txData          1    wreg     unsigned char 
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;  txData          1    0[COMRAM] unsigned char 
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12761 ;;Total ram usage:        1 bytes
 12762 ;; Hardware stack levels used: 1
 12763 ;; This function calls:
 12764 ;;		Nothing
 12765 ;; This function is called by:
 12766 ;;		_putch
 12767 ;;		_UART_SendString
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text57
 12772   00A3B4                     __ptext57:
 12773                           	callstack 0
 12774   00A3B4                     _UART1_Write:
 12775                           	callstack 22
 12776                           
 12777                           ;incstack = 0
 12778                           ;UART1_Write@txData stored from wreg
 12779   00A3B4  6E01               	movwf	UART1_Write@txData^0,c
 12780   00A3B6                     l191:
 12781                           
 12782                           ;mcc_generated_files/uart1.c: 172:     while(0 == PIR3bits.U1TXIF)
 12783   00A3B6  0139               	movlb	57	; () banked
 12784   00A3B8  A9A3               	btfss	163,4,b	;volatile
 12785   00A3BA  EFE1  F051         	goto	u7691
 12786   00A3BE  EFE3  F051         	goto	u7690
 12787   00A3C2                     u7691:
 12788   00A3C2  EFDB  F051         	goto	l191
 12789   00A3C6                     u7690:
 12790   00A3C6                     
 12791                           ; BSR set to: 57
 12792                           ;mcc_generated_files/uart1.c: 176:     U1TXB = txData;
 12793   00A3C6  0060  F007  FDEA   	movff	UART1_Write@txData,15850	;volatile
 12794   00A3CC                     
 12795                           ; BSR set to: 57
 12796   00A3CC  0012               	return		;funcret
 12797   00A3CE                     __end_of_UART1_Write:
 12798                           	callstack 0
 12799                           
 12800 ;; *************** function _ParseUserInput *****************
 12801 ;; Defined at:
 12802 ;;		line 374 in file "main.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  input           2   46[BANK0 ] PTR const unsigned char 
 12805 ;;		 -> main@userInput(20), 
 12806 ;;  Tm              1   48[BANK0 ] PTR unsigned long 
 12807 ;;		 -> Tm(4), 
 12808 ;;  Ndat            1   49[BANK0 ] PTR unsigned long 
 12809 ;;		 -> Ndat(4), 
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;		None
 12812 ;; Return value:  Size  Location     Type
 12813 ;;                  1    wreg      _Bool 
 12814 ;; Registers used:
 12815 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12816 ;; Tracked objects:
 12817 ;;		On entry : 0/0
 12818 ;;		On exit  : 0/0
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12824 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12825 ;;Total ram usage:        4 bytes
 12826 ;; Hardware stack levels used: 1
 12827 ;; Hardware stack levels required when called: 7
 12828 ;; This function calls:
 12829 ;;		_sscanf
 12830 ;; This function is called by:
 12831 ;;		_main
 12832 ;; This function uses a non-reentrant model
 12833 ;;
 12834                           
 12835                           	psect	text58
 12836   00AFD4                     __ptext58:
 12837                           	callstack 0
 12838   00AFD4                     _ParseUserInput:
 12839                           	callstack 23
 12840   00AFD4                     
 12841                           ;main.c: 376:     if (sscanf(input, "LOG(%lu,%lu)\r\n", Tm, Ndat) == 2 || sscanf(input, 
      +                          "LOG(%lu,%lu)\n", Tm, Ndat) == 2) {
 12842   00AFD4  C08E  F079         	movff	ParseUserInput@input,sscanf@s
 12843   00AFD8  C08F  F07A         	movff	ParseUserInput@input+1,sscanf@s+1
 12844   00AFDC  0E9F               	movlw	low STR_8
 12845   00AFDE  0100               	movlb	0	; () banked
 12846   00AFE0  6F7B               	movwf	sscanf@fmt& (0+255),b
 12847   00AFE2  0EFF               	movlw	high STR_8
 12848   00AFE4  6F7C               	movwf	(sscanf@fmt+1)& (0+255),b
 12849   00AFE6  C090  F07D         	movff	ParseUserInput@Tm,?_sscanf+4
 12850   00AFEA  C091  F07E         	movff	ParseUserInput@Ndat,?_sscanf+5
 12851   00AFEE  EC32  F054         	call	_sscanf	;wreg free
 12852   00AFF2  0E02               	movlw	2
 12853   00AFF4  0100               	movlb	0	; () banked
 12854   00AFF6  1979               	xorwf	?_sscanf& (0+255),w,b
 12855   00AFF8  117A               	iorwf	(?_sscanf+1)& (0+255),w,b
 12856   00AFFA  B4D8               	btfsc	status,2,c
 12857   00AFFC  EF02  F058         	goto	u11221
 12858   00B000  EF04  F058         	goto	u11220
 12859   00B004                     u11221:
 12860   00B004  EF1D  F058         	goto	l10838
 12861   00B008                     u11220:
 12862   00B008                     
 12863                           ; BSR set to: 0
 12864   00B008  C08E  F079         	movff	ParseUserInput@input,sscanf@s
 12865   00B00C  C08F  F07A         	movff	ParseUserInput@input+1,sscanf@s+1
 12866   00B010  0EAE               	movlw	low STR_9
 12867   00B012  6F7B               	movwf	sscanf@fmt& (0+255),b
 12868   00B014  0EFF               	movlw	high STR_9
 12869   00B016  6F7C               	movwf	(sscanf@fmt+1)& (0+255),b
 12870   00B018  C090  F07D         	movff	ParseUserInput@Tm,?_sscanf+4
 12871   00B01C  C091  F07E         	movff	ParseUserInput@Ndat,?_sscanf+5
 12872   00B020  EC32  F054         	call	_sscanf	;wreg free
 12873   00B024  0E02               	movlw	2
 12874   00B026  0100               	movlb	0	; () banked
 12875   00B028  1979               	xorwf	?_sscanf& (0+255),w,b
 12876   00B02A  117A               	iorwf	(?_sscanf+1)& (0+255),w,b
 12877   00B02C  A4D8               	btfss	status,2,c
 12878   00B02E  EF1B  F058         	goto	u11231
 12879   00B032  EF1D  F058         	goto	u11230
 12880   00B036                     u11231:
 12881   00B036  EF20  F058         	goto	l10842
 12882   00B03A                     u11230:
 12883   00B03A                     l10838:
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;main.c: 377:         return 1;
 12887   00B03A  0E01               	movlw	1
 12888   00B03C  EF21  F058         	goto	l942
 12889   00B040                     l10842:
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;main.c: 379:     return 0;
 12893   00B040  0E00               	movlw	0
 12894   00B042                     l942:
 12895                           
 12896                           ; BSR set to: 0
 12897   00B042  0012               	return		;funcret
 12898   00B044                     __end_of_ParseUserInput:
 12899                           	callstack 0
 12900                           
 12901 ;; *************** function _sscanf *****************
 12902 ;; Defined at:
 12903 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sscanf.c"
 12904 ;; Parameters:    Size  Location     Type
 12905 ;;  s               2   25[BANK0 ] PTR const unsigned char 
 12906 ;;		 -> main@userInput(20), 
 12907 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 12908 ;;		 -> STR_9(14), STR_8(15), 
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;  f              12   34[BANK0 ] struct _IO_FILE
 12911 ;;  ret             2   31[BANK0 ] int 
 12912 ;;  ap              1   33[BANK0 ] PTR void [1]
 12913 ;;		 -> ?_sscanf(2), 
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  2   25[BANK0 ] int 
 12916 ;; Registers used:
 12917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12923 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12924 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12926 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12927 ;;Total ram usage:       21 bytes
 12928 ;; Hardware stack levels used: 1
 12929 ;; Hardware stack levels required when called: 6
 12930 ;; This function calls:
 12931 ;;		_vfscanf
 12932 ;; This function is called by:
 12933 ;;		_ParseUserInput
 12934 ;; This function uses a non-reentrant model
 12935 ;;
 12936                           
 12937                           	psect	text59
 12938   00A864                     __ptext59:
 12939                           	callstack 0
 12940   00A864                     _sscanf:
 12941                           	callstack 23
 12942   00A864  0E7D               	movlw	low (?_sscanf+4)
 12943   00A866  0100               	movlb	0	; () banked
 12944   00A868  6F81               	movwf	sscanf@ap& (0+255),b
 12945   00A86A  C079  F082         	movff	sscanf@s,sscanf@f
 12946   00A86E  C07A  F083         	movff	sscanf@s+1,sscanf@f+1
 12947   00A872                     
 12948                           ; BSR set to: 0
 12949   00A872  0E00               	movlw	0
 12950   00A874  6F86               	movwf	(sscanf@f+4)& (0+255),b
 12951   00A876  0E00               	movlw	0
 12952   00A878  6F85               	movwf	(sscanf@f+3)& (0+255),b
 12953   00A87A                     
 12954                           ; BSR set to: 0
 12955   00A87A  0E00               	movlw	0
 12956   00A87C  6F8B               	movwf	(sscanf@f+9)& (0+255),b
 12957   00A87E  0E00               	movlw	0
 12958   00A880  6F8A               	movwf	(sscanf@f+8)& (0+255),b
 12959   00A882                     
 12960                           ; BSR set to: 0
 12961   00A882  0E82               	movlw	low sscanf@f
 12962   00A884  6F6F               	movwf	vfscanf@fp& (0+255),b
 12963   00A886  C07B  F070         	movff	sscanf@fmt,vfscanf@fmt
 12964   00A88A  C07C  F071         	movff	sscanf@fmt+1,vfscanf@fmt+1
 12965   00A88E  0E81               	movlw	low sscanf@ap
 12966   00A890  6F72               	movwf	vfscanf@ap& (0+255),b
 12967   00A892  ECBD  F05D         	call	_vfscanf	;wreg free
 12968   00A896  C06F  F07F         	movff	?_vfscanf,sscanf@ret
 12969   00A89A  C070  F080         	movff	?_vfscanf+1,sscanf@ret+1
 12970   00A89E  C07F  F079         	movff	sscanf@ret,?_sscanf
 12971   00A8A2  C080  F07A         	movff	sscanf@ret+1,?_sscanf+1
 12972   00A8A6  0012               	return		;funcret
 12973   00A8A8                     __end_of_sscanf:
 12974                           	callstack 0
 12975                           
 12976 ;; *************** function _vfscanf *****************
 12977 ;; Defined at:
 12978 ;;		line 1502 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
 12981 ;;		 -> sscanf@f(12), 
 12982 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
 12983 ;;		 -> STR_9(14), STR_8(15), 
 12984 ;;  ap              1   18[BANK0 ] PTR PTR void 
 12985 ;;		 -> sscanf@ap(1), 
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;  cfmt            2   23[BANK0 ] PTR unsigned char 
 12988 ;;		 -> STR_9(14), STR_8(15), 
 12989 ;;  n               2   21[BANK0 ] int 
 12990 ;;  saved_errno     2   19[BANK0 ] int 
 12991 ;; Return value:  Size  Location     Type
 12992 ;;                  2   15[BANK0 ] int 
 12993 ;; Registers used:
 12994 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12995 ;; Tracked objects:
 12996 ;;		On entry : 0/0
 12997 ;;		On exit  : 0/0
 12998 ;;		Unchanged: 0/0
 12999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13001 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13003 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13004 ;;Total ram usage:       10 bytes
 13005 ;; Hardware stack levels used: 1
 13006 ;; Hardware stack levels required when called: 5
 13007 ;; This function calls:
 13008 ;;		_vfsfcnvrt
 13009 ;; This function is called by:
 13010 ;;		_sscanf
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           	psect	text60
 13015   00BB7A                     __ptext60:
 13016                           	callstack 0
 13017   00BB7A                     _vfscanf:
 13018                           	callstack 23
 13019   00BB7A                     
 13020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1502: int vfscanf
      +                          (FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doscan.c: 1503: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doscan.c: 1504:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doscan.c: 1505:     int n, saved_errno;;C:\Program Files\Microchip\xc8\v2.45\pic\s
      +                          ources\c99\common\doscan.c: 1507:     cfmt = (char *)fmt;
 13021   00BB7A  C070  F077         	movff	vfscanf@fmt,vfscanf@cfmt
 13022   00BB7E  C071  F078         	movff	vfscanf@fmt+1,vfscanf@cfmt+1
 13023   00BB82                     
 13024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1508:     ncnv = 
      +                          nmatch = 0;
 13025   00BB82  0E00               	movlw	0
 13026   00BB84  0100               	movlb	0	; () banked
 13027   00BB86  6FBA               	movwf	(_nmatch+1)& (0+255),b
 13028   00BB88  0E00               	movlw	0
 13029   00BB8A  6FB9               	movwf	_nmatch& (0+255),b
 13030   00BB8C  C0B9  F0BB         	movff	_nmatch,_ncnv
 13031   00BB90  C0BA  F0BC         	movff	_nmatch+1,_ncnv+1
 13032   00BB94                     
 13033                           ; BSR set to: 0
 13034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1509:  saved_errn
      +                          o = errno;
 13035   00BB94  C0BF  F073         	movff	_errno,vfscanf@saved_errno
 13036   00BB98  C0C0  F074         	movff	_errno+1,vfscanf@saved_errno+1
 13037                           
 13038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1510:     while (
      +                          *cfmt) {
 13039   00BB9C  EFEE  F05D         	goto	l10536
 13040   00BBA0                     l10526:
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1511:   errno = 0
      +                          ;
 13044   00BBA0  0E00               	movlw	0
 13045   00BBA2  6FC0               	movwf	(_errno+1)& (0+255),b
 13046   00BBA4  0E00               	movlw	0
 13047   00BBA6  6FBF               	movwf	_errno& (0+255),b
 13048   00BBA8                     
 13049                           ; BSR set to: 0
 13050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1512:         n =
      +                           vfsfcnvrt(fp, &cfmt, ap);
 13051   00BBA8  C06F  F05B         	movff	vfscanf@fp,vfsfcnvrt@fp
 13052   00BBAC  0E77               	movlw	low vfscanf@cfmt
 13053   00BBAE  6E5C               	movwf	vfsfcnvrt@fmt^0,c
 13054   00BBB0  C072  F05D         	movff	vfscanf@ap,vfsfcnvrt@ap
 13055   00BBB4  EC9C  F06E         	call	_vfsfcnvrt	;wreg free
 13056   00BBB8  C05B  F075         	movff	?_vfsfcnvrt,vfscanf@n
 13057   00BBBC  C05C  F076         	movff	?_vfsfcnvrt+1,vfscanf@n+1
 13058   00BBC0                     
 13059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1513:         if 
      +                          (n < 0) {
 13060   00BBC0  0100               	movlb	0	; () banked
 13061   00BBC2  BF76               	btfsc	(vfscanf@n+1)& (0+255),7,b
 13062   00BBC4  EFE8  F05D         	goto	u10950
 13063   00BBC8  EFE6  F05D         	goto	u10951
 13064   00BBCC                     u10951:
 13065   00BBCC  EFEA  F05D         	goto	l10534
 13066   00BBD0                     u10950:
 13067   00BBD0  EFFF  F05D         	goto	l1973
 13068   00BBD4                     l10534:
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1516:         ncn
      +                          v += n;
 13072   00BBD4  5175               	movf	vfscanf@n& (0+255),w,b
 13073   00BBD6  27BB               	addwf	_ncnv& (0+255),f,b
 13074   00BBD8  5176               	movf	(vfscanf@n+1)& (0+255),w,b
 13075   00BBDA  23BC               	addwfc	(_ncnv+1)& (0+255),f,b
 13076   00BBDC                     l10536:
 13077                           
 13078                           ; BSR set to: 0
 13079                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1510:     while (
      +                          *cfmt) {
 13080   00BBDC  0060  F1DF  FFF6   	movff	vfscanf@cfmt,tblptrl
 13081   00BBE2  0060  F1E3  FFF7   	movff	vfscanf@cfmt+1,tblptrh
 13082   00BBE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13083   00BBE8  6AF8               	clrf	tblptru,c
 13084   00BBEA                     	endif
 13085   00BBEA                     	if	0	;tblptru may be non-zero
 13086   00BBEA                     	endif
 13087   00BBEA  0008               	tblrd		*
 13088   00BBEC  50F5               	movf	tablat,w,c
 13089   00BBEE  0900               	iorlw	0
 13090   00BBF0  A4D8               	btfss	status,2,c
 13091   00BBF2  EFFD  F05D         	goto	u10961
 13092   00BBF6  EFFF  F05D         	goto	u10960
 13093   00BBFA                     u10961:
 13094   00BBFA  EFD0  F05D         	goto	l10526
 13095   00BBFE                     u10960:
 13096   00BBFE                     l1973:
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1518:  errno = sa
      +                          ved_errno;
 13100   00BBFE  C073  F0BF         	movff	vfscanf@saved_errno,_errno
 13101   00BC02  C074  F0C0         	movff	vfscanf@saved_errno+1,_errno+1
 13102   00BC06                     
 13103                           ; BSR set to: 0
 13104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1519:     if (n =
      +                          = (-1) && ncnv == 0) {
 13105   00BC06  2975               	incf	vfscanf@n& (0+255),w,b
 13106   00BC08  E106               	bnz	u10971
 13107   00BC0A  2976               	incf	(vfscanf@n+1)& (0+255),w,b
 13108   00BC0C  A4D8               	btfss	status,2,c
 13109   00BC0E  EF0B  F05E         	goto	u10971
 13110   00BC12  EF0D  F05E         	goto	u10970
 13111   00BC16                     u10971:
 13112   00BC16  EF1C  F05E         	goto	l1974
 13113   00BC1A                     u10970:
 13114   00BC1A                     
 13115                           ; BSR set to: 0
 13116   00BC1A  51BB               	movf	_ncnv& (0+255),w,b
 13117   00BC1C  11BC               	iorwf	(_ncnv+1)& (0+255),w,b
 13118   00BC1E  A4D8               	btfss	status,2,c
 13119   00BC20  EF14  F05E         	goto	u10981
 13120   00BC24  EF16  F05E         	goto	u10980
 13121   00BC28                     u10981:
 13122   00BC28  EF1C  F05E         	goto	l1974
 13123   00BC2C                     u10980:
 13124   00BC2C                     
 13125                           ; BSR set to: 0
 13126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1520:         ret
      +                          urn n;
 13127   00BC2C  C075  F06F         	movff	vfscanf@n,?_vfscanf
 13128   00BC30  C076  F070         	movff	vfscanf@n+1,?_vfscanf+1
 13129   00BC34  EF20  F05E         	goto	l1975
 13130   00BC38                     l1974:
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1523:     return 
      +                          ncnv;
 13134   00BC38  C0BB  F06F         	movff	_ncnv,?_vfscanf
 13135   00BC3C  C0BC  F070         	movff	_ncnv+1,?_vfscanf+1
 13136   00BC40                     l1975:
 13137                           
 13138                           ; BSR set to: 0
 13139   00BC40  0012               	return		;funcret
 13140   00BC42                     __end_of_vfscanf:
 13141                           	callstack 0
 13142                           
 13143 ;; *************** function _vfsfcnvrt *****************
 13144 ;; Defined at:
 13145 ;;		line 672 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;  fp              1   90[COMRAM] PTR struct _IO_FILE
 13148 ;;		 -> sscanf@f(12), 
 13149 ;;  fmt             1   91[COMRAM] PTR PTR unsigned char 
 13150 ;;		 -> vfscanf@cfmt(2), 
 13151 ;;  ap              1   92[COMRAM] PTR PTR void 
 13152 ;;		 -> sscanf@ap(1), 
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;  llu             8    3[BANK0 ] unsigned long long 
 13155 ;;  ll              8    0        long long 
 13156 ;;  f               4    0        long long 
 13157 ;;  ct              3    0        unsigned char [3]
 13158 ;;  cp              3    0        PTR unsigned char 
 13159 ;;  c               2   13[BANK0 ] int 
 13160 ;;  i               2   11[BANK0 ] int 
 13161 ;;  vp              1    2[BANK0 ] PTR void 
 13162 ;;		 -> ?_sscanf(2), ?_sprintf(2), Tm(4), Ndat(4), 
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  2   90[COMRAM] int 
 13165 ;; Registers used:
 13166 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13173 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13174 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13175 ;;      Totals:         3      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13176 ;;Total ram usage:       18 bytes
 13177 ;; Hardware stack levels used: 1
 13178 ;; Hardware stack levels required when called: 4
 13179 ;; This function calls:
 13180 ;;		_atou
 13181 ;;		_fgetc
 13182 ;;		_skipws
 13183 ;;		_strncmp
 13184 ;;		_ungetc
 13185 ;; This function is called by:
 13186 ;;		_vfscanf
 13187 ;; This function uses a non-reentrant model
 13188 ;;
 13189                           
 13190                           	psect	text61
 13191   00DD38                     __ptext61:
 13192                           	callstack 0
 13193   00DD38                     _vfsfcnvrt:
 13194                           	callstack 23
 13195   00DD38                     
 13196                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 672: static int v
      +                          fsfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sou
      +                          rces\c99\common\doscan.c: 673: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doscan.c: 674:     char *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doscan.c: 675:     int c, i;;C:\Program Files\Microchip\xc8\v2.45\pic\sourc
      +                          es\c99\common\doscan.c: 676:     long long ll;;C:\Program Files\Microchip\xc8\v2.45\pic\
      +                          sources\c99\common\doscan.c: 677:     unsigned long long llu;
 13197   00DD38  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13198   00DD3A  6ED9               	movwf	fsr2l,c
 13199   00DD3C  6ADA               	clrf	fsr2h,c
 13200   00DD3E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13201   00DD44  006F FF77 FFF7     	movff	postdec2,tblptrh
 13202   00DD4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13203   00DD4A  6AF8               	clrf	tblptru,c
 13204   00DD4C                     	endif
 13205   00DD4C                     	if	0	;tblptru may be non-zero
 13206   00DD4C                     	endif
 13207   00DD4C  0008               	tblrd		*
 13208   00DD4E  50F5               	movf	tablat,w,c
 13209   00DD50  0A25               	xorlw	37
 13210   00DD52  A4D8               	btfss	status,2,c
 13211   00DD54  EFAE  F06E         	goto	u10591
 13212   00DD58  EFB0  F06E         	goto	u10590
 13213   00DD5C                     u10591:
 13214   00DD5C  EFC1  F06F         	goto	l10374
 13215   00DD60                     u10590:
 13216   00DD60                     
 13217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 683:         ++*f
      +                          mt;
 13218   00DD60  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13219   00DD62  6ED9               	movwf	fsr2l,c
 13220   00DD64  6ADA               	clrf	fsr2h,c
 13221   00DD66  2ADE               	incf	postinc2,f,c
 13222   00DD68  0E00               	movlw	0
 13223   00DD6A  22DD               	addwfc	postdec2,f,c
 13224   00DD6C                     
 13225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 685:         asup
      +                           = width = 0;
 13226   00DD6C  0E00               	movlw	0
 13227   00DD6E  0100               	movlb	0	; () banked
 13228   00DD70  6FBE               	movwf	(_width@doscan$F2281+1)& (0+255),b
 13229   00DD72  0E00               	movlw	0
 13230   00DD74  6FBD               	movwf	_width@doscan$F2281& (0+255),b
 13231   00DD76  51BD               	movf	_width@doscan$F2281& (0+255),w,b
 13232   00DD78  11BE               	iorwf	(_width@doscan$F2281+1)& (0+255),w,b
 13233   00DD7A  A4D8               	btfss	status,2,c
 13234   00DD7C  EFC2  F06E         	goto	u10601
 13235   00DD80  EFC5  F06E         	goto	u10600
 13236   00DD84                     u10601:
 13237   00DD84  0E01               	movlw	1
 13238   00DD86  EFC6  F06E         	goto	u10610
 13239   00DD8A                     u10600:
 13240   00DD8A  0E00               	movlw	0
 13241   00DD8C                     u10610:
 13242   00DD8C  6FC9               	movwf	_asup& (0+255),b
 13243   00DD8E                     
 13244                           ; BSR set to: 0
 13245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1244:         if 
      +                          (*fmt[0] == 'u') {
 13246   00DD8E  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13247   00DD90  6ED9               	movwf	fsr2l,c
 13248   00DD92  6ADA               	clrf	fsr2h,c
 13249   00DD94  006F FF7B FFF6     	movff	postinc2,tblptrl
 13250   00DD9A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13251   00DDA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13252   00DDA0  6AF8               	clrf	tblptru,c
 13253   00DDA2                     	endif
 13254   00DDA2                     	if	0	;tblptru may be non-zero
 13255   00DDA2                     	endif
 13256   00DDA2  0008               	tblrd		*
 13257   00DDA4  50F5               	movf	tablat,w,c
 13258   00DDA6  0A75               	xorlw	117
 13259   00DDA8  A4D8               	btfss	status,2,c
 13260   00DDAA  EFD9  F06E         	goto	u10621
 13261   00DDAE  EFDB  F06E         	goto	u10620
 13262   00DDB2                     u10621:
 13263   00DDB2  EF12  F06F         	goto	l10330
 13264   00DDB6                     u10620:
 13265   00DDB6                     
 13266                           ; BSR set to: 0
 13267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1246:            
      +                           ++*fmt;
 13268   00DDB6  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13269   00DDB8  6ED9               	movwf	fsr2l,c
 13270   00DDBA  6ADA               	clrf	fsr2h,c
 13271   00DDBC  2ADE               	incf	postinc2,f,c
 13272   00DDBE  0E00               	movlw	0
 13273   00DDC0  22DD               	addwfc	postdec2,f,c
 13274   00DDC2                     
 13275                           ; BSR set to: 0
 13276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1247:            
      +                           i = atou(fp, &llu);
 13277   00DDC2  C05B  F049         	movff	vfsfcnvrt@fp,atou@fp
 13278   00DDC6  0E63               	movlw	low vfsfcnvrt@llu
 13279   00DDC8  6E4A               	movwf	atou@pll^0,c
 13280   00DDCA  EC4F  F067         	call	_atou	;wreg free
 13281   00DDCE  C049  F06B         	movff	?_atou,vfsfcnvrt@i
 13282   00DDD2  C04A  F06C         	movff	?_atou+1,vfsfcnvrt@i+1
 13283   00DDD6                     
 13284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1248:            
      +                           if (!(i < 1)) {
 13285   00DDD6  0100               	movlb	0	; () banked
 13286   00DDD8  BF6C               	btfsc	(vfsfcnvrt@i+1)& (0+255),7,b
 13287   00DDDA  EFF7  F06E         	goto	u10631
 13288   00DDDE  516C               	movf	(vfsfcnvrt@i+1)& (0+255),w,b
 13289   00DDE0  E108               	bnz	u10630
 13290   00DDE2  056B               	decf	vfsfcnvrt@i& (0+255),w,b
 13291   00DDE4  A0D8               	btfss	status,0,c
 13292   00DDE6  EFF7  F06E         	goto	u10631
 13293   00DDEA  EFF9  F06E         	goto	u10630
 13294   00DDEE                     u10631:
 13295   00DDEE  EF0C  F06F         	goto	l10326
 13296   00DDF2                     u10630:
 13297   00DDF2                     
 13298                           ; BSR set to: 0
 13299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1249:            
      +                               vp = (void *)(*(unsigned int * *)__va_arg(*(unsigned int * **)ap, (unsigned int *)0
      +                          ));
 13300   00DDF2  505D               	movf	vfsfcnvrt@ap^0,w,c
 13301   00DDF4  6ED9               	movwf	fsr2l,c
 13302   00DDF6  6ADA               	clrf	fsr2h,c
 13303   00DDF8  2ADF               	incf	indf2,f,c
 13304   00DDFA  04DF               	decf	indf2,w,c
 13305   00DDFC  6ED9               	movwf	fsr2l,c
 13306   00DDFE  6ADA               	clrf	fsr2h,c
 13307   00DE00  006F FF78  F062    	movff	postinc2,vfsfcnvrt@vp
 13308                           
 13309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1250:            
      +                               *(unsigned int *)vp = (unsigned int)llu;
 13310   00DE06  5162               	movf	vfsfcnvrt@vp& (0+255),w,b
 13311   00DE08  6ED9               	movwf	fsr2l,c
 13312   00DE0A  6ADA               	clrf	fsr2h,c
 13313   00DE0C  0060  F18F  FFDE   	movff	vfsfcnvrt@llu,postinc2
 13314   00DE12  0060  F193  FFDD   	movff	vfsfcnvrt@llu+1,postdec2
 13315   00DE18                     l10326:
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1252:            
      +                           return i;
 13319   00DE18  C06B  F05B         	movff	vfsfcnvrt@i,?_vfsfcnvrt
 13320   00DE1C  C06C  F05C         	movff	vfsfcnvrt@i+1,?_vfsfcnvrt+1
 13321   00DE20  EF88  F070         	goto	l1948
 13322   00DE24                     l10330:
 13323                           
 13324                           ; BSR set to: 0
 13325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1257:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13326   00DE24  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13327   00DE26  6ED9               	movwf	fsr2l,c
 13328   00DE28  6ADA               	clrf	fsr2h,c
 13329   00DE2A  006F FF78  F001    	movff	postinc2,strncmp@l
 13330   00DE30  006F FF74  F002    	movff	postdec2,strncmp@l+1
 13331   00DE36  0EF7               	movlw	low STR_27
 13332   00DE38  6E03               	movwf	strncmp@r^0,c
 13333   00DE3A  0EFF               	movlw	high STR_27
 13334   00DE3C  6E04               	movwf	(strncmp@r+1)^0,c
 13335   00DE3E  0E00               	movlw	0
 13336   00DE40  6E06               	movwf	(strncmp@n+1)^0,c
 13337   00DE42  0E02               	movlw	2
 13338   00DE44  6E05               	movwf	strncmp@n^0,c
 13339   00DE46  ECDD  F061         	call	_strncmp	;wreg free
 13340   00DE4A  5001               	movf	?_strncmp^0,w,c
 13341   00DE4C  1002               	iorwf	(?_strncmp+1)^0,w,c
 13342   00DE4E  A4D8               	btfss	status,2,c
 13343   00DE50  EF2C  F06F         	goto	u10641
 13344   00DE54  EF2E  F06F         	goto	u10640
 13345   00DE58                     u10641:
 13346   00DE58  EF68  F06F         	goto	l10344
 13347   00DE5C                     u10640:
 13348   00DE5C                     
 13349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1259:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 13350   00DE5C  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13351   00DE5E  6ED9               	movwf	fsr2l,c
 13352   00DE60  6ADA               	clrf	fsr2h,c
 13353   00DE62  0E02               	movlw	2
 13354   00DE64  26DE               	addwf	postinc2,f,c
 13355   00DE66  0E00               	movlw	0
 13356   00DE68  22DD               	addwfc	postdec2,f,c
 13357   00DE6A                     
 13358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1260:            
      +                           i = atou(fp, &llu);
 13359   00DE6A  C05B  F049         	movff	vfsfcnvrt@fp,atou@fp
 13360   00DE6E  0E63               	movlw	low vfsfcnvrt@llu
 13361   00DE70  6E4A               	movwf	atou@pll^0,c
 13362   00DE72  EC4F  F067         	call	_atou	;wreg free
 13363   00DE76  C049  F06B         	movff	?_atou,vfsfcnvrt@i
 13364   00DE7A  C04A  F06C         	movff	?_atou+1,vfsfcnvrt@i+1
 13365   00DE7E                     
 13366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1261:            
      +                           if (!(i < 1)) {
 13367   00DE7E  0100               	movlb	0	; () banked
 13368   00DE80  BF6C               	btfsc	(vfsfcnvrt@i+1)& (0+255),7,b
 13369   00DE82  EF4B  F06F         	goto	u10651
 13370   00DE86  516C               	movf	(vfsfcnvrt@i+1)& (0+255),w,b
 13371   00DE88  E108               	bnz	u10650
 13372   00DE8A  056B               	decf	vfsfcnvrt@i& (0+255),w,b
 13373   00DE8C  A0D8               	btfss	status,0,c
 13374   00DE8E  EF4B  F06F         	goto	u10651
 13375   00DE92  EF4D  F06F         	goto	u10650
 13376   00DE96                     u10651:
 13377   00DE96  EF0C  F06F         	goto	l10326
 13378   00DE9A                     u10650:
 13379   00DE9A                     
 13380                           ; BSR set to: 0
 13381                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1262:            
      +                               vp = (void *)(*(unsigned long * *)__va_arg(*(unsigned long * **)ap, (unsigned long 
      +                          *)0));
 13382   00DE9A  505D               	movf	vfsfcnvrt@ap^0,w,c
 13383   00DE9C  6ED9               	movwf	fsr2l,c
 13384   00DE9E  6ADA               	clrf	fsr2h,c
 13385   00DEA0  2ADF               	incf	indf2,f,c
 13386   00DEA2  04DF               	decf	indf2,w,c
 13387   00DEA4  6ED9               	movwf	fsr2l,c
 13388   00DEA6  6ADA               	clrf	fsr2h,c
 13389   00DEA8  006F FF78  F062    	movff	postinc2,vfsfcnvrt@vp
 13390                           
 13391                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1263:            
      +                               *(unsigned long *)vp = (unsigned long)llu;
 13392   00DEAE  5162               	movf	vfsfcnvrt@vp& (0+255),w,b
 13393   00DEB0  6ED9               	movwf	fsr2l,c
 13394   00DEB2  6ADA               	clrf	fsr2h,c
 13395   00DEB4  0060  F18F  FFDE   	movff	vfsfcnvrt@llu,postinc2
 13396   00DEBA  0060  F193  FFDE   	movff	vfsfcnvrt@llu+1,postinc2
 13397   00DEC0  0060  F197  FFDE   	movff	vfsfcnvrt@llu+2,postinc2
 13398   00DEC6  0060  F19B  FFDE   	movff	vfsfcnvrt@llu+3,postinc2
 13399   00DECC  EF0C  F06F         	goto	l10326
 13400   00DED0                     l10344:
 13401                           
 13402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1453:         if 
      +                          ((*fmt)[0] == '%') {
 13403   00DED0  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13404   00DED2  6ED9               	movwf	fsr2l,c
 13405   00DED4  6ADA               	clrf	fsr2h,c
 13406   00DED6  006F FF7B FFF6     	movff	postinc2,tblptrl
 13407   00DEDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 13408   00DEE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13409   00DEE2  6AF8               	clrf	tblptru,c
 13410   00DEE4                     	endif
 13411   00DEE4                     	if	0	;tblptru may be non-zero
 13412   00DEE4                     	endif
 13413   00DEE4  0008               	tblrd		*
 13414   00DEE6  50F5               	movf	tablat,w,c
 13415   00DEE8  0A25               	xorlw	37
 13416   00DEEA  A4D8               	btfss	status,2,c
 13417   00DEEC  EF7A  F06F         	goto	u10661
 13418   00DEF0  EF7C  F06F         	goto	u10660
 13419   00DEF4                     u10661:
 13420   00DEF4  EFB9  F06F         	goto	l10368
 13421   00DEF8                     u10660:
 13422   00DEF8                     
 13423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1454:    skipws(f
      +                          p);
 13424   00DEF8  C05B  F00C         	movff	vfsfcnvrt@fp,skipws@fp
 13425   00DEFC  EC13  F057         	call	_skipws	;wreg free
 13426                           
 13427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1455:    c = fget
      +                          c(fp);
 13428   00DF00  C05B  F003         	movff	vfsfcnvrt@fp,fgetc@fp
 13429   00DF04  ECA5  F05F         	call	_fgetc	;wreg free
 13430   00DF08  C003  F06D         	movff	?_fgetc,vfsfcnvrt@c
 13431   00DF0C  C004  F06E         	movff	?_fgetc+1,vfsfcnvrt@c+1
 13432   00DF10                     
 13433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1456:    if (c ==
      +                           '%') {
 13434   00DF10  0E25               	movlw	37
 13435   00DF12  0100               	movlb	0	; () banked
 13436   00DF14  196D               	xorwf	vfsfcnvrt@c& (0+255),w,b
 13437   00DF16  116E               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
 13438   00DF18  A4D8               	btfss	status,2,c
 13439   00DF1A  EF91  F06F         	goto	u10671
 13440   00DF1E  EF93  F06F         	goto	u10670
 13441   00DF22                     u10671:
 13442   00DF22  EFA1  F06F         	goto	l10360
 13443   00DF26                     u10670:
 13444   00DF26                     l10350:
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1457:     ++*fmt;
 13448   00DF26  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13449   00DF28  6ED9               	movwf	fsr2l,c
 13450   00DF2A  6ADA               	clrf	fsr2h,c
 13451   00DF2C  2ADE               	incf	postinc2,f,c
 13452   00DF2E  0E00               	movlw	0
 13453   00DF30  22DD               	addwfc	postdec2,f,c
 13454   00DF32                     
 13455                           ; BSR set to: 0
 13456                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1458:     ++nmatc
      +                          h;
 13457   00DF32  4BB9               	infsnz	_nmatch& (0+255),f,b
 13458   00DF34  2BBA               	incf	(_nmatch+1)& (0+255),f,b
 13459   00DF36                     l10354:
 13460                           
 13461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1459:     return 
      +                          0;
 13462   00DF36  0E00               	movlw	0
 13463   00DF38  6E5C               	movwf	(?_vfsfcnvrt+1)^0,c
 13464   00DF3A  0E00               	movlw	0
 13465   00DF3C  6E5B               	movwf	?_vfsfcnvrt^0,c
 13466   00DF3E  EF88  F070         	goto	l1948
 13467   00DF42                     l10360:
 13468                           
 13469                           ; BSR set to: 0
 13470   00DF42  296D               	incf	vfsfcnvrt@c& (0+255),w,b
 13471   00DF44  E108               	bnz	u10680
 13472   00DF46  296E               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
 13473   00DF48  B4D8               	btfsc	status,2,c
 13474   00DF4A  EFA9  F06F         	goto	u10681
 13475   00DF4E  EFAB  F06F         	goto	u10680
 13476   00DF52                     u10681:
 13477   00DF52  EFB3  F06F         	goto	l10364
 13478   00DF56                     u10680:
 13479   00DF56                     l10362:
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1462:     ungetc(
      +                          c, fp);
 13483   00DF56  C06D  F001         	movff	vfsfcnvrt@c,ungetc@c
 13484   00DF5A  C06E  F002         	movff	vfsfcnvrt@c+1,ungetc@c+1
 13485   00DF5E  C05B  F003         	movff	vfsfcnvrt@fp,ungetc@fp
 13486   00DF62  EC05  F05B         	call	_ungetc	;wreg free
 13487   00DF66                     l10364:
 13488                           
 13489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1464:    return (
      +                          -1) - 1;
 13490   00DF66  0EFF               	movlw	255
 13491   00DF68  6E5C               	movwf	(?_vfsfcnvrt+1)^0,c
 13492   00DF6A  0EFE               	movlw	254
 13493   00DF6C  6E5B               	movwf	?_vfsfcnvrt^0,c
 13494   00DF6E  EF88  F070         	goto	l1948
 13495   00DF72                     l10368:
 13496                           
 13497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1468:         ++*
      +                          fmt;
 13498   00DF72  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13499   00DF74  6ED9               	movwf	fsr2l,c
 13500   00DF76  6ADA               	clrf	fsr2h,c
 13501   00DF78  2ADE               	incf	postinc2,f,c
 13502   00DF7A  0E00               	movlw	0
 13503   00DF7C  22DD               	addwfc	postdec2,f,c
 13504   00DF7E  EF9B  F06F         	goto	l10354
 13505   00DF82                     l10374:
 13506                           
 13507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1473:     c = fge
      +                          tc(fp);
 13508   00DF82  C05B  F003         	movff	vfsfcnvrt@fp,fgetc@fp
 13509   00DF86  ECA5  F05F         	call	_fgetc	;wreg free
 13510   00DF8A  C003  F06D         	movff	?_fgetc,vfsfcnvrt@c
 13511   00DF8E  C004  F06E         	movff	?_fgetc+1,vfsfcnvrt@c+1
 13512   00DF92                     
 13513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1474:  if ((((*fm
      +                          t[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5)))) {
 13514   00DF92  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13515   00DF94  6ED9               	movwf	fsr2l,c
 13516   00DF96  6ADA               	clrf	fsr2h,c
 13517   00DF98  006F FF7B FFF6     	movff	postinc2,tblptrl
 13518   00DF9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13519   00DFA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13520   00DFA4  6AF8               	clrf	tblptru,c
 13521   00DFA6                     	endif
 13522   00DFA6                     	if	0	;tblptru may be non-zero
 13523   00DFA6                     	endif
 13524   00DFA6  0008               	tblrd		*
 13525   00DFA8  50F5               	movf	tablat,w,c
 13526   00DFAA  0A20               	xorlw	32
 13527   00DFAC  B4D8               	btfsc	status,2,c
 13528   00DFAE  EFDB  F06F         	goto	u10691
 13529   00DFB2  EFDD  F06F         	goto	u10690
 13530   00DFB6                     u10691:
 13531   00DFB6  EFF6  F06F         	goto	l10380
 13532   00DFBA                     u10690:
 13533   00DFBA  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13534   00DFBC  6ED9               	movwf	fsr2l,c
 13535   00DFBE  6ADA               	clrf	fsr2h,c
 13536   00DFC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 13537   00DFC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 13538   00DFCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13539   00DFCC  6AF8               	clrf	tblptru,c
 13540   00DFCE                     	endif
 13541   00DFCE                     	if	0	;tblptru may be non-zero
 13542   00DFCE                     	endif
 13543   00DFCE  0008               	tblrd		*
 13544   00DFD0  006F FFD4  F060    	movff	tablat,??_vfsfcnvrt
 13545   00DFD6  0EF7               	movlw	247
 13546   00DFD8  0100               	movlb	0	; () banked
 13547   00DFDA  2760               	addwf	??_vfsfcnvrt& (0+255),f,b
 13548   00DFDC  0E05               	movlw	5
 13549   00DFDE  6160               	cpfslt	??_vfsfcnvrt& (0+255),b
 13550   00DFE0  EFF4  F06F         	goto	u10701
 13551   00DFE4  EFF6  F06F         	goto	u10700
 13552   00DFE8                     u10701:
 13553   00DFE8  EF60  F070         	goto	l10398
 13554   00DFEC                     u10700:
 13555   00DFEC                     l10380:
 13556                           
 13557                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1477:    ++*fmt;
 13558   00DFEC  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13559   00DFEE  6ED9               	movwf	fsr2l,c
 13560   00DFF0  6ADA               	clrf	fsr2h,c
 13561   00DFF2  2ADE               	incf	postinc2,f,c
 13562   00DFF4  0E00               	movlw	0
 13563   00DFF6  22DD               	addwfc	postdec2,f,c
 13564   00DFF8                     
 13565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1478:   } while((
      +                          ((*fmt[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5))));
 13566   00DFF8  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13567   00DFFA  6ED9               	movwf	fsr2l,c
 13568   00DFFC  6ADA               	clrf	fsr2h,c
 13569   00DFFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 13570   00E004  006F FF77 FFF7     	movff	postdec2,tblptrh
 13571   00E00A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13572   00E00A  6AF8               	clrf	tblptru,c
 13573   00E00C                     	endif
 13574   00E00C                     	if	0	;tblptru may be non-zero
 13575   00E00C                     	endif
 13576   00E00C  0008               	tblrd		*
 13577   00E00E  50F5               	movf	tablat,w,c
 13578   00E010  0A20               	xorlw	32
 13579   00E012  B4D8               	btfsc	status,2,c
 13580   00E014  EF0E  F070         	goto	u10711
 13581   00E018  EF10  F070         	goto	u10710
 13582   00E01C                     u10711:
 13583   00E01C  EFF6  F06F         	goto	l10380
 13584   00E020                     u10710:
 13585   00E020  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13586   00E022  6ED9               	movwf	fsr2l,c
 13587   00E024  6ADA               	clrf	fsr2h,c
 13588   00E026  006F FF7B FFF6     	movff	postinc2,tblptrl
 13589   00E02C  006F FF77 FFF7     	movff	postdec2,tblptrh
 13590   00E032                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13591   00E032  6AF8               	clrf	tblptru,c
 13592   00E034                     	endif
 13593   00E034                     	if	0	;tblptru may be non-zero
 13594   00E034                     	endif
 13595   00E034  0008               	tblrd		*
 13596   00E036  006F FFD4  F060    	movff	tablat,??_vfsfcnvrt
 13597   00E03C  0EF7               	movlw	247
 13598   00E03E  0100               	movlb	0	; () banked
 13599   00E040  2760               	addwf	??_vfsfcnvrt& (0+255),f,b
 13600   00E042  0E04               	movlw	4
 13601   00E044  6560               	cpfsgt	??_vfsfcnvrt& (0+255),b
 13602   00E046  EF27  F070         	goto	u10721
 13603   00E04A  EF29  F070         	goto	u10720
 13604   00E04E                     u10721:
 13605   00E04E  EFF6  F06F         	goto	l10380
 13606   00E052                     u10720:
 13607   00E052  EF35  F070         	goto	l10390
 13608   00E056                     l10386:
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1481:    ++nmatch
      +                          ;
 13612   00E056  4BB9               	infsnz	_nmatch& (0+255),f,b
 13613   00E058  2BBA               	incf	(_nmatch+1)& (0+255),f,b
 13614   00E05A                     
 13615                           ; BSR set to: 0
 13616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1482:    c = fget
      +                          c(fp);
 13617   00E05A  C05B  F003         	movff	vfsfcnvrt@fp,fgetc@fp
 13618   00E05E  ECA5  F05F         	call	_fgetc	;wreg free
 13619   00E062  C003  F06D         	movff	?_fgetc,vfsfcnvrt@c
 13620   00E066  C004  F06E         	movff	?_fgetc+1,vfsfcnvrt@c+1
 13621   00E06A                     l10390:
 13622                           
 13623                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1480:   while (((
      +                          (c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
 13624   00E06A  0E20               	movlw	32
 13625   00E06C  0100               	movlb	0	; () banked
 13626   00E06E  196D               	xorwf	vfsfcnvrt@c& (0+255),w,b
 13627   00E070  116E               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
 13628   00E072  B4D8               	btfsc	status,2,c
 13629   00E074  EF3E  F070         	goto	u10731
 13630   00E078  EF40  F070         	goto	u10730
 13631   00E07C                     u10731:
 13632   00E07C  EF2B  F070         	goto	l10386
 13633   00E080                     u10730:
 13634   00E080                     
 13635                           ; BSR set to: 0
 13636   00E080  C06D  F060         	movff	vfsfcnvrt@c,??_vfsfcnvrt
 13637   00E084  0EF7               	movlw	247
 13638   00E086  2760               	addwf	??_vfsfcnvrt& (0+255),f,b
 13639   00E088  0E04               	movlw	4
 13640   00E08A  6560               	cpfsgt	??_vfsfcnvrt& (0+255),b
 13641   00E08C  EF4A  F070         	goto	u10741
 13642   00E090  EF4C  F070         	goto	u10740
 13643   00E094                     u10741:
 13644   00E094  EF2B  F070         	goto	l10386
 13645   00E098                     u10740:
 13646   00E098                     
 13647                           ; BSR set to: 0
 13648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1484:   if (c != 
      +                          (-1)) {
 13649   00E098  296D               	incf	vfsfcnvrt@c& (0+255),w,b
 13650   00E09A  E108               	bnz	u10750
 13651   00E09C  296E               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
 13652   00E09E  B4D8               	btfsc	status,2,c
 13653   00E0A0  EF54  F070         	goto	u10751
 13654   00E0A4  EF56  F070         	goto	u10750
 13655   00E0A8                     u10751:
 13656   00E0A8  EF9B  F06F         	goto	l10354
 13657   00E0AC                     u10750:
 13658   00E0AC                     
 13659                           ; BSR set to: 0
 13660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1485:    ungetc(c
      +                          , fp);
 13661   00E0AC  C06D  F001         	movff	vfsfcnvrt@c,ungetc@c
 13662   00E0B0  C06E  F002         	movff	vfsfcnvrt@c+1,ungetc@c+1
 13663   00E0B4  C05B  F003         	movff	vfsfcnvrt@fp,ungetc@fp
 13664   00E0B8  EC05  F05B         	call	_ungetc	;wreg free
 13665   00E0BC  EF9B  F06F         	goto	l10354
 13666   00E0C0                     l10398:
 13667                           
 13668                           ; BSR set to: 0
 13669   00E0C0  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13670   00E0C2  6ED9               	movwf	fsr2l,c
 13671   00E0C4  6ADA               	clrf	fsr2h,c
 13672   00E0C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 13673   00E0CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 13674   00E0D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13675   00E0D2  6AF8               	clrf	tblptru,c
 13676   00E0D4                     	endif
 13677   00E0D4                     	if	0	;tblptru may be non-zero
 13678   00E0D4                     	endif
 13679   00E0D4  0008               	tblrd		*
 13680   00E0D6  50F5               	movf	tablat,w,c
 13681   00E0D8  6F60               	movwf	??_vfsfcnvrt& (0+255),b
 13682   00E0DA  6B61               	clrf	(??_vfsfcnvrt+1)& (0+255),b
 13683   00E0DC  516D               	movf	vfsfcnvrt@c& (0+255),w,b
 13684   00E0DE  1960               	xorwf	??_vfsfcnvrt& (0+255),w,b
 13685   00E0E0  E107               	bnz	u10761
 13686   00E0E2  516E               	movf	(vfsfcnvrt@c+1)& (0+255),w,b
 13687   00E0E4  1961               	xorwf	(??_vfsfcnvrt+1)& (0+255),w,b
 13688   00E0E6  A4D8               	btfss	status,2,c
 13689   00E0E8  EF78  F070         	goto	u10761
 13690   00E0EC  EF7A  F070         	goto	u10760
 13691   00E0F0                     u10761:
 13692   00E0F0  EF7C  F070         	goto	l10404
 13693   00E0F4                     u10760:
 13694   00E0F4  EF93  F06F         	goto	l10350
 13695   00E0F8                     l10404:
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1492:   if (c == 
      +                          (-1)) {
 13699   00E0F8  296D               	incf	vfsfcnvrt@c& (0+255),w,b
 13700   00E0FA  E106               	bnz	u10771
 13701   00E0FC  296E               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
 13702   00E0FE  A4D8               	btfss	status,2,c
 13703   00E100  EF84  F070         	goto	u10771
 13704   00E104  EF86  F070         	goto	u10770
 13705   00E108                     u10771:
 13706   00E108  EFAB  F06F         	goto	l10362
 13707   00E10C                     u10770:
 13708   00E10C                     
 13709                           ; BSR set to: 0
 13710                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1493:    return (
      +                          -1);
 13711   00E10C  685B               	setf	?_vfsfcnvrt^0,c
 13712   00E10E  685C               	setf	(?_vfsfcnvrt+1)^0,c
 13713   00E110                     l1948:
 13714   00E110  0012               	return		;funcret
 13715   00E112                     __end_of_vfsfcnvrt:
 13716                           	callstack 0
 13717                           
 13718 ;; *************** function _strncmp *****************
 13719 ;; Defined at:
 13720 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strncmp.c"
 13721 ;; Parameters:    Size  Location     Type
 13722 ;;  l               2    0[COMRAM] PTR const unsigned char 
 13723 ;;		 -> main@userInput(20), STR_9(14), STR_8(15), 
 13724 ;;  r               2    2[COMRAM] PTR const unsigned char 
 13725 ;;		 -> STR_29(3), STR_18(9), STR_17(9), STR_16(8), 
 13726 ;;  n               2    4[COMRAM] unsigned int 
 13727 ;; Auto vars:     Size  Location     Type
 13728 ;;		None
 13729 ;; Return value:  Size  Location     Type
 13730 ;;                  2    0[COMRAM] int 
 13731 ;; Registers used:
 13732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13733 ;; Tracked objects:
 13734 ;;		On entry : 0/0
 13735 ;;		On exit  : 0/0
 13736 ;;		Unchanged: 0/0
 13737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13738 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13741 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13742 ;;Total ram usage:        7 bytes
 13743 ;; Hardware stack levels used: 1
 13744 ;; This function calls:
 13745 ;;		Nothing
 13746 ;; This function is called by:
 13747 ;;		_main
 13748 ;;		_vfsfcnvrt
 13749 ;; This function uses a non-reentrant model
 13750 ;;
 13751                           
 13752                           	psect	text62
 13753   00C3BA                     __ptext62:
 13754                           	callstack 0
 13755   00C3BA                     _strncmp:
 13756                           	callstack 30
 13757   00C3BA  0605               	decf	strncmp@n^0,f,c
 13758   00C3BC  A0D8               	btfss	status,0,c
 13759   00C3BE  0606               	decf	(strncmp@n+1)^0,f,c
 13760   00C3C0  2805               	incf	strncmp@n^0,w,c
 13761   00C3C2  E106               	bnz	u10311
 13762   00C3C4  2806               	incf	(strncmp@n+1)^0,w,c
 13763   00C3C6  A4D8               	btfss	status,2,c
 13764   00C3C8  EFE8  F061         	goto	u10311
 13765   00C3CC  EFEA  F061         	goto	u10310
 13766   00C3D0                     u10311:
 13767   00C3D0  EFF7  F061         	goto	l10072
 13768   00C3D4                     u10310:
 13769   00C3D4  0E00               	movlw	0
 13770   00C3D6  6E02               	movwf	(?_strncmp+1)^0,c
 13771   00C3D8  0E00               	movlw	0
 13772   00C3DA  6E01               	movwf	?_strncmp^0,c
 13773   00C3DC  EF7A  F062         	goto	l2079
 13774   00C3E0                     l10070:
 13775   00C3E0  4A01               	infsnz	strncmp@l^0,f,c
 13776   00C3E2  2A02               	incf	(strncmp@l+1)^0,f,c
 13777   00C3E4  4A03               	infsnz	strncmp@r^0,f,c
 13778   00C3E6  2A04               	incf	(strncmp@r+1)^0,f,c
 13779   00C3E8  0605               	decf	strncmp@n^0,f,c
 13780   00C3EA  A0D8               	btfss	status,0,c
 13781   00C3EC  0606               	decf	(strncmp@n+1)^0,f,c
 13782   00C3EE                     l10072:
 13783   00C3EE  0060  F007  FFF6   	movff	strncmp@l,tblptrl
 13784   00C3F4  0060  F00B  FFF7   	movff	strncmp@l+1,tblptrh
 13785   00C3FA  0E00               	movlw	low (__mediumconst shr (0+16))
 13786   00C3FC  6EF8               	movwf	tblptru,c
 13787   00C3FE  0E0F               	movlw	(high __ramtop+-1)
 13788   00C400  64F7               	cpfsgt	tblptrh,c
 13789   00C402  D003               	bra	u10327
 13790   00C404  0008               	tblrd		*
 13791   00C406  50F5               	movf	tablat,w,c
 13792   00C408  D007               	bra	u10320
 13793   00C40A                     u10327:
 13794   00C40A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13795   00C410  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13796   00C416  50EF               	movf	indf0,w,c
 13797   00C418                     u10320:
 13798   00C418  0900               	iorlw	0
 13799   00C41A  B4D8               	btfsc	status,2,c
 13800   00C41C  EF12  F062         	goto	u10331
 13801   00C420  EF14  F062         	goto	u10330
 13802   00C424                     u10331:
 13803   00C424  EF56  F062         	goto	l10080
 13804   00C428                     u10330:
 13805   00C428  0060  F00F  FFF6   	movff	strncmp@r,tblptrl
 13806   00C42E  0060  F013  FFF7   	movff	strncmp@r+1,tblptrh
 13807   00C434                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13808   00C434  6AF8               	clrf	tblptru,c
 13809   00C436                     	endif
 13810   00C436                     	if	0	;tblptru may be non-zero
 13811   00C436                     	endif
 13812   00C436  0008               	tblrd		*
 13813   00C438  50F5               	movf	tablat,w,c
 13814   00C43A  0900               	iorlw	0
 13815   00C43C  B4D8               	btfsc	status,2,c
 13816   00C43E  EF23  F062         	goto	u10341
 13817   00C442  EF25  F062         	goto	u10340
 13818   00C446                     u10341:
 13819   00C446  EF56  F062         	goto	l10080
 13820   00C44A                     u10340:
 13821   00C44A  5005               	movf	strncmp@n^0,w,c
 13822   00C44C  1006               	iorwf	(strncmp@n+1)^0,w,c
 13823   00C44E  B4D8               	btfsc	status,2,c
 13824   00C450  EF2C  F062         	goto	u10351
 13825   00C454  EF2E  F062         	goto	u10350
 13826   00C458                     u10351:
 13827   00C458  EF56  F062         	goto	l10080
 13828   00C45C                     u10350:
 13829   00C45C  0060  F00F  FFF6   	movff	strncmp@r,tblptrl
 13830   00C462  0060  F013  FFF7   	movff	strncmp@r+1,tblptrh
 13831   00C468                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13832   00C468  6AF8               	clrf	tblptru,c
 13833   00C46A                     	endif
 13834   00C46A                     	if	0	;tblptru may be non-zero
 13835   00C46A                     	endif
 13836   00C46A  0008               	tblrd		*
 13837   00C46C  006F FFD4  F007    	movff	tablat,??_strncmp
 13838   00C472  0060  F007  FFF6   	movff	strncmp@l,tblptrl
 13839   00C478  0060  F00B  FFF7   	movff	strncmp@l+1,tblptrh
 13840   00C47E  0E00               	movlw	low (__mediumconst shr (0+16))
 13841   00C480  6EF8               	movwf	tblptru,c
 13842   00C482  0E0F               	movlw	(high __ramtop+-1)
 13843   00C484  64F7               	cpfsgt	tblptrh,c
 13844   00C486  D003               	bra	u10367
 13845   00C488  0008               	tblrd		*
 13846   00C48A  50F5               	movf	tablat,w,c
 13847   00C48C  D007               	bra	u10365
 13848   00C48E                     u10367:
 13849   00C48E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13850   00C494  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13851   00C49A  50EF               	movf	indf0,w,c
 13852   00C49C                     u10365:
 13853   00C49C  1807               	xorwf	??_strncmp^0,w,c
 13854   00C49E  B4D8               	btfsc	status,2,c
 13855   00C4A0  EF54  F062         	goto	u10361
 13856   00C4A4  EF56  F062         	goto	u10360
 13857   00C4A8                     u10361:
 13858   00C4A8  EFF0  F061         	goto	l10070
 13859   00C4AC                     u10360:
 13860   00C4AC                     l10080:
 13861   00C4AC  0060  F007  FFF6   	movff	strncmp@l,tblptrl
 13862   00C4B2  0060  F00B  FFF7   	movff	strncmp@l+1,tblptrh
 13863   00C4B8  0E00               	movlw	low (__mediumconst shr (0+16))
 13864   00C4BA  6EF8               	movwf	tblptru,c
 13865   00C4BC  0E0F               	movlw	(high __ramtop+-1)
 13866   00C4BE  64F7               	cpfsgt	tblptrh,c
 13867   00C4C0  D003               	bra	u10377
 13868   00C4C2  0008               	tblrd		*
 13869   00C4C4  50F5               	movf	tablat,w,c
 13870   00C4C6  D007               	bra	u10370
 13871   00C4C8                     u10377:
 13872   00C4C8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13873   00C4CE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13874   00C4D4  50EF               	movf	indf0,w,c
 13875   00C4D6                     u10370:
 13876   00C4D6  6E07               	movwf	??_strncmp^0,c
 13877   00C4D8  0060  F00F  FFF6   	movff	strncmp@r,tblptrl
 13878   00C4DE  0060  F013  FFF7   	movff	strncmp@r+1,tblptrh
 13879   00C4E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13880   00C4E4  6AF8               	clrf	tblptru,c
 13881   00C4E6                     	endif
 13882   00C4E6                     	if	0	;tblptru may be non-zero
 13883   00C4E6                     	endif
 13884   00C4E6  0008               	tblrd		*
 13885   00C4E8  50F5               	movf	tablat,w,c
 13886   00C4EA  5C07               	subwf	??_strncmp^0,w,c
 13887   00C4EC  6E01               	movwf	?_strncmp^0,c
 13888   00C4EE  6A02               	clrf	(?_strncmp+1)^0,c
 13889   00C4F0  A0D8               	btfss	status,0,c
 13890   00C4F2  0602               	decf	(?_strncmp+1)^0,f,c
 13891   00C4F4                     l2079:
 13892   00C4F4  0012               	return		;funcret
 13893   00C4F6                     __end_of_strncmp:
 13894                           	callstack 0
 13895                           
 13896 ;; *************** function _atou *****************
 13897 ;; Defined at:
 13898 ;;		line 482 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;  fp              1   72[COMRAM] PTR struct _IO_FILE
 13901 ;;		 -> sscanf@f(12), 
 13902 ;;  pll             1   73[COMRAM] PTR unsigned long long 
 13903 ;;		 -> vfsfcnvrt@llu(8), 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;  c               2   88[COMRAM] int 
 13906 ;;  i               2   86[COMRAM] int 
 13907 ;;  w               2   84[COMRAM] int 
 13908 ;;  ep              2   82[COMRAM] PTR unsigned char 
 13909 ;;		 -> dbuf@doscan$F2284(32), 
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  2   72[COMRAM] int 
 13912 ;; Registers used:
 13913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13920 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13921 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13922 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13923 ;;Total ram usage:       18 bytes
 13924 ;; Hardware stack levels used: 1
 13925 ;; Hardware stack levels required when called: 3
 13926 ;; This function calls:
 13927 ;;		___strtoxll
 13928 ;;		_fgetc
 13929 ;;		_skipws
 13930 ;;		_ungetc
 13931 ;; This function is called by:
 13932 ;;		_vfsfcnvrt
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           	psect	text63
 13937   00CE9E                     __ptext63:
 13938                           	callstack 0
 13939   00CE9E                     _atou:
 13940                           	callstack 23
 13941   00CE9E                     
 13942                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 482: static int a
      +                          tou(FILE *fp, unsigned long long *pll);C:\Program Files\Microchip\xc8\v2.45\pic\sources\
      +                          c99\common\doscan.c: 483: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\
      +                          doscan.c: 484:     char *ep;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doscan.c: 485:     int c, i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doscan.c: 488:     skipws(fp);
 13943   00CE9E  C049  F00C         	movff	atou@fp,skipws@fp
 13944   00CEA2  EC13  F057         	call	_skipws	;wreg free
 13945   00CEA6                     
 13946                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 491:     w = widt
      +                          h ? width : sizeof(dbuf) - 1;
 13947   00CEA6  0100               	movlb	0	; () banked
 13948   00CEA8  51BD               	movf	_width@doscan$F2281& (0+255),w,b
 13949   00CEAA  11BE               	iorwf	(_width@doscan$F2281+1)& (0+255),w,b
 13950   00CEAC  A4D8               	btfss	status,2,c
 13951   00CEAE  EF5B  F067         	goto	u10431
 13952   00CEB2  EF5D  F067         	goto	u10430
 13953   00CEB6                     u10431:
 13954   00CEB6  EF63  F067         	goto	l1922
 13955   00CEBA                     u10430:
 13956   00CEBA                     
 13957                           ; BSR set to: 0
 13958   00CEBA  0E00               	movlw	0
 13959   00CEBC  6E56               	movwf	(atou@w+1)^0,c
 13960   00CEBE  0E1F               	movlw	31
 13961   00CEC0  6E55               	movwf	atou@w^0,c
 13962   00CEC2  EF67  F067         	goto	l10224
 13963   00CEC6                     l1922:
 13964                           
 13965                           ; BSR set to: 0
 13966   00CEC6  C0BD  F055         	movff	_width@doscan$F2281,atou@w
 13967   00CECA  C0BE  F056         	movff	_width@doscan$F2281+1,atou@w+1
 13968   00CECE                     l10224:
 13969                           
 13970                           ; BSR set to: 0
 13971                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 492:     i = 0;
 13972   00CECE  0E00               	movlw	0
 13973   00CED0  6E58               	movwf	(atou@i+1)^0,c
 13974   00CED2  0E00               	movlw	0
 13975   00CED4  6E57               	movwf	atou@i^0,c
 13976                           
 13977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 493:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
 13978   00CED6  EFE5  F067         	goto	l10258
 13979   00CEDA                     l10226:
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 494:         c = 
      +                          fgetc(fp);
 13983   00CEDA  C049  F003         	movff	atou@fp,fgetc@fp
 13984   00CEDE  ECA5  F05F         	call	_fgetc	;wreg free
 13985   00CEE2  C003  F059         	movff	?_fgetc,atou@c
 13986   00CEE6  C004  F05A         	movff	?_fgetc+1,atou@c+1
 13987   00CEEA                     
 13988                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 495:         if (
      +                          c == (-1) && (width || i==0)) {
 13989   00CEEA  2859               	incf	atou@c^0,w,c
 13990   00CEEC  E106               	bnz	u10441
 13991   00CEEE  285A               	incf	(atou@c+1)^0,w,c
 13992   00CEF0  A4D8               	btfss	status,2,c
 13993   00CEF2  EF7D  F067         	goto	u10441
 13994   00CEF6  EF7F  F067         	goto	u10440
 13995   00CEFA                     u10441:
 13996   00CEFA  EF98  F067         	goto	l10234
 13997   00CEFE                     u10440:
 13998   00CEFE  0100               	movlb	0	; () banked
 13999   00CF00  51BD               	movf	_width@doscan$F2281& (0+255),w,b
 14000   00CF02  11BE               	iorwf	(_width@doscan$F2281+1)& (0+255),w,b
 14001   00CF04  A4D8               	btfss	status,2,c
 14002   00CF06  EF87  F067         	goto	u10451
 14003   00CF0A  EF89  F067         	goto	u10450
 14004   00CF0E                     u10451:
 14005   00CF0E  EF92  F067         	goto	l1929
 14006   00CF12                     u10450:
 14007   00CF12                     
 14008                           ; BSR set to: 0
 14009   00CF12  5057               	movf	atou@i^0,w,c
 14010   00CF14  1058               	iorwf	(atou@i+1)^0,w,c
 14011   00CF16  A4D8               	btfss	status,2,c
 14012   00CF18  EF90  F067         	goto	u10461
 14013   00CF1C  EF92  F067         	goto	u10460
 14014   00CF20                     u10461:
 14015   00CF20  EF98  F067         	goto	l10234
 14016   00CF24                     u10460:
 14017   00CF24                     l1929:
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 496:             
      +                          return c;
 14021   00CF24  C059  F049         	movff	atou@c,?_atou
 14022   00CF28  C05A  F04A         	movff	atou@c+1,?_atou+1
 14023   00CF2C  EF64  F068         	goto	l1930
 14024   00CF30                     l10234:
 14025                           
 14026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 498:         if (
      +                          !i && ((c == '+') || (c == '-'))) {
 14027   00CF30  5057               	movf	atou@i^0,w,c
 14028   00CF32  1058               	iorwf	(atou@i+1)^0,w,c
 14029   00CF34  A4D8               	btfss	status,2,c
 14030   00CF36  EF9F  F067         	goto	u10471
 14031   00CF3A  EFA1  F067         	goto	u10470
 14032   00CF3E                     u10471:
 14033   00CF3E  EFC5  F067         	goto	l10246
 14034   00CF42                     u10470:
 14035   00CF42  0E2B               	movlw	43
 14036   00CF44  1859               	xorwf	atou@c^0,w,c
 14037   00CF46  105A               	iorwf	(atou@c+1)^0,w,c
 14038   00CF48  B4D8               	btfsc	status,2,c
 14039   00CF4A  EFA9  F067         	goto	u10481
 14040   00CF4E  EFAB  F067         	goto	u10480
 14041   00CF52                     u10481:
 14042   00CF52  EFB5  F067         	goto	l10240
 14043   00CF56                     u10480:
 14044   00CF56  0E2D               	movlw	45
 14045   00CF58  1859               	xorwf	atou@c^0,w,c
 14046   00CF5A  105A               	iorwf	(atou@c+1)^0,w,c
 14047   00CF5C  A4D8               	btfss	status,2,c
 14048   00CF5E  EFB3  F067         	goto	u10491
 14049   00CF62  EFB5  F067         	goto	u10490
 14050   00CF66                     u10491:
 14051   00CF66  EFC5  F067         	goto	l10246
 14052   00CF6A                     u10490:
 14053   00CF6A                     l10240:
 14054                           
 14055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 499:             
      +                          dbuf[i] = (char)c;
 14056   00CF6A  0E74               	movlw	low _dbuf@doscan$F2284
 14057   00CF6C  2457               	addwf	atou@i^0,w,c
 14058   00CF6E  6ED9               	movwf	fsr2l,c
 14059   00CF70  0E03               	movlw	high _dbuf@doscan$F2284
 14060   00CF72  2058               	addwfc	(atou@i+1)^0,w,c
 14061   00CF74  6EDA               	movwf	fsr2h,c
 14062   00CF76  0060  F167  FFDF   	movff	atou@c,indf2
 14063   00CF7C                     
 14064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 500:             
      +                          ++i;
 14065   00CF7C  4A57               	infsnz	atou@i^0,f,c
 14066   00CF7E  2A58               	incf	(atou@i+1)^0,f,c
 14067   00CF80                     
 14068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 501:             
      +                          ++nmatch;
 14069   00CF80  0100               	movlb	0	; () banked
 14070   00CF82  4BB9               	infsnz	_nmatch& (0+255),f,b
 14071   00CF84  2BBA               	incf	(_nmatch+1)& (0+255),f,b
 14072                           
 14073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 502:             
      +                          continue;
 14074   00CF86  EFE5  F067         	goto	l10258
 14075   00CF8A                     l10246:
 14076                           
 14077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 504:         if (
      +                          !(((unsigned char)((c)-'0')) < 10)) {
 14078   00CF8A  C059  F04B         	movff	atou@c,??_atou
 14079   00CF8E  0ED0               	movlw	208
 14080   00CF90  264B               	addwf	??_atou^0,f,c
 14081   00CF92  0E09               	movlw	9
 14082   00CF94  644B               	cpfsgt	??_atou^0,c
 14083   00CF96  EFCF  F067         	goto	u10501
 14084   00CF9A  EFD1  F067         	goto	u10500
 14085   00CF9E                     u10501:
 14086   00CF9E  EFB5  F067         	goto	l10240
 14087   00CFA2                     u10500:
 14088   00CFA2                     
 14089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 505:    if (c != 
      +                          (-1)) {
 14090   00CFA2  2859               	incf	atou@c^0,w,c
 14091   00CFA4  E108               	bnz	u10510
 14092   00CFA6  285A               	incf	(atou@c+1)^0,w,c
 14093   00CFA8  B4D8               	btfsc	status,2,c
 14094   00CFAA  EFD9  F067         	goto	u10511
 14095   00CFAE  EFDB  F067         	goto	u10510
 14096   00CFB2                     u10511:
 14097   00CFB2  EFFF  F067         	goto	l10262
 14098   00CFB6                     u10510:
 14099   00CFB6                     
 14100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 506:     ungetc(c
      +                          , fp);
 14101   00CFB6  C059  F001         	movff	atou@c,ungetc@c
 14102   00CFBA  C05A  F002         	movff	atou@c+1,ungetc@c+1
 14103   00CFBE  C049  F003         	movff	atou@fp,ungetc@fp
 14104   00CFC2  EC05  F05B         	call	_ungetc	;wreg free
 14105   00CFC6  EFFF  F067         	goto	l10262
 14106   00CFCA                     l10258:
 14107                           
 14108                           ; BSR set to: 0
 14109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 493:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
 14110   00CFCA  5055               	movf	atou@w^0,w,c
 14111   00CFCC  5C57               	subwf	atou@i^0,w,c
 14112   00CFCE  5058               	movf	(atou@i+1)^0,w,c
 14113   00CFD0  0A80               	xorlw	128
 14114   00CFD2  6E4B               	movwf	??_atou^0,c
 14115   00CFD4  5056               	movf	(atou@w+1)^0,w,c
 14116   00CFD6  0A80               	xorlw	128
 14117   00CFD8  584B               	subwfb	??_atou^0,w,c
 14118   00CFDA  B0D8               	btfsc	status,0,c
 14119   00CFDC  EFF2  F067         	goto	u10521
 14120   00CFE0  EFF4  F067         	goto	u10520
 14121   00CFE4                     u10521:
 14122   00CFE4  EFFF  F067         	goto	l10262
 14123   00CFE8                     u10520:
 14124   00CFE8                     
 14125                           ; BSR set to: 0
 14126   00CFE8  5058               	movf	(atou@i+1)^0,w,c
 14127   00CFEA  E109               	bnz	u10530
 14128   00CFEC  0E1F               	movlw	31
 14129   00CFEE  5C57               	subwf	atou@i^0,w,c
 14130   00CFF0  A0D8               	btfss	status,0,c
 14131   00CFF2  EFFD  F067         	goto	u10531
 14132   00CFF6  EFFF  F067         	goto	u10530
 14133   00CFFA                     u10531:
 14134   00CFFA  EF6D  F067         	goto	l10226
 14135   00CFFE                     u10530:
 14136   00CFFE                     l10262:
 14137                           
 14138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 514:     dbuf[i] 
      +                          = '\0';
 14139   00CFFE  0E74               	movlw	low _dbuf@doscan$F2284
 14140   00D000  2457               	addwf	atou@i^0,w,c
 14141   00D002  6ED9               	movwf	fsr2l,c
 14142   00D004  0E03               	movlw	high _dbuf@doscan$F2284
 14143   00D006  2058               	addwfc	(atou@i+1)^0,w,c
 14144   00D008  6EDA               	movwf	fsr2h,c
 14145   00D00A  6ADF               	clrf	indf2,c
 14146   00D00C                     
 14147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 518:     *pll = _
      +                          _strtoxll(&dbuf[0],&ep,10,0);
 14148   00D00C  0E74               	movlw	low _dbuf@doscan$F2284
 14149   00D00E  6E19               	movwf	___strtoxll@s^0,c
 14150   00D010  0E03               	movlw	high _dbuf@doscan$F2284
 14151   00D012  6E1A               	movwf	(___strtoxll@s+1)^0,c
 14152   00D014  0E53               	movlw	low atou@ep
 14153   00D016  6E1B               	movwf	___strtoxll@endptr^0,c
 14154   00D018  0E00               	movlw	0
 14155   00D01A  6E1D               	movwf	(___strtoxll@base+1)^0,c
 14156   00D01C  0E0A               	movlw	10
 14157   00D01E  6E1C               	movwf	___strtoxll@base^0,c
 14158   00D020  0E00               	movlw	0
 14159   00D022  6E1E               	movwf	___strtoxll@is_signed^0,c
 14160   00D024  EC38  F077         	call	___strtoxll	;wreg free
 14161   00D028  C019  F04B         	movff	?___strtoxll,??_atou
 14162   00D02C  C01A  F04C         	movff	?___strtoxll+1,??_atou+1
 14163   00D030  C01B  F04D         	movff	?___strtoxll+2,??_atou+2
 14164   00D034  C01C  F04E         	movff	?___strtoxll+3,??_atou+3
 14165   00D038  C01D  F04F         	movff	?___strtoxll+4,??_atou+4
 14166   00D03C  C01E  F050         	movff	?___strtoxll+5,??_atou+5
 14167   00D040  C01F  F051         	movff	?___strtoxll+6,??_atou+6
 14168   00D044  C020  F052         	movff	?___strtoxll+7,??_atou+7
 14169   00D048  504A               	movf	atou@pll^0,w,c
 14170   00D04A  6ED9               	movwf	fsr2l,c
 14171   00D04C  6ADA               	clrf	fsr2h,c
 14172   00D04E  0060  F12F  FFDE   	movff	??_atou,postinc2
 14173   00D054  0060  F133  FFDE   	movff	??_atou+1,postinc2
 14174   00D05A  0060  F137  FFDE   	movff	??_atou+2,postinc2
 14175   00D060  0060  F13B  FFDE   	movff	??_atou+3,postinc2
 14176   00D066  0060  F13F  FFDE   	movff	??_atou+4,postinc2
 14177   00D06C  0060  F143  FFDE   	movff	??_atou+5,postinc2
 14178   00D072  0060  F147  FFDE   	movff	??_atou+6,postinc2
 14179   00D078  0060  F14B  FFDE   	movff	??_atou+7,postinc2
 14180   00D07E                     
 14181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 523:     return (
      +                          errno || !i) ? (-1) - 1 : !asup;
 14182   00D07E  0100               	movlb	0	; () banked
 14183   00D080  51BF               	movf	_errno& (0+255),w,b
 14184   00D082  11C0               	iorwf	(_errno+1)& (0+255),w,b
 14185   00D084  A4D8               	btfss	status,2,c
 14186   00D086  EF47  F068         	goto	u10541
 14187   00D08A  EF49  F068         	goto	u10540
 14188   00D08E                     u10541:
 14189   00D08E  EF60  F068         	goto	l10272
 14190   00D092                     u10540:
 14191   00D092                     
 14192                           ; BSR set to: 0
 14193   00D092  5057               	movf	atou@i^0,w,c
 14194   00D094  1058               	iorwf	(atou@i+1)^0,w,c
 14195   00D096  B4D8               	btfsc	status,2,c
 14196   00D098  EF50  F068         	goto	u10551
 14197   00D09C  EF52  F068         	goto	u10550
 14198   00D0A0                     u10551:
 14199   00D0A0  EF60  F068         	goto	l10272
 14200   00D0A4                     u10550:
 14201   00D0A4                     
 14202                           ; BSR set to: 0
 14203   00D0A4  51C9               	movf	_asup& (0+255),w,b
 14204   00D0A6  B4D8               	btfsc	status,2,c
 14205   00D0A8  EF58  F068         	goto	u10561
 14206   00D0AC  EF5B  F068         	goto	u10560
 14207   00D0B0                     u10561:
 14208   00D0B0  0E01               	movlw	1
 14209   00D0B2  EF5C  F068         	goto	u10570
 14210   00D0B6                     u10560:
 14211   00D0B6  0E00               	movlw	0
 14212   00D0B8                     u10570:
 14213   00D0B8  6E49               	movwf	?_atou^0,c
 14214   00D0BA  6A4A               	clrf	(?_atou+1)^0,c
 14215   00D0BC  EF64  F068         	goto	l1930
 14216   00D0C0                     l10272:
 14217                           
 14218                           ; BSR set to: 0
 14219   00D0C0  0EFF               	movlw	255
 14220   00D0C2  6E4A               	movwf	(?_atou+1)^0,c
 14221   00D0C4  0EFE               	movlw	254
 14222   00D0C6  6E49               	movwf	?_atou^0,c
 14223   00D0C8                     l1930:
 14224                           
 14225                           ; BSR set to: 0
 14226   00D0C8  0012               	return		;funcret
 14227   00D0CA                     __end_of_atou:
 14228                           	callstack 0
 14229                           
 14230 ;; *************** function _skipws *****************
 14231 ;; Defined at:
 14232 ;;		line 74 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
 14235 ;;		 -> sscanf@f(12), 
 14236 ;; Auto vars:     Size  Location     Type
 14237 ;;  c               2   13[COMRAM] int 
 14238 ;; Return value:  Size  Location     Type
 14239 ;;                  1    wreg      void 
 14240 ;; Registers used:
 14241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14242 ;; Tracked objects:
 14243 ;;		On entry : 0/0
 14244 ;;		On exit  : 0/0
 14245 ;;		Unchanged: 0/0
 14246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14247 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14251 ;;Total ram usage:        4 bytes
 14252 ;; Hardware stack levels used: 1
 14253 ;; Hardware stack levels required when called: 2
 14254 ;; This function calls:
 14255 ;;		_fgetc
 14256 ;;		_ungetc
 14257 ;; This function is called by:
 14258 ;;		_atou
 14259 ;;		_vfsfcnvrt
 14260 ;; This function uses a non-reentrant model
 14261 ;;
 14262                           
 14263                           	psect	text64
 14264   00AE26                     __ptext64:
 14265                           	callstack 0
 14266   00AE26                     _skipws:
 14267                           	callstack 24
 14268   00AE26                     
 14269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 74: static void s
      +                          kipws(FILE *fp);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 75
      +                          : {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 76:     int c;
      +                          ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
 14270   00AE26  EF35  F057         	goto	l9912
 14271   00AE2A                     l9906:
 14272                           
 14273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 79:         if (!
      +                          (((c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
 14274   00AE2A  0E20               	movlw	32
 14275   00AE2C  180E               	xorwf	skipws@c^0,w,c
 14276   00AE2E  100F               	iorwf	(skipws@c+1)^0,w,c
 14277   00AE30  B4D8               	btfsc	status,2,c
 14278   00AE32  EF1D  F057         	goto	u9901
 14279   00AE36  EF1F  F057         	goto	u9900
 14280   00AE3A                     u9901:
 14281   00AE3A  EF35  F057         	goto	l9912
 14282   00AE3E                     u9900:
 14283   00AE3E  C00E  F00D         	movff	skipws@c,??_skipws
 14284   00AE42  0EF7               	movlw	247
 14285   00AE44  260D               	addwf	??_skipws^0,f,c
 14286   00AE46  0E04               	movlw	4
 14287   00AE48  640D               	cpfsgt	??_skipws^0,c
 14288   00AE4A  EF29  F057         	goto	u9911
 14289   00AE4E  EF2B  F057         	goto	u9910
 14290   00AE52                     u9911:
 14291   00AE52  EF35  F057         	goto	l9912
 14292   00AE56                     u9910:
 14293   00AE56                     
 14294                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 80:             u
      +                          ngetc(c, fp);
 14295   00AE56  C00E  F001         	movff	skipws@c,ungetc@c
 14296   00AE5A  C00F  F002         	movff	skipws@c+1,ungetc@c+1
 14297   00AE5E  C00C  F003         	movff	skipws@fp,ungetc@fp
 14298   00AE62  EC05  F05B         	call	_ungetc	;wreg free
 14299                           
 14300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 81:             b
      +                          reak;
 14301   00AE66  EF47  F057         	goto	l1918
 14302   00AE6A                     l9912:
 14303                           
 14304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
 14305   00AE6A  C00C  F003         	movff	skipws@fp,fgetc@fp
 14306   00AE6E  ECA5  F05F         	call	_fgetc	;wreg free
 14307   00AE72  C003  F00E         	movff	?_fgetc,skipws@c
 14308   00AE76  C004  F00F         	movff	?_fgetc+1,skipws@c+1
 14309   00AE7A  280E               	incf	skipws@c^0,w,c
 14310   00AE7C  E106               	bnz	u9921
 14311   00AE7E  280F               	incf	(skipws@c+1)^0,w,c
 14312   00AE80  A4D8               	btfss	status,2,c
 14313   00AE82  EF45  F057         	goto	u9921
 14314   00AE86  EF47  F057         	goto	u9920
 14315   00AE8A                     u9921:
 14316   00AE8A  EF15  F057         	goto	l9906
 14317   00AE8E                     u9920:
 14318   00AE8E                     l1918:
 14319   00AE8E  0012               	return		;funcret
 14320   00AE90                     __end_of_skipws:
 14321                           	callstack 0
 14322                           
 14323 ;; *************** function _ungetc *****************
 14324 ;; Defined at:
 14325 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_getc.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  c               2    0[COMRAM] int 
 14328 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 14329 ;;		 -> sscanf@f(12), 
 14330 ;; Auto vars:     Size  Location     Type
 14331 ;;		None
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  2    0[COMRAM] int 
 14334 ;; Registers used:
 14335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14341 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14344 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14345 ;;Total ram usage:        5 bytes
 14346 ;; Hardware stack levels used: 1
 14347 ;; This function calls:
 14348 ;;		Nothing
 14349 ;; This function is called by:
 14350 ;;		_skipws
 14351 ;;		_atou
 14352 ;;		_vfsfcnvrt
 14353 ;; This function uses a non-reentrant model
 14354 ;;
 14355                           
 14356                           	psect	text65
 14357   00B60A                     __ptext65:
 14358                           	callstack 0
 14359   00B60A                     _ungetc:
 14360                           	callstack 26
 14361   00B60A  2801               	incf	ungetc@c^0,w,c
 14362   00B60C  E106               	bnz	u9361
 14363   00B60E  2802               	incf	(ungetc@c+1)^0,w,c
 14364   00B610  A4D8               	btfss	status,2,c
 14365   00B612  EF0D  F05B         	goto	u9361
 14366   00B616  EF0F  F05B         	goto	u9360
 14367   00B61A                     u9361:
 14368   00B61A  EF11  F05B         	goto	l9492
 14369   00B61E                     u9360:
 14370   00B61E  EF55  F05B         	goto	l2060
 14371   00B622                     l9492:
 14372   00B622  5003               	movf	ungetc@fp^0,w,c
 14373   00B624  A4D8               	btfss	status,2,c
 14374   00B626  EF17  F05B         	goto	u9371
 14375   00B62A  EF19  F05B         	goto	u9370
 14376   00B62E                     u9371:
 14377   00B62E  EF2E  F05B         	goto	l9500
 14378   00B632                     u9370:
 14379   00B632  0E03               	movlw	3
 14380   00B634  185E               	xorwf	___ungetcnt^0,w,c
 14381   00B636  B4D8               	btfsc	status,2,c
 14382   00B638  EF20  F05B         	goto	u9381
 14383   00B63C  EF22  F05B         	goto	u9380
 14384   00B640                     u9381:
 14385   00B640  EF55  F05B         	goto	l2060
 14386   00B644                     u9380:
 14387   00B644  0E1C               	movlw	low ___ungetbuf
 14388   00B646  245E               	addwf	___ungetcnt^0,w,c
 14389   00B648  6ED9               	movwf	fsr2l,c
 14390   00B64A  6ADA               	clrf	fsr2h,c
 14391   00B64C  0E02               	movlw	high ___ungetbuf
 14392   00B64E  22DA               	addwfc	fsr2h,f,c
 14393   00B650  0060  F007  FFDF   	movff	ungetc@c,indf2
 14394   00B656  2A5E               	incf	___ungetcnt^0,f,c
 14395   00B658  EF55  F05B         	goto	l2060
 14396   00B65C                     l9500:
 14397   00B65C  5003               	movf	ungetc@fp^0,w,c
 14398   00B65E  6ED9               	movwf	fsr2l,c
 14399   00B660  6ADA               	clrf	fsr2h,c
 14400   00B662  0E08               	movlw	8
 14401   00B664  26D9               	addwf	fsr2l,f,c
 14402   00B666  0E03               	movlw	3
 14403   00B668  18DE               	xorwf	postinc2,w,c
 14404   00B66A  10DE               	iorwf	postinc2,w,c
 14405   00B66C  B4D8               	btfsc	status,2,c
 14406   00B66E  EF3B  F05B         	goto	u9391
 14407   00B672  EF3D  F05B         	goto	u9390
 14408   00B676                     u9391:
 14409   00B676  EF55  F05B         	goto	l2060
 14410   00B67A                     u9390:
 14411   00B67A  5003               	movf	ungetc@fp^0,w,c
 14412   00B67C  6ED9               	movwf	fsr2l,c
 14413   00B67E  6ADA               	clrf	fsr2h,c
 14414   00B680  0E08               	movlw	8
 14415   00B682  26D9               	addwf	fsr2l,f,c
 14416   00B684  50DF               	movf	indf2,w,c
 14417   00B686  6E04               	movwf	??_ungetc^0,c
 14418   00B688  5003               	movf	ungetc@fp^0,w,c
 14419   00B68A  2404               	addwf	??_ungetc^0,w,c
 14420   00B68C  6ED9               	movwf	fsr2l,c
 14421   00B68E  6ADA               	clrf	fsr2h,c
 14422   00B690  0E05               	movlw	5
 14423   00B692  26D9               	addwf	fsr2l,f,c
 14424   00B694  0060  F007  FFDF   	movff	ungetc@c,indf2
 14425   00B69A  5003               	movf	ungetc@fp^0,w,c
 14426   00B69C  6ED9               	movwf	fsr2l,c
 14427   00B69E  6ADA               	clrf	fsr2h,c
 14428   00B6A0  0E08               	movlw	8
 14429   00B6A2  26D9               	addwf	fsr2l,f,c
 14430   00B6A4  2ADE               	incf	postinc2,f,c
 14431   00B6A6  0E00               	movlw	0
 14432   00B6A8  22DD               	addwfc	postdec2,f,c
 14433   00B6AA                     l2060:
 14434   00B6AA  0012               	return		;funcret
 14435   00B6AC                     __end_of_ungetc:
 14436                           	callstack 0
 14437                           
 14438 ;; *************** function _fgetc *****************
 14439 ;; Defined at:
 14440 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_getc.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 14443 ;;		 -> sscanf@f(12), 
 14444 ;; Auto vars:     Size  Location     Type
 14445 ;;  c               2    9[COMRAM] int 
 14446 ;; Return value:  Size  Location     Type
 14447 ;;                  2    2[COMRAM] int 
 14448 ;; Registers used:
 14449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14450 ;; Tracked objects:
 14451 ;;		On entry : 0/0
 14452 ;;		On exit  : 0/0
 14453 ;;		Unchanged: 0/0
 14454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14457 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14458 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14459 ;;Total ram usage:        9 bytes
 14460 ;; Hardware stack levels used: 1
 14461 ;; Hardware stack levels required when called: 1
 14462 ;; This function calls:
 14463 ;;		_getch
 14464 ;; This function is called by:
 14465 ;;		_skipws
 14466 ;;		_atou
 14467 ;;		_vfsfcnvrt
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           
 14471                           	psect	text66
 14472   00BF4A                     __ptext66:
 14473                           	callstack 0
 14474   00BF4A                     _fgetc:
 14475                           	callstack 24
 14476   00BF4A  5003               	movf	fgetc@fp^0,w,c
 14477   00BF4C  A4D8               	btfss	status,2,c
 14478   00BF4E  EFAB  F05F         	goto	u9401
 14479   00BF52  EFAD  F05F         	goto	u9400
 14480   00BF56                     u9401:
 14481   00BF56  EFCB  F05F         	goto	l9512
 14482   00BF5A                     u9400:
 14483   00BF5A  505E               	movf	___ungetcnt^0,w,c
 14484   00BF5C  A4D8               	btfss	status,2,c
 14485   00BF5E  EFB3  F05F         	goto	u9411
 14486   00BF62  EFB5  F05F         	goto	u9410
 14487   00BF66                     u9411:
 14488   00BF66  EFBD  F05F         	goto	l9510
 14489   00BF6A                     u9410:
 14490   00BF6A  ECEE  F050         	call	_getch	;wreg free
 14491   00BF6E  C001  F00A         	movff	?_getch,fgetc@c
 14492   00BF72  C002  F00B         	movff	?_getch+1,fgetc@c+1
 14493   00BF76  EF28  F060         	goto	l9524
 14494   00BF7A                     l9510:
 14495   00BF7A  065E               	decf	___ungetcnt^0,f,c
 14496   00BF7C  0E1C               	movlw	low ___ungetbuf
 14497   00BF7E  245E               	addwf	___ungetcnt^0,w,c
 14498   00BF80  6ED9               	movwf	fsr2l,c
 14499   00BF82  6ADA               	clrf	fsr2h,c
 14500   00BF84  0E02               	movlw	high ___ungetbuf
 14501   00BF86  22DA               	addwfc	fsr2h,f,c
 14502   00BF88  50DF               	movf	indf2,w,c
 14503   00BF8A  6E05               	movwf	??_fgetc^0,c
 14504   00BF8C  5005               	movf	??_fgetc^0,w,c
 14505   00BF8E  6E0A               	movwf	fgetc@c^0,c
 14506   00BF90  6A0B               	clrf	(fgetc@c+1)^0,c
 14507   00BF92  EF28  F060         	goto	l9524
 14508   00BF96                     l9512:
 14509   00BF96  5003               	movf	fgetc@fp^0,w,c
 14510   00BF98  6ED9               	movwf	fsr2l,c
 14511   00BF9A  6ADA               	clrf	fsr2h,c
 14512   00BF9C  0E08               	movlw	8
 14513   00BF9E  26D9               	addwf	fsr2l,f,c
 14514   00BFA0  50DE               	movf	postinc2,w,c
 14515   00BFA2  10DE               	iorwf	postinc2,w,c
 14516   00BFA4  B4D8               	btfsc	status,2,c
 14517   00BFA6  EFD7  F05F         	goto	u9421
 14518   00BFAA  EFD9  F05F         	goto	u9420
 14519   00BFAE                     u9421:
 14520   00BFAE  EFF4  F05F         	goto	l9516
 14521   00BFB2                     u9420:
 14522   00BFB2  5003               	movf	fgetc@fp^0,w,c
 14523   00BFB4  6ED9               	movwf	fsr2l,c
 14524   00BFB6  6ADA               	clrf	fsr2h,c
 14525   00BFB8  0E08               	movlw	8
 14526   00BFBA  26D9               	addwf	fsr2l,f,c
 14527   00BFBC  06DE               	decf	postinc2,f,c
 14528   00BFBE  0E00               	movlw	0
 14529   00BFC0  5ADD               	subwfb	postdec2,f,c
 14530   00BFC2  006F FF78  F005    	movff	postinc2,??_fgetc
 14531   00BFC8  006F FF74  F006    	movff	postdec2,??_fgetc+1
 14532   00BFCE  5003               	movf	fgetc@fp^0,w,c
 14533   00BFD0  2405               	addwf	??_fgetc^0,w,c
 14534   00BFD2  6ED9               	movwf	fsr2l,c
 14535   00BFD4  6ADA               	clrf	fsr2h,c
 14536   00BFD6  0E05               	movlw	5
 14537   00BFD8  26D9               	addwf	fsr2l,f,c
 14538   00BFDA  50DF               	movf	indf2,w,c
 14539   00BFDC  6E07               	movwf	(??_fgetc+2)^0,c
 14540   00BFDE  5007               	movf	(??_fgetc+2)^0,w,c
 14541   00BFE0  6E0A               	movwf	fgetc@c^0,c
 14542   00BFE2  6A0B               	clrf	(fgetc@c+1)^0,c
 14543   00BFE4  EF28  F060         	goto	l9524
 14544   00BFE8                     l9516:
 14545   00BFE8  5003               	movf	fgetc@fp^0,w,c
 14546   00BFEA  6ED9               	movwf	fsr2l,c
 14547   00BFEC  6ADA               	clrf	fsr2h,c
 14548   00BFEE  0E03               	movlw	3
 14549   00BFF0  26D9               	addwf	fsr2l,f,c
 14550   00BFF2  006F FF78  F005    	movff	postinc2,??_fgetc
 14551   00BFF8  006F FF74  F006    	movff	postdec2,??_fgetc+1
 14552   00BFFE  5003               	movf	fgetc@fp^0,w,c
 14553   00C000  6ED9               	movwf	fsr2l,c
 14554   00C002  6ADA               	clrf	fsr2h,c
 14555   00C004  006F FF78  F007    	movff	postinc2,??_fgetc+2
 14556   00C00A  006F FF74  F008    	movff	postdec2,??_fgetc+3
 14557   00C010  5005               	movf	??_fgetc^0,w,c
 14558   00C012  2407               	addwf	(??_fgetc+2)^0,w,c
 14559   00C014  6ED9               	movwf	fsr2l,c
 14560   00C016  5006               	movf	(??_fgetc+1)^0,w,c
 14561   00C018  2008               	addwfc	(??_fgetc+3)^0,w,c
 14562   00C01A  6EDA               	movwf	fsr2h,c
 14563   00C01C  50DF               	movf	indf2,w,c
 14564   00C01E  6E09               	movwf	(??_fgetc+4)^0,c
 14565   00C020  5009               	movf	(??_fgetc+4)^0,w,c
 14566   00C022  6E0A               	movwf	fgetc@c^0,c
 14567   00C024  6A0B               	clrf	(fgetc@c+1)^0,c
 14568   00C026  500A               	movf	fgetc@c^0,w,c
 14569   00C028  100B               	iorwf	(fgetc@c+1)^0,w,c
 14570   00C02A  A4D8               	btfss	status,2,c
 14571   00C02C  EF1A  F060         	goto	u9431
 14572   00C030  EF1C  F060         	goto	u9430
 14573   00C034                     u9431:
 14574   00C034  EF20  F060         	goto	l9522
 14575   00C038                     u9430:
 14576   00C038  680A               	setf	fgetc@c^0,c
 14577   00C03A  680B               	setf	(fgetc@c+1)^0,c
 14578   00C03C  EF28  F060         	goto	l9524
 14579   00C040                     l9522:
 14580   00C040  5003               	movf	fgetc@fp^0,w,c
 14581   00C042  6ED9               	movwf	fsr2l,c
 14582   00C044  6ADA               	clrf	fsr2h,c
 14583   00C046  0E03               	movlw	3
 14584   00C048  26D9               	addwf	fsr2l,f,c
 14585   00C04A  2ADE               	incf	postinc2,f,c
 14586   00C04C  0E00               	movlw	0
 14587   00C04E  22DD               	addwfc	postdec2,f,c
 14588   00C050                     l9524:
 14589   00C050  C00A  F003         	movff	fgetc@c,?_fgetc
 14590   00C054  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
 14591   00C058  0012               	return		;funcret
 14592   00C05A                     __end_of_fgetc:
 14593                           	callstack 0
 14594                           
 14595 ;; *************** function _getch *****************
 14596 ;; Defined at:
 14597 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\getch.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;		None
 14600 ;; Auto vars:     Size  Location     Type
 14601 ;;		None
 14602 ;; Return value:  Size  Location     Type
 14603 ;;                  2    0[COMRAM] int 
 14604 ;; Registers used:
 14605 ;;		None
 14606 ;; Tracked objects:
 14607 ;;		On entry : 0/0
 14608 ;;		On exit  : 0/0
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14615 ;;Total ram usage:        2 bytes
 14616 ;; Hardware stack levels used: 1
 14617 ;; This function calls:
 14618 ;;		Nothing
 14619 ;; This function is called by:
 14620 ;;		_fgetc
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624                           	psect	text67
 14625   00A1DC                     __ptext67:
 14626                           	callstack 0
 14627   00A1DC                     _getch:
 14628                           	callstack 24
 14629   00A1DC  6801               	setf	?_getch^0,c
 14630   00A1DE  6802               	setf	(?_getch+1)^0,c
 14631   00A1E0  0012               	return		;funcret
 14632   00A1E2                     __end_of_getch:
 14633                           	callstack 0
 14634                           
 14635 ;; *************** function ___strtoxll *****************
 14636 ;; Defined at:
 14637 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__strtoxll.c"
 14638 ;; Parameters:    Size  Location     Type
 14639 ;;  s               2   24[COMRAM] PTR const unsigned char 
 14640 ;;		 -> dbuf@doscan$F2284(32), 
 14641 ;;  endptr          1   26[COMRAM] PTR PTR unsigned char 
 14642 ;;		 -> atou@ep(2), 
 14643 ;;  base            2   27[COMRAM] int 
 14644 ;;  is_signed       1   29[COMRAM] unsigned char 
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;  a               8   61[COMRAM] unsigned long long 
 14647 ;;  limit           8   52[COMRAM] unsigned long long 
 14648 ;;  prev_a          8   40[COMRAM] unsigned long long 
 14649 ;;  cp              2   69[COMRAM] PTR const unsigned char 
 14650 ;;		 -> dbuf@doscan$F2284(32), 
 14651 ;;  c               1   71[COMRAM] unsigned char 
 14652 ;;  flags           1   60[COMRAM] enum E246
 14653 ;; Return value:  Size  Location     Type
 14654 ;;                  8   24[COMRAM] unsigned long long 
 14655 ;; Registers used:
 14656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14657 ;; Tracked objects:
 14658 ;;		On entry : 0/0
 14659 ;;		On exit  : 0/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14662 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14663 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14664 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14665 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14666 ;;Total ram usage:       48 bytes
 14667 ;; Hardware stack levels used: 1
 14668 ;; Hardware stack levels required when called: 1
 14669 ;; This function calls:
 14670 ;;		___omul
 14671 ;; This function is called by:
 14672 ;;		_atou
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           	psect	text68
 14677   00EE70                     __ptext68:
 14678                           	callstack 0
 14679   00EE70                     ___strtoxll:
 14680                           	callstack 24
 14681   00EE70  0E00               	movlw	0
 14682   00EE72  6E3D               	movwf	___strtoxll@flags^0,c
 14683   00EE74  EE20  F03E         	lfsr	2,___strtoxll@a
 14684   00EE78  0E07               	movlw	7
 14685   00EE7A                     u9931:
 14686   00EE7A  6ADE               	clrf	postinc2,c
 14687   00EE7C  06E8               	decf	wreg,f,c
 14688   00EE7E  E2FD               	bc	u9931
 14689   00EE80  C019  F046         	movff	___strtoxll@s,___strtoxll@cp
 14690   00EE84  C01A  F047         	movff	___strtoxll@s+1,___strtoxll@cp+1
 14691   00EE88  BE1D               	btfsc	(___strtoxll@base+1)^0,7,c
 14692   00EE8A  EF52  F077         	goto	u9940
 14693   00EE8E  501D               	movf	(___strtoxll@base+1)^0,w,c
 14694   00EE90  E107               	bnz	u9941
 14695   00EE92  0E25               	movlw	37
 14696   00EE94  5C1C               	subwf	___strtoxll@base^0,w,c
 14697   00EE96  B0D8               	btfsc	status,0,c
 14698   00EE98  EF50  F077         	goto	u9941
 14699   00EE9C  EF52  F077         	goto	u9940
 14700   00EEA0                     u9941:
 14701   00EEA0  EF5B  F077         	goto	l9924
 14702   00EEA4                     u9940:
 14703   00EEA4  041C               	decf	___strtoxll@base^0,w,c
 14704   00EEA6  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14705   00EEA8  A4D8               	btfss	status,2,c
 14706   00EEAA  EF59  F077         	goto	u9951
 14707   00EEAE  EF5B  F077         	goto	u9950
 14708   00EEB2                     u9951:
 14709   00EEB2  EF62  F077         	goto	l9926
 14710   00EEB6                     u9950:
 14711   00EEB6                     l9924:
 14712   00EEB6  0E00               	movlw	0
 14713   00EEB8  0100               	movlb	0	; () banked
 14714   00EEBA  6FC0               	movwf	(_errno+1)& (0+255),b
 14715   00EEBC  0E16               	movlw	22
 14716   00EEBE  6FBF               	movwf	_errno& (0+255),b
 14717   00EEC0  EFD1  F079         	goto	l10030
 14718   00EEC4                     l9926:
 14719   00EEC4  5046               	movf	___strtoxll@cp^0,w,c
 14720   00EEC6  1047               	iorwf	(___strtoxll@cp+1)^0,w,c
 14721   00EEC8  B4D8               	btfsc	status,2,c
 14722   00EECA  EF69  F077         	goto	u9961
 14723   00EECE  EF6B  F077         	goto	u9960
 14724   00EED2                     u9961:
 14725   00EED2  EFD1  F079         	goto	l10030
 14726   00EED6                     u9960:
 14727   00EED6  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14728   00EEDC  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14729   00EEE2  50DF               	movf	indf2,w,c
 14730   00EEE4  A4D8               	btfss	status,2,c
 14731   00EEE6  EF77  F077         	goto	u9971
 14732   00EEEA  EF79  F077         	goto	u9970
 14733   00EEEE                     u9971:
 14734   00EEEE  EF7B  F077         	goto	l9930
 14735   00EEF2                     u9970:
 14736   00EEF2  EFD1  F079         	goto	l10030
 14737   00EEF6                     l9930:
 14738   00EEF6  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14739   00EEFC  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14740   00EF02  50DF               	movf	indf2,w,c
 14741   00EF04  6E48               	movwf	___strtoxll@c^0,c
 14742   00EF06  EF8F  F077         	goto	l9934
 14743   00EF0A                     l9932:
 14744   00EF0A  4A46               	infsnz	___strtoxll@cp^0,f,c
 14745   00EF0C  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14746   00EF0E  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14747   00EF14  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14748   00EF1A  50DF               	movf	indf2,w,c
 14749   00EF1C  6E48               	movwf	___strtoxll@c^0,c
 14750   00EF1E                     l9934:
 14751   00EF1E  0E20               	movlw	32
 14752   00EF20  1848               	xorwf	___strtoxll@c^0,w,c
 14753   00EF22  B4D8               	btfsc	status,2,c
 14754   00EF24  EF96  F077         	goto	u9981
 14755   00EF28  EF98  F077         	goto	u9980
 14756   00EF2C                     u9981:
 14757   00EF2C  EF85  F077         	goto	l9932
 14758   00EF30                     u9980:
 14759   00EF30  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14760   00EF34  0EF7               	movlw	247
 14761   00EF36  2621               	addwf	??___strtoxll^0,f,c
 14762   00EF38  0E04               	movlw	4
 14763   00EF3A  6421               	cpfsgt	??___strtoxll^0,c
 14764   00EF3C  EFA2  F077         	goto	u9991
 14765   00EF40  EFA4  F077         	goto	u9990
 14766   00EF44                     u9991:
 14767   00EF44  EF85  F077         	goto	l9932
 14768   00EF48                     u9990:
 14769   00EF48  0E2D               	movlw	45
 14770   00EF4A  1848               	xorwf	___strtoxll@c^0,w,c
 14771   00EF4C  A4D8               	btfss	status,2,c
 14772   00EF4E  EFAB  F077         	goto	u10001
 14773   00EF52  EFAD  F077         	goto	u10000
 14774   00EF56                     u10001:
 14775   00EF56  EFBA  F077         	goto	l9944
 14776   00EF5A                     u10000:
 14777   00EF5A  803D               	bsf	___strtoxll@flags^0,0,c
 14778   00EF5C                     l9942:
 14779   00EF5C  4A46               	infsnz	___strtoxll@cp^0,f,c
 14780   00EF5E  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14781   00EF60  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14782   00EF66  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14783   00EF6C  50DF               	movf	indf2,w,c
 14784   00EF6E  6E48               	movwf	___strtoxll@c^0,c
 14785   00EF70  EFC5  F077         	goto	l9948
 14786   00EF74                     l9944:
 14787   00EF74  0E2B               	movlw	43
 14788   00EF76  1848               	xorwf	___strtoxll@c^0,w,c
 14789   00EF78  A4D8               	btfss	status,2,c
 14790   00EF7A  EFC1  F077         	goto	u10011
 14791   00EF7E  EFC3  F077         	goto	u10010
 14792   00EF82                     u10011:
 14793   00EF82  EFC5  F077         	goto	l9948
 14794   00EF86                     u10010:
 14795   00EF86  EFAE  F077         	goto	l9942
 14796   00EF8A                     l9948:
 14797   00EF8A  0E30               	movlw	48
 14798   00EF8C  1848               	xorwf	___strtoxll@c^0,w,c
 14799   00EF8E  A4D8               	btfss	status,2,c
 14800   00EF90  EFCC  F077         	goto	u10021
 14801   00EF94  EFCE  F077         	goto	u10020
 14802   00EF98                     u10021:
 14803   00EF98  EF6B  F078         	goto	l9984
 14804   00EF9C                     u10020:
 14805   00EF9C  4A46               	infsnz	___strtoxll@cp^0,f,c
 14806   00EF9E  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14807   00EFA0  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14808   00EFA6  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14809   00EFAC  50DF               	movf	indf2,w,c
 14810   00EFAE  6E48               	movwf	___strtoxll@c^0,c
 14811   00EFB0  501C               	movf	___strtoxll@base^0,w,c
 14812   00EFB2  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14813   00EFB4  B4D8               	btfsc	status,2,c
 14814   00EFB6  EFDF  F077         	goto	u10031
 14815   00EFBA  EFE1  F077         	goto	u10030
 14816   00EFBE                     u10031:
 14817   00EFBE  EFEB  F077         	goto	l9956
 14818   00EFC2                     u10030:
 14819   00EFC2  0E10               	movlw	16
 14820   00EFC4  181C               	xorwf	___strtoxll@base^0,w,c
 14821   00EFC6  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14822   00EFC8  A4D8               	btfss	status,2,c
 14823   00EFCA  EFE9  F077         	goto	u10041
 14824   00EFCE  EFEB  F077         	goto	u10040
 14825   00EFD2                     u10041:
 14826   00EFD2  EF5D  F078         	goto	l9978
 14827   00EFD6                     u10040:
 14828   00EFD6                     l9956:
 14829   00EFD6  0E78               	movlw	120
 14830   00EFD8  1848               	xorwf	___strtoxll@c^0,w,c
 14831   00EFDA  B4D8               	btfsc	status,2,c
 14832   00EFDC  EFF2  F077         	goto	u10051
 14833   00EFE0  EFF4  F077         	goto	u10050
 14834   00EFE4                     u10051:
 14835   00EFE4  EFFD  F077         	goto	l9960
 14836   00EFE8                     u10050:
 14837   00EFE8  0E58               	movlw	88
 14838   00EFEA  1848               	xorwf	___strtoxll@c^0,w,c
 14839   00EFEC  A4D8               	btfss	status,2,c
 14840   00EFEE  EFFB  F077         	goto	u10061
 14841   00EFF2  EFFD  F077         	goto	u10060
 14842   00EFF6                     u10061:
 14843   00EFF6  EF5D  F078         	goto	l9978
 14844   00EFFA                     u10060:
 14845   00EFFA                     l9960:
 14846   00EFFA  0E00               	movlw	0
 14847   00EFFC  6E1D               	movwf	(___strtoxll@base+1)^0,c
 14848   00EFFE  0E10               	movlw	16
 14849   00F000  6E1C               	movwf	___strtoxll@base^0,c
 14850   00F002  4A46               	infsnz	___strtoxll@cp^0,f,c
 14851   00F004  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14852   00F006  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14853   00F00C  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14854   00F012  50DF               	movf	indf2,w,c
 14855   00F014  6E48               	movwf	___strtoxll@c^0,c
 14856   00F016  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14857   00F01A  0E20               	movlw	32
 14858   00F01C  1221               	iorwf	??___strtoxll^0,f,c
 14859   00F01E  0E9F               	movlw	159
 14860   00F020  2621               	addwf	??___strtoxll^0,f,c
 14861   00F022  0E1A               	movlw	26
 14862   00F024  6021               	cpfslt	??___strtoxll^0,c
 14863   00F026  EF17  F078         	goto	u10071
 14864   00F02A  EF19  F078         	goto	u10070
 14865   00F02E                     u10071:
 14866   00F02E  EF3D  F078         	goto	l9972
 14867   00F032                     u10070:
 14868   00F032  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14869   00F036  0E9F               	movlw	159
 14870   00F038  2621               	addwf	??___strtoxll^0,f,c
 14871   00F03A  0E19               	movlw	25
 14872   00F03C  6421               	cpfsgt	??___strtoxll^0,c
 14873   00F03E  EF23  F078         	goto	u10081
 14874   00F042  EF25  F078         	goto	u10080
 14875   00F046                     u10081:
 14876   00F046  EF2A  F078         	goto	l9970
 14877   00F04A                     u10080:
 14878   00F04A  C048  F031         	movff	___strtoxll@c,___strtoxll$2338
 14879   00F04E  6A32               	clrf	(___strtoxll$2338+1)^0,c
 14880   00F050  EF31  F078         	goto	l2007
 14881   00F054                     l9970:
 14882   00F054  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14883   00F058  0E5F               	movlw	95
 14884   00F05A  1621               	andwf	??___strtoxll^0,f,c
 14885   00F05C  5021               	movf	??___strtoxll^0,w,c
 14886   00F05E  6E31               	movwf	___strtoxll$2338^0,c
 14887   00F060  6A32               	clrf	(___strtoxll$2338+1)^0,c
 14888   00F062                     l2007:
 14889   00F062  C031  F021         	movff	___strtoxll$2338,??___strtoxll
 14890   00F066  0EC9               	movlw	201
 14891   00F068  2621               	addwf	??___strtoxll^0,f,c
 14892   00F06A  0E10               	movlw	16
 14893   00F06C  6021               	cpfslt	??___strtoxll^0,c
 14894   00F06E  EF3B  F078         	goto	u10091
 14895   00F072  EF3D  F078         	goto	u10090
 14896   00F076                     u10091:
 14897   00F076  EF57  F078         	goto	l9976
 14898   00F07A                     u10090:
 14899   00F07A                     l9972:
 14900   00F07A  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14901   00F07E  0E20               	movlw	32
 14902   00F080  1221               	iorwf	??___strtoxll^0,f,c
 14903   00F082  0E9F               	movlw	159
 14904   00F084  2621               	addwf	??___strtoxll^0,f,c
 14905   00F086  0E19               	movlw	25
 14906   00F088  6421               	cpfsgt	??___strtoxll^0,c
 14907   00F08A  EF49  F078         	goto	u10101
 14908   00F08E  EF4B  F078         	goto	u10100
 14909   00F092                     u10101:
 14910   00F092  EF6B  F078         	goto	l9984
 14911   00F096                     u10100:
 14912   00F096  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14913   00F09A  0ED0               	movlw	208
 14914   00F09C  2621               	addwf	??___strtoxll^0,f,c
 14915   00F09E  0E09               	movlw	9
 14916   00F0A0  6421               	cpfsgt	??___strtoxll^0,c
 14917   00F0A2  EF55  F078         	goto	u10111
 14918   00F0A6  EF57  F078         	goto	u10110
 14919   00F0AA                     u10111:
 14920   00F0AA  EF6B  F078         	goto	l9984
 14921   00F0AE                     u10110:
 14922   00F0AE                     l9976:
 14923   00F0AE  843D               	bsf	___strtoxll@flags^0,2,c
 14924   00F0B0  0646               	decf	___strtoxll@cp^0,f,c
 14925   00F0B2  A0D8               	btfss	status,0,c
 14926   00F0B4  0647               	decf	(___strtoxll@cp+1)^0,f,c
 14927   00F0B6  EFD1  F079         	goto	l10030
 14928   00F0BA                     l9978:
 14929   00F0BA  843D               	bsf	___strtoxll@flags^0,2,c
 14930   00F0BC  501C               	movf	___strtoxll@base^0,w,c
 14931   00F0BE  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14932   00F0C0  A4D8               	btfss	status,2,c
 14933   00F0C2  EF65  F078         	goto	u10121
 14934   00F0C6  EF67  F078         	goto	u10120
 14935   00F0CA                     u10121:
 14936   00F0CA  EF6B  F078         	goto	l9984
 14937   00F0CE                     u10120:
 14938   00F0CE  0E00               	movlw	0
 14939   00F0D0  6E1D               	movwf	(___strtoxll@base+1)^0,c
 14940   00F0D2  0E08               	movlw	8
 14941   00F0D4  6E1C               	movwf	___strtoxll@base^0,c
 14942   00F0D6                     l9984:
 14943   00F0D6  501C               	movf	___strtoxll@base^0,w,c
 14944   00F0D8  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14945   00F0DA  A4D8               	btfss	status,2,c
 14946   00F0DC  EF72  F078         	goto	u10131
 14947   00F0E0  EF74  F078         	goto	u10130
 14948   00F0E4                     u10131:
 14949   00F0E4  EF78  F078         	goto	l2010
 14950   00F0E8                     u10130:
 14951   00F0E8  0E00               	movlw	0
 14952   00F0EA  6E1D               	movwf	(___strtoxll@base+1)^0,c
 14953   00F0EC  0E0A               	movlw	10
 14954   00F0EE  6E1C               	movwf	___strtoxll@base^0,c
 14955   00F0F0                     l2010:
 14956   00F0F0  501E               	movf	___strtoxll@is_signed^0,w,c
 14957   00F0F2  B4D8               	btfsc	status,2,c
 14958   00F0F4  EF7E  F078         	goto	u10141
 14959   00F0F8  EF80  F078         	goto	u10140
 14960   00F0FC                     u10141:
 14961   00F0FC  EFAB  F078         	goto	l2011
 14962   00F100                     u10140:
 14963   00F100  B03D               	btfsc	___strtoxll@flags^0,0,c
 14964   00F102  EF85  F078         	goto	u10151
 14965   00F106  EF87  F078         	goto	u10150
 14966   00F10A                     u10151:
 14967   00F10A  EF99  F078         	goto	l9992
 14968   00F10E                     u10150:
 14969   00F10E  0EFF               	movlw	255
 14970   00F110  6E35               	movwf	___strtoxll@limit^0,c
 14971   00F112  0EFF               	movlw	255
 14972   00F114  6E36               	movwf	(___strtoxll@limit+1)^0,c
 14973   00F116  0EFF               	movlw	255
 14974   00F118  6E37               	movwf	(___strtoxll@limit+2)^0,c
 14975   00F11A  0EFF               	movlw	255
 14976   00F11C  6E38               	movwf	(___strtoxll@limit+3)^0,c
 14977   00F11E  0EFF               	movlw	255
 14978   00F120  6E39               	movwf	(___strtoxll@limit+4)^0,c
 14979   00F122  0EFF               	movlw	255
 14980   00F124  6E3A               	movwf	(___strtoxll@limit+5)^0,c
 14981   00F126  0EFF               	movlw	255
 14982   00F128  6E3B               	movwf	(___strtoxll@limit+6)^0,c
 14983   00F12A  0E7F               	movlw	127
 14984   00F12C  6E3C               	movwf	(___strtoxll@limit+7)^0,c
 14985   00F12E  EFB3  F078         	goto	l2017
 14986   00F132                     l9992:
 14987   00F132  0E00               	movlw	0
 14988   00F134  6E35               	movwf	___strtoxll@limit^0,c
 14989   00F136  0E00               	movlw	0
 14990   00F138  6E36               	movwf	(___strtoxll@limit+1)^0,c
 14991   00F13A  0E00               	movlw	0
 14992   00F13C  6E37               	movwf	(___strtoxll@limit+2)^0,c
 14993   00F13E  0E00               	movlw	0
 14994   00F140  6E38               	movwf	(___strtoxll@limit+3)^0,c
 14995   00F142  0E00               	movlw	0
 14996   00F144  6E39               	movwf	(___strtoxll@limit+4)^0,c
 14997   00F146  0E00               	movlw	0
 14998   00F148  6E3A               	movwf	(___strtoxll@limit+5)^0,c
 14999   00F14A  0E00               	movlw	0
 15000   00F14C  6E3B               	movwf	(___strtoxll@limit+6)^0,c
 15001   00F14E  0E80               	movlw	128
 15002   00F150  6E3C               	movwf	(___strtoxll@limit+7)^0,c
 15003   00F152  EFB3  F078         	goto	l2017
 15004   00F156                     l2011:
 15005   00F156  6835               	setf	___strtoxll@limit^0,c
 15006   00F158  6836               	setf	(___strtoxll@limit+1)^0,c
 15007   00F15A  6837               	setf	(___strtoxll@limit+2)^0,c
 15008   00F15C  6838               	setf	(___strtoxll@limit+3)^0,c
 15009   00F15E  6839               	setf	(___strtoxll@limit+4)^0,c
 15010   00F160  683A               	setf	(___strtoxll@limit+5)^0,c
 15011   00F162  683B               	setf	(___strtoxll@limit+6)^0,c
 15012   00F164  683C               	setf	(___strtoxll@limit+7)^0,c
 15013   00F166                     l2017:
 15014   00F166  C03E  F029         	movff	___strtoxll@a,___strtoxll@prev_a
 15015   00F16A  C03F  F02A         	movff	___strtoxll@a+1,___strtoxll@prev_a+1
 15016   00F16E  C040  F02B         	movff	___strtoxll@a+2,___strtoxll@prev_a+2
 15017   00F172  C041  F02C         	movff	___strtoxll@a+3,___strtoxll@prev_a+3
 15018   00F176  C042  F02D         	movff	___strtoxll@a+4,___strtoxll@prev_a+4
 15019   00F17A  C043  F02E         	movff	___strtoxll@a+5,___strtoxll@prev_a+5
 15020   00F17E  C044  F02F         	movff	___strtoxll@a+6,___strtoxll@prev_a+6
 15021   00F182  C045  F030         	movff	___strtoxll@a+7,___strtoxll@prev_a+7
 15022   00F186  C048  F021         	movff	___strtoxll@c,??___strtoxll
 15023   00F18A  0E20               	movlw	32
 15024   00F18C  1221               	iorwf	??___strtoxll^0,f,c
 15025   00F18E  0E9F               	movlw	159
 15026   00F190  2621               	addwf	??___strtoxll^0,f,c
 15027   00F192  0E1A               	movlw	26
 15028   00F194  6021               	cpfslt	??___strtoxll^0,c
 15029   00F196  EFCF  F078         	goto	u10161
 15030   00F19A  EFD1  F078         	goto	u10160
 15031   00F19E                     u10161:
 15032   00F19E  EFEE  F078         	goto	l10002
 15033   00F1A2                     u10160:
 15034   00F1A2  C048  F021         	movff	___strtoxll@c,??___strtoxll
 15035   00F1A6  0E9F               	movlw	159
 15036   00F1A8  2621               	addwf	??___strtoxll^0,f,c
 15037   00F1AA  0E19               	movlw	25
 15038   00F1AC  6421               	cpfsgt	??___strtoxll^0,c
 15039   00F1AE  EFDB  F078         	goto	u10171
 15040   00F1B2  EFDD  F078         	goto	u10170
 15041   00F1B6                     u10171:
 15042   00F1B6  EFE2  F078         	goto	l10000
 15043   00F1BA                     u10170:
 15044   00F1BA  C048  F033         	movff	___strtoxll@c,___strtoxll$2339
 15045   00F1BE  6A34               	clrf	(___strtoxll$2339+1)^0,c
 15046   00F1C0  EFE9  F078         	goto	l2022
 15047   00F1C4                     l10000:
 15048   00F1C4  C048  F021         	movff	___strtoxll@c,??___strtoxll
 15049   00F1C8  0E5F               	movlw	95
 15050   00F1CA  1621               	andwf	??___strtoxll^0,f,c
 15051   00F1CC  5021               	movf	??___strtoxll^0,w,c
 15052   00F1CE  6E33               	movwf	___strtoxll$2339^0,c
 15053   00F1D0  6A34               	clrf	(___strtoxll$2339+1)^0,c
 15054   00F1D2                     l2022:
 15055   00F1D2  5033               	movf	___strtoxll$2339^0,w,c
 15056   00F1D4  0FC9               	addlw	201
 15057   00F1D6  6E48               	movwf	___strtoxll@c^0,c
 15058   00F1D8  EFFC  F078         	goto	l10006
 15059   00F1DC                     l10002:
 15060   00F1DC  C048  F021         	movff	___strtoxll@c,??___strtoxll
 15061   00F1E0  0ED0               	movlw	208
 15062   00F1E2  2621               	addwf	??___strtoxll^0,f,c
 15063   00F1E4  0E0A               	movlw	10
 15064   00F1E6  6021               	cpfslt	??___strtoxll^0,c
 15065   00F1E8  EFF8  F078         	goto	u10181
 15066   00F1EC  EFFA  F078         	goto	u10180
 15067   00F1F0                     u10181:
 15068   00F1F0  EFB7  F079         	goto	l10026
 15069   00F1F4                     u10180:
 15070   00F1F4  0E30               	movlw	48
 15071   00F1F6  5E48               	subwf	___strtoxll@c^0,f,c
 15072   00F1F8                     l10006:
 15073   00F1F8  5048               	movf	___strtoxll@c^0,w,c
 15074   00F1FA  6E21               	movwf	??___strtoxll^0,c
 15075   00F1FC  6A22               	clrf	(??___strtoxll+1)^0,c
 15076   00F1FE  501C               	movf	___strtoxll@base^0,w,c
 15077   00F200  5C21               	subwf	??___strtoxll^0,w,c
 15078   00F202  5022               	movf	(??___strtoxll+1)^0,w,c
 15079   00F204  0A80               	xorlw	128
 15080   00F206  6E23               	movwf	(??___strtoxll+2)^0,c
 15081   00F208  501D               	movf	(___strtoxll@base+1)^0,w,c
 15082   00F20A  0A80               	xorlw	128
 15083   00F20C  5823               	subwfb	(??___strtoxll+2)^0,w,c
 15084   00F20E  A0D8               	btfss	status,0,c
 15085   00F210  EF0C  F079         	goto	u10191
 15086   00F214  EF0E  F079         	goto	u10190
 15087   00F218                     u10191:
 15088   00F218  EF10  F079         	goto	l2027
 15089   00F21C                     u10190:
 15090   00F21C  EFB7  F079         	goto	l10026
 15091   00F220                     l2027:
 15092   00F220  B23D               	btfsc	___strtoxll@flags^0,1,c
 15093   00F222  EF15  F079         	goto	u10201
 15094   00F226  EF17  F079         	goto	u10200
 15095   00F22A                     u10201:
 15096   00F22A  EFAA  F079         	goto	l10022
 15097   00F22E                     u10200:
 15098   00F22E  C01C  F001         	movff	___strtoxll@base,___omul@multiplier
 15099   00F232  C01D  F002         	movff	___strtoxll@base+1,___omul@multiplier+1
 15100   00F236  0E00               	movlw	0
 15101   00F238  BE02               	btfsc	(___omul@multiplier+1)^0,7,c
 15102   00F23A  0EFF               	movlw	-1
 15103   00F23C  6E03               	movwf	(___omul@multiplier+2)^0,c
 15104   00F23E  6E04               	movwf	(___omul@multiplier+3)^0,c
 15105   00F240  6E05               	movwf	(___omul@multiplier+4)^0,c
 15106   00F242  6E06               	movwf	(___omul@multiplier+5)^0,c
 15107   00F244  6E07               	movwf	(___omul@multiplier+6)^0,c
 15108   00F246  6E08               	movwf	(___omul@multiplier+7)^0,c
 15109   00F248  C03E  F009         	movff	___strtoxll@a,___omul@multiplicand
 15110   00F24C  C03F  F00A         	movff	___strtoxll@a+1,___omul@multiplicand+1
 15111   00F250  C040  F00B         	movff	___strtoxll@a+2,___omul@multiplicand+2
 15112   00F254  C041  F00C         	movff	___strtoxll@a+3,___omul@multiplicand+3
 15113   00F258  C042  F00D         	movff	___strtoxll@a+4,___omul@multiplicand+4
 15114   00F25C  C043  F00E         	movff	___strtoxll@a+5,___omul@multiplicand+5
 15115   00F260  C044  F00F         	movff	___strtoxll@a+6,___omul@multiplicand+6
 15116   00F264  C045  F010         	movff	___strtoxll@a+7,___omul@multiplicand+7
 15117   00F268  EC65  F05A         	call	___omul	;wreg free
 15118   00F26C  C001  F021         	movff	?___omul,??___strtoxll
 15119   00F270  C002  F022         	movff	?___omul+1,??___strtoxll+1
 15120   00F274  C003  F023         	movff	?___omul+2,??___strtoxll+2
 15121   00F278  C004  F024         	movff	?___omul+3,??___strtoxll+3
 15122   00F27C  C005  F025         	movff	?___omul+4,??___strtoxll+4
 15123   00F280  C006  F026         	movff	?___omul+5,??___strtoxll+5
 15124   00F284  C007  F027         	movff	?___omul+6,??___strtoxll+6
 15125   00F288  C008  F028         	movff	?___omul+7,??___strtoxll+7
 15126   00F28C  5048               	movf	___strtoxll@c^0,w,c
 15127   00F28E  2421               	addwf	??___strtoxll^0,w,c
 15128   00F290  6E3E               	movwf	___strtoxll@a^0,c
 15129   00F292  0E00               	movlw	0
 15130   00F294  2022               	addwfc	(??___strtoxll+1)^0,w,c
 15131   00F296  6E3F               	movwf	(___strtoxll@a+1)^0,c
 15132   00F298  0E00               	movlw	0
 15133   00F29A  2023               	addwfc	(??___strtoxll+2)^0,w,c
 15134   00F29C  6E40               	movwf	(___strtoxll@a+2)^0,c
 15135   00F29E  0E00               	movlw	0
 15136   00F2A0  2024               	addwfc	(??___strtoxll+3)^0,w,c
 15137   00F2A2  6E41               	movwf	(___strtoxll@a+3)^0,c
 15138   00F2A4  0E00               	movlw	0
 15139   00F2A6  2025               	addwfc	(??___strtoxll+4)^0,w,c
 15140   00F2A8  6E42               	movwf	(___strtoxll@a+4)^0,c
 15141   00F2AA  0E00               	movlw	0
 15142   00F2AC  2026               	addwfc	(??___strtoxll+5)^0,w,c
 15143   00F2AE  6E43               	movwf	(___strtoxll@a+5)^0,c
 15144   00F2B0  0E00               	movlw	0
 15145   00F2B2  2027               	addwfc	(??___strtoxll+6)^0,w,c
 15146   00F2B4  6E44               	movwf	(___strtoxll@a+6)^0,c
 15147   00F2B6  0E00               	movlw	0
 15148   00F2B8  2028               	addwfc	(??___strtoxll+7)^0,w,c
 15149   00F2BA  6E45               	movwf	(___strtoxll@a+7)^0,c
 15150   00F2BC  5029               	movf	___strtoxll@prev_a^0,w,c
 15151   00F2BE  5C3E               	subwf	___strtoxll@a^0,w,c
 15152   00F2C0  502A               	movf	(___strtoxll@prev_a+1)^0,w,c
 15153   00F2C2  583F               	subwfb	(___strtoxll@a+1)^0,w,c
 15154   00F2C4  502B               	movf	(___strtoxll@prev_a+2)^0,w,c
 15155   00F2C6  5840               	subwfb	(___strtoxll@a+2)^0,w,c
 15156   00F2C8  502C               	movf	(___strtoxll@prev_a+3)^0,w,c
 15157   00F2CA  5841               	subwfb	(___strtoxll@a+3)^0,w,c
 15158   00F2CC  502D               	movf	(___strtoxll@prev_a+4)^0,w,c
 15159   00F2CE  5842               	subwfb	(___strtoxll@a+4)^0,w,c
 15160   00F2D0  502E               	movf	(___strtoxll@prev_a+5)^0,w,c
 15161   00F2D2  5843               	subwfb	(___strtoxll@a+5)^0,w,c
 15162   00F2D4  502F               	movf	(___strtoxll@prev_a+6)^0,w,c
 15163   00F2D6  5844               	subwfb	(___strtoxll@a+6)^0,w,c
 15164   00F2D8  5030               	movf	(___strtoxll@prev_a+7)^0,w,c
 15165   00F2DA  5845               	subwfb	(___strtoxll@a+7)^0,w,c
 15166   00F2DC  A0D8               	btfss	status,0,c
 15167   00F2DE  EF73  F079         	goto	u10211
 15168   00F2E2  EF75  F079         	goto	u10210
 15169   00F2E6                     u10211:
 15170   00F2E6  EF94  F079         	goto	l2031
 15171   00F2EA                     u10210:
 15172   00F2EA  501E               	movf	___strtoxll@is_signed^0,w,c
 15173   00F2EC  B4D8               	btfsc	status,2,c
 15174   00F2EE  EF7B  F079         	goto	u10221
 15175   00F2F2  EF7D  F079         	goto	u10220
 15176   00F2F6                     u10221:
 15177   00F2F6  EFAA  F079         	goto	l10022
 15178   00F2FA                     u10220:
 15179   00F2FA  503E               	movf	___strtoxll@a^0,w,c
 15180   00F2FC  5C35               	subwf	___strtoxll@limit^0,w,c
 15181   00F2FE  503F               	movf	(___strtoxll@a+1)^0,w,c
 15182   00F300  5836               	subwfb	(___strtoxll@limit+1)^0,w,c
 15183   00F302  5040               	movf	(___strtoxll@a+2)^0,w,c
 15184   00F304  5837               	subwfb	(___strtoxll@limit+2)^0,w,c
 15185   00F306  5041               	movf	(___strtoxll@a+3)^0,w,c
 15186   00F308  5838               	subwfb	(___strtoxll@limit+3)^0,w,c
 15187   00F30A  5042               	movf	(___strtoxll@a+4)^0,w,c
 15188   00F30C  5839               	subwfb	(___strtoxll@limit+4)^0,w,c
 15189   00F30E  5043               	movf	(___strtoxll@a+5)^0,w,c
 15190   00F310  583A               	subwfb	(___strtoxll@limit+5)^0,w,c
 15191   00F312  5044               	movf	(___strtoxll@a+6)^0,w,c
 15192   00F314  583B               	subwfb	(___strtoxll@limit+6)^0,w,c
 15193   00F316  5045               	movf	(___strtoxll@a+7)^0,w,c
 15194   00F318  583C               	subwfb	(___strtoxll@limit+7)^0,w,c
 15195   00F31A  B0D8               	btfsc	status,0,c
 15196   00F31C  EF92  F079         	goto	u10231
 15197   00F320  EF94  F079         	goto	u10230
 15198   00F324                     u10231:
 15199   00F324  EFAA  F079         	goto	l10022
 15200   00F328                     u10230:
 15201   00F328                     l2031:
 15202   00F328  C035  F03E         	movff	___strtoxll@limit,___strtoxll@a
 15203   00F32C  C036  F03F         	movff	___strtoxll@limit+1,___strtoxll@a+1
 15204   00F330  C037  F040         	movff	___strtoxll@limit+2,___strtoxll@a+2
 15205   00F334  C038  F041         	movff	___strtoxll@limit+3,___strtoxll@a+3
 15206   00F338  C039  F042         	movff	___strtoxll@limit+4,___strtoxll@a+4
 15207   00F33C  C03A  F043         	movff	___strtoxll@limit+5,___strtoxll@a+5
 15208   00F340  C03B  F044         	movff	___strtoxll@limit+6,___strtoxll@a+6
 15209   00F344  C03C  F045         	movff	___strtoxll@limit+7,___strtoxll@a+7
 15210   00F348  0E00               	movlw	0
 15211   00F34A  0100               	movlb	0	; () banked
 15212   00F34C  6FC0               	movwf	(_errno+1)& (0+255),b
 15213   00F34E  0E22               	movlw	34
 15214   00F350  6FBF               	movwf	_errno& (0+255),b
 15215   00F352                     
 15216                           ; BSR set to: 0
 15217   00F352  823D               	bsf	___strtoxll@flags^0,1,c
 15218   00F354                     l10022:
 15219   00F354  4A46               	infsnz	___strtoxll@cp^0,f,c
 15220   00F356  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 15221   00F358  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 15222   00F35E  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 15223   00F364  50DF               	movf	indf2,w,c
 15224   00F366  6E48               	movwf	___strtoxll@c^0,c
 15225   00F368  843D               	bsf	___strtoxll@flags^0,2,c
 15226   00F36A  EFB3  F078         	goto	l2017
 15227   00F36E                     l10026:
 15228   00F36E  503D               	movf	___strtoxll@flags^0,w,c
 15229   00F370  0B03               	andlw	3
 15230   00F372  06E8               	decf	wreg,f,c
 15231   00F374  A4D8               	btfss	status,2,c
 15232   00F376  EFBF  F079         	goto	u10241
 15233   00F37A  EFC1  F079         	goto	u10240
 15234   00F37E                     u10241:
 15235   00F37E  EFD1  F079         	goto	l10030
 15236   00F382                     u10240:
 15237   00F382  1E45               	comf	(___strtoxll@a+7)^0,f,c
 15238   00F384  1E44               	comf	(___strtoxll@a+6)^0,f,c
 15239   00F386  1E43               	comf	(___strtoxll@a+5)^0,f,c
 15240   00F388  1E42               	comf	(___strtoxll@a+4)^0,f,c
 15241   00F38A  1E41               	comf	(___strtoxll@a+3)^0,f,c
 15242   00F38C  1E40               	comf	(___strtoxll@a+2)^0,f,c
 15243   00F38E  1E3F               	comf	(___strtoxll@a+1)^0,f,c
 15244   00F390  6C3E               	negf	___strtoxll@a^0,c
 15245   00F392  0E00               	movlw	0
 15246   00F394  223F               	addwfc	(___strtoxll@a+1)^0,f,c
 15247   00F396  2240               	addwfc	(___strtoxll@a+2)^0,f,c
 15248   00F398  2241               	addwfc	(___strtoxll@a+3)^0,f,c
 15249   00F39A  2242               	addwfc	(___strtoxll@a+4)^0,f,c
 15250   00F39C  2243               	addwfc	(___strtoxll@a+5)^0,f,c
 15251   00F39E  2244               	addwfc	(___strtoxll@a+6)^0,f,c
 15252   00F3A0  2245               	addwfc	(___strtoxll@a+7)^0,f,c
 15253   00F3A2                     l10030:
 15254   00F3A2  501B               	movf	___strtoxll@endptr^0,w,c
 15255   00F3A4  B4D8               	btfsc	status,2,c
 15256   00F3A6  EFD7  F079         	goto	u10251
 15257   00F3AA  EFD9  F079         	goto	u10250
 15258   00F3AE                     u10251:
 15259   00F3AE  EFED  F079         	goto	l10038
 15260   00F3B2                     u10250:
 15261   00F3B2  B43D               	btfsc	___strtoxll@flags^0,2,c
 15262   00F3B4  EFDE  F079         	goto	u10261
 15263   00F3B8  EFE0  F079         	goto	u10260
 15264   00F3BC                     u10261:
 15265   00F3BC  EFE4  F079         	goto	l10036
 15266   00F3C0                     u10260:
 15267   00F3C0  C019  F046         	movff	___strtoxll@s,___strtoxll@cp
 15268   00F3C4  C01A  F047         	movff	___strtoxll@s+1,___strtoxll@cp+1
 15269   00F3C8                     l10036:
 15270   00F3C8  501B               	movf	___strtoxll@endptr^0,w,c
 15271   00F3CA  6ED9               	movwf	fsr2l,c
 15272   00F3CC  6ADA               	clrf	fsr2h,c
 15273   00F3CE  0060  F11B  FFDE   	movff	___strtoxll@cp,postinc2
 15274   00F3D4  0060  F11F  FFDD   	movff	___strtoxll@cp+1,postdec2
 15275   00F3DA                     l10038:
 15276   00F3DA  C03E  F019         	movff	___strtoxll@a,?___strtoxll
 15277   00F3DE  C03F  F01A         	movff	___strtoxll@a+1,?___strtoxll+1
 15278   00F3E2  C040  F01B         	movff	___strtoxll@a+2,?___strtoxll+2
 15279   00F3E6  C041  F01C         	movff	___strtoxll@a+3,?___strtoxll+3
 15280   00F3EA  C042  F01D         	movff	___strtoxll@a+4,?___strtoxll+4
 15281   00F3EE  C043  F01E         	movff	___strtoxll@a+5,?___strtoxll+5
 15282   00F3F2  C044  F01F         	movff	___strtoxll@a+6,?___strtoxll+6
 15283   00F3F6  C045  F020         	movff	___strtoxll@a+7,?___strtoxll+7
 15284   00F3FA  0012               	return		;funcret
 15285   00F3FC                     __end_of___strtoxll:
 15286                           	callstack 0
 15287                           
 15288 ;; *************** function ___omul *****************
 15289 ;; Defined at:
 15290 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul64.c"
 15291 ;; Parameters:    Size  Location     Type
 15292 ;;  multiplier      8    0[COMRAM] unsigned long long 
 15293 ;;  multiplicand    8    8[COMRAM] unsigned long long 
 15294 ;; Auto vars:     Size  Location     Type
 15295 ;;  product         8   16[COMRAM] unsigned long long 
 15296 ;; Return value:  Size  Location     Type
 15297 ;;                  8    0[COMRAM] unsigned long long 
 15298 ;; Registers used:
 15299 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15300 ;; Tracked objects:
 15301 ;;		On entry : 0/0
 15302 ;;		On exit  : 0/0
 15303 ;;		Unchanged: 0/0
 15304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15305 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15306 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15308 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15309 ;;Total ram usage:       24 bytes
 15310 ;; Hardware stack levels used: 1
 15311 ;; This function calls:
 15312 ;;		Nothing
 15313 ;; This function is called by:
 15314 ;;		___strtoxll
 15315 ;; This function uses a non-reentrant model
 15316 ;;
 15317                           
 15318                           	psect	text69
 15319   00B4CA                     __ptext69:
 15320                           	callstack 0
 15321   00B4CA                     ___omul:
 15322                           	callstack 24
 15323   00B4CA  EE20  F011         	lfsr	2,___omul@product
 15324   00B4CE  0E07               	movlw	7
 15325   00B4D0                     u8481:
 15326   00B4D0  6ADE               	clrf	postinc2,c
 15327   00B4D2  06E8               	decf	wreg,f,c
 15328   00B4D4  E2FD               	bc	u8481
 15329   00B4D6                     l9004:
 15330   00B4D6  A001               	btfss	___omul@multiplier^0,0,c
 15331   00B4D8  EF70  F05A         	goto	u8491
 15332   00B4DC  EF72  F05A         	goto	u8490
 15333   00B4E0                     u8491:
 15334   00B4E0  EF82  F05A         	goto	l9008
 15335   00B4E4                     u8490:
 15336   00B4E4  5009               	movf	___omul@multiplicand^0,w,c
 15337   00B4E6  2611               	addwf	___omul@product^0,f,c
 15338   00B4E8  500A               	movf	(___omul@multiplicand+1)^0,w,c
 15339   00B4EA  2212               	addwfc	(___omul@product+1)^0,f,c
 15340   00B4EC  500B               	movf	(___omul@multiplicand+2)^0,w,c
 15341   00B4EE  2213               	addwfc	(___omul@product+2)^0,f,c
 15342   00B4F0  500C               	movf	(___omul@multiplicand+3)^0,w,c
 15343   00B4F2  2214               	addwfc	(___omul@product+3)^0,f,c
 15344   00B4F4  500D               	movf	(___omul@multiplicand+4)^0,w,c
 15345   00B4F6  2215               	addwfc	(___omul@product+4)^0,f,c
 15346   00B4F8  500E               	movf	(___omul@multiplicand+5)^0,w,c
 15347   00B4FA  2216               	addwfc	(___omul@product+5)^0,f,c
 15348   00B4FC  500F               	movf	(___omul@multiplicand+6)^0,w,c
 15349   00B4FE  2217               	addwfc	(___omul@product+6)^0,f,c
 15350   00B500  5010               	movf	(___omul@multiplicand+7)^0,w,c
 15351   00B502  2218               	addwfc	(___omul@product+7)^0,f,c
 15352   00B504                     l9008:
 15353   00B504  90D8               	bcf	status,0,c
 15354   00B506  3609               	rlcf	___omul@multiplicand^0,f,c
 15355   00B508  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
 15356   00B50A  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
 15357   00B50C  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
 15358   00B50E  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
 15359   00B510  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
 15360   00B512  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
 15361   00B514  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
 15362   00B516  90D8               	bcf	status,0,c
 15363   00B518  3208               	rrcf	(___omul@multiplier+7)^0,f,c
 15364   00B51A  3207               	rrcf	(___omul@multiplier+6)^0,f,c
 15365   00B51C  3206               	rrcf	(___omul@multiplier+5)^0,f,c
 15366   00B51E  3205               	rrcf	(___omul@multiplier+4)^0,f,c
 15367   00B520  3204               	rrcf	(___omul@multiplier+3)^0,f,c
 15368   00B522  3203               	rrcf	(___omul@multiplier+2)^0,f,c
 15369   00B524  3202               	rrcf	(___omul@multiplier+1)^0,f,c
 15370   00B526  3201               	rrcf	___omul@multiplier^0,f,c
 15371   00B528  5001               	movf	___omul@multiplier^0,w,c
 15372   00B52A  1002               	iorwf	(___omul@multiplier+1)^0,w,c
 15373   00B52C  1003               	iorwf	(___omul@multiplier+2)^0,w,c
 15374   00B52E  1004               	iorwf	(___omul@multiplier+3)^0,w,c
 15375   00B530  1005               	iorwf	(___omul@multiplier+4)^0,w,c
 15376   00B532  1006               	iorwf	(___omul@multiplier+5)^0,w,c
 15377   00B534  1007               	iorwf	(___omul@multiplier+6)^0,w,c
 15378   00B536  1008               	iorwf	(___omul@multiplier+7)^0,w,c
 15379   00B538  A4D8               	btfss	status,2,c
 15380   00B53A  EFA1  F05A         	goto	u8501
 15381   00B53E  EFA3  F05A         	goto	u8500
 15382   00B542                     u8501:
 15383   00B542  EF6B  F05A         	goto	l9004
 15384   00B546                     u8500:
 15385   00B546  C011  F001         	movff	___omul@product,?___omul
 15386   00B54A  C012  F002         	movff	___omul@product+1,?___omul+1
 15387   00B54E  C013  F003         	movff	___omul@product+2,?___omul+2
 15388   00B552  C014  F004         	movff	___omul@product+3,?___omul+3
 15389   00B556  C015  F005         	movff	___omul@product+4,?___omul+4
 15390   00B55A  C016  F006         	movff	___omul@product+5,?___omul+5
 15391   00B55E  C017  F007         	movff	___omul@product+6,?___omul+6
 15392   00B562  C018  F008         	movff	___omul@product+7,?___omul+7
 15393   00B566  0012               	return		;funcret
 15394   00B568                     __end_of___omul:
 15395                           	callstack 0
 15396                           
 15397 ;; *************** function _MPU6050_Init *****************
 15398 ;; Defined at:
 15399 ;;		line 88 in file "main.c"
 15400 ;; Parameters:    Size  Location     Type
 15401 ;;		None
 15402 ;; Auto vars:     Size  Location     Type
 15403 ;;  data            1    0        unsigned char 
 15404 ;; Return value:  Size  Location     Type
 15405 ;;                  1    wreg      void 
 15406 ;; Registers used:
 15407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15408 ;; Tracked objects:
 15409 ;;		On entry : 0/0
 15410 ;;		On exit  : 0/0
 15411 ;;		Unchanged: 0/0
 15412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15417 ;;Total ram usage:        0 bytes
 15418 ;; Hardware stack levels used: 1
 15419 ;; Hardware stack levels required when called: 12
 15420 ;; This function calls:
 15421 ;;		_I2C1_Write1ByteRegister
 15422 ;; This function is called by:
 15423 ;;		_main
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text70
 15428   00A2AC                     __ptext70:
 15429                           	callstack 0
 15430   00A2AC                     _MPU6050_Init:
 15431                           	callstack 18
 15432   00A2AC                     
 15433                           ;main.c: 90:     I2C1_Write1ByteRegister(0x68, 0x6B, data);
 15434   00A2AC  0E6B               	movlw	107
 15435   00A2AE  6E17               	movwf	I2C1_Write1ByteRegister@reg^0,c
 15436   00A2B0  0E00               	movlw	0
 15437   00A2B2  6E18               	movwf	I2C1_Write1ByteRegister@data^0,c
 15438   00A2B4  0E68               	movlw	104
 15439   00A2B6  ECDE  F056         	call	_I2C1_Write1ByteRegister
 15440   00A2BA  0012               	return		;funcret
 15441   00A2BC                     __end_of_MPU6050_Init:
 15442                           	callstack 0
 15443                           
 15444 ;; *************** function _I2C1_Write1ByteRegister *****************
 15445 ;; Defined at:
 15446 ;;		line 91 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15447 ;; Parameters:    Size  Location     Type
 15448 ;;  address         1    wreg     unsigned char 
 15449 ;;  reg             1   22[COMRAM] unsigned char 
 15450 ;;  data            1   23[COMRAM] unsigned char 
 15451 ;; Auto vars:     Size  Location     Type
 15452 ;;  address         1   24[COMRAM] unsigned char 
 15453 ;; Return value:  Size  Location     Type
 15454 ;;                  1    wreg      void 
 15455 ;; Registers used:
 15456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15457 ;; Tracked objects:
 15458 ;;		On entry : 0/0
 15459 ;;		On exit  : 0/0
 15460 ;;		Unchanged: 0/0
 15461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15465 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15466 ;;Total ram usage:        3 bytes
 15467 ;; Hardware stack levels used: 1
 15468 ;; Hardware stack levels required when called: 11
 15469 ;; This function calls:
 15470 ;;		_I2C1_Close
 15471 ;;		_I2C1_MasterWrite
 15472 ;;		_I2C1_Open
 15473 ;;		_I2C1_SetAddressNackCallback
 15474 ;;		_I2C1_SetBuffer
 15475 ;;		_I2C1_SetDataCompleteCallback
 15476 ;; This function is called by:
 15477 ;;		_MPU6050_Init
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           	psect	text71
 15482   00ADBC                     __ptext71:
 15483                           	callstack 0
 15484   00ADBC                     _I2C1_Write1ByteRegister:
 15485                           	callstack 18
 15486                           
 15487                           ;incstack = 0
 15488                           ;I2C1_Write1ByteRegister@address stored from wreg
 15489   00ADBC  6E19               	movwf	I2C1_Write1ByteRegister@address^0,c
 15490   00ADBE                     l10546:
 15491   00ADBE  5019               	movf	I2C1_Write1ByteRegister@address^0,w,c
 15492   00ADC0  ECCE  F059         	call	_I2C1_Open
 15493   00ADC4  0900               	iorlw	0
 15494   00ADC6  B4D8               	btfsc	status,2,c
 15495   00ADC8  EFE8  F056         	goto	u10991
 15496   00ADCC  EFEA  F056         	goto	u10990
 15497   00ADD0                     u10991:
 15498   00ADD0  EFDF  F056         	goto	l10546
 15499   00ADD4                     u10990:
 15500   00ADD4                     
 15501                           ;mcc_generated_files/examples/i2c1_master_example.c: 94:     I2C1_SetDataCompleteCallbac
      +                          k(wr1RegCompleteHandler,&data);
 15502   00ADD4  0E9A               	movlw	low _wr1RegCompleteHandler
 15503   00ADD6  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 15504   00ADD8  0EA5               	movlw	high _wr1RegCompleteHandler
 15505   00ADDA  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 15506   00ADDC  0E18               	movlw	low I2C1_Write1ByteRegister@data
 15507   00ADDE  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 15508   00ADE0  6A09               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 15509   00ADE2  ECB6  F051         	call	_I2C1_SetDataCompleteCallback	;wreg free
 15510   00ADE6                     
 15511                           ;mcc_generated_files/examples/i2c1_master_example.c: 95:     I2C1_SetBuffer(&reg,1);
 15512   00ADE6  0E17               	movlw	low I2C1_Write1ByteRegister@reg
 15513   00ADE8  6E01               	movwf	I2C1_SetBuffer@buffer^0,c
 15514   00ADEA  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 15515   00ADEC  0E00               	movlw	0
 15516   00ADEE  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 15517   00ADF0  0E01               	movlw	1
 15518   00ADF2  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 15519   00ADF4  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
 15520   00ADF8                     
 15521                           ;mcc_generated_files/examples/i2c1_master_example.c: 96:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 15522   00ADF8  0E00               	movlw	0
 15523   00ADFA  6E06               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 15524   00ADFC  0E00               	movlw	0
 15525   00ADFE  6E07               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 15526   00AE00  0E00               	movlw	0
 15527   00AE02  6E08               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 15528   00AE04  0E00               	movlw	0
 15529   00AE06  6E09               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 15530   00AE08  ECC2  F051         	call	_I2C1_SetAddressNackCallback	;wreg free
 15531   00AE0C                     
 15532                           ;mcc_generated_files/examples/i2c1_master_example.c: 97:     I2C1_MasterWrite();
 15533   00AE0C  EC05  F051         	call	_I2C1_MasterWrite	;wreg free
 15534   00AE10                     l10556:
 15535   00AE10  EC75  F052         	call	_I2C1_Close	;wreg free
 15536   00AE14  06E8               	decf	wreg,f,c
 15537   00AE16  B4D8               	btfsc	status,2,c
 15538   00AE18  EF10  F057         	goto	u11001
 15539   00AE1C  EF12  F057         	goto	u11000
 15540   00AE20                     u11001:
 15541   00AE20  EF08  F057         	goto	l10556
 15542   00AE24                     u11000:
 15543   00AE24  0012               	return		;funcret
 15544   00AE26                     __end_of_I2C1_Write1ByteRegister:
 15545                           	callstack 0
 15546                           
 15547 ;; *************** function _LoadLastSettings *****************
 15548 ;; Defined at:
 15549 ;;		line 393 in file "main.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;		None
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;  buffer          8   40[COMRAM] unsigned char [8]
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  1    wreg      void 
 15556 ;; Registers used:
 15557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15564 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15566 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15567 ;;Total ram usage:        8 bytes
 15568 ;; Hardware stack levels used: 1
 15569 ;; Hardware stack levels required when called: 14
 15570 ;; This function calls:
 15571 ;;		_EEPROM_ReadBlock
 15572 ;;		_memcpy
 15573 ;; This function is called by:
 15574 ;;		_main
 15575 ;; This function uses a non-reentrant model
 15576 ;;
 15577                           
 15578                           	psect	text72
 15579   00AA06                     __ptext72:
 15580                           	callstack 0
 15581   00AA06                     _LoadLastSettings:
 15582                           	callstack 16
 15583   00AA06                     
 15584                           ;main.c: 394:     uint8_t buffer[8];;main.c: 396:     EEPROM_ReadBlock(0x50, 0x0002, buf
      +                          fer, 8);
 15585   00AA06  0E00               	movlw	0
 15586   00AA08  6E22               	movwf	(EEPROM_ReadBlock@memoryAddress+1)^0,c
 15587   00AA0A  0E02               	movlw	2
 15588   00AA0C  6E21               	movwf	EEPROM_ReadBlock@memoryAddress^0,c
 15589   00AA0E  0E29               	movlw	low LoadLastSettings@buffer
 15590   00AA10  6E23               	movwf	EEPROM_ReadBlock@data^0,c
 15591   00AA12  6A24               	clrf	(EEPROM_ReadBlock@data+1)^0,c
 15592   00AA14  0E08               	movlw	8
 15593   00AA16  6E25               	movwf	EEPROM_ReadBlock@size^0,c
 15594   00AA18  0E50               	movlw	80
 15595   00AA1A  EC98  F054         	call	_EEPROM_ReadBlock
 15596   00AA1E                     
 15597                           ;main.c: 397:     memcpy(&Tm, &buffer[0], sizeof(uint32_t));
 15598   00AA1E  0EE5               	movlw	low _Tm
 15599   00AA20  6E01               	movwf	memcpy@d1^0,c
 15600   00AA22  6A02               	clrf	(memcpy@d1+1)^0,c
 15601   00AA24  0E29               	movlw	low LoadLastSettings@buffer
 15602   00AA26  6E03               	movwf	memcpy@s1^0,c
 15603   00AA28  6A04               	clrf	(memcpy@s1+1)^0,c
 15604   00AA2A  0E00               	movlw	0
 15605   00AA2C  6E06               	movwf	(memcpy@n+1)^0,c
 15606   00AA2E  0E04               	movlw	4
 15607   00AA30  6E05               	movwf	memcpy@n^0,c
 15608   00AA32  EC1C  F056         	call	_memcpy	;wreg free
 15609   00AA36                     
 15610                           ;main.c: 398:     memcpy(&Ndat, &buffer[4], sizeof(uint32_t));
 15611   00AA36  0EE9               	movlw	low _Ndat
 15612   00AA38  6E01               	movwf	memcpy@d1^0,c
 15613   00AA3A  6A02               	clrf	(memcpy@d1+1)^0,c
 15614   00AA3C  0E2D               	movlw	low (LoadLastSettings@buffer+4)
 15615   00AA3E  6E03               	movwf	memcpy@s1^0,c
 15616   00AA40  6A04               	clrf	(memcpy@s1+1)^0,c
 15617   00AA42  0E00               	movlw	0
 15618   00AA44  6E06               	movwf	(memcpy@n+1)^0,c
 15619   00AA46  0E04               	movlw	4
 15620   00AA48  6E05               	movwf	memcpy@n^0,c
 15621   00AA4A  EC1C  F056         	call	_memcpy	;wreg free
 15622   00AA4E  0012               	return		;funcret
 15623   00AA50                     __end_of_LoadLastSettings:
 15624                           	callstack 0
 15625                           
 15626 ;; *************** function _memcpy *****************
 15627 ;; Defined at:
 15628 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
 15629 ;; Parameters:    Size  Location     Type
 15630 ;;  d1              2    0[COMRAM] PTR void 
 15631 ;;		 -> dbuf(80), ReadAllEEPROMDataCSV@gz_read(4), ReadAllEEPROMDataCSV@gy_read(4), ReadAllEEPROMDataCSV@gx_read(4), 
 15632 ;;		 -> ReadAllEEPROMDataCSV@az_read(4), ReadAllEEPROMDataCSV@ay_read(4), ReadAllEEPROMDataCSV@ax_read(4), StoreLastSett
      +ings@buffer(8), 
 15633 ;;		 -> eepromBuffer(24), ReadAndSendEEPROMData@gz_read(4), ReadAndSendEEPROMData@gy_read(4), ReadAndSendEEPROMData@gx_r
      +ead(4), 
 15634 ;;		 -> ReadAndSendEEPROMData@az_read(4), ReadAndSendEEPROMData@ay_read(4), ReadAndSendEEPROMData@ax_read(4), ReadAndSen
      +dEEPROMDataCSV@gz_read(4), 
 15635 ;;		 -> ReadAndSendEEPROMDataCSV@gy_read(4), ReadAndSendEEPROMDataCSV@gx_read(4), ReadAndSendEEPROMDataCSV@az_read(4), R
      +eadAndSendEEPROMDataCSV@ay_read(4), 
 15636 ;;		 -> ReadAndSendEEPROMDataCSV@ax_read(4), Tm(4), Ndat(4), 
 15637 ;;  s1              2    2[COMRAM] PTR const void 
 15638 ;;		 -> dbuf(80), ReadAllEEPROMDataCSV@eepromReadBuffer(24), LoadLastSettings@buffer(8), gz(4), 
 15639 ;;		 -> gy(4), gx(4), az(4), ay(4), 
 15640 ;;		 -> ax(4), ReadAndSendEEPROMData@eepromReadBuffer(24), ReadAndSendEEPROMDataCSV@eepromReadBuffer(24), Tm(4), 
 15641 ;;		 -> Ndat(4), 
 15642 ;;  n               2    4[COMRAM] unsigned int 
 15643 ;; Auto vars:     Size  Location     Type
 15644 ;;  s               2    9[COMRAM] PTR const unsigned char 
 15645 ;;		 -> dbuf(80), ReadAllEEPROMDataCSV@eepromReadBuffer(24), LoadLastSettings@buffer(8), gz(4), 
 15646 ;;		 -> gy(4), gx(4), az(4), ay(4), 
 15647 ;;		 -> ax(4), ReadAndSendEEPROMData@eepromReadBuffer(24), ReadAndSendEEPROMDataCSV@eepromReadBuffer(24), Tm(4), 
 15648 ;;		 -> Ndat(4), 
 15649 ;;  d               2    7[COMRAM] PTR unsigned char 
 15650 ;;		 -> dbuf(80), ReadAllEEPROMDataCSV@gz_read(4), ReadAllEEPROMDataCSV@gy_read(4), ReadAllEEPROMDataCSV@gx_read(4), 
 15651 ;;		 -> ReadAllEEPROMDataCSV@az_read(4), ReadAllEEPROMDataCSV@ay_read(4), ReadAllEEPROMDataCSV@ax_read(4), StoreLastSett
      +ings@buffer(8), 
 15652 ;;		 -> eepromBuffer(24), ReadAndSendEEPROMData@gz_read(4), ReadAndSendEEPROMData@gy_read(4), ReadAndSendEEPROMData@gx_r
      +ead(4), 
 15653 ;;		 -> ReadAndSendEEPROMData@az_read(4), ReadAndSendEEPROMData@ay_read(4), ReadAndSendEEPROMData@ax_read(4), ReadAndSen
      +dEEPROMDataCSV@gz_read(4), 
 15654 ;;		 -> ReadAndSendEEPROMDataCSV@gy_read(4), ReadAndSendEEPROMDataCSV@gx_read(4), ReadAndSendEEPROMDataCSV@az_read(4), R
      +eadAndSendEEPROMDataCSV@ay_read(4), 
 15655 ;;		 -> ReadAndSendEEPROMDataCSV@ax_read(4), Tm(4), Ndat(4), 
 15656 ;;  tmp             1    6[COMRAM] unsigned char 
 15657 ;; Return value:  Size  Location     Type
 15658 ;;                  2    0[COMRAM] PTR void 
 15659 ;; Registers used:
 15660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15661 ;; Tracked objects:
 15662 ;;		On entry : 0/0
 15663 ;;		On exit  : 0/0
 15664 ;;		Unchanged: 0/0
 15665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15666 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15667 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15669 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15670 ;;Total ram usage:       11 bytes
 15671 ;; Hardware stack levels used: 1
 15672 ;; This function calls:
 15673 ;;		Nothing
 15674 ;; This function is called by:
 15675 ;;		_ReadAndSendEEPROMDataCSV
 15676 ;;		_ReadAndSendEEPROMData
 15677 ;;		_StartLogging
 15678 ;;		_StoreLastSettings
 15679 ;;		_LoadLastSettings
 15680 ;;		_ReadAllEEPROMDataCSV
 15681 ;;		_efgtoa
 15682 ;; This function uses a non-reentrant model
 15683 ;;
 15684                           
 15685                           	psect	text73
 15686   00AC38                     __ptext73:
 15687                           	callstack 0
 15688   00AC38                     _memcpy:
 15689                           	callstack 26
 15690   00AC38  C003  F00A         	movff	memcpy@s1,memcpy@s
 15691   00AC3C  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 15692   00AC40  C001  F008         	movff	memcpy@d1,memcpy@d
 15693   00AC44  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 15694   00AC48  EF3B  F056         	goto	l8994
 15695   00AC4C                     l8986:
 15696   00AC4C  0060  F02B  FFD9   	movff	memcpy@s,fsr2l
 15697   00AC52  0060  F02F  FFDA   	movff	memcpy@s+1,fsr2h
 15698   00AC58  50DF               	movf	indf2,w,c
 15699   00AC5A  6E07               	movwf	memcpy@tmp^0,c
 15700   00AC5C  4A0A               	infsnz	memcpy@s^0,f,c
 15701   00AC5E  2A0B               	incf	(memcpy@s+1)^0,f,c
 15702   00AC60  0060  F023  FFD9   	movff	memcpy@d,fsr2l
 15703   00AC66  0060  F027  FFDA   	movff	memcpy@d+1,fsr2h
 15704   00AC6C  0060  F01F  FFDF   	movff	memcpy@tmp,indf2
 15705   00AC72  4A08               	infsnz	memcpy@d^0,f,c
 15706   00AC74  2A09               	incf	(memcpy@d+1)^0,f,c
 15707   00AC76                     l8994:
 15708   00AC76  0605               	decf	memcpy@n^0,f,c
 15709   00AC78  A0D8               	btfss	status,0,c
 15710   00AC7A  0606               	decf	(memcpy@n+1)^0,f,c
 15711   00AC7C  2805               	incf	memcpy@n^0,w,c
 15712   00AC7E  E106               	bnz	u8471
 15713   00AC80  2806               	incf	(memcpy@n+1)^0,w,c
 15714   00AC82  A4D8               	btfss	status,2,c
 15715   00AC84  EF46  F056         	goto	u8471
 15716   00AC88  EF48  F056         	goto	u8470
 15717   00AC8C                     u8471:
 15718   00AC8C  EF26  F056         	goto	l8986
 15719   00AC90                     u8470:
 15720   00AC90  0012               	return		;funcret
 15721   00AC92                     __end_of_memcpy:
 15722                           	callstack 0
 15723                           
 15724 ;; *************** function _LoadCurrentAddressEEPROM *****************
 15725 ;; Defined at:
 15726 ;;		line 282 in file "main.c"
 15727 ;; Parameters:    Size  Location     Type
 15728 ;;		None
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;  addressBuffe    2   42[COMRAM] unsigned char [2]
 15731 ;; Return value:  Size  Location     Type
 15732 ;;                  1    wreg      void 
 15733 ;; Registers used:
 15734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15735 ;; Tracked objects:
 15736 ;;		On entry : 0/0
 15737 ;;		On exit  : 0/0
 15738 ;;		Unchanged: 0/0
 15739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15744 ;;Total ram usage:        4 bytes
 15745 ;; Hardware stack levels used: 1
 15746 ;; Hardware stack levels required when called: 14
 15747 ;; This function calls:
 15748 ;;		_EEPROM_ReadBlock
 15749 ;; This function is called by:
 15750 ;;		_main
 15751 ;; This function uses a non-reentrant model
 15752 ;;
 15753                           
 15754                           	psect	text74
 15755   00A6EC                     __ptext74:
 15756                           	callstack 0
 15757   00A6EC                     _LoadCurrentAddressEEPROM:
 15758                           	callstack 16
 15759   00A6EC                     
 15760                           ;main.c: 283:     uint8_t addressBuffer[2];;main.c: 285:     EEPROM_ReadBlock(0x50, 0x00
      +                          00, addressBuffer, 2);
 15761   00A6EC  0E00               	movlw	0
 15762   00A6EE  6E22               	movwf	(EEPROM_ReadBlock@memoryAddress+1)^0,c
 15763   00A6F0  0E00               	movlw	0
 15764   00A6F2  6E21               	movwf	EEPROM_ReadBlock@memoryAddress^0,c
 15765   00A6F4  0E2B               	movlw	low LoadCurrentAddressEEPROM@addressBuffer
 15766   00A6F6  6E23               	movwf	EEPROM_ReadBlock@data^0,c
 15767   00A6F8  6A24               	clrf	(EEPROM_ReadBlock@data+1)^0,c
 15768   00A6FA  0E02               	movlw	2
 15769   00A6FC  6E25               	movwf	EEPROM_ReadBlock@size^0,c
 15770   00A6FE  0E50               	movlw	80
 15771   00A700  EC98  F054         	call	_EEPROM_ReadBlock
 15772   00A704                     
 15773                           ;main.c: 286:     currentBlockEEPROM1 = (addressBuffer[0] << 8) | addressBuffer[1];
 15774   00A704  502C               	movf	(LoadCurrentAddressEEPROM@addressBuffer+1)^0,w,c
 15775   00A706  C02B  F029         	movff	LoadCurrentAddressEEPROM@addressBuffer,??_LoadCurrentAddressEEPROM
 15776   00A70A  6A2A               	clrf	(??_LoadCurrentAddressEEPROM+1)^0,c
 15777   00A70C  C029  F02A         	movff	??_LoadCurrentAddressEEPROM,??_LoadCurrentAddressEEPROM+1
 15778   00A710  6A29               	clrf	??_LoadCurrentAddressEEPROM^0,c
 15779   00A712  1029               	iorwf	??_LoadCurrentAddressEEPROM^0,w,c
 15780   00A714  0100               	movlb	0	; () banked
 15781   00A716  6FC7               	movwf	_currentBlockEEPROM1& (0+255),b
 15782   00A718  502A               	movf	(??_LoadCurrentAddressEEPROM+1)^0,w,c
 15783   00A71A  6FC8               	movwf	(_currentBlockEEPROM1+1)& (0+255),b
 15784   00A71C                     
 15785                           ; BSR set to: 0
 15786                           ;main.c: 289:     currentBlockEEPROM2 = currentBlockEEPROM1;
 15787   00A71C  C0C7  F0C5         	movff	_currentBlockEEPROM1,_currentBlockEEPROM2
 15788   00A720  C0C8  F0C6         	movff	_currentBlockEEPROM1+1,_currentBlockEEPROM2+1
 15789   00A724                     
 15790                           ; BSR set to: 0
 15791   00A724  0012               	return		;funcret
 15792   00A726                     __end_of_LoadCurrentAddressEEPROM:
 15793                           	callstack 0
 15794                           
 15795 ;; *************** function _EEPROM_ReadBlock *****************
 15796 ;; Defined at:
 15797 ;;		line 148 in file "main.c"
 15798 ;; Parameters:    Size  Location     Type
 15799 ;;  deviceAddres    1    wreg     unsigned char 
 15800 ;;  memoryAddres    2   32[COMRAM] unsigned short 
 15801 ;;  data            2   34[COMRAM] PTR unsigned char 
 15802 ;;		 -> ReadAllEEPROMDataCSV@eepromReadBuffer(24), LoadLastSettings@buffer(8), LoadCurrentAddressEEPROM@addressBuffer(2)
      +, ReadAndSendEEPROMData@eepromReadBuffer(24), 
 15803 ;;		 -> ReadAndSendEEPROMDataCSV@eepromReadBuffer(24), 
 15804 ;;  size            1   36[COMRAM] unsigned char 
 15805 ;; Auto vars:     Size  Location     Type
 15806 ;;  deviceAddres    1   38[COMRAM] unsigned char 
 15807 ;;  i               1   39[COMRAM] unsigned char 
 15808 ;; Return value:  Size  Location     Type
 15809 ;;                  1    wreg      void 
 15810 ;; Registers used:
 15811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15812 ;; Tracked objects:
 15813 ;;		On entry : 0/0
 15814 ;;		On exit  : 0/0
 15815 ;;		Unchanged: 0/0
 15816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15817 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15820 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15821 ;;Total ram usage:        8 bytes
 15822 ;; Hardware stack levels used: 1
 15823 ;; Hardware stack levels required when called: 13
 15824 ;; This function calls:
 15825 ;;		_EEPROM_ReadByte
 15826 ;; This function is called by:
 15827 ;;		_ReadAndSendEEPROMDataCSV
 15828 ;;		_ReadAndSendEEPROMData
 15829 ;;		_LoadCurrentAddressEEPROM
 15830 ;;		_LoadLastSettings
 15831 ;;		_ReadAllEEPROMDataCSV
 15832 ;; This function uses a non-reentrant model
 15833 ;;
 15834                           
 15835                           	psect	text75
 15836   00A930                     __ptext75:
 15837                           	callstack 0
 15838   00A930                     _EEPROM_ReadBlock:
 15839                           	callstack 15
 15840                           
 15841                           ; BSR set to: 0
 15842                           ;incstack = 0
 15843                           ;EEPROM_ReadBlock@deviceAddress stored from wreg
 15844   00A930  6E27               	movwf	EEPROM_ReadBlock@deviceAddress^0,c
 15845   00A932                     
 15846                           ;main.c: 149:     for (uint8_t i = 0; i < size; i++) {
 15847   00A932  0E00               	movlw	0
 15848   00A934  6E28               	movwf	EEPROM_ReadBlock@i^0,c
 15849   00A936  EFB1  F054         	goto	l10460
 15850   00A93A                     l10456:
 15851                           
 15852                           ;main.c: 150:         data[i] = EEPROM_ReadByte(deviceAddress, memoryAddress + i);
 15853   00A93A  5028               	movf	EEPROM_ReadBlock@i^0,w,c
 15854   00A93C  2421               	addwf	EEPROM_ReadBlock@memoryAddress^0,w,c
 15855   00A93E  6E1B               	movwf	EEPROM_ReadByte@memoryAddress^0,c
 15856   00A940  0E00               	movlw	0
 15857   00A942  2022               	addwfc	(EEPROM_ReadBlock@memoryAddress+1)^0,w,c
 15858   00A944  6E1C               	movwf	(EEPROM_ReadByte@memoryAddress+1)^0,c
 15859   00A946  5027               	movf	EEPROM_ReadBlock@deviceAddress^0,w,c
 15860   00A948  EC3F  F053         	call	_EEPROM_ReadByte
 15861   00A94C  6E26               	movwf	??_EEPROM_ReadBlock^0,c
 15862   00A94E  5028               	movf	EEPROM_ReadBlock@i^0,w,c
 15863   00A950  2423               	addwf	EEPROM_ReadBlock@data^0,w,c
 15864   00A952  6ED9               	movwf	fsr2l,c
 15865   00A954  0E00               	movlw	0
 15866   00A956  2024               	addwfc	(EEPROM_ReadBlock@data+1)^0,w,c
 15867   00A958  6EDA               	movwf	fsr2h,c
 15868   00A95A  0060  F09B  FFDF   	movff	??_EEPROM_ReadBlock,indf2
 15869   00A960                     
 15870                           ;main.c: 151:     }
 15871   00A960  2A28               	incf	EEPROM_ReadBlock@i^0,f,c
 15872   00A962                     l10460:
 15873   00A962  5025               	movf	EEPROM_ReadBlock@size^0,w,c
 15874   00A964  5C28               	subwf	EEPROM_ReadBlock@i^0,w,c
 15875   00A966  A0D8               	btfss	status,0,c
 15876   00A968  EFB8  F054         	goto	u10841
 15877   00A96C  EFBA  F054         	goto	u10840
 15878   00A970                     u10841:
 15879   00A970  EF9D  F054         	goto	l10456
 15880   00A974                     u10840:
 15881   00A974  0012               	return		;funcret
 15882   00A976                     __end_of_EEPROM_ReadBlock:
 15883                           	callstack 0
 15884                           
 15885 ;; *************** function _EEPROM_ReadByte *****************
 15886 ;; Defined at:
 15887 ;;		line 126 in file "main.c"
 15888 ;; Parameters:    Size  Location     Type
 15889 ;;  deviceAddres    1    wreg     unsigned char 
 15890 ;;  memoryAddres    2   26[COMRAM] unsigned short 
 15891 ;; Auto vars:     Size  Location     Type
 15892 ;;  deviceAddres    1   30[COMRAM] unsigned char 
 15893 ;;  addressBuffe    2   28[COMRAM] unsigned char [2]
 15894 ;;  data            1   31[COMRAM] unsigned char 
 15895 ;; Return value:  Size  Location     Type
 15896 ;;                  1    wreg      unsigned char 
 15897 ;; Registers used:
 15898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15899 ;; Tracked objects:
 15900 ;;		On entry : 0/0
 15901 ;;		On exit  : 0/0
 15902 ;;		Unchanged: 0/0
 15903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15905 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15908 ;;Total ram usage:        6 bytes
 15909 ;; Hardware stack levels used: 1
 15910 ;; Hardware stack levels required when called: 12
 15911 ;; This function calls:
 15912 ;;		_I2C1_ReadNBytes
 15913 ;;		_I2C1_WriteNBytes
 15914 ;; This function is called by:
 15915 ;;		_EEPROM_ReadBlock
 15916 ;; This function uses a non-reentrant model
 15917 ;;
 15918                           
 15919                           	psect	text76
 15920   00A67E                     __ptext76:
 15921                           	callstack 0
 15922   00A67E                     _EEPROM_ReadByte:
 15923                           	callstack 15
 15924                           
 15925                           ;incstack = 0
 15926                           ;EEPROM_ReadByte@deviceAddress stored from wreg
 15927   00A67E  6E1F               	movwf	EEPROM_ReadByte@deviceAddress^0,c
 15928   00A680                     
 15929                           ;main.c: 127:     uint8_t addressBuffer[2];;main.c: 128:     addressBuffer[0] = (memoryA
      +                          ddress >> 8) & 0xFF;
 15930   00A680  501C               	movf	(EEPROM_ReadByte@memoryAddress+1)^0,w,c
 15931   00A682  6E1D               	movwf	EEPROM_ReadByte@addressBuffer^0,c
 15932   00A684                     
 15933                           ;main.c: 129:     addressBuffer[1] = memoryAddress & 0xFF;
 15934   00A684  C01B  F01E         	movff	EEPROM_ReadByte@memoryAddress,EEPROM_ReadByte@addressBuffer+1
 15935   00A688                     
 15936                           ;main.c: 131:     I2C1_WriteNBytes(deviceAddress, addressBuffer, 2);
 15937   00A688  0E1D               	movlw	low EEPROM_ReadByte@addressBuffer
 15938   00A68A  6E17               	movwf	I2C1_WriteNBytes@data^0,c
 15939   00A68C  0E00               	movlw	0
 15940   00A68E  6E19               	movwf	(I2C1_WriteNBytes@len+1)^0,c
 15941   00A690  0E02               	movlw	2
 15942   00A692  6E18               	movwf	I2C1_WriteNBytes@len^0,c
 15943   00A694  501F               	movf	EEPROM_ReadByte@deviceAddress^0,w,c
 15944   00A696  ECF0  F055         	call	_I2C1_WriteNBytes
 15945   00A69A                     
 15946                           ;main.c: 133:     uint8_t data = 0;
 15947   00A69A  0E00               	movlw	0
 15948   00A69C  6E20               	movwf	EEPROM_ReadByte@data^0,c
 15949   00A69E                     
 15950                           ;main.c: 134:     I2C1_ReadNBytes(deviceAddress, &data, 1);
 15951   00A69E  0E20               	movlw	low EEPROM_ReadByte@data
 15952   00A6A0  6E17               	movwf	I2C1_ReadNBytes@data^0,c
 15953   00A6A2  0E00               	movlw	0
 15954   00A6A4  6E19               	movwf	(I2C1_ReadNBytes@len+1)^0,c
 15955   00A6A6  0E01               	movlw	1
 15956   00A6A8  6E18               	movwf	I2C1_ReadNBytes@len^0,c
 15957   00A6AA  501F               	movf	EEPROM_ReadByte@deviceAddress^0,w,c
 15958   00A6AC  EC10  F054         	call	_I2C1_ReadNBytes
 15959   00A6B0                     
 15960                           ;main.c: 136:     return data;
 15961   00A6B0  5020               	movf	EEPROM_ReadByte@data^0,w,c
 15962   00A6B2  0012               	return		;funcret
 15963   00A6B4                     __end_of_EEPROM_ReadByte:
 15964                           	callstack 0
 15965                           
 15966 ;; *************** function _I2C1_WriteNBytes *****************
 15967 ;; Defined at:
 15968 ;;		line 111 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  address         1    wreg     unsigned char 
 15971 ;;  data            1   22[COMRAM] PTR unsigned char 
 15972 ;;		 -> EEPROM_ReadByte@addressBuffer(2), EEPROM_WriteByte@buffer(3), 
 15973 ;;  len             2   23[COMRAM] unsigned int 
 15974 ;; Auto vars:     Size  Location     Type
 15975 ;;  address         1   25[COMRAM] unsigned char 
 15976 ;; Return value:  Size  Location     Type
 15977 ;;                  1    wreg      void 
 15978 ;; Registers used:
 15979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15980 ;; Tracked objects:
 15981 ;;		On entry : 0/0
 15982 ;;		On exit  : 0/0
 15983 ;;		Unchanged: 0/0
 15984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15985 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15989 ;;Total ram usage:        4 bytes
 15990 ;; Hardware stack levels used: 1
 15991 ;; Hardware stack levels required when called: 11
 15992 ;; This function calls:
 15993 ;;		_I2C1_Close
 15994 ;;		_I2C1_MasterWrite
 15995 ;;		_I2C1_Open
 15996 ;;		_I2C1_SetAddressNackCallback
 15997 ;;		_I2C1_SetBuffer
 15998 ;; This function is called by:
 15999 ;;		_EEPROM_WriteByte
 16000 ;;		_EEPROM_ReadByte
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text77
 16005   00ABE0                     __ptext77:
 16006                           	callstack 0
 16007   00ABE0                     _I2C1_WriteNBytes:
 16008                           	callstack 16
 16009                           
 16010                           ;incstack = 0
 16011                           ;I2C1_WriteNBytes@address stored from wreg
 16012   00ABE0  6E1A               	movwf	I2C1_WriteNBytes@address^0,c
 16013   00ABE2                     l10044:
 16014   00ABE2  501A               	movf	I2C1_WriteNBytes@address^0,w,c
 16015   00ABE4  ECCE  F059         	call	_I2C1_Open
 16016   00ABE8  0900               	iorlw	0
 16017   00ABEA  B4D8               	btfsc	status,2,c
 16018   00ABEC  EFFA  F055         	goto	u10271
 16019   00ABF0  EFFC  F055         	goto	u10270
 16020   00ABF4                     u10271:
 16021   00ABF4  EFF1  F055         	goto	l10044
 16022   00ABF8                     u10270:
 16023   00ABF8                     
 16024                           ;mcc_generated_files/examples/i2c1_master_example.c: 114:     I2C1_SetBuffer(data,len);
 16025   00ABF8  C017  F001         	movff	I2C1_WriteNBytes@data,I2C1_SetBuffer@buffer
 16026   00ABFC  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 16027   00ABFE  C018  F003         	movff	I2C1_WriteNBytes@len,I2C1_SetBuffer@bufferSize
 16028   00AC02  C019  F004         	movff	I2C1_WriteNBytes@len+1,I2C1_SetBuffer@bufferSize+1
 16029   00AC06  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
 16030   00AC0A                     
 16031                           ;mcc_generated_files/examples/i2c1_master_example.c: 115:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 16032   00AC0A  0E00               	movlw	0
 16033   00AC0C  6E06               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 16034   00AC0E  0E00               	movlw	0
 16035   00AC10  6E07               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 16036   00AC12  0E00               	movlw	0
 16037   00AC14  6E08               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 16038   00AC16  0E00               	movlw	0
 16039   00AC18  6E09               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 16040   00AC1A  ECC2  F051         	call	_I2C1_SetAddressNackCallback	;wreg free
 16041   00AC1E                     
 16042                           ;mcc_generated_files/examples/i2c1_master_example.c: 116:     I2C1_MasterWrite();
 16043   00AC1E  EC05  F051         	call	_I2C1_MasterWrite	;wreg free
 16044   00AC22                     l10052:
 16045   00AC22  EC75  F052         	call	_I2C1_Close	;wreg free
 16046   00AC26  06E8               	decf	wreg,f,c
 16047   00AC28  B4D8               	btfsc	status,2,c
 16048   00AC2A  EF19  F056         	goto	u10281
 16049   00AC2E  EF1B  F056         	goto	u10280
 16050   00AC32                     u10281:
 16051   00AC32  EF11  F056         	goto	l10052
 16052   00AC36                     u10280:
 16053   00AC36  0012               	return		;funcret
 16054   00AC38                     __end_of_I2C1_WriteNBytes:
 16055                           	callstack 0
 16056                           
 16057 ;; *************** function _I2C1_SetAddressNackCallback *****************
 16058 ;; Defined at:
 16059 ;;		line 313 in file "mcc_generated_files/i2c1_master.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 16062 ;;		 -> NULL(1), 
 16063 ;;  ptr             2    7[COMRAM] PTR void 
 16064 ;;		 -> NULL(0), 
 16065 ;; Auto vars:     Size  Location     Type
 16066 ;;		None
 16067 ;; Return value:  Size  Location     Type
 16068 ;;                  1    wreg      void 
 16069 ;; Registers used:
 16070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16071 ;; Tracked objects:
 16072 ;;		On entry : 0/0
 16073 ;;		On exit  : 0/0
 16074 ;;		Unchanged: 0/0
 16075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16079 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16080 ;;Total ram usage:        4 bytes
 16081 ;; Hardware stack levels used: 1
 16082 ;; Hardware stack levels required when called: 1
 16083 ;; This function calls:
 16084 ;;		_I2C1_SetCallback
 16085 ;; This function is called by:
 16086 ;;		_I2C1_Write1ByteRegister
 16087 ;;		_I2C1_WriteNBytes
 16088 ;;		_I2C1_ReadDataBlock
 16089 ;;		_I2C1_Read1ByteRegister
 16090 ;;		_I2C1_Read2ByteRegister
 16091 ;;		_I2C1_Write2ByteRegister
 16092 ;; This function uses a non-reentrant model
 16093 ;;
 16094                           
 16095                           	psect	text78
 16096   00A384                     __ptext78:
 16097                           	callstack 0
 16098   00A384                     _I2C1_SetAddressNackCallback:
 16099                           	callstack 25
 16100   00A384                     
 16101                           ;mcc_generated_files/i2c1_master.c: 313: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 314: {;mcc_generated_files/i2c1_mast
      +                          er.c: 315:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 16102   00A384  C006  F001         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 16103   00A388  C007  F002         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 16104   00A38C  C008  F003         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 16105   00A390  C009  F004         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 16106   00A394  0E02               	movlw	2
 16107   00A396  EC4B  F059         	call	_I2C1_SetCallback
 16108   00A39A  0012               	return		;funcret
 16109   00A39C                     __end_of_I2C1_SetAddressNackCallback:
 16110                           	callstack 0
 16111                           
 16112 ;; *************** function _I2C1_MasterWrite *****************
 16113 ;; Defined at:
 16114 ;;		line 281 in file "mcc_generated_files/i2c1_master.c"
 16115 ;; Parameters:    Size  Location     Type
 16116 ;;		None
 16117 ;; Auto vars:     Size  Location     Type
 16118 ;;		None
 16119 ;; Return value:  Size  Location     Type
 16120 ;;                  1    wreg      enum E358
 16121 ;; Registers used:
 16122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16123 ;; Tracked objects:
 16124 ;;		On entry : 0/0
 16125 ;;		On exit  : 0/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16132 ;;Total ram usage:        0 bytes
 16133 ;; Hardware stack levels used: 1
 16134 ;; Hardware stack levels required when called: 10
 16135 ;; This function calls:
 16136 ;;		_I2C1_MasterOperation
 16137 ;; This function is called by:
 16138 ;;		_I2C1_Write1ByteRegister
 16139 ;;		_I2C1_WriteNBytes
 16140 ;;		_I2C1_ReadDataBlock
 16141 ;;		_I2C1_Read1ByteRegister
 16142 ;;		_I2C1_Read2ByteRegister
 16143 ;;		_I2C1_Write2ByteRegister
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           	psect	text79
 16148   00A20A                     __ptext79:
 16149                           	callstack 0
 16150   00A20A                     _I2C1_MasterWrite:
 16151                           	callstack 16
 16152   00A20A                     
 16153                           ;mcc_generated_files/i2c1_master.c: 283:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 16154   00A20A  0E00               	movlw	0
 16155   00A20C  EC9C  F055         	call	_I2C1_MasterOperation
 16156   00A210  0012               	return		;funcret
 16157   00A212                     __end_of_I2C1_MasterWrite:
 16158                           	callstack 0
 16159                           
 16160 ;; *************** function _I2C1_ReadNBytes *****************
 16161 ;; Defined at:
 16162 ;;		line 120 in file "mcc_generated_files/examples/i2c1_master_example.c"
 16163 ;; Parameters:    Size  Location     Type
 16164 ;;  address         1    wreg     unsigned char 
 16165 ;;  data            1   22[COMRAM] PTR unsigned char 
 16166 ;;		 -> EEPROM_ReadByte@data(1), 
 16167 ;;  len             2   23[COMRAM] unsigned int 
 16168 ;; Auto vars:     Size  Location     Type
 16169 ;;  address         1   25[COMRAM] unsigned char 
 16170 ;; Return value:  Size  Location     Type
 16171 ;;                  1    wreg      void 
 16172 ;; Registers used:
 16173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16174 ;; Tracked objects:
 16175 ;;		On entry : 0/0
 16176 ;;		On exit  : 0/0
 16177 ;;		Unchanged: 0/0
 16178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16179 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16182 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16183 ;;Total ram usage:        4 bytes
 16184 ;; Hardware stack levels used: 1
 16185 ;; Hardware stack levels required when called: 11
 16186 ;; This function calls:
 16187 ;;		_I2C1_Close
 16188 ;;		_I2C1_MasterRead
 16189 ;;		_I2C1_Open
 16190 ;;		_I2C1_SetBuffer
 16191 ;; This function is called by:
 16192 ;;		_EEPROM_ReadByte
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           	psect	text80
 16197   00A820                     __ptext80:
 16198                           	callstack 0
 16199   00A820                     _I2C1_ReadNBytes:
 16200                           	callstack 15
 16201                           
 16202                           ;incstack = 0
 16203                           ;I2C1_ReadNBytes@address stored from wreg
 16204   00A820  6E1A               	movwf	I2C1_ReadNBytes@address^0,c
 16205   00A822                     l10056:
 16206   00A822  501A               	movf	I2C1_ReadNBytes@address^0,w,c
 16207   00A824  ECCE  F059         	call	_I2C1_Open
 16208   00A828  0900               	iorlw	0
 16209   00A82A  B4D8               	btfsc	status,2,c
 16210   00A82C  EF1A  F054         	goto	u10291
 16211   00A830  EF1C  F054         	goto	u10290
 16212   00A834                     u10291:
 16213   00A834  EF11  F054         	goto	l10056
 16214   00A838                     u10290:
 16215   00A838                     
 16216                           ;mcc_generated_files/examples/i2c1_master_example.c: 123:     I2C1_SetBuffer(data,len);
 16217   00A838  C017  F001         	movff	I2C1_ReadNBytes@data,I2C1_SetBuffer@buffer
 16218   00A83C  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 16219   00A83E  C018  F003         	movff	I2C1_ReadNBytes@len,I2C1_SetBuffer@bufferSize
 16220   00A842  C019  F004         	movff	I2C1_ReadNBytes@len+1,I2C1_SetBuffer@bufferSize+1
 16221   00A846  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
 16222   00A84A                     
 16223                           ;mcc_generated_files/examples/i2c1_master_example.c: 124:     I2C1_MasterRead();
 16224   00A84A  EC01  F051         	call	_I2C1_MasterRead	;wreg free
 16225   00A84E                     l10062:
 16226   00A84E  EC75  F052         	call	_I2C1_Close	;wreg free
 16227   00A852  06E8               	decf	wreg,f,c
 16228   00A854  B4D8               	btfsc	status,2,c
 16229   00A856  EF2F  F054         	goto	u10301
 16230   00A85A  EF31  F054         	goto	u10300
 16231   00A85E                     u10301:
 16232   00A85E  EF27  F054         	goto	l10062
 16233   00A862                     u10300:
 16234   00A862  0012               	return		;funcret
 16235   00A864                     __end_of_I2C1_ReadNBytes:
 16236                           	callstack 0
 16237                           
 16238 ;; *************** function _I2C1_Open *****************
 16239 ;; Defined at:
 16240 ;;		line 204 in file "mcc_generated_files/i2c1_master.c"
 16241 ;; Parameters:    Size  Location     Type
 16242 ;;  address         1    wreg     unsigned char 
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;  address         1    0[COMRAM] unsigned char 
 16245 ;;  returnValue     1    1[COMRAM] enum E358
 16246 ;; Return value:  Size  Location     Type
 16247 ;;                  1    wreg      enum E358
 16248 ;; Registers used:
 16249 ;;		wreg, status,2, status,0, cstack
 16250 ;; Tracked objects:
 16251 ;;		On entry : 0/0
 16252 ;;		On exit  : 0/0
 16253 ;;		Unchanged: 0/0
 16254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16259 ;;Total ram usage:        2 bytes
 16260 ;; Hardware stack levels used: 1
 16261 ;; Hardware stack levels required when called: 1
 16262 ;; This function calls:
 16263 ;;		_I2C1_MasterClearIrq
 16264 ;;		_I2C1_MasterOpen
 16265 ;; This function is called by:
 16266 ;;		_I2C1_Write1ByteRegister
 16267 ;;		_I2C1_WriteNBytes
 16268 ;;		_I2C1_ReadNBytes
 16269 ;;		_I2C1_ReadDataBlock
 16270 ;;		_I2C1_Read1ByteRegister
 16271 ;;		_I2C1_Read2ByteRegister
 16272 ;;		_I2C1_Write2ByteRegister
 16273 ;; This function uses a non-reentrant model
 16274 ;;
 16275                           
 16276                           	psect	text81
 16277   00B39C                     __ptext81:
 16278                           	callstack 0
 16279   00B39C                     _I2C1_Open:
 16280                           	callstack 25
 16281                           
 16282                           ;incstack = 0
 16283                           ;I2C1_Open@address stored from wreg
 16284   00B39C  6E01               	movwf	I2C1_Open@address^0,c
 16285   00B39E                     
 16286                           ;mcc_generated_files/i2c1_master.c: 204: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 205: {;mcc_generated_files/i2c1_master.c: 206:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 16287   00B39E  0E01               	movlw	1
 16288   00B3A0  6E02               	movwf	I2C1_Open@returnValue^0,c
 16289   00B3A2                     
 16290                           ;mcc_generated_files/i2c1_master.c: 208:     if(!I2C1_Status.inUse)
 16291   00B3A2  0103               	movlb	3	; () banked
 16292   00B3A4  B723               	btfsc	(_I2C1_Status+35)& (0+255),3,b
 16293   00B3A6  EFD7  F059         	goto	u9441
 16294   00B3AA  EFD9  F059         	goto	u9440
 16295   00B3AE                     u9441:
 16296   00B3AE  EF14  F05A         	goto	l9572
 16297   00B3B2                     u9440:
 16298   00B3B2                     
 16299                           ; BSR set to: 3
 16300                           ;mcc_generated_files/i2c1_master.c: 209:     {;mcc_generated_files/i2c1_master.c: 210:  
      +                                 I2C1_Status.address = address;
 16301   00B3B2  C001  F31C         	movff	I2C1_Open@address,_I2C1_Status+28
 16302   00B3B6                     
 16303                           ; BSR set to: 3
 16304                           ;mcc_generated_files/i2c1_master.c: 211:         I2C1_Status.busy = 0;
 16305   00B3B6  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 16306   00B3B8                     
 16307                           ; BSR set to: 3
 16308                           ;mcc_generated_files/i2c1_master.c: 212:         I2C1_Status.inUse = 1;
 16309   00B3B8  8723               	bsf	(_I2C1_Status+35)& (0+255),3,b
 16310   00B3BA                     
 16311                           ; BSR set to: 3
 16312                           ;mcc_generated_files/i2c1_master.c: 213:         I2C1_Status.addressNackCheck = 0;
 16313   00B3BA  0EFC               	movlw	-4
 16314   00B3BC  1723               	andwf	(_I2C1_Status+35)& (0+255),f,b
 16315   00B3BE                     
 16316                           ; BSR set to: 3
 16317                           ;mcc_generated_files/i2c1_master.c: 214:         I2C1_Status.state = I2C1_RESET;
 16318   00B3BE  0E0F               	movlw	15
 16319   00B3C0  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 16320   00B3C2                     
 16321                           ; BSR set to: 3
 16322                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.time_out_value = 500;
 16323   00B3C2  0E01               	movlw	1
 16324   00B3C4  6F1B               	movwf	(_I2C1_Status+27)& (0+255),b
 16325   00B3C6  0EF4               	movlw	244
 16326   00B3C8  6F1A               	movwf	(_I2C1_Status+26)& (0+255),b
 16327   00B3CA                     
 16328                           ; BSR set to: 3
 16329                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_Status.bufferFree = 1;
 16330   00B3CA  8923               	bsf	(_I2C1_Status+35)& (0+255),4,b
 16331   00B3CC                     
 16332                           ; BSR set to: 3
 16333                           ;mcc_generated_files/i2c1_master.c: 219:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 16334   00B3CC  0E90               	movlw	low _I2C1_CallbackReturnStop
 16335   00B3CE  6F00               	movwf	_I2C1_Status& (0+255),b
 16336   00B3D0  0EA1               	movlw	high _I2C1_CallbackReturnStop
 16337   00B3D2  6F01               	movwf	(_I2C1_Status+1)& (0+255),b
 16338   00B3D4                     
 16339                           ; BSR set to: 3
 16340                           ;mcc_generated_files/i2c1_master.c: 220:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 16341   00B3D4  0E00               	movlw	0
 16342   00B3D6  6F0C               	movwf	(_I2C1_Status+12)& (0+255),b
 16343   00B3D8  0E00               	movlw	0
 16344   00B3DA  6F0D               	movwf	(_I2C1_Status+13)& (0+255),b
 16345   00B3DC                     
 16346                           ; BSR set to: 3
 16347                           ;mcc_generated_files/i2c1_master.c: 221:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 16348   00B3DC  0E90               	movlw	low _I2C1_CallbackReturnStop
 16349   00B3DE  6F02               	movwf	(_I2C1_Status+2)& (0+255),b
 16350   00B3E0  0EA1               	movlw	high _I2C1_CallbackReturnStop
 16351   00B3E2  6F03               	movwf	(_I2C1_Status+3)& (0+255),b
 16352   00B3E4                     
 16353                           ; BSR set to: 3
 16354                           ;mcc_generated_files/i2c1_master.c: 222:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 16355   00B3E4  0E00               	movlw	0
 16356   00B3E6  6F0E               	movwf	(_I2C1_Status+14)& (0+255),b
 16357   00B3E8  0E00               	movlw	0
 16358   00B3EA  6F0F               	movwf	(_I2C1_Status+15)& (0+255),b
 16359   00B3EC                     
 16360                           ; BSR set to: 3
 16361                           ;mcc_generated_files/i2c1_master.c: 223:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 16362   00B3EC  0E90               	movlw	low _I2C1_CallbackReturnStop
 16363   00B3EE  6F04               	movwf	(_I2C1_Status+4)& (0+255),b
 16364   00B3F0  0EA1               	movlw	high _I2C1_CallbackReturnStop
 16365   00B3F2  6F05               	movwf	(_I2C1_Status+5)& (0+255),b
 16366   00B3F4                     
 16367                           ; BSR set to: 3
 16368                           ;mcc_generated_files/i2c1_master.c: 224:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 16369   00B3F4  0E00               	movlw	0
 16370   00B3F6  6F10               	movwf	(_I2C1_Status+16)& (0+255),b
 16371   00B3F8  0E00               	movlw	0
 16372   00B3FA  6F11               	movwf	(_I2C1_Status+17)& (0+255),b
 16373   00B3FC                     
 16374                           ; BSR set to: 3
 16375                           ;mcc_generated_files/i2c1_master.c: 225:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 16376   00B3FC  0E90               	movlw	low _I2C1_CallbackReturnStop
 16377   00B3FE  6F06               	movwf	(_I2C1_Status+6)& (0+255),b
 16378   00B400  0EA1               	movlw	high _I2C1_CallbackReturnStop
 16379   00B402  6F07               	movwf	(_I2C1_Status+7)& (0+255),b
 16380   00B404                     
 16381                           ; BSR set to: 3
 16382                           ;mcc_generated_files/i2c1_master.c: 226:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 16383   00B404  0E00               	movlw	0
 16384   00B406  6F12               	movwf	(_I2C1_Status+18)& (0+255),b
 16385   00B408  0E00               	movlw	0
 16386   00B40A  6F13               	movwf	(_I2C1_Status+19)& (0+255),b
 16387   00B40C                     
 16388                           ; BSR set to: 3
 16389                           ;mcc_generated_files/i2c1_master.c: 227:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 16390   00B40C  0E94               	movlw	low _I2C1_CallbackReturnReset
 16391   00B40E  6F08               	movwf	(_I2C1_Status+8)& (0+255),b
 16392   00B410  0EA1               	movlw	high _I2C1_CallbackReturnReset
 16393   00B412  6F09               	movwf	(_I2C1_Status+9)& (0+255),b
 16394   00B414                     
 16395                           ; BSR set to: 3
 16396                           ;mcc_generated_files/i2c1_master.c: 228:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 16397   00B414  0E00               	movlw	0
 16398   00B416  6F14               	movwf	(_I2C1_Status+20)& (0+255),b
 16399   00B418  0E00               	movlw	0
 16400   00B41A  6F15               	movwf	(_I2C1_Status+21)& (0+255),b
 16401   00B41C                     
 16402                           ; BSR set to: 3
 16403                           ;mcc_generated_files/i2c1_master.c: 230:         I2C1_MasterClearIrq();
 16404   00B41C  ECF1  F050         	call	_I2C1_MasterClearIrq	;wreg free
 16405   00B420                     
 16406                           ;mcc_generated_files/i2c1_master.c: 231:         I2C1_MasterOpen();
 16407   00B420  EC10  F053         	call	_I2C1_MasterOpen	;wreg free
 16408   00B424                     
 16409                           ;mcc_generated_files/i2c1_master.c: 232:         returnValue = I2C1_NOERR;
 16410   00B424  0E00               	movlw	0
 16411   00B426  6E02               	movwf	I2C1_Open@returnValue^0,c
 16412   00B428                     l9572:
 16413                           
 16414                           ;mcc_generated_files/i2c1_master.c: 234:     return returnValue;
 16415   00B428  5002               	movf	I2C1_Open@returnValue^0,w,c
 16416   00B42A  0012               	return		;funcret
 16417   00B42C                     __end_of_I2C1_Open:
 16418                           	callstack 0
 16419                           
 16420 ;; *************** function _I2C1_MasterOpen *****************
 16421 ;; Defined at:
 16422 ;;		line 632 in file "mcc_generated_files/i2c1_master.c"
 16423 ;; Parameters:    Size  Location     Type
 16424 ;;		None
 16425 ;; Auto vars:     Size  Location     Type
 16426 ;;		None
 16427 ;; Return value:  Size  Location     Type
 16428 ;;                  1    wreg      _Bool 
 16429 ;; Registers used:
 16430 ;;		wreg, status,2
 16431 ;; Tracked objects:
 16432 ;;		On entry : 0/0
 16433 ;;		On exit  : 0/0
 16434 ;;		Unchanged: 0/0
 16435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16440 ;;Total ram usage:        0 bytes
 16441 ;; Hardware stack levels used: 1
 16442 ;; This function calls:
 16443 ;;		Nothing
 16444 ;; This function is called by:
 16445 ;;		_I2C1_Open
 16446 ;; This function uses a non-reentrant model
 16447 ;;
 16448                           
 16449                           	psect	text82
 16450   00A620                     __ptext82:
 16451                           	callstack 0
 16452   00A620                     _I2C1_MasterOpen:
 16453                           	callstack 25
 16454   00A620                     
 16455                           ;mcc_generated_files/i2c1_master.c: 634:     if(!I2C1CON0bits.EN)
 16456   00A620  013D               	movlb	61	; () banked
 16457   00A622  BF73               	btfsc	115,7,b	;volatile
 16458   00A624  EF16  F053         	goto	u8441
 16459   00A628  EF18  F053         	goto	u8440
 16460   00A62C                     u8441:
 16461   00A62C  EF26  F053         	goto	l558
 16462   00A630                     u8440:
 16463   00A630                     
 16464                           ; BSR set to: 61
 16465                           ;mcc_generated_files/i2c1_master.c: 635:     {;mcc_generated_files/i2c1_master.c: 637:  
      +                                 I2C1PIR = 0x00;
 16466   00A630  0E00               	movlw	0
 16467   00A632  6F79               	movwf	121,b	;volatile
 16468                           
 16469                           ;mcc_generated_files/i2c1_master.c: 639:         I2C1PIE = 0x00;
 16470   00A634  0E00               	movlw	0
 16471   00A636  6F7A               	movwf	122,b	;volatile
 16472                           
 16473                           ;mcc_generated_files/i2c1_master.c: 641:         I2C1ERR = 0x00;
 16474   00A638  0E00               	movlw	0
 16475   00A63A  6F76               	movwf	118,b	;volatile
 16476   00A63C                     
 16477                           ; BSR set to: 61
 16478                           ;mcc_generated_files/i2c1_master.c: 643:         I2C1CNT = 0xFF;
 16479   00A63C  696C               	setf	108,b	;volatile
 16480                           
 16481                           ;mcc_generated_files/i2c1_master.c: 645:         RB1I2C = 0x51;
 16482   00A63E  0E51               	movlw	81
 16483   00A640  013A               	movlb	58	; () banked
 16484   00A642  6F5A               	movwf	90,b	;volatile
 16485                           
 16486                           ;mcc_generated_files/i2c1_master.c: 647:         RB2I2C = 0x51;
 16487   00A644  0E51               	movlw	81
 16488   00A646  6F5B               	movwf	91,b	;volatile
 16489   00A648                     
 16490                           ; BSR set to: 58
 16491                           ;mcc_generated_files/i2c1_master.c: 649:         I2C1CON0bits.EN = 1;
 16492   00A648  013D               	movlb	61	; () banked
 16493   00A64A  8F73               	bsf	115,7,b	;volatile
 16494   00A64C                     l558:
 16495                           
 16496                           ; BSR set to: 61
 16497   00A64C  0012               	return		;funcret
 16498   00A64E                     __end_of_I2C1_MasterOpen:
 16499                           	callstack 0
 16500                           
 16501 ;; *************** function _I2C1_MasterRead *****************
 16502 ;; Defined at:
 16503 ;;		line 276 in file "mcc_generated_files/i2c1_master.c"
 16504 ;; Parameters:    Size  Location     Type
 16505 ;;		None
 16506 ;; Auto vars:     Size  Location     Type
 16507 ;;		None
 16508 ;; Return value:  Size  Location     Type
 16509 ;;                  1    wreg      enum E358
 16510 ;; Registers used:
 16511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16512 ;; Tracked objects:
 16513 ;;		On entry : 0/0
 16514 ;;		On exit  : 0/0
 16515 ;;		Unchanged: 0/0
 16516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16521 ;;Total ram usage:        0 bytes
 16522 ;; Hardware stack levels used: 1
 16523 ;; Hardware stack levels required when called: 10
 16524 ;; This function calls:
 16525 ;;		_I2C1_MasterOperation
 16526 ;; This function is called by:
 16527 ;;		_I2C1_ReadNBytes
 16528 ;; This function uses a non-reentrant model
 16529 ;;
 16530                           
 16531                           	psect	text83
 16532   00A202                     __ptext83:
 16533                           	callstack 0
 16534   00A202                     _I2C1_MasterRead:
 16535                           	callstack 15
 16536   00A202                     
 16537                           ;mcc_generated_files/i2c1_master.c: 278:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 16538   00A202  0E01               	movlw	1
 16539   00A204  EC9C  F055         	call	_I2C1_MasterOperation
 16540   00A208  0012               	return		;funcret
 16541   00A20A                     __end_of_I2C1_MasterRead:
 16542                           	callstack 0
 16543                           
 16544 ;; *************** function _I2C1_MasterOperation *****************
 16545 ;; Defined at:
 16546 ;;		line 252 in file "mcc_generated_files/i2c1_master.c"
 16547 ;; Parameters:    Size  Location     Type
 16548 ;;  read            1    wreg     _Bool 
 16549 ;; Auto vars:     Size  Location     Type
 16550 ;;  read            1   20[COMRAM] _Bool 
 16551 ;;  returnValue     1   21[COMRAM] enum E358
 16552 ;; Return value:  Size  Location     Type
 16553 ;;                  1    wreg      enum E358
 16554 ;; Registers used:
 16555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16556 ;; Tracked objects:
 16557 ;;		On entry : 0/0
 16558 ;;		On exit  : 0/0
 16559 ;;		Unchanged: 0/0
 16560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16565 ;;Total ram usage:        2 bytes
 16566 ;; Hardware stack levels used: 1
 16567 ;; Hardware stack levels required when called: 9
 16568 ;; This function calls:
 16569 ;;		_I2C1_DO_SEND_ADR_READ
 16570 ;;		_I2C1_DO_SEND_ADR_WRITE
 16571 ;;		_I2C1_MasterSetCounter
 16572 ;;		_I2C1_Poller
 16573 ;; This function is called by:
 16574 ;;		_I2C1_MasterRead
 16575 ;;		_I2C1_MasterWrite
 16576 ;; This function uses a non-reentrant model
 16577 ;;
 16578                           
 16579                           	psect	text84
 16580   00AB38                     __ptext84:
 16581                           	callstack 0
 16582   00AB38                     _I2C1_MasterOperation:
 16583                           	callstack 16
 16584                           
 16585                           ;incstack = 0
 16586                           ;I2C1_MasterOperation@read stored from wreg
 16587   00AB38  6E15               	movwf	I2C1_MasterOperation@read^0,c
 16588   00AB3A                     
 16589                           ;mcc_generated_files/i2c1_master.c: 252: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 253: {;mcc_generated_files/i2c1_master.c: 254:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 16590   00AB3A  0E01               	movlw	1
 16591   00AB3C  6E16               	movwf	I2C1_MasterOperation@returnValue^0,c
 16592   00AB3E                     
 16593                           ;mcc_generated_files/i2c1_master.c: 255:     if(!I2C1_Status.busy)
 16594   00AB3E  0103               	movlb	3	; () banked
 16595   00AB40  B523               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 16596   00AB42  EFA5  F055         	goto	u8451
 16597   00AB46  EFA7  F055         	goto	u8450
 16598   00AB4A                     u8451:
 16599   00AB4A  EFC3  F055         	goto	l8980
 16600   00AB4E                     u8450:
 16601   00AB4E                     
 16602                           ; BSR set to: 3
 16603                           ;mcc_generated_files/i2c1_master.c: 256:     {;mcc_generated_files/i2c1_master.c: 257:  
      +                                 I2C1_Status.busy = 1;
 16604   00AB4E  8523               	bsf	(_I2C1_Status+35)& (0+255),2,b
 16605   00AB50                     
 16606                           ; BSR set to: 3
 16607                           ;mcc_generated_files/i2c1_master.c: 258:         returnValue = I2C1_NOERR;
 16608   00AB50  0E00               	movlw	0
 16609   00AB52  6E16               	movwf	I2C1_MasterOperation@returnValue^0,c
 16610   00AB54                     
 16611                           ; BSR set to: 3
 16612                           ;mcc_generated_files/i2c1_master.c: 259:         I2C1_MasterSetCounter((uint8_t) I2C1_St
      +                          atus.data_length);
 16613   00AB54  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 16614   00AB56  EC0E  F051         	call	_I2C1_MasterSetCounter
 16615   00AB5A                     
 16616                           ;mcc_generated_files/i2c1_master.c: 261:         if(read)
 16617   00AB5A  5015               	movf	I2C1_MasterOperation@read^0,w,c
 16618   00AB5C  B4D8               	btfsc	status,2,c
 16619   00AB5E  EFB3  F055         	goto	u8461
 16620   00AB62  EFB5  F055         	goto	u8460
 16621   00AB66                     u8461:
 16622   00AB66  EFBC  F055         	goto	l8974
 16623   00AB6A                     u8460:
 16624   00AB6A                     
 16625                           ;mcc_generated_files/i2c1_master.c: 262:         {;mcc_generated_files/i2c1_master.c: 26
      +                          3:             I2C1_Status.state = I2C1_RX;
 16626   00AB6A  0E04               	movlw	4
 16627   00AB6C  0103               	movlb	3	; () banked
 16628   00AB6E  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 16629   00AB70                     
 16630                           ; BSR set to: 3
 16631                           ;mcc_generated_files/i2c1_master.c: 264:             I2C1_DO_SEND_ADR_READ();
 16632   00AB70  ECF9  F052         	call	_I2C1_DO_SEND_ADR_READ	;wreg free
 16633                           
 16634                           ;mcc_generated_files/i2c1_master.c: 265:         }
 16635   00AB74  EFC1  F055         	goto	l8978
 16636   00AB78                     l8974:
 16637                           
 16638                           ;mcc_generated_files/i2c1_master.c: 267:         {;mcc_generated_files/i2c1_master.c: 26
      +                          8:             I2C1_Status.state = I2C1_TX;
 16639   00AB78  0E03               	movlw	3
 16640   00AB7A  0103               	movlb	3	; () banked
 16641   00AB7C  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 16642   00AB7E                     
 16643                           ; BSR set to: 3
 16644                           ;mcc_generated_files/i2c1_master.c: 269:             I2C1_DO_SEND_ADR_WRITE();
 16645   00AB7E  ECA0  F051         	call	_I2C1_DO_SEND_ADR_WRITE	;wreg free
 16646   00AB82                     l8978:
 16647                           
 16648                           ;mcc_generated_files/i2c1_master.c: 271:         I2C1_Poller();
 16649   00AB82  ECF6  F051         	call	_I2C1_Poller	;wreg free
 16650   00AB86                     l8980:
 16651                           
 16652                           ;mcc_generated_files/i2c1_master.c: 273:     return returnValue;
 16653   00AB86  5016               	movf	I2C1_MasterOperation@returnValue^0,w,c
 16654   00AB88  0012               	return		;funcret
 16655   00AB8A                     __end_of_I2C1_MasterOperation:
 16656                           	callstack 0
 16657                           
 16658 ;; *************** function _I2C1_Poller *****************
 16659 ;; Defined at:
 16660 ;;		line 342 in file "mcc_generated_files/i2c1_master.c"
 16661 ;; Parameters:    Size  Location     Type
 16662 ;;		None
 16663 ;; Auto vars:     Size  Location     Type
 16664 ;;		None
 16665 ;; Return value:  Size  Location     Type
 16666 ;;                  1    wreg      void 
 16667 ;; Registers used:
 16668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16669 ;; Tracked objects:
 16670 ;;		On entry : 0/0
 16671 ;;		On exit  : 0/0
 16672 ;;		Unchanged: 0/0
 16673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16678 ;;Total ram usage:        0 bytes
 16679 ;; Hardware stack levels used: 1
 16680 ;; Hardware stack levels required when called: 8
 16681 ;; This function calls:
 16682 ;;		_I2C1_MasterFsm
 16683 ;;		_I2C1_MasterWaitForEvent
 16684 ;; This function is called by:
 16685 ;;		_I2C1_MasterOperation
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689                           	psect	text85
 16690   00A3EC                     __ptext85:
 16691                           	callstack 0
 16692   00A3EC                     _I2C1_Poller:
 16693                           	callstack 16
 16694   00A3EC                     
 16695                           ;mcc_generated_files/i2c1_master.c: 344:     while(I2C1_Status.busy)
 16696   00A3EC  EFFC  F051         	goto	l8726
 16697   00A3F0                     l8722:
 16698                           
 16699                           ; BSR set to: 3
 16700                           ;mcc_generated_files/i2c1_master.c: 345:     {;mcc_generated_files/i2c1_master.c: 346:  
      +                                 I2C1_MasterWaitForEvent();
 16701   00A3F0  EC49  F056         	call	_I2C1_MasterWaitForEvent	;wreg free
 16702   00A3F4                     
 16703                           ;mcc_generated_files/i2c1_master.c: 347:         I2C1_MasterFsm();
 16704   00A3F4  ECD0  F058         	call	_I2C1_MasterFsm	;wreg free
 16705   00A3F8                     l8726:
 16706                           
 16707                           ;mcc_generated_files/i2c1_master.c: 344:     while(I2C1_Status.busy)
 16708   00A3F8  0103               	movlb	3	; () banked
 16709   00A3FA  B523               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 16710   00A3FC  EF02  F052         	goto	u8031
 16711   00A400  EF04  F052         	goto	u8030
 16712   00A404                     u8031:
 16713   00A404  EFF8  F051         	goto	l8722
 16714   00A408                     u8030:
 16715   00A408                     
 16716                           ; BSR set to: 3
 16717   00A408  0012               	return		;funcret
 16718   00A40A                     __end_of_I2C1_Poller:
 16719                           	callstack 0
 16720                           
 16721 ;; *************** function _I2C1_MasterWaitForEvent *****************
 16722 ;; Defined at:
 16723 ;;		line 813 in file "mcc_generated_files/i2c1_master.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;		None
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;		None
 16728 ;; Return value:  Size  Location     Type
 16729 ;;                  1    wreg      void 
 16730 ;; Registers used:
 16731 ;;		None
 16732 ;; Tracked objects:
 16733 ;;		On entry : 0/0
 16734 ;;		On exit  : 0/0
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16741 ;;Total ram usage:        0 bytes
 16742 ;; Hardware stack levels used: 1
 16743 ;; This function calls:
 16744 ;;		Nothing
 16745 ;; This function is called by:
 16746 ;;		_I2C1_Poller
 16747 ;; This function uses a non-reentrant model
 16748 ;;
 16749                           
 16750                           	psect	text86
 16751   00AC92                     __ptext86:
 16752                           	callstack 0
 16753   00AC92                     _I2C1_MasterWaitForEvent:
 16754                           	callstack 23
 16755   00AC92                     l638:
 16756                           
 16757                           ;mcc_generated_files/i2c1_master.c: 816:     {;mcc_generated_files/i2c1_master.c: 817:  
      +                                 if(PIR3bits.I2C1TXIF)
 16758   00AC92  0139               	movlb	57	; () banked
 16759   00AC94  A1A3               	btfss	163,0,b	;volatile
 16760   00AC96  EF4F  F056         	goto	u7911
 16761   00AC9A  EF51  F056         	goto	u7910
 16762   00AC9E                     u7911:
 16763   00AC9E  EF53  F056         	goto	l639
 16764   00ACA2                     u7910:
 16765   00ACA2  EF76  F056         	goto	l646
 16766   00ACA6                     l639:
 16767                           
 16768                           ; BSR set to: 57
 16769                           ;mcc_generated_files/i2c1_master.c: 821:         if(PIR2bits.I2C1RXIF)
 16770   00ACA6  AFA2               	btfss	162,7,b	;volatile
 16771   00ACA8  EF58  F056         	goto	u7921
 16772   00ACAC  EF5A  F056         	goto	u7920
 16773   00ACB0                     u7921:
 16774   00ACB0  EF5C  F056         	goto	l641
 16775   00ACB4                     u7920:
 16776   00ACB4  EF76  F056         	goto	l646
 16777   00ACB8                     l641:
 16778                           
 16779                           ; BSR set to: 57
 16780                           ;mcc_generated_files/i2c1_master.c: 825:         if(I2C1PIRbits.PCIF)
 16781   00ACB8  013D               	movlb	61	; () banked
 16782   00ACBA  A579               	btfss	121,2,b	;volatile
 16783   00ACBC  EF62  F056         	goto	u7931
 16784   00ACC0  EF64  F056         	goto	u7930
 16785   00ACC4                     u7931:
 16786   00ACC4  EF66  F056         	goto	l642
 16787   00ACC8                     u7930:
 16788   00ACC8  EF76  F056         	goto	l646
 16789   00ACCC                     l642:
 16790                           
 16791                           ; BSR set to: 61
 16792                           ;mcc_generated_files/i2c1_master.c: 829:         if(I2C1PIRbits.CNTIF)
 16793   00ACCC  AF79               	btfss	121,7,b	;volatile
 16794   00ACCE  EF6B  F056         	goto	u7941
 16795   00ACD2  EF6D  F056         	goto	u7940
 16796   00ACD6                     u7941:
 16797   00ACD6  EF6F  F056         	goto	l643
 16798   00ACDA                     u7940:
 16799   00ACDA  EF76  F056         	goto	l646
 16800   00ACDE                     l643:
 16801                           
 16802                           ; BSR set to: 61
 16803                           ;mcc_generated_files/i2c1_master.c: 833:         if(I2C1ERRbits.NACKIF)
 16804   00ACDE  A976               	btfss	118,4,b	;volatile
 16805   00ACE0  EF74  F056         	goto	u7951
 16806   00ACE4  EF76  F056         	goto	u7950
 16807   00ACE8                     u7951:
 16808   00ACE8  EF49  F056         	goto	l638
 16809   00ACEC                     u7950:
 16810   00ACEC                     l646:
 16811   00ACEC  0012               	return		;funcret
 16812   00ACEE                     __end_of_I2C1_MasterWaitForEvent:
 16813                           	callstack 0
 16814                           
 16815 ;; *************** function _I2C1_MasterFsm *****************
 16816 ;; Defined at:
 16817 ;;		line 351 in file "mcc_generated_files/i2c1_master.c"
 16818 ;; Parameters:    Size  Location     Type
 16819 ;;		None
 16820 ;; Auto vars:     Size  Location     Type
 16821 ;;		None
 16822 ;; Return value:  Size  Location     Type
 16823 ;;                  1    wreg      void 
 16824 ;; Registers used:
 16825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16826 ;; Tracked objects:
 16827 ;;		On entry : 0/0
 16828 ;;		On exit  : 0/0
 16829 ;;		Unchanged: 0/0
 16830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16835 ;;Total ram usage:        2 bytes
 16836 ;; Hardware stack levels used: 1
 16837 ;; Hardware stack levels required when called: 7
 16838 ;; This function calls:
 16839 ;;		_I2C1_ClearInterruptFlags
 16840 ;;		_I2C1_DO_ADDRESS_NACK
 16841 ;;		_I2C1_DO_BUS_COLLISION
 16842 ;;		_I2C1_DO_BUS_ERROR
 16843 ;;		_I2C1_DO_IDLE
 16844 ;;		_I2C1_DO_RESET
 16845 ;;		_I2C1_DO_RX
 16846 ;;		_I2C1_DO_RX_ACK
 16847 ;;		_I2C1_DO_RX_EMPTY
 16848 ;;		_I2C1_DO_RX_NACK_RESTART
 16849 ;;		_I2C1_DO_RX_NACK_STOP
 16850 ;;		_I2C1_DO_SEND_ADR_READ
 16851 ;;		_I2C1_DO_SEND_ADR_WRITE
 16852 ;;		_I2C1_DO_SEND_RESTART
 16853 ;;		_I2C1_DO_SEND_RESTART_READ
 16854 ;;		_I2C1_DO_SEND_RESTART_WRITE
 16855 ;;		_I2C1_DO_SEND_STOP
 16856 ;;		_I2C1_DO_TX
 16857 ;;		_I2C1_DO_TX_ACK
 16858 ;;		_I2C1_DO_TX_EMPTY
 16859 ;;		_I2C1_MasterIsNack
 16860 ;; This function is called by:
 16861 ;;		_I2C1_Poller
 16862 ;; This function uses a non-reentrant model
 16863 ;;
 16864                           
 16865                           	psect	text87
 16866   00B1A0                     __ptext87:
 16867                           	callstack 0
 16868   00B1A0                     _I2C1_MasterFsm:
 16869                           	callstack 16
 16870   00B1A0                     
 16871                           ;mcc_generated_files/i2c1_master.c: 353:     I2C1_ClearInterruptFlags();
 16872   00B1A0  EC73  F055         	call	_I2C1_ClearInterruptFlags	;wreg free
 16873   00B1A4                     
 16874                           ;mcc_generated_files/i2c1_master.c: 355:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 16875   00B1A4  0103               	movlb	3	; () banked
 16876   00B1A6  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 16877   00B1A8  0B03               	andlw	3
 16878   00B1AA  0900               	iorlw	0
 16879   00B1AC  B4D8               	btfsc	status,2,c
 16880   00B1AE  EFDB  F058         	goto	u7961
 16881   00B1B2  EFDD  F058         	goto	u7960
 16882   00B1B6                     u7961:
 16883   00B1B6  EFEA  F058         	goto	l8704
 16884   00B1BA                     u7960:
 16885   00B1BA                     
 16886                           ; BSR set to: 3
 16887   00B1BA  EC8A  F051         	call	_I2C1_MasterIsNack	;wreg free
 16888   00B1BE  0900               	iorlw	0
 16889   00B1C0  B4D8               	btfsc	status,2,c
 16890   00B1C2  EFE5  F058         	goto	u7971
 16891   00B1C6  EFE7  F058         	goto	u7970
 16892   00B1CA                     u7971:
 16893   00B1CA  EFEA  F058         	goto	l8704
 16894   00B1CE                     u7970:
 16895   00B1CE                     
 16896                           ;mcc_generated_files/i2c1_master.c: 356:     {;mcc_generated_files/i2c1_master.c: 357:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 16897   00B1CE  0E10               	movlw	16
 16898   00B1D0  0103               	movlb	3	; () banked
 16899   00B1D2  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 16900   00B1D4                     l8704:
 16901                           
 16902                           ;mcc_generated_files/i2c1_master.c: 359:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 16903   00B1D4  0103               	movlb	3	; () banked
 16904   00B1D6  5121               	movf	(_I2C1_Status+33)& (0+255),w,b
 16905   00B1D8  0D02               	mullw	2
 16906   00B1DA  0EEF               	movlw	low _i2c1_fsmStateTable
 16907   00B1DC  24F3               	addwf	243,w,c
 16908   00B1DE  6EF6               	movwf	tblptrl,c
 16909   00B1E0  0EFD               	movlw	high _i2c1_fsmStateTable
 16910   00B1E2  20F4               	addwfc	244,w,c
 16911   00B1E4  6EF7               	movwf	tblptrh,c
 16912   00B1E6                     	if	1	;There are 3 active tblptr bytes
 16913   00B1E6  6AF8               	clrf	tblptru,c
 16914   00B1E8  0E00               	movlw	low (__mediumconst shr (0+16))
 16915   00B1EA  22F8               	addwfc	tblptru,f,c
 16916   00B1EC                     	endif
 16917   00B1EC  0009               	tblrd		*+
 16918   00B1EE  006F FFD4  F013    	movff	tablat,??_I2C1_MasterFsm
 16919   00B1F4  0009               	tblrd		*+
 16920   00B1F6  006F FFD4  F014    	movff	tablat,??_I2C1_MasterFsm+1
 16921   00B1FC  D802               	call	u7988
 16922   00B1FE  EF0A  F059         	goto	u7989
 16923   00B202                     u7988:
 16924   00B202  0005               	push	
 16925   00B204  6EFA               	movwf	pclath,c
 16926   00B206  5013               	movf	??_I2C1_MasterFsm^0,w,c
 16927   00B208  6EFD               	movwf	tosl,c
 16928   00B20A  5014               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 16929   00B20C  6EFE               	movwf	tosh,c
 16930   00B20E  6AFF               	clrf	tosu,c
 16931   00B210  50FA               	movf	pclath,w,c
 16932   00B212  0012               	return		;indir
 16933   00B214                     u7989:
 16934   00B214  0103               	movlb	3	; () banked
 16935   00B216  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 16936   00B218                     
 16937                           ; BSR set to: 3
 16938   00B218  0012               	return		;funcret
 16939   00B21A                     __end_of_I2C1_MasterFsm:
 16940                           	callstack 0
 16941                           
 16942 ;; *************** function _I2C1_DO_BUS_ERROR *****************
 16943 ;; Defined at:
 16944 ;;		line 595 in file "mcc_generated_files/i2c1_master.c"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;		None
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      enum E16630
 16951 ;; Registers used:
 16952 ;;		wreg, status,2, cstack
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16962 ;;Total ram usage:        0 bytes
 16963 ;; Hardware stack levels used: 1
 16964 ;; Hardware stack levels required when called: 1
 16965 ;; This function calls:
 16966 ;;		_I2C1_MasterResetBus
 16967 ;; This function is called by:
 16968 ;;		_I2C1_MasterFsm
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972                           	psect	text88
 16973   00A29C                     __ptext88:
 16974                           	callstack 0
 16975   00A29C                     _I2C1_DO_BUS_ERROR:
 16976                           	callstack 21
 16977   00A29C                     
 16978                           ;mcc_generated_files/i2c1_master.c: 597:     I2C1_MasterResetBus();
 16979   00A29C  EC09  F051         	call	_I2C1_MasterResetBus	;wreg free
 16980   00A2A0                     
 16981                           ;mcc_generated_files/i2c1_master.c: 598:     I2C1_Status.busy = 0;
 16982   00A2A0  0103               	movlb	3	; () banked
 16983   00A2A2  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 16984   00A2A4                     
 16985                           ; BSR set to: 3
 16986                           ;mcc_generated_files/i2c1_master.c: 599:     I2C1_Status.error = I2C1_FAIL;
 16987   00A2A4  0E02               	movlw	2
 16988   00A2A6  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 16989   00A2A8                     
 16990                           ; BSR set to: 3
 16991                           ;mcc_generated_files/i2c1_master.c: 600:     return I2C1_RESET;
 16992   00A2A8  0E0F               	movlw	15
 16993   00A2AA                     
 16994                           ; BSR set to: 3
 16995   00A2AA  0012               	return		;funcret
 16996   00A2AC                     __end_of_I2C1_DO_BUS_ERROR:
 16997                           	callstack 0
 16998                           
 16999 ;; *************** function _I2C1_DO_BUS_COLLISION *****************
 17000 ;; Defined at:
 17001 ;;		line 579 in file "mcc_generated_files/i2c1_master.c"
 17002 ;; Parameters:    Size  Location     Type
 17003 ;;		None
 17004 ;; Auto vars:     Size  Location     Type
 17005 ;;		None
 17006 ;; Return value:  Size  Location     Type
 17007 ;;                  1    wreg      enum E16630
 17008 ;; Registers used:
 17009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17010 ;; Tracked objects:
 17011 ;;		On entry : 0/0
 17012 ;;		On exit  : 0/0
 17013 ;;		Unchanged: 0/0
 17014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17017 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17019 ;;Total ram usage:        2 bytes
 17020 ;; Hardware stack levels used: 1
 17021 ;; Hardware stack levels required when called: 6
 17022 ;; This function calls:
 17023 ;;		NULL
 17024 ;;		_I2C1_CallbackReturnReset
 17025 ;;		_I2C1_CallbackReturnStop
 17026 ;;		_I2C1_DO_RESET
 17027 ;;		_I2C1_DO_SEND_RESTART_READ
 17028 ;;		_I2C1_DO_SEND_RESTART_WRITE
 17029 ;;		_I2C1_MasterClearIrq
 17030 ;;		_rd1RegCompleteHandler
 17031 ;;		_rd2RegCompleteHandler
 17032 ;;		_rdBlkRegCompleteHandler
 17033 ;;		_wr1RegCompleteHandler
 17034 ;;		_wr2RegCompleteHandler
 17035 ;; This function is called by:
 17036 ;;		_I2C1_MasterFsm
 17037 ;; This function uses a non-reentrant model
 17038 ;;
 17039                           
 17040                           	psect	text89
 17041   00AF64                     __ptext89:
 17042                           	callstack 0
 17043   00AF64                     _I2C1_DO_BUS_COLLISION:
 17044                           	callstack 16
 17045   00AF64                     
 17046                           ;mcc_generated_files/i2c1_master.c: 582:     I2C1_MasterClearIrq();
 17047   00AF64  ECF1  F050         	call	_I2C1_MasterClearIrq	;wreg free
 17048   00AF68                     
 17049                           ;mcc_generated_files/i2c1_master.c: 584:     I2C1_Status.error = I2C1_FAIL;
 17050   00AF68  0E02               	movlw	2
 17051   00AF6A  0103               	movlb	3	; () banked
 17052   00AF6C  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 17053                           
 17054                           ;mcc_generated_files/i2c1_master.c: 585:     switch (I2C1_Status.callbackTable[I2C1_WRIT
      +                          E_COLLISION](I2C1_Status.callbackPayload[I2C1_WRITE_COLLISION])) {
 17055   00AF6E  EFC5  F057         	goto	l8668
 17056   00AF72                     l8654:
 17057                           
 17058                           ;mcc_generated_files/i2c1_master.c: 587:         return I2C1_DO_SEND_RESTART_READ();
 17059   00AF72  EC38  F051         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 17060   00AF76  EFE9  F057         	goto	l533
 17061   00AF7A                     l8658:
 17062                           
 17063                           ;mcc_generated_files/i2c1_master.c: 589:         return I2C1_DO_SEND_RESTART_WRITE();
 17064   00AF7A  ECCC  F050         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 17065   00AF7E  EFE9  F057         	goto	l533
 17066   00AF82                     l8662:
 17067                           
 17068                           ;mcc_generated_files/i2c1_master.c: 591:         return I2C1_DO_RESET();
 17069   00AF82  EC46  F051         	call	_I2C1_DO_RESET	;wreg free
 17070   00AF86  EFE9  F057         	goto	l533
 17071   00AF8A                     l8668:
 17072                           
 17073                           ; BSR set to: 3
 17074   00AF8A  C30E  F00A         	movff	_I2C1_Status+14,I2C1_CallbackReturnReset@funPtr
 17075   00AF8E  C30F  F00B         	movff	_I2C1_Status+15,I2C1_CallbackReturnReset@funPtr+1
 17076   00AF92  D802               	call	u7908
 17077   00AF94  EFD5  F057         	goto	u7909
 17078   00AF98                     u7908:
 17079   00AF98  0005               	push	
 17080   00AF9A  6EFA               	movwf	pclath,c
 17081   00AF9C  5102               	movf	(_I2C1_Status+2)& (0+255),w,b
 17082   00AF9E  6EFD               	movwf	tosl,c
 17083   00AFA0  5103               	movf	(_I2C1_Status+3)& (0+255),w,b
 17084   00AFA2  6EFE               	movwf	tosh,c
 17085   00AFA4  6AFF               	clrf	tosu,c
 17086   00AFA6  50FA               	movf	pclath,w,c
 17087   00AFA8  0012               	return		;indir
 17088   00AFAA                     u7909:
 17089   00AFAA  6E0D               	movwf	??_I2C1_DO_BUS_COLLISION^0,c
 17090   00AFAC  6A0E               	clrf	(??_I2C1_DO_BUS_COLLISION+1)^0,c
 17091                           
 17092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17093                           ; Switch size 1, requested type "simple"
 17094                           ; Number of cases is 1, Range of values is 0 to 0
 17095                           ; switch strategies available:
 17096                           ; Name         Instructions Cycles
 17097                           ; simple_byte            4     3 (average)
 17098                           ;	Chosen strategy is simple_byte
 17099   00AFAE  500E               	movf	(??_I2C1_DO_BUS_COLLISION+1)^0,w,c
 17100   00AFB0  0A00               	xorlw	0	; case 0
 17101   00AFB2  B4D8               	btfsc	status,2,c
 17102   00AFB4  EFDE  F057         	goto	l11388
 17103   00AFB8  EFC1  F057         	goto	l8662
 17104   00AFBC                     l11388:
 17105                           
 17106                           ; Switch size 1, requested type "simple"
 17107                           ; Number of cases is 2, Range of values is 2 to 3
 17108                           ; switch strategies available:
 17109                           ; Name         Instructions Cycles
 17110                           ; simple_byte            7     4 (average)
 17111                           ;	Chosen strategy is simple_byte
 17112   00AFBC  500D               	movf	??_I2C1_DO_BUS_COLLISION^0,w,c
 17113   00AFBE  0A02               	xorlw	2	; case 2
 17114   00AFC0  B4D8               	btfsc	status,2,c
 17115   00AFC2  EFB9  F057         	goto	l8654
 17116   00AFC6  0A01               	xorlw	1	; case 3
 17117   00AFC8  B4D8               	btfsc	status,2,c
 17118   00AFCA  EFBD  F057         	goto	l8658
 17119   00AFCE  EFC1  F057         	goto	l8662
 17120   00AFD2                     l533:
 17121   00AFD2  0012               	return		;funcret
 17122   00AFD4                     __end_of_I2C1_DO_BUS_COLLISION:
 17123                           	callstack 0
 17124                           
 17125 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 17126 ;; Defined at:
 17127 ;;		line 564 in file "mcc_generated_files/i2c1_master.c"
 17128 ;; Parameters:    Size  Location     Type
 17129 ;;		None
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;		None
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  1    wreg      enum E16630
 17134 ;; Registers used:
 17135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17145 ;;Total ram usage:        2 bytes
 17146 ;; Hardware stack levels used: 1
 17147 ;; Hardware stack levels required when called: 3
 17148 ;; This function calls:
 17149 ;;		NULL
 17150 ;;		_I2C1_CallbackReturnReset
 17151 ;;		_I2C1_CallbackReturnStop
 17152 ;;		_I2C1_DO_SEND_RESTART
 17153 ;;		_rd1RegCompleteHandler
 17154 ;;		_rd2RegCompleteHandler
 17155 ;;		_rdBlkRegCompleteHandler
 17156 ;;		_wr1RegCompleteHandler
 17157 ;;		_wr2RegCompleteHandler
 17158 ;; This function is called by:
 17159 ;;		_I2C1_MasterFsm
 17160 ;; This function uses a non-reentrant model
 17161 ;;
 17162                           
 17163                           	psect	text90
 17164   00AD54                     __ptext90:
 17165                           	callstack 0
 17166   00AD54                     _I2C1_DO_ADDRESS_NACK:
 17167                           	callstack 19
 17168   00AD54                     
 17169                           ;mcc_generated_files/i2c1_master.c: 566:     I2C1_Status.addressNackCheck = 0;
 17170   00AD54  0EFC               	movlw	-4
 17171   00AD56  0103               	movlb	3	; () banked
 17172   00AD58  1723               	andwf	(_I2C1_Status+35)& (0+255),f,b
 17173                           
 17174                           ;mcc_generated_files/i2c1_master.c: 567:     I2C1_Status.error = I2C1_FAIL;
 17175   00AD5A  0E02               	movlw	2
 17176   00AD5C  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 17177   00AD5E                     
 17178                           ; BSR set to: 3
 17179                           ;mcc_generated_files/i2c1_master.c: 568:     I2C1_Status.busy = 0;
 17180   00AD5E  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 17181                           
 17182                           ;mcc_generated_files/i2c1_master.c: 569:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 17183   00AD60  EFB9  F056         	goto	l8642
 17184   00AD64                     l8632:
 17185                           
 17186                           ;mcc_generated_files/i2c1_master.c: 573:             return I2C1_DO_SEND_RESTART();
 17187   00AD64  ECCE  F050         	call	_I2C1_DO_SEND_RESTART	;wreg free
 17188   00AD68  EFDD  F056         	goto	l526
 17189   00AD6C                     l8636:
 17190                           
 17191                           ;mcc_generated_files/i2c1_master.c: 575:             return I2C1_RESET;
 17192   00AD6C  0E0F               	movlw	15
 17193   00AD6E  EFDD  F056         	goto	l526
 17194   00AD72                     l8642:
 17195                           
 17196                           ; BSR set to: 3
 17197   00AD72  C310  F00A         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 17198   00AD76  C311  F00B         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 17199   00AD7A  D802               	call	u7898
 17200   00AD7C  EFC9  F056         	goto	u7899
 17201   00AD80                     u7898:
 17202   00AD80  0005               	push	
 17203   00AD82  6EFA               	movwf	pclath,c
 17204   00AD84  5104               	movf	(_I2C1_Status+4)& (0+255),w,b
 17205   00AD86  6EFD               	movwf	tosl,c
 17206   00AD88  5105               	movf	(_I2C1_Status+5)& (0+255),w,b
 17207   00AD8A  6EFE               	movwf	tosh,c
 17208   00AD8C  6AFF               	clrf	tosu,c
 17209   00AD8E  50FA               	movf	pclath,w,c
 17210   00AD90  0012               	return		;indir
 17211   00AD92                     u7899:
 17212   00AD92  6E0D               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 17213   00AD94  6A0E               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 17214                           
 17215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17216                           ; Switch size 1, requested type "simple"
 17217                           ; Number of cases is 1, Range of values is 0 to 0
 17218                           ; switch strategies available:
 17219                           ; Name         Instructions Cycles
 17220                           ; simple_byte            4     3 (average)
 17221                           ;	Chosen strategy is simple_byte
 17222   00AD96  500E               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 17223   00AD98  0A00               	xorlw	0	; case 0
 17224   00AD9A  B4D8               	btfsc	status,2,c
 17225   00AD9C  EFD2  F056         	goto	l11390
 17226   00ADA0  EFB6  F056         	goto	l8636
 17227   00ADA4                     l11390:
 17228                           
 17229                           ; Switch size 1, requested type "simple"
 17230                           ; Number of cases is 2, Range of values is 2 to 3
 17231                           ; switch strategies available:
 17232                           ; Name         Instructions Cycles
 17233                           ; simple_byte            7     4 (average)
 17234                           ;	Chosen strategy is simple_byte
 17235   00ADA4  500D               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 17236   00ADA6  0A02               	xorlw	2	; case 2
 17237   00ADA8  B4D8               	btfsc	status,2,c
 17238   00ADAA  EFB2  F056         	goto	l8632
 17239   00ADAE  0A01               	xorlw	1	; case 3
 17240   00ADB0  B4D8               	btfsc	status,2,c
 17241   00ADB2  EFB2  F056         	goto	l8632
 17242   00ADB6  EFB6  F056         	goto	l8636
 17243   00ADBA                     l526:
 17244   00ADBA  0012               	return		;funcret
 17245   00ADBC                     __end_of_I2C1_DO_ADDRESS_NACK:
 17246                           	callstack 0
 17247                           
 17248 ;; *************** function _I2C1_DO_RESET *****************
 17249 ;; Defined at:
 17250 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 17251 ;; Parameters:    Size  Location     Type
 17252 ;;		None
 17253 ;; Auto vars:     Size  Location     Type
 17254 ;;		None
 17255 ;; Return value:  Size  Location     Type
 17256 ;;                  1    wreg      enum E16630
 17257 ;; Registers used:
 17258 ;;		wreg, status,2, cstack
 17259 ;; Tracked objects:
 17260 ;;		On entry : 0/0
 17261 ;;		On exit  : 0/0
 17262 ;;		Unchanged: 0/0
 17263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17268 ;;Total ram usage:        0 bytes
 17269 ;; Hardware stack levels used: 1
 17270 ;; Hardware stack levels required when called: 1
 17271 ;; This function calls:
 17272 ;;		_I2C1_MasterResetBus
 17273 ;; This function is called by:
 17274 ;;		_I2C1_DO_BUS_COLLISION
 17275 ;;		_I2C1_MasterFsm
 17276 ;; This function uses a non-reentrant model
 17277 ;;
 17278                           
 17279                           	psect	text91
 17280   00A28C                     __ptext91:
 17281                           	callstack 0
 17282   00A28C                     _I2C1_DO_RESET:
 17283                           	callstack 21
 17284   00A28C                     
 17285                           ;mcc_generated_files/i2c1_master.c: 559:     I2C1_MasterResetBus();
 17286   00A28C  EC09  F051         	call	_I2C1_MasterResetBus	;wreg free
 17287   00A290                     
 17288                           ;mcc_generated_files/i2c1_master.c: 560:     I2C1_Status.busy = 0;
 17289   00A290  0103               	movlb	3	; () banked
 17290   00A292  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 17291   00A294                     
 17292                           ; BSR set to: 3
 17293                           ;mcc_generated_files/i2c1_master.c: 561:     I2C1_Status.error = I2C1_NOERR;
 17294   00A294  0E00               	movlw	0
 17295   00A296  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 17296   00A298                     
 17297                           ; BSR set to: 3
 17298                           ;mcc_generated_files/i2c1_master.c: 562:     return I2C1_RESET;
 17299   00A298  0E0F               	movlw	15
 17300   00A29A                     
 17301                           ; BSR set to: 3
 17302   00A29A  0012               	return		;funcret
 17303   00A29C                     __end_of_I2C1_DO_RESET:
 17304                           	callstack 0
 17305                           
 17306 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 17307 ;; Defined at:
 17308 ;;		line 551 in file "mcc_generated_files/i2c1_master.c"
 17309 ;; Parameters:    Size  Location     Type
 17310 ;;		None
 17311 ;; Auto vars:     Size  Location     Type
 17312 ;;		None
 17313 ;; Return value:  Size  Location     Type
 17314 ;;                  1    wreg      enum E16630
 17315 ;; Registers used:
 17316 ;;		wreg, cstack
 17317 ;; Tracked objects:
 17318 ;;		On entry : 0/0
 17319 ;;		On exit  : 0/0
 17320 ;;		Unchanged: 0/0
 17321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17326 ;;Total ram usage:        0 bytes
 17327 ;; Hardware stack levels used: 1
 17328 ;; Hardware stack levels required when called: 1
 17329 ;; This function calls:
 17330 ;;		_I2C1_MasterSendNack
 17331 ;; This function is called by:
 17332 ;;		_I2C1_MasterFsm
 17333 ;; This function uses a non-reentrant model
 17334 ;;
 17335                           
 17336                           	psect	text92
 17337   00A1FA                     __ptext92:
 17338                           	callstack 0
 17339   00A1FA                     _I2C1_DO_RX_NACK_RESTART:
 17340                           	callstack 21
 17341   00A1FA                     
 17342                           ;mcc_generated_files/i2c1_master.c: 553:     I2C1_MasterSendNack();
 17343   00A1FA  ECE5  F050         	call	_I2C1_MasterSendNack	;wreg free
 17344   00A1FE                     
 17345                           ;mcc_generated_files/i2c1_master.c: 554:     return I2C1_SEND_RESTART;
 17346   00A1FE  0E09               	movlw	9
 17347   00A200  0012               	return		;funcret
 17348   00A202                     __end_of_I2C1_DO_RX_NACK_RESTART:
 17349                           	callstack 0
 17350                           
 17351 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 17352 ;; Defined at:
 17353 ;;		line 544 in file "mcc_generated_files/i2c1_master.c"
 17354 ;; Parameters:    Size  Location     Type
 17355 ;;		None
 17356 ;; Auto vars:     Size  Location     Type
 17357 ;;		None
 17358 ;; Return value:  Size  Location     Type
 17359 ;;                  1    wreg      enum E16630
 17360 ;; Registers used:
 17361 ;;		wreg, status,2, cstack
 17362 ;; Tracked objects:
 17363 ;;		On entry : 0/0
 17364 ;;		On exit  : 0/0
 17365 ;;		Unchanged: 0/0
 17366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17371 ;;Total ram usage:        0 bytes
 17372 ;; Hardware stack levels used: 1
 17373 ;; Hardware stack levels required when called: 1
 17374 ;; This function calls:
 17375 ;;		_I2C1_DO_IDLE
 17376 ;;		_I2C1_MasterSendNack
 17377 ;;		_I2C1_MasterStop
 17378 ;; This function is called by:
 17379 ;;		_I2C1_MasterFsm
 17380 ;; This function uses a non-reentrant model
 17381 ;;
 17382                           
 17383                           	psect	text93
 17384   00A27E                     __ptext93:
 17385                           	callstack 0
 17386   00A27E                     _I2C1_DO_RX_NACK_STOP:
 17387                           	callstack 21
 17388   00A27E                     
 17389                           ;mcc_generated_files/i2c1_master.c: 546:     I2C1_MasterSendNack();
 17390   00A27E  ECE5  F050         	call	_I2C1_MasterSendNack	;wreg free
 17391                           
 17392                           ;mcc_generated_files/i2c1_master.c: 547:     I2C1_MasterStop();
 17393   00A282  ECE8  F050         	call	_I2C1_MasterStop	;wreg free
 17394   00A286                     
 17395                           ;mcc_generated_files/i2c1_master.c: 548:     return I2C1_DO_IDLE();
 17396   00A286  EC32  F051         	call	_I2C1_DO_IDLE	;wreg free
 17397   00A28A  0012               	return		;funcret
 17398   00A28C                     __end_of_I2C1_DO_RX_NACK_STOP:
 17399                           	callstack 0
 17400                           
 17401 ;; *************** function _I2C1_DO_RX_ACK *****************
 17402 ;; Defined at:
 17403 ;;		line 532 in file "mcc_generated_files/i2c1_master.c"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;		None
 17406 ;; Auto vars:     Size  Location     Type
 17407 ;;		None
 17408 ;; Return value:  Size  Location     Type
 17409 ;;                  1    wreg      enum E16630
 17410 ;; Registers used:
 17411 ;;		wreg, cstack
 17412 ;; Tracked objects:
 17413 ;;		On entry : 0/0
 17414 ;;		On exit  : 0/0
 17415 ;;		Unchanged: 0/0
 17416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17421 ;;Total ram usage:        0 bytes
 17422 ;; Hardware stack levels used: 1
 17423 ;; Hardware stack levels required when called: 1
 17424 ;; This function calls:
 17425 ;;		_I2C1_MasterSendAck
 17426 ;; This function is called by:
 17427 ;;		_I2C1_MasterFsm
 17428 ;; This function uses a non-reentrant model
 17429 ;;
 17430                           
 17431                           	psect	text94
 17432   00A1F2                     __ptext94:
 17433                           	callstack 0
 17434   00A1F2                     _I2C1_DO_RX_ACK:
 17435                           	callstack 21
 17436   00A1F2                     
 17437                           ;mcc_generated_files/i2c1_master.c: 534:     I2C1_MasterSendAck();
 17438   00A1F2  ECE2  F050         	call	_I2C1_MasterSendAck	;wreg free
 17439   00A1F6                     
 17440                           ;mcc_generated_files/i2c1_master.c: 535:     return I2C1_RX;
 17441   00A1F6  0E04               	movlw	4
 17442   00A1F8  0012               	return		;funcret
 17443   00A1FA                     __end_of_I2C1_DO_RX_ACK:
 17444                           	callstack 0
 17445                           
 17446 ;; *************** function _I2C1_DO_SEND_STOP *****************
 17447 ;; Defined at:
 17448 ;;		line 521 in file "mcc_generated_files/i2c1_master.c"
 17449 ;; Parameters:    Size  Location     Type
 17450 ;;		None
 17451 ;; Auto vars:     Size  Location     Type
 17452 ;;		None
 17453 ;; Return value:  Size  Location     Type
 17454 ;;                  1    wreg      enum E16630
 17455 ;; Registers used:
 17456 ;;		wreg, status,2, cstack
 17457 ;; Tracked objects:
 17458 ;;		On entry : 0/0
 17459 ;;		On exit  : 0/0
 17460 ;;		Unchanged: 0/0
 17461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17466 ;;Total ram usage:        0 bytes
 17467 ;; Hardware stack levels used: 1
 17468 ;; Hardware stack levels required when called: 1
 17469 ;; This function calls:
 17470 ;;		_I2C1_MasterGetCounter
 17471 ;;		_I2C1_MasterSendTxData
 17472 ;;		_I2C1_MasterSetCounter
 17473 ;;		_I2C1_MasterStop
 17474 ;; This function is called by:
 17475 ;;		_I2C1_MasterFsm
 17476 ;; This function uses a non-reentrant model
 17477 ;;
 17478                           
 17479                           	psect	text95
 17480   00A498                     __ptext95:
 17481                           	callstack 0
 17482   00A498                     _I2C1_DO_SEND_STOP:
 17483                           	callstack 21
 17484   00A498                     
 17485                           ;mcc_generated_files/i2c1_master.c: 523:     I2C1_MasterStop();
 17486   00A498  ECE8  F050         	call	_I2C1_MasterStop	;wreg free
 17487   00A49C                     
 17488                           ;mcc_generated_files/i2c1_master.c: 524:     if(I2C1_MasterGetCounter())
 17489   00A49C  ECEB  F050         	call	_I2C1_MasterGetCounter	;wreg free
 17490   00A4A0  0900               	iorlw	0
 17491   00A4A2  B4D8               	btfsc	status,2,c
 17492   00A4A4  EF56  F052         	goto	u7881
 17493   00A4A8  EF58  F052         	goto	u7880
 17494   00A4AC                     u7881:
 17495   00A4AC  EF5E  F052         	goto	l8600
 17496   00A4B0                     u7880:
 17497   00A4B0                     
 17498                           ;mcc_generated_files/i2c1_master.c: 525:     {;mcc_generated_files/i2c1_master.c: 526:  
      +                                 I2C1_MasterSetCounter(0);
 17499   00A4B0  0E00               	movlw	0
 17500   00A4B2  EC0E  F051         	call	_I2C1_MasterSetCounter
 17501                           
 17502                           ;mcc_generated_files/i2c1_master.c: 527:         I2C1_MasterSendTxData(0);
 17503   00A4B6  0E00               	movlw	0
 17504   00A4B8  EC13  F051         	call	_I2C1_MasterSendTxData
 17505   00A4BC                     l8600:
 17506                           
 17507                           ;mcc_generated_files/i2c1_master.c: 529:     return I2C1_IDLE;
 17508   00A4BC  0E00               	movlw	0
 17509   00A4BE  0012               	return		;funcret
 17510   00A4C0                     __end_of_I2C1_DO_SEND_STOP:
 17511                           	callstack 0
 17512                           
 17513 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 17514 ;; Defined at:
 17515 ;;		line 516 in file "mcc_generated_files/i2c1_master.c"
 17516 ;; Parameters:    Size  Location     Type
 17517 ;;		None
 17518 ;; Auto vars:     Size  Location     Type
 17519 ;;		None
 17520 ;; Return value:  Size  Location     Type
 17521 ;;                  1    wreg      enum E16630
 17522 ;; Registers used:
 17523 ;;		wreg
 17524 ;; Tracked objects:
 17525 ;;		On entry : 0/0
 17526 ;;		On exit  : 0/0
 17527 ;;		Unchanged: 0/0
 17528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17533 ;;Total ram usage:        0 bytes
 17534 ;; Hardware stack levels used: 1
 17535 ;; This function calls:
 17536 ;;		Nothing
 17537 ;; This function is called by:
 17538 ;;		_I2C1_DO_ADDRESS_NACK
 17539 ;;		_I2C1_MasterFsm
 17540 ;; This function uses a non-reentrant model
 17541 ;;
 17542                           
 17543                           	psect	text96
 17544   00A19C                     __ptext96:
 17545                           	callstack 0
 17546   00A19C                     _I2C1_DO_SEND_RESTART:
 17547                           	callstack 22
 17548   00A19C                     
 17549                           ;mcc_generated_files/i2c1_master.c: 518:     return I2C1_SEND_ADR_READ;
 17550   00A19C  0E01               	movlw	1
 17551   00A19E  0012               	return		;funcret
 17552   00A1A0                     __end_of_I2C1_DO_SEND_RESTART:
 17553                           	callstack 0
 17554                           
 17555 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 17556 ;; Defined at:
 17557 ;;		line 510 in file "mcc_generated_files/i2c1_master.c"
 17558 ;; Parameters:    Size  Location     Type
 17559 ;;		None
 17560 ;; Auto vars:     Size  Location     Type
 17561 ;;		None
 17562 ;; Return value:  Size  Location     Type
 17563 ;;                  1    wreg      enum E16630
 17564 ;; Registers used:
 17565 ;;		wreg
 17566 ;; Tracked objects:
 17567 ;;		On entry : 0/0
 17568 ;;		On exit  : 0/0
 17569 ;;		Unchanged: 0/0
 17570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17575 ;;Total ram usage:        0 bytes
 17576 ;; Hardware stack levels used: 1
 17577 ;; This function calls:
 17578 ;;		Nothing
 17579 ;; This function is called by:
 17580 ;;		_I2C1_DO_TX
 17581 ;;		_I2C1_DO_BUS_COLLISION
 17582 ;;		_I2C1_MasterFsm
 17583 ;; This function uses a non-reentrant model
 17584 ;;
 17585                           
 17586                           	psect	text97
 17587   00A198                     __ptext97:
 17588                           	callstack 0
 17589   00A198                     _I2C1_DO_SEND_RESTART_WRITE:
 17590                           	callstack 21
 17591   00A198                     
 17592                           ;mcc_generated_files/i2c1_master.c: 512:     return I2C1_SEND_ADR_WRITE;
 17593   00A198  0E02               	movlw	2
 17594   00A19A  0012               	return		;funcret
 17595   00A19C                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 17596                           	callstack 0
 17597                           
 17598 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 17599 ;; Defined at:
 17600 ;;		line 504 in file "mcc_generated_files/i2c1_master.c"
 17601 ;; Parameters:    Size  Location     Type
 17602 ;;		None
 17603 ;; Auto vars:     Size  Location     Type
 17604 ;;		None
 17605 ;; Return value:  Size  Location     Type
 17606 ;;                  1    wreg      enum E16630
 17607 ;; Registers used:
 17608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17609 ;; Tracked objects:
 17610 ;;		On entry : 0/0
 17611 ;;		On exit  : 0/0
 17612 ;;		Unchanged: 0/0
 17613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17618 ;;Total ram usage:        0 bytes
 17619 ;; Hardware stack levels used: 1
 17620 ;; Hardware stack levels required when called: 5
 17621 ;; This function calls:
 17622 ;;		_I2C1_DO_SEND_ADR_READ
 17623 ;;		_I2C1_MasterSetCounter
 17624 ;; This function is called by:
 17625 ;;		_I2C1_DO_TX
 17626 ;;		_I2C1_DO_BUS_COLLISION
 17627 ;;		_I2C1_MasterFsm
 17628 ;; This function uses a non-reentrant model
 17629 ;;
 17630                           
 17631                           	psect	text98
 17632   00A270                     __ptext98:
 17633                           	callstack 0
 17634   00A270                     _I2C1_DO_SEND_RESTART_READ:
 17635                           	callstack 16
 17636   00A270                     
 17637                           ;mcc_generated_files/i2c1_master.c: 506:     I2C1_MasterSetCounter((uint8_t) I2C1_Status
      +                          .data_length);
 17638   00A270  0103               	movlb	3	; () banked
 17639   00A272  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 17640   00A274  EC0E  F051         	call	_I2C1_MasterSetCounter
 17641   00A278                     
 17642                           ;mcc_generated_files/i2c1_master.c: 507:     return I2C1_DO_SEND_ADR_READ();
 17643   00A278  ECF9  F052         	call	_I2C1_DO_SEND_ADR_READ	;wreg free
 17644   00A27C  0012               	return		;funcret
 17645   00A27E                     __end_of_I2C1_DO_SEND_RESTART_READ:
 17646                           	callstack 0
 17647                           
 17648 ;; *************** function _I2C1_DO_RX_EMPTY *****************
 17649 ;; Defined at:
 17650 ;;		line 479 in file "mcc_generated_files/i2c1_master.c"
 17651 ;; Parameters:    Size  Location     Type
 17652 ;;		None
 17653 ;; Auto vars:     Size  Location     Type
 17654 ;;		None
 17655 ;; Return value:  Size  Location     Type
 17656 ;;                  1    wreg      enum E16630
 17657 ;; Registers used:
 17658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17659 ;; Tracked objects:
 17660 ;;		On entry : 0/0
 17661 ;;		On exit  : 0/0
 17662 ;;		Unchanged: 0/0
 17663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17668 ;;Total ram usage:        2 bytes
 17669 ;; Hardware stack levels used: 1
 17670 ;; Hardware stack levels required when called: 3
 17671 ;; This function calls:
 17672 ;;		NULL
 17673 ;;		_I2C1_CallbackReturnReset
 17674 ;;		_I2C1_CallbackReturnStop
 17675 ;;		_I2C1_MasterDisableRestart
 17676 ;;		_I2C1_MasterEnableRestart
 17677 ;;		_I2C1_MasterSetCounter
 17678 ;;		_rd1RegCompleteHandler
 17679 ;;		_rd2RegCompleteHandler
 17680 ;;		_rdBlkRegCompleteHandler
 17681 ;;		_wr1RegCompleteHandler
 17682 ;;		_wr2RegCompleteHandler
 17683 ;; This function is called by:
 17684 ;;		_I2C1_DO_SEND_ADR_READ
 17685 ;;		_I2C1_DO_RX
 17686 ;;		_I2C1_MasterFsm
 17687 ;; This function uses a non-reentrant model
 17688 ;;
 17689                           
 17690                           	psect	text99
 17691   00B568                     __ptext99:
 17692                           	callstack 0
 17693   00B568                     _I2C1_DO_RX_EMPTY:
 17694                           	callstack 16
 17695   00B568                     
 17696                           ;mcc_generated_files/i2c1_master.c: 481:     I2C1_Status.bufferFree = 1;
 17697   00B568  0103               	movlb	3	; () banked
 17698   00B56A  8923               	bsf	(_I2C1_Status+35)& (0+255),4,b
 17699                           
 17700                           ;mcc_generated_files/i2c1_master.c: 482:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 17701   00B56C  EFD8  F05A         	goto	l8352
 17702   00B570                     l8324:
 17703                           
 17704                           ;mcc_generated_files/i2c1_master.c: 485:             I2C1_MasterEnableRestart();
 17705   00B570  ECDC  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 17706   00B574                     
 17707                           ;mcc_generated_files/i2c1_master.c: 486:             return I2C1_SEND_RESTART_WRITE;
 17708   00B574  0E08               	movlw	8
 17709   00B576  EF04  F05B         	goto	l486
 17710   00B57A                     l8330:
 17711                           
 17712                           ;mcc_generated_files/i2c1_master.c: 488:             I2C1_MasterEnableRestart();
 17713   00B57A  ECDC  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 17714   00B57E                     
 17715                           ;mcc_generated_files/i2c1_master.c: 489:             return I2C1_SEND_RESTART_READ;
 17716   00B57E  0E07               	movlw	7
 17717   00B580  EF04  F05B         	goto	l486
 17718   00B584                     l8336:
 17719                           
 17720                           ;mcc_generated_files/i2c1_master.c: 492:             I2C1_MasterSetCounter((uint8_t) (I2
      +                          C1_Status.data_length + 1));
 17721   00B584  0103               	movlb	3	; () banked
 17722   00B586  291F               	incf	(_I2C1_Status+31)& (0+255),w,b
 17723   00B588  EC0E  F051         	call	_I2C1_MasterSetCounter
 17724   00B58C                     
 17725                           ;mcc_generated_files/i2c1_master.c: 493:             return I2C1_RX;
 17726   00B58C  0E04               	movlw	4
 17727   00B58E  EF04  F05B         	goto	l486
 17728   00B592                     l8342:
 17729                           
 17730                           ;mcc_generated_files/i2c1_master.c: 496:             if(I2C1_Status.state != I2C1_SEND_R
      +                          ESTART_READ)
 17731   00B592  0E07               	movlw	7
 17732   00B594  0103               	movlb	3	; () banked
 17733   00B596  1921               	xorwf	(_I2C1_Status+33)& (0+255),w,b
 17734   00B598  B4D8               	btfsc	status,2,c
 17735   00B59A  EFD1  F05A         	goto	u7661
 17736   00B59E  EFD3  F05A         	goto	u7660
 17737   00B5A2                     u7661:
 17738   00B5A2  EFD5  F05A         	goto	l8346
 17739   00B5A6                     u7660:
 17740   00B5A6                     
 17741                           ; BSR set to: 3
 17742                           ;mcc_generated_files/i2c1_master.c: 497:             {;mcc_generated_files/i2c1_master.c
      +                          : 498:                 I2C1_MasterDisableRestart();
 17743   00B5A6  ECD9  F050         	call	_I2C1_MasterDisableRestart	;wreg free
 17744   00B5AA                     l8346:
 17745                           
 17746                           ;mcc_generated_files/i2c1_master.c: 500:             return I2C1_RESET;
 17747   00B5AA  0E0F               	movlw	15
 17748   00B5AC  EF04  F05B         	goto	l486
 17749   00B5B0                     l8352:
 17750                           
 17751                           ; BSR set to: 3
 17752   00B5B0  C30C  F00A         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 17753   00B5B4  C30D  F00B         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 17754   00B5B8  D802               	call	u7678
 17755   00B5BA  EFE8  F05A         	goto	u7679
 17756   00B5BE                     u7678:
 17757   00B5BE  0005               	push	
 17758   00B5C0  6EFA               	movwf	pclath,c
 17759   00B5C2  5100               	movf	_I2C1_Status& (0+255),w,b
 17760   00B5C4  6EFD               	movwf	tosl,c
 17761   00B5C6  5101               	movf	(_I2C1_Status+1)& (0+255),w,b
 17762   00B5C8  6EFE               	movwf	tosh,c
 17763   00B5CA  6AFF               	clrf	tosu,c
 17764   00B5CC  50FA               	movf	pclath,w,c
 17765   00B5CE  0012               	return		;indir
 17766   00B5D0                     u7679:
 17767   00B5D0  6E0D               	movwf	??_I2C1_DO_RX_EMPTY^0,c
 17768   00B5D2  6A0E               	clrf	(??_I2C1_DO_RX_EMPTY+1)^0,c
 17769                           
 17770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17771                           ; Switch size 1, requested type "simple"
 17772                           ; Number of cases is 1, Range of values is 0 to 0
 17773                           ; switch strategies available:
 17774                           ; Name         Instructions Cycles
 17775                           ; simple_byte            4     3 (average)
 17776                           ;	Chosen strategy is simple_byte
 17777   00B5D4  500E               	movf	(??_I2C1_DO_RX_EMPTY+1)^0,w,c
 17778   00B5D6  0A00               	xorlw	0	; case 0
 17779   00B5D8  B4D8               	btfsc	status,2,c
 17780   00B5DA  EFF1  F05A         	goto	l11392
 17781   00B5DE  EFC9  F05A         	goto	l8342
 17782   00B5E2                     l11392:
 17783                           
 17784                           ; Switch size 1, requested type "simple"
 17785                           ; Number of cases is 4, Range of values is 1 to 4
 17786                           ; switch strategies available:
 17787                           ; Name         Instructions Cycles
 17788                           ; simple_byte           13     7 (average)
 17789                           ;	Chosen strategy is simple_byte
 17790   00B5E2  500D               	movf	??_I2C1_DO_RX_EMPTY^0,w,c
 17791   00B5E4  0A01               	xorlw	1	; case 1
 17792   00B5E6  B4D8               	btfsc	status,2,c
 17793   00B5E8  EFC9  F05A         	goto	l8342
 17794   00B5EC  0A03               	xorlw	3	; case 2
 17795   00B5EE  B4D8               	btfsc	status,2,c
 17796   00B5F0  EFBD  F05A         	goto	l8330
 17797   00B5F4  0A01               	xorlw	1	; case 3
 17798   00B5F6  B4D8               	btfsc	status,2,c
 17799   00B5F8  EFB8  F05A         	goto	l8324
 17800   00B5FC  0A07               	xorlw	7	; case 4
 17801   00B5FE  B4D8               	btfsc	status,2,c
 17802   00B600  EFC2  F05A         	goto	l8336
 17803   00B604  EFC9  F05A         	goto	l8342
 17804   00B608                     l486:
 17805   00B608  0012               	return		;funcret
 17806   00B60A                     __end_of_I2C1_DO_RX_EMPTY:
 17807                           	callstack 0
 17808                           
 17809 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 17810 ;; Defined at:
 17811 ;;		line 460 in file "mcc_generated_files/i2c1_master.c"
 17812 ;; Parameters:    Size  Location     Type
 17813 ;;		None
 17814 ;; Auto vars:     Size  Location     Type
 17815 ;;		None
 17816 ;; Return value:  Size  Location     Type
 17817 ;;                  1    wreg      enum E16630
 17818 ;; Registers used:
 17819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17820 ;; Tracked objects:
 17821 ;;		On entry : 0/0
 17822 ;;		On exit  : 0/0
 17823 ;;		Unchanged: 0/0
 17824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17829 ;;Total ram usage:        2 bytes
 17830 ;; Hardware stack levels used: 1
 17831 ;; Hardware stack levels required when called: 3
 17832 ;; This function calls:
 17833 ;;		NULL
 17834 ;;		_I2C1_CallbackReturnReset
 17835 ;;		_I2C1_CallbackReturnStop
 17836 ;;		_I2C1_MasterDisableRestart
 17837 ;;		_I2C1_MasterEnableRestart
 17838 ;;		_I2C1_MasterSetCounter
 17839 ;;		_rd1RegCompleteHandler
 17840 ;;		_rd2RegCompleteHandler
 17841 ;;		_rdBlkRegCompleteHandler
 17842 ;;		_wr1RegCompleteHandler
 17843 ;;		_wr2RegCompleteHandler
 17844 ;; This function is called by:
 17845 ;;		_I2C1_DO_TX
 17846 ;;		_I2C1_MasterFsm
 17847 ;; This function uses a non-reentrant model
 17848 ;;
 17849                           
 17850                           	psect	text100
 17851   00B21A                     __ptext100:
 17852                           	callstack 0
 17853   00B21A                     _I2C1_DO_TX_EMPTY:
 17854                           	callstack 19
 17855   00B21A                     
 17856                           ;mcc_generated_files/i2c1_master.c: 462:     I2C1_Status.bufferFree = 1;
 17857   00B21A  0103               	movlb	3	; () banked
 17858   00B21C  8923               	bsf	(_I2C1_Status+35)& (0+255),4,b
 17859                           
 17860                           ;mcc_generated_files/i2c1_master.c: 463:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 17861   00B21E  EF22  F059         	goto	l8448
 17862   00B222                     l8428:
 17863                           
 17864                           ;mcc_generated_files/i2c1_master.c: 466:             I2C1_MasterEnableRestart();
 17865   00B222  ECDC  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 17866   00B226                     
 17867                           ;mcc_generated_files/i2c1_master.c: 467:             return I2C1_SEND_RESTART_READ;
 17868   00B226  0E07               	movlw	7
 17869   00B228  EF4A  F059         	goto	l477
 17870   00B22C                     l8434:
 17871                           
 17872                           ;mcc_generated_files/i2c1_master.c: 470:             I2C1_MasterSetCounter((uint8_t) I2C
      +                          1_Status.data_length + 1);
 17873   00B22C  0103               	movlb	3	; () banked
 17874   00B22E  291F               	incf	(_I2C1_Status+31)& (0+255),w,b
 17875   00B230  EC0E  F051         	call	_I2C1_MasterSetCounter
 17876   00B234                     
 17877                           ;mcc_generated_files/i2c1_master.c: 471:             return I2C1_TX;
 17878   00B234  0E03               	movlw	3
 17879   00B236  EF4A  F059         	goto	l477
 17880   00B23A                     l8440:
 17881                           
 17882                           ;mcc_generated_files/i2c1_master.c: 474:             I2C1_MasterDisableRestart();
 17883   00B23A  ECD9  F050         	call	_I2C1_MasterDisableRestart	;wreg free
 17884   00B23E                     
 17885                           ;mcc_generated_files/i2c1_master.c: 475:             return I2C1_SEND_STOP;
 17886   00B23E  0E0A               	movlw	10
 17887   00B240  EF4A  F059         	goto	l477
 17888   00B244                     l8448:
 17889                           
 17890                           ; BSR set to: 3
 17891   00B244  C30C  F00A         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 17892   00B248  C30D  F00B         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 17893   00B24C  D802               	call	u7758
 17894   00B24E  EF32  F059         	goto	u7759
 17895   00B252                     u7758:
 17896   00B252  0005               	push	
 17897   00B254  6EFA               	movwf	pclath,c
 17898   00B256  5100               	movf	_I2C1_Status& (0+255),w,b
 17899   00B258  6EFD               	movwf	tosl,c
 17900   00B25A  5101               	movf	(_I2C1_Status+1)& (0+255),w,b
 17901   00B25C  6EFE               	movwf	tosh,c
 17902   00B25E  6AFF               	clrf	tosu,c
 17903   00B260  50FA               	movf	pclath,w,c
 17904   00B262  0012               	return		;indir
 17905   00B264                     u7759:
 17906   00B264  6E0D               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 17907   00B266  6A0E               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 17908                           
 17909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17910                           ; Switch size 1, requested type "simple"
 17911                           ; Number of cases is 1, Range of values is 0 to 0
 17912                           ; switch strategies available:
 17913                           ; Name         Instructions Cycles
 17914                           ; simple_byte            4     3 (average)
 17915                           ;	Chosen strategy is simple_byte
 17916   00B268  500E               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 17917   00B26A  0A00               	xorlw	0	; case 0
 17918   00B26C  B4D8               	btfsc	status,2,c
 17919   00B26E  EF3B  F059         	goto	l11394
 17920   00B272  EF1D  F059         	goto	l8440
 17921   00B276                     l11394:
 17922                           
 17923                           ; Switch size 1, requested type "simple"
 17924                           ; Number of cases is 3, Range of values is 1 to 4
 17925                           ; switch strategies available:
 17926                           ; Name         Instructions Cycles
 17927                           ; simple_byte           10     6 (average)
 17928                           ;	Chosen strategy is simple_byte
 17929   00B276  500D               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 17930   00B278  0A01               	xorlw	1	; case 1
 17931   00B27A  B4D8               	btfsc	status,2,c
 17932   00B27C  EF1D  F059         	goto	l8440
 17933   00B280  0A03               	xorlw	3	; case 2
 17934   00B282  B4D8               	btfsc	status,2,c
 17935   00B284  EF11  F059         	goto	l8428
 17936   00B288  0A06               	xorlw	6	; case 4
 17937   00B28A  B4D8               	btfsc	status,2,c
 17938   00B28C  EF16  F059         	goto	l8434
 17939   00B290  EF1D  F059         	goto	l8440
 17940   00B294                     l477:
 17941   00B294  0012               	return		;funcret
 17942   00B296                     __end_of_I2C1_DO_TX_EMPTY:
 17943                           	callstack 0
 17944                           
 17945 ;; *************** function _I2C1_DO_RX *****************
 17946 ;; Defined at:
 17947 ;;		line 436 in file "mcc_generated_files/i2c1_master.c"
 17948 ;; Parameters:    Size  Location     Type
 17949 ;;		None
 17950 ;; Auto vars:     Size  Location     Type
 17951 ;;  retFsmState     1   16[COMRAM] enum E16630
 17952 ;; Return value:  Size  Location     Type
 17953 ;;                  1    wreg      enum E16630
 17954 ;; Registers used:
 17955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17956 ;; Tracked objects:
 17957 ;;		On entry : 0/0
 17958 ;;		On exit  : 0/0
 17959 ;;		Unchanged: 0/0
 17960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17964 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17965 ;;Total ram usage:        3 bytes
 17966 ;; Hardware stack levels used: 1
 17967 ;; Hardware stack levels required when called: 4
 17968 ;; This function calls:
 17969 ;;		_I2C1_DO_RX_EMPTY
 17970 ;;		_I2C1_MasterGetRxData
 17971 ;;		_I2C1_MasterIsRxBufFull
 17972 ;; This function is called by:
 17973 ;;		_I2C1_MasterFsm
 17974 ;; This function uses a non-reentrant model
 17975 ;;
 17976                           
 17977                           	psect	text101
 17978   00B42C                     __ptext101:
 17979                           	callstack 0
 17980   00B42C                     _I2C1_DO_RX:
 17981                           	callstack 18
 17982   00B42C                     
 17983                           ;mcc_generated_files/i2c1_master.c: 438:     if(!I2C1_MasterIsRxBufFull())
 17984   00B42C  EC7F  F051         	call	_I2C1_MasterIsRxBufFull	;wreg free
 17985   00B430  0900               	iorlw	0
 17986   00B432  A4D8               	btfss	status,2,c
 17987   00B434  EF1E  F05A         	goto	u7851
 17988   00B438  EF20  F05A         	goto	u7850
 17989   00B43C                     u7851:
 17990   00B43C  EF23  F05A         	goto	l8570
 17991   00B440                     u7850:
 17992   00B440                     l8566:
 17993                           
 17994                           ;mcc_generated_files/i2c1_master.c: 439:     {;mcc_generated_files/i2c1_master.c: 440:  
      +                                 return I2C1_RX;
 17995   00B440  0E04               	movlw	4
 17996   00B442  EF64  F05A         	goto	l469
 17997   00B446                     l8570:
 17998                           
 17999                           ;mcc_generated_files/i2c1_master.c: 442:     if(I2C1_Status.addressNackCheck)
 18000   00B446  0103               	movlb	3	; () banked
 18001   00B448  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 18002   00B44A  0B03               	andlw	3
 18003   00B44C  0900               	iorlw	0
 18004   00B44E  B4D8               	btfsc	status,2,c
 18005   00B450  EF2C  F05A         	goto	u7861
 18006   00B454  EF2E  F05A         	goto	u7860
 18007   00B458                     u7861:
 18008   00B458  EF3A  F05A         	goto	l470
 18009   00B45C                     u7860:
 18010   00B45C                     
 18011                           ; BSR set to: 3
 18012                           ;mcc_generated_files/i2c1_master.c: 443:     {;mcc_generated_files/i2c1_master.c: 444:  
      +                                 I2C1_Status.addressNackCheck--;
 18013   00B45C  0E01               	movlw	1
 18014   00B45E  6E0F               	movwf	??_I2C1_DO_RX^0,c
 18015   00B460  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 18016   00B462  0B03               	andlw	3
 18017   00B464  6E10               	movwf	(??_I2C1_DO_RX+1)^0,c
 18018   00B466  500F               	movf	??_I2C1_DO_RX^0,w,c
 18019   00B468  5E10               	subwf	(??_I2C1_DO_RX+1)^0,f,c
 18020   00B46A  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 18021   00B46C  1810               	xorwf	(??_I2C1_DO_RX+1)^0,w,c
 18022   00B46E  0BFC               	andlw	-4
 18023   00B470  1810               	xorwf	(??_I2C1_DO_RX+1)^0,w,c
 18024   00B472  6F23               	movwf	(_I2C1_Status+35)& (0+255),b
 18025   00B474                     l470:
 18026                           
 18027                           ; BSR set to: 3
 18028                           ;mcc_generated_files/i2c1_master.c: 447:     if(--I2C1_Status.data_length)
 18029   00B474  071F               	decf	(_I2C1_Status+31)& (0+255),f,b
 18030   00B476  A0D8               	btfss	status,0,c
 18031   00B478  0720               	decf	(_I2C1_Status+32)& (0+255),f,b
 18032   00B47A  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 18033   00B47C  1120               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 18034   00B47E  B4D8               	btfsc	status,2,c
 18035   00B480  EF44  F05A         	goto	u7871
 18036   00B484  EF46  F05A         	goto	u7870
 18037   00B488                     u7871:
 18038   00B488  EF54  F05A         	goto	l8584
 18039   00B48C                     u7870:
 18040   00B48C                     
 18041                           ; BSR set to: 3
 18042                           ;mcc_generated_files/i2c1_master.c: 448:     {;mcc_generated_files/i2c1_master.c: 449:  
      +                                 *I2C1_Status.data_ptr++ = I2C1_MasterGetRxData();
 18043   00B48C  ECDF  F050         	call	_I2C1_MasterGetRxData	;wreg free
 18044   00B490  0060  FC77  FFD9   	movff	_I2C1_Status+29,fsr2l
 18045   00B496  0060  FC7B  FFDA   	movff	_I2C1_Status+30,fsr2h
 18046   00B49C  6EDF               	movwf	indf2,c
 18047   00B49E  0103               	movlb	3	; () banked
 18048   00B4A0  4B1D               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 18049   00B4A2  2B1E               	incf	(_I2C1_Status+30)& (0+255),f,b
 18050   00B4A4  EF20  F05A         	goto	l8566
 18051   00B4A8                     l8584:
 18052                           
 18053                           ; BSR set to: 3
 18054                           ;mcc_generated_files/i2c1_master.c: 453:     {;mcc_generated_files/i2c1_master.c: 454:  
      +                                 i2c1_fsm_states_t retFsmState = I2C1_DO_RX_EMPTY();
 18055   00B4A8  ECB4  F05A         	call	_I2C1_DO_RX_EMPTY	;wreg free
 18056   00B4AC  6E11               	movwf	I2C1_DO_RX@retFsmState^0,c
 18057   00B4AE                     
 18058                           ;mcc_generated_files/i2c1_master.c: 455:         *I2C1_Status.data_ptr++ = I2C1_MasterGe
      +                          tRxData();
 18059   00B4AE  ECDF  F050         	call	_I2C1_MasterGetRxData	;wreg free
 18060   00B4B2  0060  FC77  FFD9   	movff	_I2C1_Status+29,fsr2l
 18061   00B4B8  0060  FC7B  FFDA   	movff	_I2C1_Status+30,fsr2h
 18062   00B4BE  6EDF               	movwf	indf2,c
 18063   00B4C0  0103               	movlb	3	; () banked
 18064   00B4C2  4B1D               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 18065   00B4C4  2B1E               	incf	(_I2C1_Status+30)& (0+255),f,b
 18066   00B4C6                     
 18067                           ; BSR set to: 3
 18068                           ;mcc_generated_files/i2c1_master.c: 456:         return retFsmState;
 18069   00B4C6  5011               	movf	I2C1_DO_RX@retFsmState^0,w,c
 18070   00B4C8                     l469:
 18071   00B4C8  0012               	return		;funcret
 18072   00B4CA                     __end_of_I2C1_DO_RX:
 18073                           	callstack 0
 18074                           
 18075 ;; *************** function _I2C1_DO_TX *****************
 18076 ;; Defined at:
 18077 ;;		line 403 in file "mcc_generated_files/i2c1_master.c"
 18078 ;; Parameters:    Size  Location     Type
 18079 ;;		None
 18080 ;; Auto vars:     Size  Location     Type
 18081 ;;  retFsmState     1   15[COMRAM] enum E16630
 18082 ;;  dataTx          1   14[COMRAM] unsigned char 
 18083 ;; Return value:  Size  Location     Type
 18084 ;;                  1    wreg      enum E16630
 18085 ;; Registers used:
 18086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 18087 ;; Tracked objects:
 18088 ;;		On entry : 0/0
 18089 ;;		On exit  : 0/0
 18090 ;;		Unchanged: 0/0
 18091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18093 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18094 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18095 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18096 ;;Total ram usage:        6 bytes
 18097 ;; Hardware stack levels used: 1
 18098 ;; Hardware stack levels required when called: 6
 18099 ;; This function calls:
 18100 ;;		NULL
 18101 ;;		_I2C1_CallbackReturnReset
 18102 ;;		_I2C1_CallbackReturnStop
 18103 ;;		_I2C1_DO_SEND_RESTART_READ
 18104 ;;		_I2C1_DO_SEND_RESTART_WRITE
 18105 ;;		_I2C1_DO_TX_EMPTY
 18106 ;;		_I2C1_MasterIsNack
 18107 ;;		_I2C1_MasterIsTxBufEmpty
 18108 ;;		_I2C1_MasterSendTxData
 18109 ;;		_rd1RegCompleteHandler
 18110 ;;		_rd2RegCompleteHandler
 18111 ;;		_rdBlkRegCompleteHandler
 18112 ;;		_wr1RegCompleteHandler
 18113 ;;		_wr2RegCompleteHandler
 18114 ;; This function is called by:
 18115 ;;		_I2C1_MasterFsm
 18116 ;; This function uses a non-reentrant model
 18117 ;;
 18118                           
 18119                           	psect	text102
 18120   00C174                     __ptext102:
 18121                           	callstack 0
 18122   00C174                     _I2C1_DO_TX:
 18123                           	callstack 16
 18124   00C174                     
 18125                           ;mcc_generated_files/i2c1_master.c: 405:     if(I2C1_MasterIsNack())
 18126   00C174  EC8A  F051         	call	_I2C1_MasterIsNack	;wreg free
 18127   00C178  0900               	iorlw	0
 18128   00C17A  B4D8               	btfsc	status,2,c
 18129   00C17C  EFC2  F060         	goto	u7801
 18130   00C180  EFC4  F060         	goto	u7800
 18131   00C184                     u7801:
 18132   00C184  EFFE  F060         	goto	l8530
 18133   00C188                     u7800:
 18134   00C188  EFD1  F060         	goto	l8528
 18135   00C18C                     l8514:
 18136                           
 18137                           ;mcc_generated_files/i2c1_master.c: 410:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 18138   00C18C  EC38  F051         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 18139   00C190  EF4A  F061         	goto	l452
 18140   00C194                     l8518:
 18141                           
 18142                           ;mcc_generated_files/i2c1_master.c: 412:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 18143   00C194  ECCC  F050         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 18144   00C198  EF4A  F061         	goto	l452
 18145   00C19C                     l8522:
 18146                           
 18147                           ;mcc_generated_files/i2c1_master.c: 416:                 return I2C1_IDLE;
 18148   00C19C  0E00               	movlw	0
 18149   00C19E  EF4A  F061         	goto	l452
 18150   00C1A2                     l8528:
 18151   00C1A2  C312  F00A         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 18152   00C1A6  C313  F00B         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 18153   00C1AA  D802               	call	u7818
 18154   00C1AC  EFE2  F060         	goto	u7819
 18155   00C1B0                     u7818:
 18156   00C1B0  0005               	push	
 18157   00C1B2  6EFA               	movwf	pclath,c
 18158   00C1B4  0103               	movlb	3	; () banked
 18159   00C1B6  5106               	movf	(_I2C1_Status+6)& (0+255),w,b
 18160   00C1B8  6EFD               	movwf	tosl,c
 18161   00C1BA  5107               	movf	(_I2C1_Status+7)& (0+255),w,b
 18162   00C1BC  6EFE               	movwf	tosh,c
 18163   00C1BE  6AFF               	clrf	tosu,c
 18164   00C1C0  50FA               	movf	pclath,w,c
 18165   00C1C2  0012               	return		;indir
 18166   00C1C4                     u7819:
 18167   00C1C4  6E0D               	movwf	??_I2C1_DO_TX^0,c
 18168   00C1C6  6A0E               	clrf	(??_I2C1_DO_TX+1)^0,c
 18169                           
 18170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18171                           ; Switch size 1, requested type "simple"
 18172                           ; Number of cases is 1, Range of values is 0 to 0
 18173                           ; switch strategies available:
 18174                           ; Name         Instructions Cycles
 18175                           ; simple_byte            4     3 (average)
 18176                           ;	Chosen strategy is simple_byte
 18177   00C1C8  500E               	movf	(??_I2C1_DO_TX+1)^0,w,c
 18178   00C1CA  0A00               	xorlw	0	; case 0
 18179   00C1CC  B4D8               	btfsc	status,2,c
 18180   00C1CE  EFEB  F060         	goto	l11396
 18181   00C1D2  EFCE  F060         	goto	l8522
 18182   00C1D6                     l11396:
 18183                           
 18184                           ; Switch size 1, requested type "simple"
 18185                           ; Number of cases is 4, Range of values is 1 to 4
 18186                           ; switch strategies available:
 18187                           ; Name         Instructions Cycles
 18188                           ; simple_byte           13     7 (average)
 18189                           ;	Chosen strategy is simple_byte
 18190   00C1D6  500D               	movf	??_I2C1_DO_TX^0,w,c
 18191   00C1D8  0A01               	xorlw	1	; case 1
 18192   00C1DA  B4D8               	btfsc	status,2,c
 18193   00C1DC  EFCE  F060         	goto	l8522
 18194   00C1E0  0A03               	xorlw	3	; case 2
 18195   00C1E2  B4D8               	btfsc	status,2,c
 18196   00C1E4  EFC6  F060         	goto	l8514
 18197   00C1E8  0A01               	xorlw	1	; case 3
 18198   00C1EA  B4D8               	btfsc	status,2,c
 18199   00C1EC  EFCA  F060         	goto	l8518
 18200   00C1F0  0A07               	xorlw	7	; case 4
 18201   00C1F2  B4D8               	btfsc	status,2,c
 18202   00C1F4  EFCE  F060         	goto	l8522
 18203   00C1F8  EFCE  F060         	goto	l8522
 18204   00C1FC                     l8530:
 18205   00C1FC  EC95  F051         	call	_I2C1_MasterIsTxBufEmpty	;wreg free
 18206   00C200  0900               	iorlw	0
 18207   00C202  B4D8               	btfsc	status,2,c
 18208   00C204  EF06  F061         	goto	u7821
 18209   00C208  EF08  F061         	goto	u7820
 18210   00C20C                     u7821:
 18211   00C20C  EF49  F061         	goto	l8556
 18212   00C210                     u7820:
 18213   00C210                     
 18214                           ;mcc_generated_files/i2c1_master.c: 420:     {;mcc_generated_files/i2c1_master.c: 421:  
      +                                 if(I2C1_Status.addressNackCheck)
 18215   00C210  0103               	movlb	3	; () banked
 18216   00C212  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 18217   00C214  0B03               	andlw	3
 18218   00C216  0900               	iorlw	0
 18219   00C218  B4D8               	btfsc	status,2,c
 18220   00C21A  EF11  F061         	goto	u7831
 18221   00C21E  EF13  F061         	goto	u7830
 18222   00C222                     u7831:
 18223   00C222  EF1F  F061         	goto	l8536
 18224   00C226                     u7830:
 18225   00C226                     
 18226                           ; BSR set to: 3
 18227                           ;mcc_generated_files/i2c1_master.c: 422:         {;mcc_generated_files/i2c1_master.c: 42
      +                          3:             I2C1_Status.addressNackCheck--;
 18228   00C226  0E01               	movlw	1
 18229   00C228  6E0D               	movwf	??_I2C1_DO_TX^0,c
 18230   00C22A  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 18231   00C22C  0B03               	andlw	3
 18232   00C22E  6E0E               	movwf	(??_I2C1_DO_TX+1)^0,c
 18233   00C230  500D               	movf	??_I2C1_DO_TX^0,w,c
 18234   00C232  5E0E               	subwf	(??_I2C1_DO_TX+1)^0,f,c
 18235   00C234  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 18236   00C236  180E               	xorwf	(??_I2C1_DO_TX+1)^0,w,c
 18237   00C238  0BFC               	andlw	-4
 18238   00C23A  180E               	xorwf	(??_I2C1_DO_TX+1)^0,w,c
 18239   00C23C  6F23               	movwf	(_I2C1_Status+35)& (0+255),b
 18240   00C23E                     l8536:
 18241                           
 18242                           ; BSR set to: 3
 18243                           ;mcc_generated_files/i2c1_master.c: 425:         uint8_t dataTx = *I2C1_Status.data_ptr+
      +                          +;
 18244   00C23E  0060  FC77  FFD9   	movff	_I2C1_Status+29,fsr2l
 18245   00C244  0060  FC7B  FFDA   	movff	_I2C1_Status+30,fsr2h
 18246   00C24A  50DF               	movf	indf2,w,c
 18247   00C24C  6E0F               	movwf	I2C1_DO_TX@dataTx^0,c
 18248   00C24E                     
 18249                           ; BSR set to: 3
 18250   00C24E  4B1D               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 18251   00C250  2B1E               	incf	(_I2C1_Status+30)& (0+255),f,b
 18252   00C252                     
 18253                           ; BSR set to: 3
 18254                           ;mcc_generated_files/i2c1_master.c: 426:         i2c1_fsm_states_t retFsmState = (--I2C1
      +                          _Status.data_length)?I2C1_TX:I2C1_DO_TX_EMPTY();
 18255   00C252  071F               	decf	(_I2C1_Status+31)& (0+255),f,b
 18256   00C254  A0D8               	btfss	status,0,c
 18257   00C256  0720               	decf	(_I2C1_Status+32)& (0+255),f,b
 18258   00C258  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 18259   00C25A  1120               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 18260   00C25C  A4D8               	btfss	status,2,c
 18261   00C25E  EF33  F061         	goto	u7841
 18262   00C262  EF35  F061         	goto	u7840
 18263   00C266                     u7841:
 18264   00C266  EF3D  F061         	goto	l8544
 18265   00C26A                     u7840:
 18266   00C26A                     
 18267                           ; BSR set to: 3
 18268   00C26A  EC0D  F059         	call	_I2C1_DO_TX_EMPTY	;wreg free
 18269   00C26E  6E0D               	movwf	??_I2C1_DO_TX^0,c
 18270   00C270  500D               	movf	??_I2C1_DO_TX^0,w,c
 18271   00C272  6E11               	movwf	_I2C1_DO_TX$1073^0,c
 18272   00C274  6A12               	clrf	(_I2C1_DO_TX$1073+1)^0,c
 18273   00C276  EF41  F061         	goto	l8546
 18274   00C27A                     l8544:
 18275                           
 18276                           ; BSR set to: 3
 18277   00C27A  0E00               	movlw	0
 18278   00C27C  6E12               	movwf	(_I2C1_DO_TX$1073+1)^0,c
 18279   00C27E  0E03               	movlw	3
 18280   00C280  6E11               	movwf	_I2C1_DO_TX$1073^0,c
 18281   00C282                     l8546:
 18282   00C282  C011  F010         	movff	_I2C1_DO_TX$1073,I2C1_DO_TX@retFsmState
 18283   00C286                     
 18284                           ;mcc_generated_files/i2c1_master.c: 427:         I2C1_MasterSendTxData(dataTx);
 18285   00C286  500F               	movf	I2C1_DO_TX@dataTx^0,w,c
 18286   00C288  EC13  F051         	call	_I2C1_MasterSendTxData
 18287   00C28C                     
 18288                           ;mcc_generated_files/i2c1_master.c: 428:         return retFsmState;
 18289   00C28C  5010               	movf	I2C1_DO_TX@retFsmState^0,w,c
 18290   00C28E  EF4A  F061         	goto	l452
 18291   00C292                     l8556:
 18292                           
 18293                           ;mcc_generated_files/i2c1_master.c: 431:     {;mcc_generated_files/i2c1_master.c: 432:  
      +                                 return I2C1_TX;
 18294   00C292  0E03               	movlw	3
 18295   00C294                     l452:
 18296   00C294  0012               	return		;funcret
 18297   00C296                     __end_of_I2C1_DO_TX:
 18298                           	callstack 0
 18299                           
 18300 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 18301 ;; Defined at:
 18302 ;;		line 396 in file "mcc_generated_files/i2c1_master.c"
 18303 ;; Parameters:    Size  Location     Type
 18304 ;;		None
 18305 ;; Auto vars:     Size  Location     Type
 18306 ;;		None
 18307 ;; Return value:  Size  Location     Type
 18308 ;;                  1    wreg      enum E16630
 18309 ;; Registers used:
 18310 ;;		wreg, status,2, status,0, cstack
 18311 ;; Tracked objects:
 18312 ;;		On entry : 0/0
 18313 ;;		On exit  : 0/0
 18314 ;;		Unchanged: 0/0
 18315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18320 ;;Total ram usage:        0 bytes
 18321 ;; Hardware stack levels used: 1
 18322 ;; Hardware stack levels required when called: 1
 18323 ;; This function calls:
 18324 ;;		_I2C1_MasterSendTxData
 18325 ;; This function is called by:
 18326 ;;		_I2C1_MasterOperation
 18327 ;;		_I2C1_MasterFsm
 18328 ;; This function uses a non-reentrant model
 18329 ;;
 18330                           
 18331                           	psect	text103
 18332   00A340                     __ptext103:
 18333                           	callstack 0
 18334   00A340                     _I2C1_DO_SEND_ADR_WRITE:
 18335                           	callstack 21
 18336   00A340                     
 18337                           ;mcc_generated_files/i2c1_master.c: 398:     I2C1_Status.addressNackCheck = 2;
 18338   00A340  0103               	movlb	3	; () banked
 18339   00A342  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 18340   00A344  0BFC               	andlw	-4
 18341   00A346  0902               	iorlw	2
 18342   00A348  6F23               	movwf	(_I2C1_Status+35)& (0+255),b
 18343   00A34A                     
 18344                           ; BSR set to: 3
 18345                           ;mcc_generated_files/i2c1_master.c: 399:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 18346   00A34A  511C               	movf	(_I2C1_Status+28)& (0+255),w,b
 18347   00A34C  251C               	addwf	(_I2C1_Status+28)& (0+255),w,b
 18348   00A34E  EC13  F051         	call	_I2C1_MasterSendTxData
 18349   00A352                     
 18350                           ;mcc_generated_files/i2c1_master.c: 400:     return I2C1_TX;
 18351   00A352  0E03               	movlw	3
 18352   00A354  0012               	return		;funcret
 18353   00A356                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 18354                           	callstack 0
 18355                           
 18356 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 18357 ;; Defined at:
 18358 ;;		line 385 in file "mcc_generated_files/i2c1_master.c"
 18359 ;; Parameters:    Size  Location     Type
 18360 ;;		None
 18361 ;; Auto vars:     Size  Location     Type
 18362 ;;		None
 18363 ;; Return value:  Size  Location     Type
 18364 ;;                  1    wreg      enum E16630
 18365 ;; Registers used:
 18366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 18367 ;; Tracked objects:
 18368 ;;		On entry : 0/0
 18369 ;;		On exit  : 0/0
 18370 ;;		Unchanged: 0/0
 18371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18376 ;;Total ram usage:        0 bytes
 18377 ;; Hardware stack levels used: 1
 18378 ;; Hardware stack levels required when called: 4
 18379 ;; This function calls:
 18380 ;;		_I2C1_DO_RX_EMPTY
 18381 ;;		_I2C1_MasterSendTxData
 18382 ;; This function is called by:
 18383 ;;		_I2C1_MasterOperation
 18384 ;;		_I2C1_DO_SEND_RESTART_READ
 18385 ;;		_I2C1_MasterFsm
 18386 ;; This function uses a non-reentrant model
 18387 ;;
 18388                           
 18389                           	psect	text104
 18390   00A5F2                     __ptext104:
 18391                           	callstack 0
 18392   00A5F2                     _I2C1_DO_SEND_ADR_READ:
 18393                           	callstack 16
 18394   00A5F2                     
 18395                           ;mcc_generated_files/i2c1_master.c: 387:     I2C1_Status.addressNackCheck = 2;
 18396   00A5F2  0103               	movlb	3	; () banked
 18397   00A5F4  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 18398   00A5F6  0BFC               	andlw	-4
 18399   00A5F8  0902               	iorlw	2
 18400   00A5FA  6F23               	movwf	(_I2C1_Status+35)& (0+255),b
 18401   00A5FC                     
 18402                           ; BSR set to: 3
 18403                           ;mcc_generated_files/i2c1_master.c: 388:     if(I2C1_Status.data_length == 1)
 18404   00A5FC  051F               	decf	(_I2C1_Status+31)& (0+255),w,b
 18405   00A5FE  1120               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 18406   00A600  A4D8               	btfss	status,2,c
 18407   00A602  EF05  F053         	goto	u7681
 18408   00A606  EF07  F053         	goto	u7680
 18409   00A60A                     u7681:
 18410   00A60A  EF09  F053         	goto	l8368
 18411   00A60E                     u7680:
 18412   00A60E                     
 18413                           ; BSR set to: 3
 18414                           ;mcc_generated_files/i2c1_master.c: 389:     {;mcc_generated_files/i2c1_master.c: 390:  
      +                                 I2C1_DO_RX_EMPTY();
 18415   00A60E  ECB4  F05A         	call	_I2C1_DO_RX_EMPTY	;wreg free
 18416   00A612                     l8368:
 18417                           
 18418                           ;mcc_generated_files/i2c1_master.c: 392:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 18419   00A612  80D8               	bsf	status,0,c
 18420   00A614  0103               	movlb	3	; () banked
 18421   00A616  351C               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 18422   00A618  EC13  F051         	call	_I2C1_MasterSendTxData
 18423   00A61C                     
 18424                           ;mcc_generated_files/i2c1_master.c: 393:     return I2C1_RX;
 18425   00A61C  0E04               	movlw	4
 18426   00A61E  0012               	return		;funcret
 18427   00A620                     __end_of_I2C1_DO_SEND_ADR_READ:
 18428                           	callstack 0
 18429                           
 18430 ;; *************** function _I2C1_DO_IDLE *****************
 18431 ;; Defined at:
 18432 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 18433 ;; Parameters:    Size  Location     Type
 18434 ;;		None
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;		None
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      enum E16630
 18439 ;; Registers used:
 18440 ;;		wreg, status,2
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18450 ;;Total ram usage:        0 bytes
 18451 ;; Hardware stack levels used: 1
 18452 ;; This function calls:
 18453 ;;		Nothing
 18454 ;; This function is called by:
 18455 ;;		_I2C1_DO_RX_NACK_STOP
 18456 ;;		_I2C1_MasterFsm
 18457 ;; This function uses a non-reentrant model
 18458 ;;
 18459                           
 18460                           	psect	text105
 18461   00A264                     __ptext105:
 18462                           	callstack 0
 18463   00A264                     _I2C1_DO_IDLE:
 18464                           	callstack 21
 18465   00A264                     
 18466                           ;mcc_generated_files/i2c1_master.c: 380:     I2C1_Status.busy = 0;
 18467   00A264  0103               	movlb	3	; () banked
 18468   00A266  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 18469   00A268                     
 18470                           ; BSR set to: 3
 18471                           ;mcc_generated_files/i2c1_master.c: 381:     I2C1_Status.error = I2C1_NOERR;
 18472   00A268  0E00               	movlw	0
 18473   00A26A  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 18474   00A26C                     
 18475                           ; BSR set to: 3
 18476                           ;mcc_generated_files/i2c1_master.c: 382:     return I2C1_RESET;
 18477   00A26C  0E0F               	movlw	15
 18478   00A26E                     
 18479                           ; BSR set to: 3
 18480   00A26E  0012               	return		;funcret
 18481   00A270                     __end_of_I2C1_DO_IDLE:
 18482                           	callstack 0
 18483                           
 18484 ;; *************** function _I2C1_DO_TX_ACK *****************
 18485 ;; Defined at:
 18486 ;;		line 538 in file "mcc_generated_files/i2c1_master.c"
 18487 ;; Parameters:    Size  Location     Type
 18488 ;;		None
 18489 ;; Auto vars:     Size  Location     Type
 18490 ;;		None
 18491 ;; Return value:  Size  Location     Type
 18492 ;;                  1    wreg      enum E16630
 18493 ;; Registers used:
 18494 ;;		wreg, cstack
 18495 ;; Tracked objects:
 18496 ;;		On entry : 0/0
 18497 ;;		On exit  : 0/0
 18498 ;;		Unchanged: 0/0
 18499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18504 ;;Total ram usage:        0 bytes
 18505 ;; Hardware stack levels used: 1
 18506 ;; Hardware stack levels required when called: 1
 18507 ;; This function calls:
 18508 ;;		_I2C1_MasterSendAck
 18509 ;; This function is called by:
 18510 ;;		_I2C1_MasterFsm
 18511 ;; This function uses a non-reentrant model
 18512 ;;
 18513                           
 18514                           	psect	text106
 18515   00A1EA                     __ptext106:
 18516                           	callstack 0
 18517   00A1EA                     _I2C1_DO_TX_ACK:
 18518                           	callstack 21
 18519   00A1EA                     
 18520                           ;mcc_generated_files/i2c1_master.c: 540:     I2C1_MasterSendAck();
 18521   00A1EA  ECE2  F050         	call	_I2C1_MasterSendAck	;wreg free
 18522   00A1EE                     
 18523                           ;mcc_generated_files/i2c1_master.c: 541:     return I2C1_TX;
 18524   00A1EE  0E03               	movlw	3
 18525   00A1F0  0012               	return		;funcret
 18526   00A1F2                     __end_of_I2C1_DO_TX_ACK:
 18527                           	callstack 0
 18528                           
 18529 ;; *************** function _I2C1_MasterIsTxBufEmpty *****************
 18530 ;; Defined at:
 18531 ;;		line 740 in file "mcc_generated_files/i2c1_master.c"
 18532 ;; Parameters:    Size  Location     Type
 18533 ;;		None
 18534 ;; Auto vars:     Size  Location     Type
 18535 ;;		None
 18536 ;; Return value:  Size  Location     Type
 18537 ;;                  1    wreg      _Bool 
 18538 ;; Registers used:
 18539 ;;		wreg
 18540 ;; Tracked objects:
 18541 ;;		On entry : 0/0
 18542 ;;		On exit  : 0/0
 18543 ;;		Unchanged: 0/0
 18544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18549 ;;Total ram usage:        0 bytes
 18550 ;; Hardware stack levels used: 1
 18551 ;; This function calls:
 18552 ;;		Nothing
 18553 ;; This function is called by:
 18554 ;;		_I2C1_DO_TX
 18555 ;; This function uses a non-reentrant model
 18556 ;;
 18557                           
 18558                           	psect	text107
 18559   00A32A                     __ptext107:
 18560                           	callstack 0
 18561   00A32A                     _I2C1_MasterIsTxBufEmpty:
 18562                           	callstack 21
 18563   00A32A                     
 18564                           ;mcc_generated_files/i2c1_master.c: 742:     return I2C1STAT1bits.TXBE;
 18565   00A32A  013D               	movlb	61	; () banked
 18566   00A32C  BB78               	btfsc	120,5,b	;volatile
 18567   00A32E  EF9B  F051         	goto	u7741
 18568   00A332  EF9E  F051         	goto	u7740
 18569   00A336                     u7741:
 18570   00A336  0E01               	movlw	1
 18571   00A338  EF9F  F051         	goto	u7746
 18572   00A33C                     u7740:
 18573   00A33C  0E00               	movlw	0
 18574   00A33E                     u7746:
 18575   00A33E                     
 18576                           ; BSR set to: 61
 18577   00A33E  0012               	return		;funcret
 18578   00A340                     __end_of_I2C1_MasterIsTxBufEmpty:
 18579                           	callstack 0
 18580                           
 18581 ;; *************** function _I2C1_MasterIsNack *****************
 18582 ;; Defined at:
 18583 ;;		line 713 in file "mcc_generated_files/i2c1_master.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      _Bool 
 18590 ;; Registers used:
 18591 ;;		wreg
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18601 ;;Total ram usage:        0 bytes
 18602 ;; Hardware stack levels used: 1
 18603 ;; This function calls:
 18604 ;;		Nothing
 18605 ;; This function is called by:
 18606 ;;		_I2C1_MasterFsm
 18607 ;;		_I2C1_DO_TX
 18608 ;; This function uses a non-reentrant model
 18609 ;;
 18610                           
 18611                           	psect	text108
 18612   00A314                     __ptext108:
 18613                           	callstack 0
 18614   00A314                     _I2C1_MasterIsNack:
 18615                           	callstack 22
 18616   00A314                     
 18617                           ;mcc_generated_files/i2c1_master.c: 715:     return I2C1CON1bits.ACKSTAT;
 18618   00A314  013D               	movlb	61	; () banked
 18619   00A316  BB74               	btfsc	116,5,b	;volatile
 18620   00A318  EF90  F051         	goto	u7701
 18621   00A31C  EF93  F051         	goto	u7700
 18622   00A320                     u7701:
 18623   00A320  0E01               	movlw	1
 18624   00A322  EF94  F051         	goto	u7706
 18625   00A326                     u7700:
 18626   00A326  0E00               	movlw	0
 18627   00A328                     u7706:
 18628   00A328                     
 18629                           ; BSR set to: 61
 18630   00A328  0012               	return		;funcret
 18631   00A32A                     __end_of_I2C1_MasterIsNack:
 18632                           	callstack 0
 18633                           
 18634 ;; *************** function _I2C1_MasterGetCounter *****************
 18635 ;; Defined at:
 18636 ;;		line 675 in file "mcc_generated_files/i2c1_master.c"
 18637 ;; Parameters:    Size  Location     Type
 18638 ;;		None
 18639 ;; Auto vars:     Size  Location     Type
 18640 ;;		None
 18641 ;; Return value:  Size  Location     Type
 18642 ;;                  1    wreg      unsigned char 
 18643 ;; Registers used:
 18644 ;;		wreg, status,2
 18645 ;; Tracked objects:
 18646 ;;		On entry : 0/0
 18647 ;;		On exit  : 0/0
 18648 ;;		Unchanged: 0/0
 18649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18654 ;;Total ram usage:        0 bytes
 18655 ;; Hardware stack levels used: 1
 18656 ;; This function calls:
 18657 ;;		Nothing
 18658 ;; This function is called by:
 18659 ;;		_I2C1_DO_SEND_STOP
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text109
 18664   00A1D6                     __ptext109:
 18665                           	callstack 0
 18666   00A1D6                     _I2C1_MasterGetCounter:
 18667                           	callstack 21
 18668   00A1D6                     
 18669                           ;mcc_generated_files/i2c1_master.c: 677:     return I2C1CNT;
 18670   00A1D6  013D               	movlb	61	; () banked
 18671   00A1D8  516C               	movf	108,w,b	;volatile
 18672   00A1DA                     
 18673                           ; BSR set to: 61
 18674   00A1DA  0012               	return		;funcret
 18675   00A1DC                     __end_of_I2C1_MasterGetCounter:
 18676                           	callstack 0
 18677                           
 18678 ;; *************** function _I2C1_MasterStop *****************
 18679 ;; Defined at:
 18680 ;;		line 707 in file "mcc_generated_files/i2c1_master.c"
 18681 ;; Parameters:    Size  Location     Type
 18682 ;;		None
 18683 ;; Auto vars:     Size  Location     Type
 18684 ;;		None
 18685 ;; Return value:  Size  Location     Type
 18686 ;;                  1    wreg      void 
 18687 ;; Registers used:
 18688 ;;		None
 18689 ;; Tracked objects:
 18690 ;;		On entry : 0/0
 18691 ;;		On exit  : 0/0
 18692 ;;		Unchanged: 0/0
 18693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18698 ;;Total ram usage:        0 bytes
 18699 ;; Hardware stack levels used: 1
 18700 ;; This function calls:
 18701 ;;		Nothing
 18702 ;; This function is called by:
 18703 ;;		_I2C1_DO_SEND_STOP
 18704 ;;		_I2C1_DO_RX_NACK_STOP
 18705 ;; This function uses a non-reentrant model
 18706 ;;
 18707                           
 18708                           	psect	text110
 18709   00A1D0                     __ptext110:
 18710                           	callstack 0
 18711   00A1D0                     _I2C1_MasterStop:
 18712                           	callstack 21
 18713   00A1D0                     
 18714                           ;mcc_generated_files/i2c1_master.c: 710:     I2C1CON0bits.S = 0;
 18715   00A1D0  013D               	movlb	61	; () banked
 18716   00A1D2  9B73               	bcf	115,5,b	;volatile
 18717   00A1D4                     
 18718                           ; BSR set to: 61
 18719   00A1D4  0012               	return		;funcret
 18720   00A1D6                     __end_of_I2C1_MasterStop:
 18721                           	callstack 0
 18722                           
 18723 ;; *************** function _I2C1_MasterSendNack *****************
 18724 ;; Defined at:
 18725 ;;		line 723 in file "mcc_generated_files/i2c1_master.c"
 18726 ;; Parameters:    Size  Location     Type
 18727 ;;		None
 18728 ;; Auto vars:     Size  Location     Type
 18729 ;;		None
 18730 ;; Return value:  Size  Location     Type
 18731 ;;                  1    wreg      void 
 18732 ;; Registers used:
 18733 ;;		None
 18734 ;; Tracked objects:
 18735 ;;		On entry : 0/0
 18736 ;;		On exit  : 0/0
 18737 ;;		Unchanged: 0/0
 18738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18743 ;;Total ram usage:        0 bytes
 18744 ;; Hardware stack levels used: 1
 18745 ;; This function calls:
 18746 ;;		Nothing
 18747 ;; This function is called by:
 18748 ;;		_I2C1_DO_RX_NACK_STOP
 18749 ;;		_I2C1_DO_RX_NACK_RESTART
 18750 ;; This function uses a non-reentrant model
 18751 ;;
 18752                           
 18753                           	psect	text111
 18754   00A1CA                     __ptext111:
 18755                           	callstack 0
 18756   00A1CA                     _I2C1_MasterSendNack:
 18757                           	callstack 21
 18758   00A1CA                     
 18759                           ;mcc_generated_files/i2c1_master.c: 725:     I2C1CON1bits.ACKDT = 1;
 18760   00A1CA  013D               	movlb	61	; () banked
 18761   00A1CC  8D74               	bsf	116,6,b	;volatile
 18762   00A1CE                     
 18763                           ; BSR set to: 61
 18764   00A1CE  0012               	return		;funcret
 18765   00A1D0                     __end_of_I2C1_MasterSendNack:
 18766                           	callstack 0
 18767                           
 18768 ;; *************** function _I2C1_MasterSendAck *****************
 18769 ;; Defined at:
 18770 ;;		line 718 in file "mcc_generated_files/i2c1_master.c"
 18771 ;; Parameters:    Size  Location     Type
 18772 ;;		None
 18773 ;; Auto vars:     Size  Location     Type
 18774 ;;		None
 18775 ;; Return value:  Size  Location     Type
 18776 ;;                  1    wreg      void 
 18777 ;; Registers used:
 18778 ;;		None
 18779 ;; Tracked objects:
 18780 ;;		On entry : 0/0
 18781 ;;		On exit  : 0/0
 18782 ;;		Unchanged: 0/0
 18783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18788 ;;Total ram usage:        0 bytes
 18789 ;; Hardware stack levels used: 1
 18790 ;; This function calls:
 18791 ;;		Nothing
 18792 ;; This function is called by:
 18793 ;;		_I2C1_DO_RX_ACK
 18794 ;;		_I2C1_DO_TX_ACK
 18795 ;; This function uses a non-reentrant model
 18796 ;;
 18797                           
 18798                           	psect	text112
 18799   00A1C4                     __ptext112:
 18800                           	callstack 0
 18801   00A1C4                     _I2C1_MasterSendAck:
 18802                           	callstack 21
 18803   00A1C4                     
 18804                           ;mcc_generated_files/i2c1_master.c: 720:     I2C1CON1bits.ACKDT = 0;
 18805   00A1C4  013D               	movlb	61	; () banked
 18806   00A1C6  9D74               	bcf	116,6,b	;volatile
 18807   00A1C8                     
 18808                           ; BSR set to: 61
 18809   00A1C8  0012               	return		;funcret
 18810   00A1CA                     __end_of_I2C1_MasterSendAck:
 18811                           	callstack 0
 18812                           
 18813 ;; *************** function _I2C1_MasterIsRxBufFull *****************
 18814 ;; Defined at:
 18815 ;;		line 735 in file "mcc_generated_files/i2c1_master.c"
 18816 ;; Parameters:    Size  Location     Type
 18817 ;;		None
 18818 ;; Auto vars:     Size  Location     Type
 18819 ;;		None
 18820 ;; Return value:  Size  Location     Type
 18821 ;;                  1    wreg      _Bool 
 18822 ;; Registers used:
 18823 ;;		wreg
 18824 ;; Tracked objects:
 18825 ;;		On entry : 0/0
 18826 ;;		On exit  : 0/0
 18827 ;;		Unchanged: 0/0
 18828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18833 ;;Total ram usage:        0 bytes
 18834 ;; Hardware stack levels used: 1
 18835 ;; This function calls:
 18836 ;;		Nothing
 18837 ;; This function is called by:
 18838 ;;		_I2C1_DO_RX
 18839 ;; This function uses a non-reentrant model
 18840 ;;
 18841                           
 18842                           	psect	text113
 18843   00A2FE                     __ptext113:
 18844                           	callstack 0
 18845   00A2FE                     _I2C1_MasterIsRxBufFull:
 18846                           	callstack 21
 18847   00A2FE                     
 18848                           ;mcc_generated_files/i2c1_master.c: 737:     return I2C1STAT1bits.RXBF;
 18849   00A2FE  013D               	movlb	61	; () banked
 18850   00A300  B178               	btfsc	120,0,b	;volatile
 18851   00A302  EF85  F051         	goto	u7761
 18852   00A306  EF88  F051         	goto	u7760
 18853   00A30A                     u7761:
 18854   00A30A  0E01               	movlw	1
 18855   00A30C  EF89  F051         	goto	u7766
 18856   00A310                     u7760:
 18857   00A310  0E00               	movlw	0
 18858   00A312                     u7766:
 18859   00A312                     
 18860                           ; BSR set to: 61
 18861   00A312  0012               	return		;funcret
 18862   00A314                     __end_of_I2C1_MasterIsRxBufFull:
 18863                           	callstack 0
 18864                           
 18865 ;; *************** function _I2C1_MasterGetRxData *****************
 18866 ;; Defined at:
 18867 ;;		line 665 in file "mcc_generated_files/i2c1_master.c"
 18868 ;; Parameters:    Size  Location     Type
 18869 ;;		None
 18870 ;; Auto vars:     Size  Location     Type
 18871 ;;		None
 18872 ;; Return value:  Size  Location     Type
 18873 ;;                  1    wreg      unsigned char 
 18874 ;; Registers used:
 18875 ;;		wreg, status,2
 18876 ;; Tracked objects:
 18877 ;;		On entry : 0/0
 18878 ;;		On exit  : 0/0
 18879 ;;		Unchanged: 0/0
 18880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18885 ;;Total ram usage:        0 bytes
 18886 ;; Hardware stack levels used: 1
 18887 ;; This function calls:
 18888 ;;		Nothing
 18889 ;; This function is called by:
 18890 ;;		_I2C1_DO_RX
 18891 ;; This function uses a non-reentrant model
 18892 ;;
 18893                           
 18894                           	psect	text114
 18895   00A1BE                     __ptext114:
 18896                           	callstack 0
 18897   00A1BE                     _I2C1_MasterGetRxData:
 18898                           	callstack 21
 18899   00A1BE                     
 18900                           ;mcc_generated_files/i2c1_master.c: 667:     return I2C1RXB;
 18901   00A1BE  013D               	movlb	61	; () banked
 18902   00A1C0  516A               	movf	106,w,b	;volatile
 18903   00A1C2                     
 18904                           ; BSR set to: 61
 18905   00A1C2  0012               	return		;funcret
 18906   00A1C4                     __end_of_I2C1_MasterGetRxData:
 18907                           	callstack 0
 18908                           
 18909 ;; *************** function _I2C1_MasterSendTxData *****************
 18910 ;; Defined at:
 18911 ;;		line 670 in file "mcc_generated_files/i2c1_master.c"
 18912 ;; Parameters:    Size  Location     Type
 18913 ;;  data            1    wreg     unsigned char 
 18914 ;; Auto vars:     Size  Location     Type
 18915 ;;  data            1    0[COMRAM] unsigned char 
 18916 ;; Return value:  Size  Location     Type
 18917 ;;                  1    wreg      void 
 18918 ;; Registers used:
 18919 ;;		wreg
 18920 ;; Tracked objects:
 18921 ;;		On entry : 0/0
 18922 ;;		On exit  : 0/0
 18923 ;;		Unchanged: 0/0
 18924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18929 ;;Total ram usage:        1 bytes
 18930 ;; Hardware stack levels used: 1
 18931 ;; This function calls:
 18932 ;;		Nothing
 18933 ;; This function is called by:
 18934 ;;		_I2C1_DO_SEND_ADR_READ
 18935 ;;		_I2C1_DO_SEND_ADR_WRITE
 18936 ;;		_I2C1_DO_TX
 18937 ;;		_I2C1_DO_SEND_STOP
 18938 ;; This function uses a non-reentrant model
 18939 ;;
 18940                           
 18941                           	psect	text115
 18942   00A226                     __ptext115:
 18943                           	callstack 0
 18944   00A226                     _I2C1_MasterSendTxData:
 18945                           	callstack 21
 18946                           
 18947                           ; BSR set to: 61
 18948                           ;incstack = 0
 18949                           ;I2C1_MasterSendTxData@data stored from wreg
 18950   00A226  6E01               	movwf	I2C1_MasterSendTxData@data^0,c
 18951   00A228                     
 18952                           ;mcc_generated_files/i2c1_master.c: 670: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 671: {;mcc_generated_files/i
      +                          2c1_master.c: 672:     I2C1TXB = data;
 18953   00A228  0060  F007  FD6B   	movff	I2C1_MasterSendTxData@data,15723	;volatile
 18954   00A22E  0012               	return		;funcret
 18955   00A230                     __end_of_I2C1_MasterSendTxData:
 18956                           	callstack 0
 18957                           
 18958 ;; *************** function _I2C1_MasterSetCounter *****************
 18959 ;; Defined at:
 18960 ;;		line 680 in file "mcc_generated_files/i2c1_master.c"
 18961 ;; Parameters:    Size  Location     Type
 18962 ;;  counter         1    wreg     unsigned char 
 18963 ;; Auto vars:     Size  Location     Type
 18964 ;;  counter         1    0[COMRAM] unsigned char 
 18965 ;; Return value:  Size  Location     Type
 18966 ;;                  1    wreg      void 
 18967 ;; Registers used:
 18968 ;;		wreg
 18969 ;; Tracked objects:
 18970 ;;		On entry : 0/0
 18971 ;;		On exit  : 0/0
 18972 ;;		Unchanged: 0/0
 18973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18978 ;;Total ram usage:        1 bytes
 18979 ;; Hardware stack levels used: 1
 18980 ;; This function calls:
 18981 ;;		Nothing
 18982 ;; This function is called by:
 18983 ;;		_I2C1_MasterOperation
 18984 ;;		_I2C1_DO_TX_EMPTY
 18985 ;;		_I2C1_DO_RX_EMPTY
 18986 ;;		_I2C1_DO_SEND_RESTART_READ
 18987 ;;		_I2C1_DO_SEND_STOP
 18988 ;; This function uses a non-reentrant model
 18989 ;;
 18990                           
 18991                           	psect	text116
 18992   00A21C                     __ptext116:
 18993                           	callstack 0
 18994   00A21C                     _I2C1_MasterSetCounter:
 18995                           	callstack 21
 18996                           
 18997                           ;incstack = 0
 18998                           ;I2C1_MasterSetCounter@counter stored from wreg
 18999   00A21C  6E01               	movwf	I2C1_MasterSetCounter@counter^0,c
 19000   00A21E                     
 19001                           ;mcc_generated_files/i2c1_master.c: 680: static __attribute__((inline)) void I2C1_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c1_master.c: 681: {;mcc_generated_file
      +                          s/i2c1_master.c: 682:     I2C1CNT = counter;
 19002   00A21E  0060  F007  FD6C   	movff	I2C1_MasterSetCounter@counter,15724	;volatile
 19003   00A224  0012               	return		;funcret
 19004   00A226                     __end_of_I2C1_MasterSetCounter:
 19005                           	callstack 0
 19006                           
 19007 ;; *************** function _I2C1_MasterEnableRestart *****************
 19008 ;; Defined at:
 19009 ;;		line 695 in file "mcc_generated_files/i2c1_master.c"
 19010 ;; Parameters:    Size  Location     Type
 19011 ;;		None
 19012 ;; Auto vars:     Size  Location     Type
 19013 ;;		None
 19014 ;; Return value:  Size  Location     Type
 19015 ;;                  1    wreg      void 
 19016 ;; Registers used:
 19017 ;;		None
 19018 ;; Tracked objects:
 19019 ;;		On entry : 0/0
 19020 ;;		On exit  : 0/0
 19021 ;;		Unchanged: 0/0
 19022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19027 ;;Total ram usage:        0 bytes
 19028 ;; Hardware stack levels used: 1
 19029 ;; This function calls:
 19030 ;;		Nothing
 19031 ;; This function is called by:
 19032 ;;		_I2C1_DO_TX_EMPTY
 19033 ;;		_I2C1_DO_RX_EMPTY
 19034 ;; This function uses a non-reentrant model
 19035 ;;
 19036                           
 19037                           	psect	text117
 19038   00A1B8                     __ptext117:
 19039                           	callstack 0
 19040   00A1B8                     _I2C1_MasterEnableRestart:
 19041                           	callstack 21
 19042   00A1B8                     
 19043                           ;mcc_generated_files/i2c1_master.c: 698:     I2C1CON0bits.RSEN = 1;
 19044   00A1B8  013D               	movlb	61	; () banked
 19045   00A1BA  8D73               	bsf	115,6,b	;volatile
 19046   00A1BC                     
 19047                           ; BSR set to: 61
 19048   00A1BC  0012               	return		;funcret
 19049   00A1BE                     __end_of_I2C1_MasterEnableRestart:
 19050                           	callstack 0
 19051                           
 19052 ;; *************** function _I2C1_MasterDisableRestart *****************
 19053 ;; Defined at:
 19054 ;;		line 701 in file "mcc_generated_files/i2c1_master.c"
 19055 ;; Parameters:    Size  Location     Type
 19056 ;;		None
 19057 ;; Auto vars:     Size  Location     Type
 19058 ;;		None
 19059 ;; Return value:  Size  Location     Type
 19060 ;;                  1    wreg      void 
 19061 ;; Registers used:
 19062 ;;		None
 19063 ;; Tracked objects:
 19064 ;;		On entry : 0/0
 19065 ;;		On exit  : 0/0
 19066 ;;		Unchanged: 0/0
 19067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19072 ;;Total ram usage:        0 bytes
 19073 ;; Hardware stack levels used: 1
 19074 ;; This function calls:
 19075 ;;		Nothing
 19076 ;; This function is called by:
 19077 ;;		_I2C1_DO_TX_EMPTY
 19078 ;;		_I2C1_DO_RX_EMPTY
 19079 ;; This function uses a non-reentrant model
 19080 ;;
 19081                           
 19082                           	psect	text118
 19083   00A1B2                     __ptext118:
 19084                           	callstack 0
 19085   00A1B2                     _I2C1_MasterDisableRestart:
 19086                           	callstack 21
 19087   00A1B2                     
 19088                           ;mcc_generated_files/i2c1_master.c: 704:     I2C1CON0bits.RSEN = 0;
 19089   00A1B2  013D               	movlb	61	; () banked
 19090   00A1B4  9D73               	bcf	115,6,b	;volatile
 19091   00A1B6                     
 19092                           ; BSR set to: 61
 19093   00A1B6  0012               	return		;funcret
 19094   00A1B8                     __end_of_I2C1_MasterDisableRestart:
 19095                           	callstack 0
 19096                           
 19097 ;; *************** function _I2C1_MasterResetBus *****************
 19098 ;; Defined at:
 19099 ;;		line 685 in file "mcc_generated_files/i2c1_master.c"
 19100 ;; Parameters:    Size  Location     Type
 19101 ;;		None
 19102 ;; Auto vars:     Size  Location     Type
 19103 ;;		None
 19104 ;; Return value:  Size  Location     Type
 19105 ;;                  1    wreg      void 
 19106 ;; Registers used:
 19107 ;;		None
 19108 ;; Tracked objects:
 19109 ;;		On entry : 0/0
 19110 ;;		On exit  : 0/0
 19111 ;;		Unchanged: 0/0
 19112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19117 ;;Total ram usage:        0 bytes
 19118 ;; Hardware stack levels used: 1
 19119 ;; This function calls:
 19120 ;;		Nothing
 19121 ;; This function is called by:
 19122 ;;		_I2C1_DO_RESET
 19123 ;;		_I2C1_DO_BUS_ERROR
 19124 ;; This function uses a non-reentrant model
 19125 ;;
 19126                           
 19127                           	psect	text119
 19128   00A212                     __ptext119:
 19129                           	callstack 0
 19130   00A212                     _I2C1_MasterResetBus:
 19131                           	callstack 21
 19132   00A212                     
 19133                           ;mcc_generated_files/i2c1_master.c: 688:     I2C1CON0bits.EN = 0;
 19134   00A212  013D               	movlb	61	; () banked
 19135   00A214  9F73               	bcf	115,7,b	;volatile
 19136                           
 19137                           ;mcc_generated_files/i2c1_master.c: 690:     I2C1STAT1bits.CLRBF = 1;
 19138   00A216  8578               	bsf	120,2,b	;volatile
 19139                           
 19140                           ;mcc_generated_files/i2c1_master.c: 692:     I2C1CON0bits.EN = 1;
 19141   00A218  8F73               	bsf	115,7,b	;volatile
 19142   00A21A                     
 19143                           ; BSR set to: 61
 19144   00A21A  0012               	return		;funcret
 19145   00A21C                     __end_of_I2C1_MasterResetBus:
 19146                           	callstack 0
 19147                           
 19148 ;; *************** function _I2C1_CallbackReturnReset *****************
 19149 ;; Defined at:
 19150 ;;		line 614 in file "mcc_generated_files/i2c1_master.c"
 19151 ;; Parameters:    Size  Location     Type
 19152 ;;  funPtr          2    9[COMRAM] PTR void 
 19153 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19154 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19155 ;; Auto vars:     Size  Location     Type
 19156 ;;		None
 19157 ;; Return value:  Size  Location     Type
 19158 ;;                  1    wreg      enum E363
 19159 ;; Registers used:
 19160 ;;		wreg
 19161 ;; Tracked objects:
 19162 ;;		On entry : 0/0
 19163 ;;		On exit  : 0/0
 19164 ;;		Unchanged: 0/0
 19165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19170 ;;Total ram usage:        2 bytes
 19171 ;; Hardware stack levels used: 1
 19172 ;; This function calls:
 19173 ;;		Nothing
 19174 ;; This function is called by:
 19175 ;;		_I2C1_Open
 19176 ;;		_I2C1_DO_RX_EMPTY
 19177 ;;		_I2C1_DO_TX_EMPTY
 19178 ;;		_I2C1_DO_TX
 19179 ;;		_I2C1_DO_ADDRESS_NACK
 19180 ;;		_I2C1_DO_BUS_COLLISION
 19181 ;; This function uses a non-reentrant model
 19182 ;;
 19183                           
 19184                           	psect	text120
 19185   00A194                     __ptext120:
 19186                           	callstack 0
 19187   00A194                     _I2C1_CallbackReturnReset:
 19188                           	callstack 21
 19189   00A194                     
 19190                           ;mcc_generated_files/i2c1_master.c: 614: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 615: {;mcc_generated_files/i2c1_master.c: 6
      +                          16:     return I2C1_RESET_LINK;
 19191   00A194  0E05               	movlw	5
 19192   00A196  0012               	return		;funcret
 19193   00A198                     __end_of_I2C1_CallbackReturnReset:
 19194                           	callstack 0
 19195                           
 19196 ;; *************** function _I2C1_CallbackReturnStop *****************
 19197 ;; Defined at:
 19198 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 19199 ;; Parameters:    Size  Location     Type
 19200 ;;  funPtr          2    9[COMRAM] PTR void 
 19201 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19202 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;		None
 19205 ;; Return value:  Size  Location     Type
 19206 ;;                  1    wreg      enum E363
 19207 ;; Registers used:
 19208 ;;		wreg
 19209 ;; Tracked objects:
 19210 ;;		On entry : 0/0
 19211 ;;		On exit  : 0/0
 19212 ;;		Unchanged: 0/0
 19213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19218 ;;Total ram usage:        2 bytes
 19219 ;; Hardware stack levels used: 1
 19220 ;; This function calls:
 19221 ;;		Nothing
 19222 ;; This function is called by:
 19223 ;;		_I2C1_Open
 19224 ;;		_I2C1_SetCallback
 19225 ;;		_I2C1_DO_RX_EMPTY
 19226 ;;		_I2C1_DO_TX_EMPTY
 19227 ;;		_I2C1_DO_TX
 19228 ;;		_I2C1_DO_ADDRESS_NACK
 19229 ;;		_I2C1_DO_BUS_COLLISION
 19230 ;; This function uses a non-reentrant model
 19231 ;;
 19232                           
 19233                           	psect	text121
 19234   00A190                     __ptext121:
 19235                           	callstack 0
 19236   00A190                     _I2C1_CallbackReturnStop:
 19237                           	callstack 21
 19238   00A190                     
 19239                           ;mcc_generated_files/i2c1_master.c: 609: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 610: {;mcc_generated_files/i2c1_master.c: 61
      +                          1:     return I2C1_STOP;
 19240   00A190  0E01               	movlw	1
 19241   00A192  0012               	return		;funcret
 19242   00A194                     __end_of_I2C1_CallbackReturnStop:
 19243                           	callstack 0
 19244                           
 19245 ;; *************** function _rdBlkRegCompleteHandler *****************
 19246 ;; Defined at:
 19247 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 19248 ;; Parameters:    Size  Location     Type
 19249 ;;  ptr             2    9[COMRAM] PTR void 
 19250 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19251 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19252 ;; Auto vars:     Size  Location     Type
 19253 ;;		None
 19254 ;; Return value:  Size  Location     Type
 19255 ;;                  1    wreg      enum E363
 19256 ;; Registers used:
 19257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19258 ;; Tracked objects:
 19259 ;;		On entry : 0/0
 19260 ;;		On exit  : 0/0
 19261 ;;		Unchanged: 0/0
 19262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19267 ;;Total ram usage:        3 bytes
 19268 ;; Hardware stack levels used: 1
 19269 ;; Hardware stack levels required when called: 2
 19270 ;; This function calls:
 19271 ;;		_I2C1_SetBuffer
 19272 ;;		_I2C1_SetDataCompleteCallback
 19273 ;; This function is called by:
 19274 ;;		_I2C1_ReadDataBlock
 19275 ;;		_I2C1_DO_RX_EMPTY
 19276 ;;		_I2C1_DO_TX_EMPTY
 19277 ;;		_I2C1_DO_TX
 19278 ;;		_I2C1_DO_ADDRESS_NACK
 19279 ;;		_I2C1_DO_BUS_COLLISION
 19280 ;; This function uses a non-reentrant model
 19281 ;;
 19282                           
 19283                           	psect	text122
 19284   00A9BC                     __ptext122:
 19285                           	callstack 0
 19286   00A9BC                     _rdBlkRegCompleteHandler:
 19287                           	callstack 19
 19288   00A9BC                     
 19289                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 19290   00A9BC  EE20 F002          	lfsr	2,2
 19291   00A9C0  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 19292   00A9C2  26D9               	addwf	fsr2l,f,c
 19293   00A9C4  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 19294   00A9C6  22DA               	addwfc	fsr2h,f,c
 19295   00A9C8  50DF               	movf	indf2,w,c
 19296   00A9CA  6E0C               	movwf	??_rdBlkRegCompleteHandler^0,c
 19297   00A9CC  C00C  F001         	movff	??_rdBlkRegCompleteHandler,I2C1_SetBuffer@buffer
 19298   00A9D0  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 19299   00A9D2  0060  F02B  FFD9   	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 19300   00A9D8  0060  F02F  FFDA   	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 19301   00A9DE  006F FF78  F003    	movff	postinc2,I2C1_SetBuffer@bufferSize
 19302   00A9E4  006F FF74  F004    	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 19303   00A9EA  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
 19304   00A9EE                     
 19305                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 19306   00A9EE  0E00               	movlw	0
 19307   00A9F0  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 19308   00A9F2  0E00               	movlw	0
 19309   00A9F4  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 19310   00A9F6  0E00               	movlw	0
 19311   00A9F8  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 19312   00A9FA  0E00               	movlw	0
 19313   00A9FC  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 19314   00A9FE  ECB6  F051         	call	_I2C1_SetDataCompleteCallback	;wreg free
 19315   00AA02                     
 19316                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 19317   00AA02  0E02               	movlw	2
 19318   00AA04  0012               	return		;funcret
 19319   00AA06                     __end_of_rdBlkRegCompleteHandler:
 19320                           	callstack 0
 19321                           
 19322 ;; *************** function _wr1RegCompleteHandler *****************
 19323 ;; Defined at:
 19324 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 19325 ;; Parameters:    Size  Location     Type
 19326 ;;  ptr             2    9[COMRAM] PTR void 
 19327 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19328 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19329 ;; Auto vars:     Size  Location     Type
 19330 ;;		None
 19331 ;; Return value:  Size  Location     Type
 19332 ;;                  1    wreg      enum E363
 19333 ;; Registers used:
 19334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19335 ;; Tracked objects:
 19336 ;;		On entry : 0/0
 19337 ;;		On exit  : 0/0
 19338 ;;		Unchanged: 0/0
 19339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19344 ;;Total ram usage:        2 bytes
 19345 ;; Hardware stack levels used: 1
 19346 ;; Hardware stack levels required when called: 2
 19347 ;; This function calls:
 19348 ;;		_I2C1_SetBuffer
 19349 ;;		_I2C1_SetDataCompleteCallback
 19350 ;; This function is called by:
 19351 ;;		_I2C1_Write1ByteRegister
 19352 ;;		_I2C1_DO_RX_EMPTY
 19353 ;;		_I2C1_DO_TX_EMPTY
 19354 ;;		_I2C1_DO_TX
 19355 ;;		_I2C1_DO_ADDRESS_NACK
 19356 ;;		_I2C1_DO_BUS_COLLISION
 19357 ;; This function uses a non-reentrant model
 19358 ;;
 19359                           
 19360                           	psect	text123
 19361   00A59A                     __ptext123:
 19362                           	callstack 0
 19363   00A59A                     _wr1RegCompleteHandler:
 19364                           	callstack 19
 19365   00A59A                     
 19366                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 19367   00A59A  C00A  F001         	movff	wr1RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 19368   00A59E  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 19369   00A5A2  0E00               	movlw	0
 19370   00A5A4  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 19371   00A5A6  0E01               	movlw	1
 19372   00A5A8  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 19373   00A5AA  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
 19374   00A5AE                     
 19375                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 19376   00A5AE  0E00               	movlw	0
 19377   00A5B0  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 19378   00A5B2  0E00               	movlw	0
 19379   00A5B4  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 19380   00A5B6  0E00               	movlw	0
 19381   00A5B8  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 19382   00A5BA  0E00               	movlw	0
 19383   00A5BC  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 19384   00A5BE  ECB6  F051         	call	_I2C1_SetDataCompleteCallback	;wreg free
 19385   00A5C2                     
 19386                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 19387   00A5C2  0E04               	movlw	4
 19388   00A5C4  0012               	return		;funcret
 19389   00A5C6                     __end_of_wr1RegCompleteHandler:
 19390                           	callstack 0
 19391                           
 19392 ;; *************** function _rd2RegCompleteHandler *****************
 19393 ;; Defined at:
 19394 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 19395 ;; Parameters:    Size  Location     Type
 19396 ;;  ptr             2    9[COMRAM] PTR void 
 19397 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19398 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19399 ;; Auto vars:     Size  Location     Type
 19400 ;;		None
 19401 ;; Return value:  Size  Location     Type
 19402 ;;                  1    wreg      enum E363
 19403 ;; Registers used:
 19404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19405 ;; Tracked objects:
 19406 ;;		On entry : 0/0
 19407 ;;		On exit  : 0/0
 19408 ;;		Unchanged: 0/0
 19409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19414 ;;Total ram usage:        2 bytes
 19415 ;; Hardware stack levels used: 1
 19416 ;; Hardware stack levels required when called: 2
 19417 ;; This function calls:
 19418 ;;		_I2C1_SetBuffer
 19419 ;;		_I2C1_SetDataCompleteCallback
 19420 ;; This function is called by:
 19421 ;;		_I2C1_Read2ByteRegister
 19422 ;;		_I2C1_DO_RX_EMPTY
 19423 ;;		_I2C1_DO_TX_EMPTY
 19424 ;;		_I2C1_DO_TX
 19425 ;;		_I2C1_DO_ADDRESS_NACK
 19426 ;;		_I2C1_DO_BUS_COLLISION
 19427 ;; This function uses a non-reentrant model
 19428 ;;
 19429                           
 19430                           	psect	text124
 19431   00A56E                     __ptext124:
 19432                           	callstack 0
 19433   00A56E                     _rd2RegCompleteHandler:
 19434                           	callstack 19
 19435   00A56E                     
 19436                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 19437   00A56E  C00A  F001         	movff	rd2RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 19438   00A572  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 19439   00A576  0E00               	movlw	0
 19440   00A578  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 19441   00A57A  0E02               	movlw	2
 19442   00A57C  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 19443   00A57E  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
 19444   00A582                     
 19445                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 19446   00A582  0E00               	movlw	0
 19447   00A584  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 19448   00A586  0E00               	movlw	0
 19449   00A588  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 19450   00A58A  0E00               	movlw	0
 19451   00A58C  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 19452   00A58E  0E00               	movlw	0
 19453   00A590  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 19454   00A592  ECB6  F051         	call	_I2C1_SetDataCompleteCallback	;wreg free
 19455   00A596                     
 19456                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 19457   00A596  0E02               	movlw	2
 19458   00A598  0012               	return		;funcret
 19459   00A59A                     __end_of_rd2RegCompleteHandler:
 19460                           	callstack 0
 19461                           
 19462 ;; *************** function _rd1RegCompleteHandler *****************
 19463 ;; Defined at:
 19464 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 19465 ;; Parameters:    Size  Location     Type
 19466 ;;  ptr             2    9[COMRAM] PTR void 
 19467 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19468 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19469 ;; Auto vars:     Size  Location     Type
 19470 ;;		None
 19471 ;; Return value:  Size  Location     Type
 19472 ;;                  1    wreg      enum E363
 19473 ;; Registers used:
 19474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19475 ;; Tracked objects:
 19476 ;;		On entry : 0/0
 19477 ;;		On exit  : 0/0
 19478 ;;		Unchanged: 0/0
 19479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19484 ;;Total ram usage:        2 bytes
 19485 ;; Hardware stack levels used: 1
 19486 ;; Hardware stack levels required when called: 2
 19487 ;; This function calls:
 19488 ;;		_I2C1_SetBuffer
 19489 ;;		_I2C1_SetDataCompleteCallback
 19490 ;; This function is called by:
 19491 ;;		_I2C1_Read1ByteRegister
 19492 ;;		_I2C1_DO_RX_EMPTY
 19493 ;;		_I2C1_DO_TX_EMPTY
 19494 ;;		_I2C1_DO_TX
 19495 ;;		_I2C1_DO_ADDRESS_NACK
 19496 ;;		_I2C1_DO_BUS_COLLISION
 19497 ;; This function uses a non-reentrant model
 19498 ;;
 19499                           
 19500                           	psect	text125
 19501   00A542                     __ptext125:
 19502                           	callstack 0
 19503   00A542                     _rd1RegCompleteHandler:
 19504                           	callstack 19
 19505   00A542                     
 19506                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 19507   00A542  C00A  F001         	movff	rd1RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 19508   00A546  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 19509   00A54A  0E00               	movlw	0
 19510   00A54C  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 19511   00A54E  0E01               	movlw	1
 19512   00A550  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 19513   00A552  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
 19514   00A556                     
 19515                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 19516   00A556  0E00               	movlw	0
 19517   00A558  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 19518   00A55A  0E00               	movlw	0
 19519   00A55C  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 19520   00A55E  0E00               	movlw	0
 19521   00A560  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 19522   00A562  0E00               	movlw	0
 19523   00A564  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 19524   00A566  ECB6  F051         	call	_I2C1_SetDataCompleteCallback	;wreg free
 19525   00A56A                     
 19526                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 19527   00A56A  0E02               	movlw	2
 19528   00A56C  0012               	return		;funcret
 19529   00A56E                     __end_of_rd1RegCompleteHandler:
 19530                           	callstack 0
 19531                           
 19532 ;; *************** function _wr2RegCompleteHandler *****************
 19533 ;; Defined at:
 19534 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 19535 ;; Parameters:    Size  Location     Type
 19536 ;;  ptr             2    9[COMRAM] PTR void 
 19537 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19538 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;		None
 19541 ;; Return value:  Size  Location     Type
 19542 ;;                  1    wreg      enum E363
 19543 ;; Registers used:
 19544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19545 ;; Tracked objects:
 19546 ;;		On entry : 0/0
 19547 ;;		On exit  : 0/0
 19548 ;;		Unchanged: 0/0
 19549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19554 ;;Total ram usage:        2 bytes
 19555 ;; Hardware stack levels used: 1
 19556 ;; Hardware stack levels required when called: 2
 19557 ;; This function calls:
 19558 ;;		_I2C1_SetBuffer
 19559 ;;		_I2C1_SetDataCompleteCallback
 19560 ;; This function is called by:
 19561 ;;		_I2C1_Write2ByteRegister
 19562 ;;		_I2C1_DO_RX_EMPTY
 19563 ;;		_I2C1_DO_TX_EMPTY
 19564 ;;		_I2C1_DO_TX
 19565 ;;		_I2C1_DO_ADDRESS_NACK
 19566 ;;		_I2C1_DO_BUS_COLLISION
 19567 ;; This function uses a non-reentrant model
 19568 ;;
 19569                           
 19570                           	psect	text126
 19571   00A516                     __ptext126:
 19572                           	callstack 0
 19573   00A516                     _wr2RegCompleteHandler:
 19574                           	callstack 19
 19575   00A516                     
 19576                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 19577   00A516  C00A  F001         	movff	wr2RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 19578   00A51A  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 19579   00A51E  0E00               	movlw	0
 19580   00A520  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 19581   00A522  0E02               	movlw	2
 19582   00A524  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 19583   00A526  EC16  F052         	call	_I2C1_SetBuffer	;wreg free
 19584   00A52A                     
 19585                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 19586   00A52A  0E00               	movlw	0
 19587   00A52C  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 19588   00A52E  0E00               	movlw	0
 19589   00A530  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 19590   00A532  0E00               	movlw	0
 19591   00A534  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 19592   00A536  0E00               	movlw	0
 19593   00A538  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 19594   00A53A  ECB6  F051         	call	_I2C1_SetDataCompleteCallback	;wreg free
 19595   00A53E                     
 19596                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 19597   00A53E  0E04               	movlw	4
 19598   00A540  0012               	return		;funcret
 19599   00A542                     __end_of_wr2RegCompleteHandler:
 19600                           	callstack 0
 19601                           
 19602 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 19603 ;; Defined at:
 19604 ;;		line 303 in file "mcc_generated_files/i2c1_master.c"
 19605 ;; Parameters:    Size  Location     Type
 19606 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 19607 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 19608 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19609 ;;  ptr             2    7[COMRAM] PTR void 
 19610 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19611 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19612 ;; Auto vars:     Size  Location     Type
 19613 ;;		None
 19614 ;; Return value:  Size  Location     Type
 19615 ;;                  1    wreg      void 
 19616 ;; Registers used:
 19617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19618 ;; Tracked objects:
 19619 ;;		On entry : 0/0
 19620 ;;		On exit  : 0/0
 19621 ;;		Unchanged: 0/0
 19622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19627 ;;Total ram usage:        4 bytes
 19628 ;; Hardware stack levels used: 1
 19629 ;; Hardware stack levels required when called: 1
 19630 ;; This function calls:
 19631 ;;		_I2C1_SetCallback
 19632 ;; This function is called by:
 19633 ;;		_I2C1_Write1ByteRegister
 19634 ;;		_I2C1_ReadDataBlock
 19635 ;;		_rd1RegCompleteHandler
 19636 ;;		_rd2RegCompleteHandler
 19637 ;;		_wr1RegCompleteHandler
 19638 ;;		_wr2RegCompleteHandler
 19639 ;;		_rdBlkRegCompleteHandler
 19640 ;;		_I2C1_Read1ByteRegister
 19641 ;;		_I2C1_Read2ByteRegister
 19642 ;;		_I2C1_Write2ByteRegister
 19643 ;; This function uses a non-reentrant model
 19644 ;;
 19645                           
 19646                           	psect	text127
 19647   00A36C                     __ptext127:
 19648                           	callstack 0
 19649   00A36C                     _I2C1_SetDataCompleteCallback:
 19650                           	callstack 19
 19651   00A36C                     
 19652                           ;mcc_generated_files/i2c1_master.c: 303: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 304: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 305:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 19653   00A36C  C006  F001         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 19654   00A370  C007  F002         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 19655   00A374  C008  F003         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 19656   00A378  C009  F004         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 19657   00A37C  0E00               	movlw	0
 19658   00A37E  EC4B  F059         	call	_I2C1_SetCallback
 19659   00A382  0012               	return		;funcret
 19660   00A384                     __end_of_I2C1_SetDataCompleteCallback:
 19661                           	callstack 0
 19662                           
 19663 ;; *************** function _I2C1_SetCallback *****************
 19664 ;; Defined at:
 19665 ;;		line 328 in file "mcc_generated_files/i2c1_master.c"
 19666 ;; Parameters:    Size  Location     Type
 19667 ;;  idx             1    wreg     enum E16651
 19668 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 19669 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 19670 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19671 ;;  ptr             2    2[COMRAM] PTR void 
 19672 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19673 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 19674 ;; Auto vars:     Size  Location     Type
 19675 ;;  idx             1    4[COMRAM] enum E16651
 19676 ;; Return value:  Size  Location     Type
 19677 ;;                  1    wreg      void 
 19678 ;; Registers used:
 19679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19680 ;; Tracked objects:
 19681 ;;		On entry : 0/0
 19682 ;;		On exit  : 0/0
 19683 ;;		Unchanged: 0/0
 19684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19688 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19689 ;;Total ram usage:        5 bytes
 19690 ;; Hardware stack levels used: 1
 19691 ;; This function calls:
 19692 ;;		Nothing
 19693 ;; This function is called by:
 19694 ;;		_I2C1_SetDataCompleteCallback
 19695 ;;		_I2C1_SetAddressNackCallback
 19696 ;;		_I2C1_SetWriteCollisionCallback
 19697 ;;		_I2C1_SetDataNackCallback
 19698 ;;		_I2C1_SetTimeoutCallback
 19699 ;; This function uses a non-reentrant model
 19700 ;;
 19701                           
 19702                           	psect	text128
 19703   00B296                     __ptext128:
 19704                           	callstack 0
 19705   00B296                     _I2C1_SetCallback:
 19706                           	callstack 25
 19707                           
 19708                           ;incstack = 0
 19709                           ;I2C1_SetCallback@idx stored from wreg
 19710   00B296  6E05               	movwf	I2C1_SetCallback@idx^0,c
 19711   00B298                     
 19712                           ;mcc_generated_files/i2c1_master.c: 328: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 329: {;mcc_gen
      +                          erated_files/i2c1_master.c: 330:     if(cb)
 19713   00B298  5001               	movf	I2C1_SetCallback@cb^0,w,c
 19714   00B29A  1002               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 19715   00B29C  B4D8               	btfsc	status,2,c
 19716   00B29E  EF53  F059         	goto	u7641
 19717   00B2A2  EF55  F059         	goto	u7640
 19718   00B2A6                     u7641:
 19719   00B2A6  EF73  F059         	goto	l8256
 19720   00B2AA                     u7640:
 19721   00B2AA                     
 19722                           ;mcc_generated_files/i2c1_master.c: 331:     {;mcc_generated_files/i2c1_master.c: 332:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 19723   00B2AA  5005               	movf	I2C1_SetCallback@idx^0,w,c
 19724   00B2AC  0D02               	mullw	2
 19725   00B2AE  0E00               	movlw	low _I2C1_Status
 19726   00B2B0  24F3               	addwf	243,w,c
 19727   00B2B2  6ED9               	movwf	fsr2l,c
 19728   00B2B4  0E03               	movlw	high _I2C1_Status
 19729   00B2B6  20F4               	addwfc	prodh,w,c
 19730   00B2B8  6EDA               	movwf	fsr2h,c
 19731   00B2BA  0060  F007  FFDE   	movff	I2C1_SetCallback@cb,postinc2
 19732   00B2C0  0060  F00B  FFDD   	movff	I2C1_SetCallback@cb+1,postdec2
 19733                           
 19734                           ;mcc_generated_files/i2c1_master.c: 333:         I2C1_Status.callbackPayload[idx] = ptr;
 19735   00B2C6  5005               	movf	I2C1_SetCallback@idx^0,w,c
 19736   00B2C8  0D02               	mullw	2
 19737   00B2CA  0E0C               	movlw	low (_I2C1_Status+12)
 19738   00B2CC  24F3               	addwf	243,w,c
 19739   00B2CE  6ED9               	movwf	fsr2l,c
 19740   00B2D0  0E03               	movlw	high (_I2C1_Status+12)
 19741   00B2D2  20F4               	addwfc	prodh,w,c
 19742   00B2D4  6EDA               	movwf	fsr2h,c
 19743   00B2D6  0060  F00F  FFDE   	movff	I2C1_SetCallback@ptr,postinc2
 19744   00B2DC  0060  F013  FFDD   	movff	I2C1_SetCallback@ptr+1,postdec2
 19745                           
 19746                           ;mcc_generated_files/i2c1_master.c: 334:     }
 19747   00B2E2  EF89  F059         	goto	l418
 19748   00B2E6                     l8256:
 19749                           
 19750                           ;mcc_generated_files/i2c1_master.c: 336:     {;mcc_generated_files/i2c1_master.c: 337:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 19751   00B2E6  5005               	movf	I2C1_SetCallback@idx^0,w,c
 19752   00B2E8  0D02               	mullw	2
 19753   00B2EA  0E00               	movlw	low _I2C1_Status
 19754   00B2EC  24F3               	addwf	243,w,c
 19755   00B2EE  6ED9               	movwf	fsr2l,c
 19756   00B2F0  0E03               	movlw	high _I2C1_Status
 19757   00B2F2  20F4               	addwfc	prodh,w,c
 19758   00B2F4  6EDA               	movwf	fsr2h,c
 19759   00B2F6  0E90               	movlw	low _I2C1_CallbackReturnStop
 19760   00B2F8  6EDE               	movwf	postinc2,c
 19761   00B2FA  0EA1               	movlw	high _I2C1_CallbackReturnStop
 19762   00B2FC  6EDD               	movwf	postdec2,c
 19763                           
 19764                           ;mcc_generated_files/i2c1_master.c: 338:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 19765   00B2FE  5005               	movf	I2C1_SetCallback@idx^0,w,c
 19766   00B300  0D02               	mullw	2
 19767   00B302  0E0C               	movlw	low (_I2C1_Status+12)
 19768   00B304  24F3               	addwf	243,w,c
 19769   00B306  6ED9               	movwf	fsr2l,c
 19770   00B308  0E03               	movlw	high (_I2C1_Status+12)
 19771   00B30A  20F4               	addwfc	prodh,w,c
 19772   00B30C  6EDA               	movwf	fsr2h,c
 19773   00B30E  6ADE               	clrf	postinc2,c
 19774   00B310  6ADD               	clrf	postdec2,c
 19775   00B312                     l418:
 19776   00B312  0012               	return		;funcret
 19777   00B314                     __end_of_I2C1_SetCallback:
 19778                           	callstack 0
 19779                           
 19780 ;; *************** function _I2C1_SetBuffer *****************
 19781 ;; Defined at:
 19782 ;;		line 293 in file "mcc_generated_files/i2c1_master.c"
 19783 ;; Parameters:    Size  Location     Type
 19784 ;;  buffer          2    0[COMRAM] PTR void 
 19785 ;;		 -> EEPROM_ReadByte@data(1), EEPROM_ReadByte@addressBuffer(2), EEPROM_WriteByte@buffer(3), MPU6050_ReadSensorData@bu
      +ffer(12), 
 19786 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 19787 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 19788 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 19789 ;;  bufferSize      2    2[COMRAM] unsigned int 
 19790 ;; Auto vars:     Size  Location     Type
 19791 ;;		None
 19792 ;; Return value:  Size  Location     Type
 19793 ;;                  1    wreg      void 
 19794 ;; Registers used:
 19795 ;;		wreg, status,2, status,0
 19796 ;; Tracked objects:
 19797 ;;		On entry : 0/0
 19798 ;;		On exit  : 0/0
 19799 ;;		Unchanged: 0/0
 19800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19805 ;;Total ram usage:        4 bytes
 19806 ;; Hardware stack levels used: 1
 19807 ;; This function calls:
 19808 ;;		Nothing
 19809 ;; This function is called by:
 19810 ;;		_I2C1_Write1ByteRegister
 19811 ;;		_I2C1_WriteNBytes
 19812 ;;		_I2C1_ReadNBytes
 19813 ;;		_I2C1_ReadDataBlock
 19814 ;;		_rd1RegCompleteHandler
 19815 ;;		_rd2RegCompleteHandler
 19816 ;;		_wr1RegCompleteHandler
 19817 ;;		_wr2RegCompleteHandler
 19818 ;;		_rdBlkRegCompleteHandler
 19819 ;;		_I2C1_Read1ByteRegister
 19820 ;;		_I2C1_Read2ByteRegister
 19821 ;;		_I2C1_Write2ByteRegister
 19822 ;; This function uses a non-reentrant model
 19823 ;;
 19824                           
 19825                           	psect	text129
 19826   00A42C                     __ptext129:
 19827                           	callstack 0
 19828   00A42C                     _I2C1_SetBuffer:
 19829                           	callstack 26
 19830   00A42C                     
 19831                           ;mcc_generated_files/i2c1_master.c: 293: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 294: {;mcc_generated_files/i2c1_master.c: 295: 
      +                              if(I2C1_Status.bufferFree)
 19832   00A42C  0103               	movlb	3	; () banked
 19833   00A42E  A923               	btfss	(_I2C1_Status+35)& (0+255),4,b
 19834   00A430  EF1C  F052         	goto	u7651
 19835   00A434  EF1E  F052         	goto	u7650
 19836   00A438                     u7651:
 19837   00A438  EF27  F052         	goto	l398
 19838   00A43C                     u7650:
 19839   00A43C                     
 19840                           ; BSR set to: 3
 19841                           ;mcc_generated_files/i2c1_master.c: 296:     {;mcc_generated_files/i2c1_master.c: 297:  
      +                                 I2C1_Status.data_ptr = buffer;
 19842   00A43C  C001  F31D         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 19843   00A440  C002  F31E         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 19844   00A444                     
 19845                           ; BSR set to: 3
 19846                           ;mcc_generated_files/i2c1_master.c: 298:         I2C1_Status.data_length = bufferSize;
 19847   00A444  C003  F31F         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 19848   00A448  C004  F320         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 19849   00A44C                     
 19850                           ; BSR set to: 3
 19851                           ;mcc_generated_files/i2c1_master.c: 299:         I2C1_Status.bufferFree = 0;
 19852   00A44C  9923               	bcf	(_I2C1_Status+35)& (0+255),4,b
 19853   00A44E                     l398:
 19854                           
 19855                           ; BSR set to: 3
 19856   00A44E  0012               	return		;funcret
 19857   00A450                     __end_of_I2C1_SetBuffer:
 19858                           	callstack 0
 19859                           
 19860 ;; *************** function _I2C1_ClearInterruptFlags *****************
 19861 ;; Defined at:
 19862 ;;		line 362 in file "mcc_generated_files/i2c1_master.c"
 19863 ;; Parameters:    Size  Location     Type
 19864 ;;		None
 19865 ;; Auto vars:     Size  Location     Type
 19866 ;;		None
 19867 ;; Return value:  Size  Location     Type
 19868 ;;                  1    wreg      void 
 19869 ;; Registers used:
 19870 ;;		wreg, status,2, cstack
 19871 ;; Tracked objects:
 19872 ;;		On entry : 0/0
 19873 ;;		On exit  : 0/0
 19874 ;;		Unchanged: 0/0
 19875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19880 ;;Total ram usage:        0 bytes
 19881 ;; Hardware stack levels used: 1
 19882 ;; Hardware stack levels required when called: 1
 19883 ;; This function calls:
 19884 ;;		_I2C1_MasterClearCountFlag
 19885 ;;		_I2C1_MasterClearNackFlag
 19886 ;;		_I2C1_MasterClearStopFlag
 19887 ;;		_I2C1_MasterIsCountFlagSet
 19888 ;;		_I2C1_MasterIsNackFlagSet
 19889 ;;		_I2C1_MasterIsStopFlagSet
 19890 ;; This function is called by:
 19891 ;;		_I2C1_MasterFsm
 19892 ;; This function uses a non-reentrant model
 19893 ;;
 19894                           
 19895                           	psect	text130
 19896   00AAE6                     __ptext130:
 19897                           	callstack 0
 19898   00AAE6                     _I2C1_ClearInterruptFlags:
 19899                           	callstack 21
 19900   00AAE6                     
 19901                           ;mcc_generated_files/i2c1_master.c: 364:     if(I2C1_MasterIsCountFlagSet())
 19902   00AAE6  EC5E  F051         	call	_I2C1_MasterIsCountFlagSet	;wreg free
 19903   00AAEA  0900               	iorlw	0
 19904   00AAEC  B4D8               	btfsc	status,2,c
 19905   00AAEE  EF7B  F055         	goto	u7771
 19906   00AAF2  EF7D  F055         	goto	u7770
 19907   00AAF6                     u7771:
 19908   00AAF6  EF81  F055         	goto	l8502
 19909   00AAFA                     u7770:
 19910   00AAFA                     
 19911                           ;mcc_generated_files/i2c1_master.c: 365:     {;mcc_generated_files/i2c1_master.c: 366:  
      +                                 I2C1_MasterClearCountFlag();
 19912   00AAFA  ECD0  F050         	call	_I2C1_MasterClearCountFlag	;wreg free
 19913                           
 19914                           ;mcc_generated_files/i2c1_master.c: 367:     }
 19915   00AAFE  EF9B  F055         	goto	l436
 19916   00AB02                     l8502:
 19917   00AB02  EC74  F051         	call	_I2C1_MasterIsStopFlagSet	;wreg free
 19918   00AB06  0900               	iorlw	0
 19919   00AB08  B4D8               	btfsc	status,2,c
 19920   00AB0A  EF89  F055         	goto	u7781
 19921   00AB0E  EF8B  F055         	goto	u7780
 19922   00AB12                     u7781:
 19923   00AB12  EF8F  F055         	goto	l8506
 19924   00AB16                     u7780:
 19925   00AB16                     
 19926                           ;mcc_generated_files/i2c1_master.c: 369:     {;mcc_generated_files/i2c1_master.c: 370:  
      +                                 I2C1_MasterClearStopFlag();
 19927   00AB16  ECD6  F050         	call	_I2C1_MasterClearStopFlag	;wreg free
 19928                           
 19929                           ;mcc_generated_files/i2c1_master.c: 371:     }
 19930   00AB1A  EF9B  F055         	goto	l436
 19931   00AB1E                     l8506:
 19932   00AB1E  EC69  F051         	call	_I2C1_MasterIsNackFlagSet	;wreg free
 19933   00AB22  0900               	iorlw	0
 19934   00AB24  B4D8               	btfsc	status,2,c
 19935   00AB26  EF97  F055         	goto	u7791
 19936   00AB2A  EF99  F055         	goto	u7790
 19937   00AB2E                     u7791:
 19938   00AB2E  EF9B  F055         	goto	l436
 19939   00AB32                     u7790:
 19940   00AB32                     
 19941                           ;mcc_generated_files/i2c1_master.c: 373:     {;mcc_generated_files/i2c1_master.c: 374:  
      +                                 I2C1_MasterClearNackFlag();
 19942   00AB32  ECD3  F050         	call	_I2C1_MasterClearNackFlag	;wreg free
 19943   00AB36                     l436:
 19944   00AB36  0012               	return		;funcret
 19945   00AB38                     __end_of_I2C1_ClearInterruptFlags:
 19946                           	callstack 0
 19947                           
 19948 ;; *************** function _I2C1_MasterIsStopFlagSet *****************
 19949 ;; Defined at:
 19950 ;;		line 745 in file "mcc_generated_files/i2c1_master.c"
 19951 ;; Parameters:    Size  Location     Type
 19952 ;;		None
 19953 ;; Auto vars:     Size  Location     Type
 19954 ;;		None
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  1    wreg      _Bool 
 19957 ;; Registers used:
 19958 ;;		wreg
 19959 ;; Tracked objects:
 19960 ;;		On entry : 0/0
 19961 ;;		On exit  : 0/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19968 ;;Total ram usage:        0 bytes
 19969 ;; Hardware stack levels used: 1
 19970 ;; This function calls:
 19971 ;;		Nothing
 19972 ;; This function is called by:
 19973 ;;		_I2C1_ClearInterruptFlags
 19974 ;; This function uses a non-reentrant model
 19975 ;;
 19976                           
 19977                           	psect	text131
 19978   00A2E8                     __ptext131:
 19979                           	callstack 0
 19980   00A2E8                     _I2C1_MasterIsStopFlagSet:
 19981                           	callstack 21
 19982   00A2E8                     
 19983                           ;mcc_generated_files/i2c1_master.c: 747:     return I2C1PIRbits.PCIF;
 19984   00A2E8  013D               	movlb	61	; () banked
 19985   00A2EA  B579               	btfsc	121,2,b	;volatile
 19986   00A2EC  EF7A  F051         	goto	u7721
 19987   00A2F0  EF7D  F051         	goto	u7720
 19988   00A2F4                     u7721:
 19989   00A2F4  0E01               	movlw	1
 19990   00A2F6  EF7E  F051         	goto	u7726
 19991   00A2FA                     u7720:
 19992   00A2FA  0E00               	movlw	0
 19993   00A2FC                     u7726:
 19994   00A2FC                     
 19995                           ; BSR set to: 61
 19996   00A2FC  0012               	return		;funcret
 19997   00A2FE                     __end_of_I2C1_MasterIsStopFlagSet:
 19998                           	callstack 0
 19999                           
 20000 ;; *************** function _I2C1_MasterIsNackFlagSet *****************
 20001 ;; Defined at:
 20002 ;;		line 755 in file "mcc_generated_files/i2c1_master.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;		None
 20005 ;; Auto vars:     Size  Location     Type
 20006 ;;		None
 20007 ;; Return value:  Size  Location     Type
 20008 ;;                  1    wreg      _Bool 
 20009 ;; Registers used:
 20010 ;;		wreg
 20011 ;; Tracked objects:
 20012 ;;		On entry : 0/0
 20013 ;;		On exit  : 0/0
 20014 ;;		Unchanged: 0/0
 20015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20020 ;;Total ram usage:        0 bytes
 20021 ;; Hardware stack levels used: 1
 20022 ;; This function calls:
 20023 ;;		Nothing
 20024 ;; This function is called by:
 20025 ;;		_I2C1_ClearInterruptFlags
 20026 ;; This function uses a non-reentrant model
 20027 ;;
 20028                           
 20029                           	psect	text132
 20030   00A2D2                     __ptext132:
 20031                           	callstack 0
 20032   00A2D2                     _I2C1_MasterIsNackFlagSet:
 20033                           	callstack 21
 20034   00A2D2                     
 20035                           ;mcc_generated_files/i2c1_master.c: 757:     return I2C1ERRbits.NACKIF;
 20036   00A2D2  013D               	movlb	61	; () banked
 20037   00A2D4  B976               	btfsc	118,4,b	;volatile
 20038   00A2D6  EF6F  F051         	goto	u7731
 20039   00A2DA  EF72  F051         	goto	u7730
 20040   00A2DE                     u7731:
 20041   00A2DE  0E01               	movlw	1
 20042   00A2E0  EF73  F051         	goto	u7736
 20043   00A2E4                     u7730:
 20044   00A2E4  0E00               	movlw	0
 20045   00A2E6                     u7736:
 20046   00A2E6                     
 20047                           ; BSR set to: 61
 20048   00A2E6  0012               	return		;funcret
 20049   00A2E8                     __end_of_I2C1_MasterIsNackFlagSet:
 20050                           	callstack 0
 20051                           
 20052 ;; *************** function _I2C1_MasterIsCountFlagSet *****************
 20053 ;; Defined at:
 20054 ;;		line 750 in file "mcc_generated_files/i2c1_master.c"
 20055 ;; Parameters:    Size  Location     Type
 20056 ;;		None
 20057 ;; Auto vars:     Size  Location     Type
 20058 ;;		None
 20059 ;; Return value:  Size  Location     Type
 20060 ;;                  1    wreg      _Bool 
 20061 ;; Registers used:
 20062 ;;		wreg
 20063 ;; Tracked objects:
 20064 ;;		On entry : 0/0
 20065 ;;		On exit  : 0/0
 20066 ;;		Unchanged: 0/0
 20067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20072 ;;Total ram usage:        0 bytes
 20073 ;; Hardware stack levels used: 1
 20074 ;; This function calls:
 20075 ;;		Nothing
 20076 ;; This function is called by:
 20077 ;;		_I2C1_ClearInterruptFlags
 20078 ;; This function uses a non-reentrant model
 20079 ;;
 20080                           
 20081                           	psect	text133
 20082   00A2BC                     __ptext133:
 20083                           	callstack 0
 20084   00A2BC                     _I2C1_MasterIsCountFlagSet:
 20085                           	callstack 21
 20086   00A2BC                     
 20087                           ;mcc_generated_files/i2c1_master.c: 752:     return I2C1PIRbits.CNTIF;
 20088   00A2BC  013D               	movlb	61	; () banked
 20089   00A2BE  BF79               	btfsc	121,7,b	;volatile
 20090   00A2C0  EF64  F051         	goto	u7711
 20091   00A2C4  EF67  F051         	goto	u7710
 20092   00A2C8                     u7711:
 20093   00A2C8  0E01               	movlw	1
 20094   00A2CA  EF68  F051         	goto	u7716
 20095   00A2CE                     u7710:
 20096   00A2CE  0E00               	movlw	0
 20097   00A2D0                     u7716:
 20098   00A2D0                     
 20099                           ; BSR set to: 61
 20100   00A2D0  0012               	return		;funcret
 20101   00A2D2                     __end_of_I2C1_MasterIsCountFlagSet:
 20102                           	callstack 0
 20103                           
 20104 ;; *************** function _I2C1_MasterClearStopFlag *****************
 20105 ;; Defined at:
 20106 ;;		line 760 in file "mcc_generated_files/i2c1_master.c"
 20107 ;; Parameters:    Size  Location     Type
 20108 ;;		None
 20109 ;; Auto vars:     Size  Location     Type
 20110 ;;		None
 20111 ;; Return value:  Size  Location     Type
 20112 ;;                  1    wreg      void 
 20113 ;; Registers used:
 20114 ;;		None
 20115 ;; Tracked objects:
 20116 ;;		On entry : 0/0
 20117 ;;		On exit  : 0/0
 20118 ;;		Unchanged: 0/0
 20119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20124 ;;Total ram usage:        0 bytes
 20125 ;; Hardware stack levels used: 1
 20126 ;; This function calls:
 20127 ;;		Nothing
 20128 ;; This function is called by:
 20129 ;;		_I2C1_ClearInterruptFlags
 20130 ;; This function uses a non-reentrant model
 20131 ;;
 20132                           
 20133                           	psect	text134
 20134   00A1AC                     __ptext134:
 20135                           	callstack 0
 20136   00A1AC                     _I2C1_MasterClearStopFlag:
 20137                           	callstack 21
 20138   00A1AC                     
 20139                           ;mcc_generated_files/i2c1_master.c: 762:     I2C1PIRbits.PCIF = 0;
 20140   00A1AC  013D               	movlb	61	; () banked
 20141   00A1AE  9579               	bcf	121,2,b	;volatile
 20142   00A1B0                     
 20143                           ; BSR set to: 61
 20144   00A1B0  0012               	return		;funcret
 20145   00A1B2                     __end_of_I2C1_MasterClearStopFlag:
 20146                           	callstack 0
 20147                           
 20148 ;; *************** function _I2C1_MasterClearNackFlag *****************
 20149 ;; Defined at:
 20150 ;;		line 770 in file "mcc_generated_files/i2c1_master.c"
 20151 ;; Parameters:    Size  Location     Type
 20152 ;;		None
 20153 ;; Auto vars:     Size  Location     Type
 20154 ;;		None
 20155 ;; Return value:  Size  Location     Type
 20156 ;;                  1    wreg      void 
 20157 ;; Registers used:
 20158 ;;		None
 20159 ;; Tracked objects:
 20160 ;;		On entry : 0/0
 20161 ;;		On exit  : 0/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20168 ;;Total ram usage:        0 bytes
 20169 ;; Hardware stack levels used: 1
 20170 ;; This function calls:
 20171 ;;		Nothing
 20172 ;; This function is called by:
 20173 ;;		_I2C1_ClearInterruptFlags
 20174 ;; This function uses a non-reentrant model
 20175 ;;
 20176                           
 20177                           	psect	text135
 20178   00A1A6                     __ptext135:
 20179                           	callstack 0
 20180   00A1A6                     _I2C1_MasterClearNackFlag:
 20181                           	callstack 21
 20182   00A1A6                     
 20183                           ;mcc_generated_files/i2c1_master.c: 772:     I2C1ERRbits.NACKIF = 0;
 20184   00A1A6  013D               	movlb	61	; () banked
 20185   00A1A8  9976               	bcf	118,4,b	;volatile
 20186   00A1AA                     
 20187                           ; BSR set to: 61
 20188   00A1AA  0012               	return		;funcret
 20189   00A1AC                     __end_of_I2C1_MasterClearNackFlag:
 20190                           	callstack 0
 20191                           
 20192 ;; *************** function _I2C1_MasterClearCountFlag *****************
 20193 ;; Defined at:
 20194 ;;		line 765 in file "mcc_generated_files/i2c1_master.c"
 20195 ;; Parameters:    Size  Location     Type
 20196 ;;		None
 20197 ;; Auto vars:     Size  Location     Type
 20198 ;;		None
 20199 ;; Return value:  Size  Location     Type
 20200 ;;                  1    wreg      void 
 20201 ;; Registers used:
 20202 ;;		None
 20203 ;; Tracked objects:
 20204 ;;		On entry : 0/0
 20205 ;;		On exit  : 0/0
 20206 ;;		Unchanged: 0/0
 20207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20212 ;;Total ram usage:        0 bytes
 20213 ;; Hardware stack levels used: 1
 20214 ;; This function calls:
 20215 ;;		Nothing
 20216 ;; This function is called by:
 20217 ;;		_I2C1_ClearInterruptFlags
 20218 ;; This function uses a non-reentrant model
 20219 ;;
 20220                           
 20221                           	psect	text136
 20222   00A1A0                     __ptext136:
 20223                           	callstack 0
 20224   00A1A0                     _I2C1_MasterClearCountFlag:
 20225                           	callstack 21
 20226   00A1A0                     
 20227                           ;mcc_generated_files/i2c1_master.c: 767:     I2C1PIRbits.CNTIF = 0;
 20228   00A1A0  013D               	movlb	61	; () banked
 20229   00A1A2  9F79               	bcf	121,7,b	;volatile
 20230   00A1A4                     
 20231                           ; BSR set to: 61
 20232   00A1A4  0012               	return		;funcret
 20233   00A1A6                     __end_of_I2C1_MasterClearCountFlag:
 20234                           	callstack 0
 20235                           
 20236 ;; *************** function _I2C1_Close *****************
 20237 ;; Defined at:
 20238 ;;		line 237 in file "mcc_generated_files/i2c1_master.c"
 20239 ;; Parameters:    Size  Location     Type
 20240 ;;		None
 20241 ;; Auto vars:     Size  Location     Type
 20242 ;;  returnValue     1    0[COMRAM] enum E358
 20243 ;; Return value:  Size  Location     Type
 20244 ;;                  1    wreg      enum E358
 20245 ;; Registers used:
 20246 ;;		wreg, status,2, cstack
 20247 ;; Tracked objects:
 20248 ;;		On entry : 0/0
 20249 ;;		On exit  : 0/0
 20250 ;;		Unchanged: 0/0
 20251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20256 ;;Total ram usage:        1 bytes
 20257 ;; Hardware stack levels used: 1
 20258 ;; Hardware stack levels required when called: 1
 20259 ;; This function calls:
 20260 ;;		_I2C1_MasterClearIrq
 20261 ;;		_I2C1_MasterClose
 20262 ;;		_I2C1_MasterDisableIrq
 20263 ;; This function is called by:
 20264 ;;		_I2C1_Write1ByteRegister
 20265 ;;		_I2C1_WriteNBytes
 20266 ;;		_I2C1_ReadNBytes
 20267 ;;		_I2C1_ReadDataBlock
 20268 ;;		_I2C1_Read1ByteRegister
 20269 ;;		_I2C1_Read2ByteRegister
 20270 ;;		_I2C1_Write2ByteRegister
 20271 ;; This function uses a non-reentrant model
 20272 ;;
 20273                           
 20274                           	psect	text137
 20275   00A4EA                     __ptext137:
 20276                           	callstack 0
 20277   00A4EA                     _I2C1_Close:
 20278                           	callstack 25
 20279   00A4EA                     
 20280                           ;mcc_generated_files/i2c1_master.c: 239:     i2c1_error_t returnValue = I2C1_BUSY;
 20281   00A4EA  0E01               	movlw	1
 20282   00A4EC  6E01               	movwf	I2C1_Close@returnValue^0,c
 20283   00A4EE                     
 20284                           ;mcc_generated_files/i2c1_master.c: 240:     if(!I2C1_Status.busy)
 20285   00A4EE  0103               	movlb	3	; () banked
 20286   00A4F0  B523               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 20287   00A4F2  EF7D  F052         	goto	u9451
 20288   00A4F6  EF7F  F052         	goto	u9450
 20289   00A4FA                     u9451:
 20290   00A4FA  EF89  F052         	goto	l9596
 20291   00A4FE                     u9450:
 20292   00A4FE                     
 20293                           ; BSR set to: 3
 20294                           ;mcc_generated_files/i2c1_master.c: 241:     {;mcc_generated_files/i2c1_master.c: 242:  
      +                                 I2C1_Status.inUse = 0;
 20295   00A4FE  9723               	bcf	(_I2C1_Status+35)& (0+255),3,b
 20296                           
 20297                           ;mcc_generated_files/i2c1_master.c: 243:         I2C1_Status.address = 0xff;
 20298   00A500  691C               	setf	(_I2C1_Status+28)& (0+255),b
 20299   00A502                     
 20300                           ; BSR set to: 3
 20301                           ;mcc_generated_files/i2c1_master.c: 244:         I2C1_MasterClearIrq();
 20302   00A502  ECF1  F050         	call	_I2C1_MasterClearIrq	;wreg free
 20303   00A506                     
 20304                           ;mcc_generated_files/i2c1_master.c: 245:         I2C1_MasterDisableIrq();
 20305   00A506  ECE7  F051         	call	_I2C1_MasterDisableIrq	;wreg free
 20306   00A50A                     
 20307                           ;mcc_generated_files/i2c1_master.c: 246:         I2C1_MasterClose();
 20308   00A50A  EC2C  F051         	call	_I2C1_MasterClose	;wreg free
 20309   00A50E                     
 20310                           ;mcc_generated_files/i2c1_master.c: 247:         returnValue = I2C1_Status.error;
 20311   00A50E  C322  F001         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 20312   00A512                     l9596:
 20313                           
 20314                           ;mcc_generated_files/i2c1_master.c: 249:     return returnValue;
 20315   00A512  5001               	movf	I2C1_Close@returnValue^0,w,c
 20316   00A514  0012               	return		;funcret
 20317   00A516                     __end_of_I2C1_Close:
 20318                           	callstack 0
 20319                           
 20320 ;; *************** function _I2C1_MasterDisableIrq *****************
 20321 ;; Defined at:
 20322 ;;		line 792 in file "mcc_generated_files/i2c1_master.c"
 20323 ;; Parameters:    Size  Location     Type
 20324 ;;		None
 20325 ;; Auto vars:     Size  Location     Type
 20326 ;;		None
 20327 ;; Return value:  Size  Location     Type
 20328 ;;                  1    wreg      void 
 20329 ;; Registers used:
 20330 ;;		None
 20331 ;; Tracked objects:
 20332 ;;		On entry : 0/0
 20333 ;;		On exit  : 0/0
 20334 ;;		Unchanged: 0/0
 20335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20340 ;;Total ram usage:        0 bytes
 20341 ;; Hardware stack levels used: 1
 20342 ;; This function calls:
 20343 ;;		Nothing
 20344 ;; This function is called by:
 20345 ;;		_I2C1_Close
 20346 ;;		_I2C1_SetTimeOut
 20347 ;; This function uses a non-reentrant model
 20348 ;;
 20349                           
 20350                           	psect	text138
 20351   00A3CE                     __ptext138:
 20352                           	callstack 0
 20353   00A3CE                     _I2C1_MasterDisableIrq:
 20354                           	callstack 25
 20355   00A3CE                     
 20356                           ;mcc_generated_files/i2c1_master.c: 794:     PIE3bits.I2C1IE = 0;
 20357   00A3CE  0139               	movlb	57	; () banked
 20358   00A3D0  9393               	bcf	147,1,b	;volatile
 20359                           
 20360                           ;mcc_generated_files/i2c1_master.c: 795:     PIE3bits.I2C1EIE = 0;
 20361   00A3D2  9593               	bcf	147,2,b	;volatile
 20362                           
 20363                           ;mcc_generated_files/i2c1_master.c: 796:     PIE2bits.I2C1RXIE = 0;
 20364   00A3D4  9F92               	bcf	146,7,b	;volatile
 20365                           
 20366                           ;mcc_generated_files/i2c1_master.c: 797:     PIE3bits.I2C1TXIE = 0;
 20367   00A3D6  9193               	bcf	147,0,b	;volatile
 20368                           
 20369                           ;mcc_generated_files/i2c1_master.c: 798:     I2C1PIEbits.SCIE = 0;
 20370   00A3D8  013D               	movlb	61	; () banked
 20371   00A3DA  917A               	bcf	122,0,b	;volatile
 20372                           
 20373                           ;mcc_generated_files/i2c1_master.c: 799:     I2C1PIEbits.PCIE = 0;
 20374   00A3DC  957A               	bcf	122,2,b	;volatile
 20375                           
 20376                           ;mcc_generated_files/i2c1_master.c: 800:     I2C1PIEbits.CNTIE = 0;
 20377   00A3DE  9F7A               	bcf	122,7,b	;volatile
 20378                           
 20379                           ;mcc_generated_files/i2c1_master.c: 801:     I2C1PIEbits.ACKTIE = 0;
 20380   00A3E0  9D7A               	bcf	122,6,b	;volatile
 20381                           
 20382                           ;mcc_generated_files/i2c1_master.c: 802:     I2C1PIEbits.RSCIE = 0;
 20383   00A3E2  937A               	bcf	122,1,b	;volatile
 20384                           
 20385                           ;mcc_generated_files/i2c1_master.c: 803:     I2C1ERRbits.BCLIE = 0;
 20386   00A3E4  9376               	bcf	118,1,b	;volatile
 20387                           
 20388                           ;mcc_generated_files/i2c1_master.c: 804:     I2C1ERRbits.BTOIE = 0;
 20389   00A3E6  9576               	bcf	118,2,b	;volatile
 20390                           
 20391                           ;mcc_generated_files/i2c1_master.c: 805:     I2C1ERRbits.NACKIE = 0;
 20392   00A3E8  9176               	bcf	118,0,b	;volatile
 20393   00A3EA                     
 20394                           ; BSR set to: 61
 20395   00A3EA  0012               	return		;funcret
 20396   00A3EC                     __end_of_I2C1_MasterDisableIrq:
 20397                           	callstack 0
 20398                           
 20399 ;; *************** function _I2C1_MasterClose *****************
 20400 ;; Defined at:
 20401 ;;		line 655 in file "mcc_generated_files/i2c1_master.c"
 20402 ;; Parameters:    Size  Location     Type
 20403 ;;		None
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;		None
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  1    wreg      void 
 20408 ;; Registers used:
 20409 ;;		wreg, status,2
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/0
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20419 ;;Total ram usage:        0 bytes
 20420 ;; Hardware stack levels used: 1
 20421 ;; This function calls:
 20422 ;;		Nothing
 20423 ;; This function is called by:
 20424 ;;		_I2C1_Close
 20425 ;; This function uses a non-reentrant model
 20426 ;;
 20427                           
 20428                           	psect	text139
 20429   00A258                     __ptext139:
 20430                           	callstack 0
 20431   00A258                     _I2C1_MasterClose:
 20432                           	callstack 25
 20433   00A258                     
 20434                           ;mcc_generated_files/i2c1_master.c: 658:     I2C1CON0bits.EN = 0;
 20435   00A258  013D               	movlb	61	; () banked
 20436   00A25A  9F73               	bcf	115,7,b	;volatile
 20437   00A25C                     
 20438                           ; BSR set to: 61
 20439                           ;mcc_generated_files/i2c1_master.c: 660:     I2C1PIR = 0x00;
 20440   00A25C  0E00               	movlw	0
 20441   00A25E  6F79               	movwf	121,b	;volatile
 20442   00A260                     
 20443                           ; BSR set to: 61
 20444                           ;mcc_generated_files/i2c1_master.c: 662:     I2C1STAT1bits.CLRBF = 1;
 20445   00A260  8578               	bsf	120,2,b	;volatile
 20446   00A262                     
 20447                           ; BSR set to: 61
 20448   00A262  0012               	return		;funcret
 20449   00A264                     __end_of_I2C1_MasterClose:
 20450                           	callstack 0
 20451                           
 20452 ;; *************** function _I2C1_MasterClearIrq *****************
 20453 ;; Defined at:
 20454 ;;		line 808 in file "mcc_generated_files/i2c1_master.c"
 20455 ;; Parameters:    Size  Location     Type
 20456 ;;		None
 20457 ;; Auto vars:     Size  Location     Type
 20458 ;;		None
 20459 ;; Return value:  Size  Location     Type
 20460 ;;                  1    wreg      void 
 20461 ;; Registers used:
 20462 ;;		wreg, status,2
 20463 ;; Tracked objects:
 20464 ;;		On entry : 0/0
 20465 ;;		On exit  : 0/0
 20466 ;;		Unchanged: 0/0
 20467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20472 ;;Total ram usage:        0 bytes
 20473 ;; Hardware stack levels used: 1
 20474 ;; This function calls:
 20475 ;;		Nothing
 20476 ;; This function is called by:
 20477 ;;		_I2C1_Open
 20478 ;;		_I2C1_Close
 20479 ;;		_I2C1_DO_BUS_COLLISION
 20480 ;; This function uses a non-reentrant model
 20481 ;;
 20482                           
 20483                           	psect	text140
 20484   00A1E2                     __ptext140:
 20485                           	callstack 0
 20486   00A1E2                     _I2C1_MasterClearIrq:
 20487                           	callstack 25
 20488   00A1E2                     
 20489                           ;mcc_generated_files/i2c1_master.c: 810:     I2C1PIR = 0x00;
 20490   00A1E2  0E00               	movlw	0
 20491   00A1E4  013D               	movlb	61	; () banked
 20492   00A1E6  6F79               	movwf	121,b	;volatile
 20493   00A1E8                     
 20494                           ; BSR set to: 61
 20495   00A1E8  0012               	return		;funcret
 20496   00A1EA                     __end_of_I2C1_MasterClearIrq:
 20497                           	callstack 0
 20498                           
 20499                           	psect	text141
 20500   000000                     __ptext141:
 20501                           	callstack 0
 20502   000000                     
 20503                           	psect	rparam
 20504   000000                     
 20505                           	psect	config
 20506                           
 20507                           ;Config register CONFIG1L @ 0x300000
 20508                           ;	External Oscillator Selection
 20509                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 20510                           ;	Reset Oscillator Selection
 20511                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 20512   300000                     	org	3145728
 20513   300000  FA                 	db	250
 20514                           
 20515                           ;Config register CONFIG1H @ 0x300001
 20516                           ;	Clock out Enable bit
 20517                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 20518                           ;	PRLOCKED One-Way Set Enable bit
 20519                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 20520                           ;	Clock Switch Enable bit
 20521                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 20522                           ;	Fail-Safe Clock Monitor Enable bit
 20523                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 20524   300001                     	org	3145729
 20525   300001  FF                 	db	255
 20526                           
 20527                           ;Config register CONFIG2L @ 0x300002
 20528                           ;	MCLR Enable bit
 20529                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 20530                           ;	Power-up timer selection bits
 20531                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 20532                           ;	Multi-vector enable bit
 20533                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 20534                           ;	IVTLOCK bit One-way set enable bit
 20535                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 20536                           ;	Low Power BOR Enable bit
 20537                           ;	LPBOREN = OFF, ULPBOR disabled
 20538                           ;	Brown-out Reset Enable bits
 20539                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 20540   300002                     	org	3145730
 20541   300002  F7                 	db	247
 20542                           
 20543                           ;Config register CONFIG2H @ 0x300003
 20544                           ;	Brown-out Reset Voltage Selection bits
 20545                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 20546                           ;	ZCD Disable bit
 20547                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 20548                           ;	PPSLOCK bit One-Way Set Enable bit
 20549                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 20550                           ;	Stack Full/Underflow Reset Enable bit
 20551                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20552                           ;	Debugger Enable bit
 20553                           ;	DEBUG = OFF, Background debugger disabled
 20554                           ;	Extended Instruction Set Enable bit
 20555                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 20556   300003                     	org	3145731
 20557   300003  FF                 	db	255
 20558                           
 20559                           ;Config register CONFIG3L @ 0x300004
 20560                           ;	WDT Period selection bits
 20561                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 20562                           ;	WDT operating mode
 20563                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 20564   300004                     	org	3145732
 20565   300004  9F                 	db	159
 20566                           
 20567                           ;Config register CONFIG3H @ 0x300005
 20568                           ;	WDT Window Select bits
 20569                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 20570                           ;	WDT input clock selector
 20571                           ;	WDTCCS = SC, Software Control
 20572   300005                     	org	3145733
 20573   300005  FF                 	db	255
 20574                           
 20575                           ;Config register CONFIG4L @ 0x300006
 20576                           ;	Boot Block Size selection bits
 20577                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 20578                           ;	Boot Block enable bit
 20579                           ;	BBEN = OFF, Boot block disabled
 20580                           ;	Storage Area Flash enable bit
 20581                           ;	SAFEN = OFF, SAF disabled
 20582                           ;	Application Block write protection bit
 20583                           ;	WRTAPP = OFF, Application Block not write protected
 20584   300006                     	org	3145734
 20585   300006  FF                 	db	255
 20586                           
 20587                           ;Config register CONFIG4H @ 0x300007
 20588                           ;	Boot Block Write Protection bit
 20589                           ;	WRTB = OFF, Boot Block not write-protected
 20590                           ;	Configuration Register Write Protection bit
 20591                           ;	WRTC = OFF, Configuration registers not write-protected
 20592                           ;	Data EEPROM Write Protection bit
 20593                           ;	WRTD = OFF, Data EEPROM not write-protected
 20594                           ;	SAF Write protection bit
 20595                           ;	WRTSAF = OFF, SAF not Write Protected
 20596                           ;	Low Voltage Programming Enable bit
 20597                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 20598   300007                     	org	3145735
 20599   300007  FF                 	db	255
 20600                           
 20601                           ;Config register CONFIG5L @ 0x300008
 20602                           ;	PFM and Data EEPROM Code Protection bit
 20603                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 20604   300008                     	org	3145736
 20605   300008  FF                 	db	255
 20606                           
 20607                           ;Config register CONFIG5H @ 0x300009
 20608                           ;	unspecified, using default values
 20609   300009                     	org	3145737
 20610   300009  FF                 	db	255
 20611                           tosu	equ	0x3FFF
 20612                           tosh	equ	0x3FFE
 20613                           tosl	equ	0x3FFD
 20614                           stkptr	equ	0x3FFC
 20615                           pclatu	equ	0x3FFB
 20616                           pclath	equ	0x3FFA
 20617                           pcl	equ	0x3FF9
 20618                           tblptru	equ	0x3FF8
 20619                           tblptrh	equ	0x3FF7
 20620                           tblptrl	equ	0x3FF6
 20621                           tablat	equ	0x3FF5
 20622                           prodh	equ	0x3FF4
 20623                           prodl	equ	0x3FF3
 20624                           indf0	equ	0x3FEF
 20625                           postinc0	equ	0x3FEE
 20626                           postdec0	equ	0x3FED
 20627                           preinc0	equ	0x3FEC
 20628                           plusw0	equ	0x3FEB
 20629                           fsr0h	equ	0x3FEA
 20630                           fsr0l	equ	0x3FE9
 20631                           wreg	equ	0x3FE8
 20632                           indf1	equ	0x3FE7
 20633                           postinc1	equ	0x3FE6
 20634                           postdec1	equ	0x3FE5
 20635                           preinc1	equ	0x3FE4
 20636                           plusw1	equ	0x3FE3
 20637                           fsr1h	equ	0x3FE2
 20638                           fsr1l	equ	0x3FE1
 20639                           bsr	equ	0x3FE0
 20640                           indf2	equ	0x3FDF
 20641                           postinc2	equ	0x3FDE
 20642                           postdec2	equ	0x3FDD
 20643                           preinc2	equ	0x3FDC
 20644                           plusw2	equ	0x3FDB
 20645                           fsr2h	equ	0x3FDA
 20646                           fsr2l	equ	0x3FD9
 20647                           status	equ	0x3FD8

Data Sizes:
    Strings     485
    Constant    38
    Data        0
    BSS         236
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160     89     141
    BANK1           256    256     256
    BANK2           256     20      35
    BANK3           256      0     174
    BANK4           256    240     240
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    atou@ep	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2284(BANK3[32]), 

    atou@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    atou@pll	PTR unsigned long long  size(1) Largest target is 8
		 -> vfsfcnvrt@llu(BANK0[8]), 

    bufferBlock$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    EEPROM_ReadBlock@data	PTR unsigned char  size(2) Largest target is 24
		 -> LoadCurrentAddressEEPROM@addressBuffer(COMRAM[2]), LoadLastSettings@buffer(COMRAM[8]), ReadAllEEPROMDataCSV@eepromReadBuffer(BANK1[24]), ReadAndSendEEPROMData@eepromReadBuffer(BANK1[24]), 
		 -> ReadAndSendEEPROMDataCSV@eepromReadBuffer(BANK1[24]), 

    EEPROM_WriteBlock@data	PTR unsigned char  size(2) Largest target is 24
		 -> eepromBuffer(BANK3[24]), StoreCurrentAddressEEPROM@addressBuffer(COMRAM[2]), StoreLastSettings@buffer(COMRAM[8]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fgetc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    fgetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fgetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$2702	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_DO_RX_EMPTY$2702$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$2707	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_TX$2690	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_DO_TX$2690$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_TX$2695	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$2696	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_DO_TX_EMPTY$2696$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$2701	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    i2c1_fsmStateTable	const PTR FTN()enum E16630[19] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_BUS_COLLISION(), I2C1_DO_BUS_ERROR(), I2C1_DO_IDLE(), 
		 -> I2C1_DO_RESET(), I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_EMPTY(), 
		 -> I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), 
		 -> I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), 
		 -> I2C1_DO_TX(), I2C1_DO_TX_ACK(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$2689	const PTR FTN()enum E16630 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_BUS_COLLISION(), I2C1_DO_BUS_ERROR(), I2C1_DO_IDLE(), 
		 -> I2C1_DO_RESET(), I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_EMPTY(), 
		 -> I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), 
		 -> I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), 
		 -> I2C1_DO_TX(), I2C1_DO_TX_ACK(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_ReadDataBlock@data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> EEPROM_ReadByte@data(COMRAM[1]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 12
		 -> EEPROM_ReadByte@addressBuffer(COMRAM[2]), EEPROM_ReadByte@data(COMRAM[1]), EEPROM_WriteByte@buffer(COMRAM[3]), I2C1_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write2ByteRegister@reg(COMRAM[1]), MPU6050_ReadSensorData@buffer(COMRAM[12]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EEPROM_ReadByte@addressBuffer(COMRAM[2]), EEPROM_ReadByte@data(COMRAM[1]), EEPROM_WriteByte@buffer(COMRAM[3]), I2C1_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write2ByteRegister@reg(COMRAM[1]), MPU6050_ReadSensorData@buffer(COMRAM[12]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 3
		 -> EEPROM_ReadByte@addressBuffer(COMRAM[2]), EEPROM_WriteByte@buffer(COMRAM[3]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), eepromBuffer(BANK3[24]), Ndat(BANK0[4]), ReadAllEEPROMDataCSV@ax_read(BANK1[4]), 
		 -> ReadAllEEPROMDataCSV@ay_read(BANK1[4]), ReadAllEEPROMDataCSV@az_read(BANK1[4]), ReadAllEEPROMDataCSV@gx_read(BANK1[4]), ReadAllEEPROMDataCSV@gy_read(BANK1[4]), 
		 -> ReadAllEEPROMDataCSV@gz_read(BANK1[4]), ReadAndSendEEPROMData@ax_read(BANK1[4]), ReadAndSendEEPROMData@ay_read(BANK1[4]), ReadAndSendEEPROMData@az_read(BANK1[4]), 
		 -> ReadAndSendEEPROMData@gx_read(BANK1[4]), ReadAndSendEEPROMData@gy_read(BANK1[4]), ReadAndSendEEPROMData@gz_read(BANK1[4]), ReadAndSendEEPROMDataCSV@ax_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@ay_read(BANK1[4]), ReadAndSendEEPROMDataCSV@az_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gx_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gy_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@gz_read(BANK1[4]), StoreLastSettings@buffer(COMRAM[8]), Tm(BANK0[4]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), eepromBuffer(BANK3[24]), Ndat(BANK0[4]), ReadAllEEPROMDataCSV@ax_read(BANK1[4]), 
		 -> ReadAllEEPROMDataCSV@ay_read(BANK1[4]), ReadAllEEPROMDataCSV@az_read(BANK1[4]), ReadAllEEPROMDataCSV@gx_read(BANK1[4]), ReadAllEEPROMDataCSV@gy_read(BANK1[4]), 
		 -> ReadAllEEPROMDataCSV@gz_read(BANK1[4]), ReadAndSendEEPROMData@ax_read(BANK1[4]), ReadAndSendEEPROMData@ay_read(BANK1[4]), ReadAndSendEEPROMData@az_read(BANK1[4]), 
		 -> ReadAndSendEEPROMData@gx_read(BANK1[4]), ReadAndSendEEPROMData@gy_read(BANK1[4]), ReadAndSendEEPROMData@gz_read(BANK1[4]), ReadAndSendEEPROMDataCSV@ax_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@ay_read(BANK1[4]), ReadAndSendEEPROMDataCSV@az_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gx_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gy_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@gz_read(BANK1[4]), StoreLastSettings@buffer(COMRAM[8]), Tm(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ax(BANK0[4]), ay(BANK0[4]), az(BANK0[4]), dbuf(BANK3[80]), 
		 -> gx(BANK0[4]), gy(BANK0[4]), gz(BANK0[4]), LoadLastSettings@buffer(COMRAM[8]), 
		 -> Ndat(BANK0[4]), ReadAllEEPROMDataCSV@eepromReadBuffer(BANK1[24]), ReadAndSendEEPROMData@eepromReadBuffer(BANK1[24]), ReadAndSendEEPROMDataCSV@eepromReadBuffer(BANK1[24]), 
		 -> Tm(BANK0[4]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> ax(BANK0[4]), ay(BANK0[4]), az(BANK0[4]), dbuf(BANK3[80]), 
		 -> gx(BANK0[4]), gy(BANK0[4]), gz(BANK0[4]), LoadLastSettings@buffer(COMRAM[8]), 
		 -> Ndat(BANK0[4]), ReadAllEEPROMDataCSV@eepromReadBuffer(BANK1[24]), ReadAndSendEEPROMData@eepromReadBuffer(BANK1[24]), ReadAndSendEEPROMDataCSV@eepromReadBuffer(BANK1[24]), 
		 -> Tm(BANK0[4]), 

    memset@dest	PTR void  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    memset@p	PTR unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    MPU6050_ReadSensorData@ax	PTR float  size(1) Largest target is 4
		 -> ax(BANK0[4]), 

    MPU6050_ReadSensorData@ay	PTR float  size(1) Largest target is 4
		 -> ay(BANK0[4]), 

    MPU6050_ReadSensorData@az	PTR float  size(1) Largest target is 4
		 -> az(BANK0[4]), 

    MPU6050_ReadSensorData@gx	PTR float  size(1) Largest target is 4
		 -> gx(BANK0[4]), 

    MPU6050_ReadSensorData@gy	PTR float  size(1) Largest target is 4
		 -> gy(BANK0[4]), 

    MPU6050_ReadSensorData@gz	PTR float  size(1) Largest target is 4
		 -> gz(BANK0[4]), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    ParseUserInput@input	PTR const unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    ParseUserInput@Ndat	PTR unsigned long  size(1) Largest target is 4
		 -> Ndat(BANK0[4]), 

    ParseUserInput@Tm	PTR unsigned long  size(1) Largest target is 4
		 -> Tm(BANK0[4]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1992$buffer	PTR unsigned char  size(2) Largest target is 0

    S1992$source	PTR const unsigned char  size(2) Largest target is 0

    S499$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S499$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S499$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S499$data_ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EEPROM_ReadByte@addressBuffer(COMRAM[2]), EEPROM_ReadByte@data(COMRAM[1]), EEPROM_WriteByte@buffer(COMRAM[3]), I2C1_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write2ByteRegister@reg(COMRAM[1]), MPU6050_ReadSensorData@buffer(COMRAM[12]), NULL(NULL[0]), 

    S96$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    skipws@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), eepromBuffer(BANK3[24]), Ndat(BANK0[4]), ReadAllEEPROMDataCSV@ax_read(BANK1[4]), 
		 -> ReadAllEEPROMDataCSV@ay_read(BANK1[4]), ReadAllEEPROMDataCSV@az_read(BANK1[4]), ReadAllEEPROMDataCSV@gx_read(BANK1[4]), ReadAllEEPROMDataCSV@gy_read(BANK1[4]), 
		 -> ReadAllEEPROMDataCSV@gz_read(BANK1[4]), ReadAndSendEEPROMData@ax_read(BANK1[4]), ReadAndSendEEPROMData@ay_read(BANK1[4]), ReadAndSendEEPROMData@az_read(BANK1[4]), 
		 -> ReadAndSendEEPROMData@gx_read(BANK1[4]), ReadAndSendEEPROMData@gy_read(BANK1[4]), ReadAndSendEEPROMData@gz_read(BANK1[4]), ReadAndSendEEPROMDataCSV@ax_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@ay_read(BANK1[4]), ReadAndSendEEPROMDataCSV@az_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gx_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gy_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@gz_read(BANK1[4]), StoreLastSettings@buffer(COMRAM[8]), Tm(BANK0[4]), 

    sp__memset	PTR void  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_1(CODE[50]), STR_10(CODE[31]), STR_11(CODE[46]), STR_12(CODE[46]), 
		 -> STR_19(CODE[50]), STR_3(CODE[31]), STR_5(CODE[69]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_LOG_STAT@buffer(BANK1[200]), main@buffer(BANK4[200]), ReadAllEEPROMDataCSV@buffer(BANK1[200]), ReadAndSendEEPROMData@buffer(BANK1[200]), 
		 -> ReadAndSendEEPROMDataCSV@buffer(BANK1[200]), 

    sscanf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sscanf(BANK0[2]), 

    sscanf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_9(CODE[14]), 

    sscanf@s	PTR const unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_21(CODE[4]), STR_24(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), STR_8(CODE[15]), STR_9(CODE[14]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[8]), STR_17(CODE[9]), STR_18(CODE[9]), STR_29(CODE[3]), 

    __strtoxll@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2284(BANK3[32]), 

    __strtoxll@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> atou@ep(COMRAM[2]), 

    __strtoxll@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2284(BANK3[32]), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), NULL(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), NULL(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), NULL(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART_ReceiveString@receivedString	PTR unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    UART_SendString@str	PTR const unsigned char  size(2) Largest target is 200
		 -> Handle_LOG_STAT@buffer(BANK1[200]), main@buffer(BANK4[200]), main@userInput(BANK4[20]), ReadAllEEPROMDataCSV@buffer(BANK1[200]), 
		 -> ReadAndSendEEPROMData@buffer(BANK1[200]), ReadAndSendEEPROMDataCSV@buffer(BANK1[200]), STR_13(CODE[62]), STR_14(CODE[11]), 
		 -> STR_15(CODE[2]), STR_2(CODE[19]), STR_20(CODE[38]), STR_4(CODE[5]), 
		 -> STR_6(CODE[33]), STR_7(CODE[9]), 

    ungetc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    ungetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    ungetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 69
		 -> STR_1(CODE[50]), STR_10(CODE[31]), STR_11(CODE[46]), STR_12(CODE[46]), 
		 -> STR_19(CODE[50]), STR_3(CODE[31]), STR_5(CODE[69]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 69
		 -> STR_1(CODE[50]), STR_10(CODE[31]), STR_11(CODE[46]), STR_12(CODE[46]), 
		 -> STR_19(CODE[50]), STR_3(CODE[31]), STR_5(CODE[69]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_1(CODE[50]), STR_10(CODE[31]), STR_11(CODE[46]), STR_12(CODE[46]), 
		 -> STR_19(CODE[50]), STR_3(CODE[31]), STR_5(CODE[69]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfscanf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfscanf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_9(CODE[14]), 

    vfscanf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_9(CODE[14]), 

    vfscanf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    vfsfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfsfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfscanf@cfmt(BANK0[2]), 

    vfsfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    vfsfcnvrt@vp	PTR void  size(1) Largest target is 4
		 -> Ndat(BANK0[4]), ?_sprintf(BANK0[2]), ?_sscanf(BANK0[2]), Tm(BANK0[4]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_ReadAllEEPROMDataCSV
    _main->_ReadAndSendEEPROMDataCSV
    _StoreLastSettings->_EEPROM_WriteBlock
    _StartLogging->_ReadAndSendEEPROMData
    _StoreCurrentAddressEEPROM->_EEPROM_WriteBlock
    _EEPROM_WriteBlock->_EEPROM_WriteByte
    _EEPROM_WriteByte->_I2C1_WriteNBytes
    _ReadAndSendEEPROMData->_sprintf
    _MPU6050_ReadSensorData->___fldiv
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _ReadAndSendEEPROMDataCSV->_sprintf
    _ReadAllEEPROMDataCSV->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _UART_SendString->_UART1_Write
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atou
    _atou->___strtoxll
    _skipws->_fgetc
    _fgetc->_getch
    ___strtoxll->___omul
    _MPU6050_Init->_I2C1_Write1ByteRegister
    _LoadLastSettings->_EEPROM_ReadBlock
    _LoadCurrentAddressEEPROM->_EEPROM_ReadBlock
    _EEPROM_ReadBlock->_EEPROM_ReadByte
    _EEPROM_ReadByte->_I2C1_ReadNBytes
    _EEPROM_ReadByte->_I2C1_WriteNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_MasterRead->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_SEND_STOP->_I2C1_MasterSendTxData
    _I2C1_DO_SEND_STOP->_I2C1_MasterSetCounter
    _I2C1_DO_RX->_I2C1_DO_RX_EMPTY
    _I2C1_DO_BUS_COLLISION->_rdBlkRegCompleteHandler
    _I2C1_DO_SEND_RESTART_READ->_I2C1_MasterSetCounter
    _I2C1_DO_RX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _main in BANK0

    _main->_StartLogging
    _StartLogging->_ReadAndSendEEPROMData
    _ReadAndSendEEPROMData->_sprintf
    _ReadAndSendEEPROMDataCSV->_sprintf
    _ReadAllEEPROMDataCSV->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _ParseUserInput->_sscanf
    _sscanf->_vfscanf
    _vfscanf->_vfsfcnvrt

Critical Paths under _main in BANK1

    _main->_ReadAllEEPROMDataCSV
    _main->_ReadAndSendEEPROMDataCSV
    _StartLogging->_ReadAndSendEEPROMData

Critical Paths under _main in BANK2

    _main->_StartLogging

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               264   264      0 5167886
                                              0 BANK4    240   240      0
           _LoadCurrentAddressEEPROM
                   _LoadLastSettings
                       _MPU6050_Init
                     _ParseUserInput
               _ReadAllEEPROMDataCSV
           _ReadAndSendEEPROMDataCSV
                  _SYSTEM_Initialize
                       _StartLogging
                  _StoreLastSettings
                 _UART_ReceiveString
                    _UART_SendString
                             ___lmul
                            ___lwdiv
                             _memset
                            _sprintf
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     407
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     421
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_ReceiveString                                  10     7      3     537
                                              0 COMRAM    10     7      3
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           0     0      0       0
                                NULL *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultErrorHandler                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StoreLastSettings                                    8     8      0  334021
                                             41 COMRAM     8     8      0
                  _EEPROM_WriteBlock
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _StartLogging                                       222   222      0 1706613
                                             87 BANK0      2     2      0
                                              0 BANK2     20    20      0
                  _EEPROM_WriteBlock
             _MPU6050_ReadSensorData
              _ReadAndSendEEPROMData
          _StoreCurrentAddressEEPROM
                    _UART_SendString
                             ___lmul
                    _custom_delay_ms
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _custom_delay_ms                                      5     1      4     121
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1356
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _StoreCurrentAddressEEPROM                            2     2      0  325955
                                             41 COMRAM     2     2      0
                  _EEPROM_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteBlock                                    7     2      5  325881
                                             34 COMRAM     7     2      5
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     8     5      3  324578
                                             26 COMRAM     8     5      3
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadAndSendEEPROMData                              266   258      8  710138
                                             91 COMRAM     2     2      0
                                             79 BANK0      8     0      8
                                              0 BANK1    256   256      0
                   _EEPROM_ReadBlock
                    _UART_SendString
                             _memcpy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _MPU6050_ReadSensorData                              32    26      6  333378
                                             39 COMRAM    32    26      6
                 _I2C1_ReadDataBlock
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1016
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_ReadDataBlock                                   8     4      4  327178
                                             22 COMRAM     8     4      4
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     363
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadAndSendEEPROMDataCSV                           266   258      8  710408
                                             91 COMRAM     2     2      0
                                             79 BANK0      8     0      8
                                              0 BANK1    256   256      0
                   _EEPROM_ReadBlock
                    _UART_SendString
                             _memcpy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ReadAllEEPROMDataCSV                               266   258      8  710076
                                             91 COMRAM     2     2      0
                                             79 BANK0      8     0      8
                                              0 BANK1    256   256      0
                   _EEPROM_ReadBlock
                    _UART_SendString
                             _memcpy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    15     28   50654
                                             78 COMRAM    13    13      0
                                             51 BANK0     28     0     28
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4   49064
                                             76 COMRAM     2     2      0
                                             47 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3   48567
                                             67 COMRAM     9     9      0
                                             44 BANK0      3     0      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                16    11      5    4288
                                             24 COMRAM    16    11      5
                                _pad
 ---------------------------------------------------------------------------------
 (4) _utoa                                                11     6      5    5050
                                             24 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     421
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    2502
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2062
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   34318
                                             59 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3703
                                             16 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1239
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     919
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              1 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3803
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      2     0      2    1536
                                              1 COMRAM     2     0      2
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ParseUserInput                                       4     0      4   17001
                                             46 BANK0      4     0      4
                             _sscanf
 ---------------------------------------------------------------------------------
 (2) _sscanf                                              21    15      6   16545
                                             25 BANK0     21    15      6
                            _vfscanf
 ---------------------------------------------------------------------------------
 (3) _vfscanf                                             10     6      4   15893
                                             15 BANK0     10     6      4
                          _vfsfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfsfcnvrt                                           36    33      3   15235
                                             90 COMRAM     3     0      3
                                              0 BANK0     15    15      0
                               _atou
                              _fgetc
                             _skipws
                            _strncmp
                             _ungetc
 ---------------------------------------------------------------------------------
 (1) _strncmp                                              7     1      6    1337
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (5) _atou                                                18    16      2    8008
                                             72 COMRAM    18    16      2
                         ___strtoxll
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (5) _skipws                                               4     3      1    2237
                                             11 COMRAM     4     3      1
                              _fgetc
                             _ungetc
 ---------------------------------------------------------------------------------
 (5) _ungetc                                               5     2      3    1155
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _fgetc                                                9     7      2     744
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (7) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) ___strtoxll                                          48    40      8    2775
                                             24 COMRAM    48    40      8
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     456
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         1     1      0  327020
            _I2C1_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C1_Write1ByteRegister                              3     1      2  326986
                                             22 COMRAM     3     1      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LoadLastSettings                                     8     8      0  656766
                                             40 COMRAM     8     8      0
                   _EEPROM_ReadBlock
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    8038
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _LoadCurrentAddressEEPROM                             4     4      0  648728
                                             40 COMRAM     4     4      0
                   _EEPROM_ReadBlock
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadBlock                                     8     3      5  648626
                                             32 COMRAM     8     3      5
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (4) _EEPROM_ReadByte                                      6     4      2  646243
                                             26 COMRAM     6     4      2
                    _I2C1_ReadNBytes
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteNBytes                                     4     1      3  324151
                                             22 COMRAM     4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    2259
                                              5 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  319112
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C1_ReadNBytes                                      4     1      3  321712
                                             22 COMRAM     4     1      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              0 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterRead                                      0     0      0  319112
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  319112
                                             20 COMRAM     2     2      0
              _I2C1_DO_SEND_ADR_READ
             _I2C1_DO_SEND_ADR_WRITE
              _I2C1_MasterSetCounter
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  292404
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  292404
                                             18 COMRAM     2     2      0
           _I2C1_ClearInterruptFlags
               _I2C1_DO_ADDRESS_NACK *
              _I2C1_DO_BUS_COLLISION *
                  _I2C1_DO_BUS_ERROR *
                       _I2C1_DO_IDLE *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
                   _I2C1_DO_RX_EMPTY *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                     _I2C1_DO_TX_ACK *
                   _I2C1_DO_TX_EMPTY *
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           6     6      0   79808
                                             12 COMRAM     6     6      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                   _I2C1_DO_TX_EMPTY
                  _I2C1_MasterIsNack
            _I2C1_MasterIsTxBufEmpty
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsTxBufEmpty                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   26547
                                             12 COMRAM     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_MasterDisableRestart
           _I2C1_MasterEnableRestart
              _I2C1_MasterSetCounter
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_STOP                                    0     0      0      62
              _I2C1_MasterGetCounter
              _I2C1_MasterSendTxData
              _I2C1_MasterSetCounter
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetCounter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                       _I2C1_DO_IDLE
                _I2C1_MasterSendNack
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           3     3      0   26581
                                             14 COMRAM     3     3      0
                   _I2C1_DO_RX_EMPTY
               _I2C1_MasterGetRxData
             _I2C1_MasterIsRxBufFull
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsRxBufFull                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_BUS_ERROR                                    0     0      0       0
                _I2C1_MasterResetBus
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_BUS_COLLISION                                2     2      0   53125
                                             12 COMRAM     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
                      _I2C1_DO_RESET
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                _I2C1_MasterClearIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0   26609
              _I2C1_DO_SEND_ADR_READ
              _I2C1_MasterSetCounter
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_ADR_READ                               0     0      0   26578
                   _I2C1_DO_RX_EMPTY
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_RX_EMPTY                                    2     2      0   26547
                                             12 COMRAM     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_MasterDisableRestart
           _I2C1_MasterEnableRestart
              _I2C1_MasterSetCounter
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetCounter                               1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterDisableRestart                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
                _I2C1_MasterResetBus
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterResetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   26516
                                             12 COMRAM     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2    5232
                                              9 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2    5232
                                              9 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             3     1      2    5263
                                              9 COMRAM     3     1      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2    5232
                                              9 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2    5232
                                              9 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _I2C1_SetDataCompleteCallback                        4     0      4    2979
                                              5 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     5     1      4    1117
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4    2222
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_RESTART                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            2     0      2     325
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) NULL(Fake)                                            2     0      2       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_ClearInterruptFlags                             0     0      0       0
          _I2C1_MasterClearCountFlag
           _I2C1_MasterClearNackFlag
           _I2C1_MasterClearStopFlag
          _I2C1_MasterIsCountFlagSet
           _I2C1_MasterIsNackFlagSet
           _I2C1_MasterIsStopFlagSet
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsStopFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNackFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsCountFlagSet                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterClearStopFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterClearNackFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterClearCountFlag                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              0 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LoadCurrentAddressEEPROM
     _EEPROM_ReadBlock
       _EEPROM_ReadByte
         _I2C1_ReadNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterRead
             _I2C1_MasterOperation
               _I2C1_DO_SEND_ADR_READ
                 _I2C1_DO_RX_EMPTY
                   NULL(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_MasterDisableRestart *
                   _I2C1_MasterEnableRestart *
                   _I2C1_MasterSetCounter *
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_ADR_WRITE
                 _I2C1_MasterSendTxData
               _I2C1_MasterSetCounter
               _I2C1_Poller
                 _I2C1_MasterFsm
                   _I2C1_ClearInterruptFlags
                     _I2C1_MasterClearCountFlag
                     _I2C1_MasterClearNackFlag
                     _I2C1_MasterClearStopFlag
                     _I2C1_MasterIsCountFlagSet
                     _I2C1_MasterIsNackFlagSet
                     _I2C1_MasterIsStopFlagSet
                   _I2C1_DO_ADDRESS_NACK *
                     NULL(Fake) *
                     _I2C1_CallbackReturnReset *
                     _I2C1_CallbackReturnStop *
                     _I2C1_DO_SEND_RESTART *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C1_DO_BUS_COLLISION *
                     NULL(Fake) *
                     _I2C1_CallbackReturnReset *
                     _I2C1_CallbackReturnStop *
                     _I2C1_DO_RESET *
                       _I2C1_MasterResetBus
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_ADR_READ
                       _I2C1_MasterSetCounter
                     _I2C1_DO_SEND_RESTART_WRITE *
                     _I2C1_MasterClearIrq *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C1_DO_BUS_ERROR *
                     _I2C1_MasterResetBus
                   _I2C1_DO_IDLE *
                   _I2C1_DO_RESET *
                   _I2C1_DO_RX *
                     _I2C1_DO_RX_EMPTY
                     _I2C1_MasterGetRxData
                     _I2C1_MasterIsRxBufFull
                   _I2C1_DO_RX_ACK *
                     _I2C1_MasterSendAck
                   _I2C1_DO_RX_EMPTY *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_IDLE
                     _I2C1_MasterSendNack
                     _I2C1_MasterStop
                   _I2C1_DO_SEND_ADR_READ *
                   _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterGetCounter
                     _I2C1_MasterSendTxData
                     _I2C1_MasterSetCounter
                     _I2C1_MasterStop
                   _I2C1_DO_TX *
                     NULL(Fake) *
                     _I2C1_CallbackReturnReset *
                     _I2C1_CallbackReturnStop *
                     _I2C1_DO_SEND_RESTART_READ *
                     _I2C1_DO_SEND_RESTART_WRITE *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_MasterDisableRestart *
                       _I2C1_MasterEnableRestart *
                       _I2C1_MasterSetCounter *
                       _rd1RegCompleteHandler *
                       _rd2RegCompleteHandler *
                       _rdBlkRegCompleteHandler *
                       _wr1RegCompleteHandler *
                       _wr2RegCompleteHandler *
                     _I2C1_MasterIsNack *
                     _I2C1_MasterIsTxBufEmpty *
                     _I2C1_MasterSendTxData *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C1_DO_TX_ACK *
                     _I2C1_MasterSendAck
                   _I2C1_DO_TX_EMPTY *
                   _I2C1_MasterIsNack *
                 _I2C1_MasterWaitForEvent
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterOpen
           _I2C1_SetBuffer
         _I2C1_WriteNBytes
           _I2C1_Close
           _I2C1_MasterWrite
             _I2C1_MasterOperation
           _I2C1_Open
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
   _LoadLastSettings
     _EEPROM_ReadBlock
     _memcpy
   _MPU6050_Init
     _I2C1_Write1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
   _ParseUserInput
     _sscanf
       _vfscanf
         _vfsfcnvrt
           _atou
             ___strtoxll
               ___omul
             _fgetc
               _getch
             _skipws
               _fgetc
               _ungetc
             _ungetc
           _fgetc
           _skipws
           _strncmp
           _ungetc
   _ReadAllEEPROMDataCSV
     _EEPROM_ReadBlock
     _UART_SendString
       _UART1_Write
     _memcpy
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lldiv
             ___llmod
             _pad
           _xtoa
             _pad
   _ReadAndSendEEPROMDataCSV
     _EEPROM_ReadBlock
     _UART_SendString
     _memcpy
     _sprintf
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
   _StartLogging
     _EEPROM_WriteBlock
       _EEPROM_WriteByte
         _I2C1_WriteNBytes
     _MPU6050_ReadSensorData
       _I2C1_ReadDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
       ___fldiv
       ___xxtofl
     _ReadAndSendEEPROMData
       _EEPROM_ReadBlock
       _UART_SendString
       _memcpy
       _sprintf
     _StoreCurrentAddressEEPROM
       _EEPROM_WriteBlock
     _UART_SendString
     ___lmul
     _custom_delay_ms
     _memcpy
   _StoreLastSettings
     _EEPROM_WriteBlock
     _memcpy
   _UART_ReceiveString
     _UART1_Read
       NULL(Fake) *
       _UART1_DefaultErrorHandler *
       _UART1_DefaultFramingErrorHandler *
       _UART1_DefaultOverrunErrorHandler *
   _UART_SendString
   ___lmul
   ___lwdiv
   _memset
   _sprintf
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhlllh    284      0       0      44        0.0%
BITBIGSFRhll       1BF      0       0      38        0.0%
BITBIGSFRlll       192      0       0      62        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100     F0      F0      13       93.8%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      AE      11       68.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     14      23       9       13.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      8D       5       88.1%
BITBIGSFRlhlhh      6C      0       0      41        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITBIGSFRlhlllh     5C      0       0      46        0.0%
BITBIGSFRhhh        39      0       0      36        0.0%
BITBIGSFRlhllll     29      0       0      54        0.0%
BITBIGSFRlhllll     29      0       0      56        0.0%
BITBIGSFRlhllll     1C      0       0      60        0.0%
BITBIGSFRlhllll     11      0       0      59        0.0%
BITBIGSFRllh         E      0       0      61        0.0%
BITBIGSFRlhllll      B      0       0      55        0.0%
BITBIGSFRlhllll      B      0       0      53        0.0%
BITBIGSFRlhllh       6      0       0      43        0.0%
BITBIGSFRlhllll      5      0       0      52        0.0%
BITBIGSFRlhlllh      5      0       0      50        0.0%
BITBIGSFRlhlllh      5      0       0      48        0.0%
BITBIGSFRlhlllh      4      0       0      47        0.0%
BITBIGSFRlhlllh      4      0       0      49        0.0%
BITBIGSFRlhlllh      4      0       0      51        0.0%
BITBIGSFRhhll        3      0       0      37        0.0%
BITBIGSFRlhlllh      2      0       0      45        0.0%
BITBIGSFRlhllll      1      0       0      57        0.0%
BITBIGSFRlhllll      1      0       0      58        0.0%
BITBIGSFRlhlhll      1      0       0      42        0.0%
BITBIGSFRlhhh        1      0       0      39        0.0%
BITBIGSFRlhhl        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3AC      63        0.0%
DATA                 0      0     3AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Oct 25 21:12:00 2023

     ReadAllEEPROMDataCSV@startAddressEEPROM1 00B3   ReadAndSendEEPROMDataCSV@startAddressEEPROM1 00B3  
     ReadAllEEPROMDataCSV@startAddressEEPROM2 00B5   ReadAndSendEEPROMDataCSV@startAddressEEPROM2 00B5  
                                ___fldiv@aexp 0027                                  ___fldiv@bexp 0026  
                                ___fldiv@sign 001F                                            l51 AE24  
                                          l90 A56C                                            l93 A598  
                                          l69 AC36                                            l78 A862  
                                          l87 B19E                                            l96 A5C4  
                                          l99 A540                                            _Tm 00E5  
                                          _ax 00E1                                            _ay 00DD  
                                          _az 00D9                                            _gx 00D5  
                                          _gy 00D1                                            _gz 00CD  
                         ___wmul@multiplicand 0003                             _StoreLastSettings AA50  
                                         l102 AA04                                           l200 A238  
                                         l203 A18C                                           l212 A24C  
                                         l206 A18E                                           l215 A256  
                                         l401 A382                                           l209 A18A  
                                         l218 A242                                           l501 A19E  
                                         l165 AEF8                                           l182 B750  
                                         l511 A1F0                                           l407 A39A  
                                         l191 A3B6                                           l600 A312  
                                         l520 A29A                                           l424 A408  
                                         l505 A4BE                                           l418 B312  
                                         l514 A28A                                           l194 A3CC  
                                         l603 A33E                                           l443 A61E  
                                         l371 A42A                                           l612 A2E6  
                                         l436 AB36                                           l452 C294  
                                         l508 A1F8                                           l428 B218  
                                         l188 B7F2                                           l621 A1AA  
                                         l517 A200                                           l533 AFD2  
                                         l606 A2FC                                           l446 A354  
                                         l470 B474                                           l526 ADBA  
                                         l615 A1B0                                           l439 A26E  
                                         l375 B42A                                           l391 A210  
                                         l632 A3EA                                           l561 A262  
                                         l609 A2D0                                           l545 A192  
                                         l641 ACB8                                           l385 AB88  
                                         l618 A1A4                                           l570 A1DA  
                                         l642 ACCC                                           l635 A1E8  
                                         l379 A514                                           l539 A2AA  
                                         l643 ACDE                                           l548 A196  
                                         l564 A1C2                                           l388 A208  
                                         l573 A224                                           l469 B4C8  
                                         l477 B294                                           l398 A44E  
                                         l582 A1B6                                           l486 B608  
                                         l646 ACEC                                           l638 AC92  
                                         l558 A64C                                           l567 A22E  
                                         l591 A1C8                                           l495 A27C  
                                         l639 ACA6                                           l576 A21A  
                                         l920 A724                                           l585 A1D4  
                                         l594 A1CE                                           l498 A19A  
                                         l850 A2BA                                           l914 CA8C  
                                         l579 A1BC                                           l691 A472  
                                         l588 A328                                           l908 A75E  
                                         l685 A36A                                           l853 D380  
                                         l917 A496                                           l942 B042  
                                         l871 A974                                           l847 B0B4  
                                         l688 A3B2                                           l856 A67C  
                                         l936 D670                                           l865 A81E  
                                         l945 AA98                                           l954 C89A  
                                         l882 B9F6                                           l859 A6B2  
                                         l891 CC8A                                           l948 AA4E  
                                         l980 A4E8                                           l788 B946  
                                         l991 AF52                                           l992 AF62  
                                         l997 B546                                           l998 B566  
                          ?_StoreLastSettings 0001                   ??_I2C1_MasterClearCountFlag 0001  
                   __end_of_EEPROM_WriteBlock A820                         ?_I2C1_MasterOperation 0001  
                                         _pad ACEE                        ?_I2C1_MasterSetCounter 0001  
                                         prod 3FF3                                           tosl 3FFD  
                                         wreg 3FE8                        ?_I2C1_MasterSendTxData 0001  
                        _I2C1_DO_RX_NACK_STOP A27E                                  ___flmul@aexp 000E  
                   ?_I2C1_MasterEnableRestart 0001                                  ___flmul@bexp 0013  
                    fp__I2C1_DO_SEND_ADR_READ 0000                       fp__I2C1_DO_SEND_RESTART 0000  
                                ___flmul@sign 000D                    ?_StoreCurrentAddressEEPROM 0001  
                                ___flmul@temp 0018                                  ___flmul@prod 0014  
                        I2C1_SetBuffer@buffer 0001                           _currentBlockEEPROM1 00C7  
                         _currentBlockEEPROM2 00C5                           ??_StoreLastSettings 002A  
                  ??_I2C1_MasterIsStopFlagSet 0001                                  ___fltol@exp1 000A  
                                        l1014 B74E                                          l1007 B73E  
                                        l2010 F0F0                                          l2011 F156  
                     ??_rd2RegCompleteHandler 000C                                          l2022 F1D2  
                                        l2031 F328                                          l2007 F062  
                                        l1400 B38A                                          l2017 F166  
                                        l1250 BE42                                          l2035 F3FA  
                                        l2027 F220                                          l2060 B6AA  
                                        l1245 BDFC                                          l1254 A6EA  
                                        l1510 EB52                                          l1239 B89C  
                                        l1407 B39A                                          l2056 C058  
                                        l1601 E3F0                                          l1611 E520  
                                        l1603 E468                                          l2075 A8EA  
                                        l1604 E456                                          l1508 EB9E  
                                        l2069 A1E0                                          l1525 ECB8  
                                        l1517 EE6E                                          l1509 EB8C  
                                        l1277 BF48                                          l1701 AD52  
                                        l1534 ED88                                          l1550 A9BA  
                                        l2079 C4F4                                          l1535 ED76  
                                        l1471 B120                                          l1712 FDEC  
                                        l1562 DD36                                          l1642 C5E4  
                                        l1715 F78A                                          l1635 C54C  
                                        l1564 DB96                                          l1573 DBDC  
                                        l1717 F5D0                                          l1670 A92E  
                                        l1638 C6A8                                          l1478 B128  
                                        l1575 DC54                                          l1567 DB5A  
                                        l1807 E9AE                                          l1831 AAE4  
                                        l1663 A79C                                          l1576 DC42  
                                        l1657 AC90                                          l1841 BD3E  
                                        l1745 FBD2                                          l1649 C640  
                                        l1930 D0C8                                          l1922 CEC6  
                                        l1594 E1D6                                          l1851 CDE0  
                                        l1771 C2BA                                          l1765 C172  
                                        l1757 C076                                          l1918 AE8E  
                                        l1598 E55E                                          l1862 ABDE  
                                        l1783 BAAC                                          l1759 C07E  
                                        l1848 CE9C                                          l1929 CF24  
                                        l1697 AD04                                          l1769 C2B2  
                                        l1874 BB78                                          l1882 A7DC  
                                        l1787 BAB4                                          l1779 C3B8  
                                        l1948 E110                                          l1973 BBFE  
                                        l1974 BC38                                          ?_pad 0011  
                                        l1975 BC40                                          l1889 A8A6  
                                        l9010 B516                                          l9002 B4CA  
                                        l8300 A9BC                                          l9004 B4D6  
                                        l9100 DB1E                                          l9020 B6E6  
                                        l9012 B6AC                                          l8302 A9EE  
                                        l8310 A1B8                                          l9006 B4E4  
                                        l9110 DB64                                          l9102 DB26  
                                        l9030 B72E                                          l9022 B6F4  
                                        l9014 B6BC                                          l8304 AA02  
                                        l8312 A1B2                                          l9008 B504  
                                        l9120 DBBC                                          l9112 DB82  
                                        l9104 DB36                                          l9040 D9BA  
                                        l9200 E1B0                                          l9032 B738  
                                        l9024 B6FE                                          l9016 B6D2  
                                        l8402 A1A6                                          l8314 A190  
                                        l8330 B57A                                          l8322 B568  
                                        l9130 DBFA                                          l9122 DBC2  
                                        l9114 DB84                                          l9106 DB4A  
                                        l9042 D9CA                                          l9050 D9F4  
                                        l9034 D99E                                          l9202 E1C0  
                                        l9026 B71C                                          l9018 B6DA  
                                        l8500 AAFA                                          l8260 A42C  
                                        l8252 B298                                          l8308 A21E  
                                        l8404 A264                                          l8332 B57E  
                                        l8324 B570                                          l8412 A270  
                                        l9140 DC64                                          l9132 DBFE  
                                        l9124 DBCC                                          l9116 DB94  
                                        l9108 DB58                                          l9060 DA20  
                                        l9052 DA04                                          l9044 D9DA  
                                        l9036 D9AA                                          l9220 E24A  
                                        l9212 E20A                                          l9204 E1C6  
                                        l9028 B72C                                          l8502 AB02  
                                        l8262 A43C                                          l8254 B2AA  
                                        l8270 A556                                          l8318 A194  
                                        l8422 A32A                                          l8406 A268  
                                        l8510 C174                                          l8430 B226  
                                        l8342 B592                                          l8326 B574  
                                        l8414 A278                                          l9150 DCC6  
                                        l9142 DC70                                          l9134 DC0C  
                                        l9126 DBDA                                          l9118 DBA6  
                                        l9062 DA30                                          l9070 DA5A  
                                        l9054 DA0A                                          l9046 D9EA  
                                        l9038 D9B8                                          l9310 B822  
                                        l9230 E29C                                          l9222 E266  
                                        l9214 E21A                                          l9206 E1E6  
                                        l9302 A976                                          l8504 AB16  
                                        l8264 A444                                          l8256 B2E6  
                                        l8272 A56A                                          l8280 A596  
                                        l8360 A228                                          l8408 A26C  
                                        l8440 B23A                                          l8344 B5A6  
                                        l8336 B584                                          l8352 B5B0  
                                        l8600 A4BC                                          l9160 DD24  
                                        l9152 DCDC                                          l9144 DC7E  
                                        l9136 DC3A                                          l9128 DBEC  
                                        l9080 DA9C                                          l9072 DA6A  
                                        l9064 DA40                                          l9056 DA10  
                                        l9048 D9EC                                          l9320 B89A  
                                        l9312 B832                                          l9240 E2FA  
                                        l9232 E2AC                                          l9224 E272  
                                        l9216 E224                                          l9208 E1F6  
                                        l9304 A986                                          l9400 B32A  
                                        l8506 AB1E                                          l8266 A44C  
                                        l8258 A36C                                          l8610 A1EA  
                                        l8370 A61C                                          l8362 A5F2  
                                        l8522 C19C                                          l8514 C18C  
                                        l8530 C1FC                                          l8442 B23E  
                                        l8434 B22C                                          l8426 B21A  
                                        l8346 B5AA                                          l8338 B58C  
                                        l8418 A198                                          l9162 DD2A  
                                        l9154 DCF6                                          l9146 DCA8  
                                        l9074 DA80                                          l9066 DA50  
                                        l9058 DA1E                                          l9314 B860  
                                        l9330 BDAC                                          l9250 E3AA  
                                        l9242 E31A                                          l9234 E2BC  
                                        l9226 E27E                                          l9218 E23E  
                                        l9410 B37A                                          l9402 B332  
                                        l8380 A1E2                                          l8508 AB32  
                                        l8292 A516                                          l8268 A542  
                                        l8276 A56E                                          l8284 A59A  
                                        l8460 A1BE                                          l8612 A1EE  
                                        l8364 A5FC                                          l8540 C252  
                                        l8532 C210                                          l8436 B234  
                                        l8428 B222                                          l8604 A1F2  
                                        l8700 B1BA                                          l9500 B65C  
                                        l9164 DD2C                                          l9156 DD12  
                                        l9148 DCAC                                          l9092 DAD4  
                                        l9076 DA90                                          l9084 DAB0  
                                        l9068 DA52                                          l9316 B870  
                                        l9308 B7F4                                          l9340 BE3A  
                                        l9332 BDBC                                          l9324 BD40  
                                        l9260 E400                                          l9252 E3B8  
                                        l9244 E32A                                          l9236 E2CC  
                                        l9228 E28C                                          l9180 E13E  
                                        l9172 E112                                          l9420 AD20  
                                        l9412 B384                                          l9404 B33E  
                                        l8390 A1A0                                          l8294 A52A  
                                        l8278 A582                                          l8286 A5AE  
                                        l8374 A212                                          l8470 A1D6  
                                        l8382 A314                                          l8366 A60E  
                                        l8550 C28C                                          l8542 C26A  
                                        l8534 C226                                          l8518 C194  
                                        l8606 A1F6                                          l8622 A1FA  
                                        l8630 AD5E                                          l8702 B1CE  
                                        l9510 BF7A                                          l9502 B67A  
                                        l9158 DD16                                          l9094 DAEE  
                                        l9086 DAC0                                          l9078 DA98  
                                        l9318 B894                                          l9342 BE40  
                                        l9334 BDCA                                          l9326 BD6E  
                                        l9262 E40E                                          l9254 E3D6  
                                        l9246 E34A                                          l9238 E2EA  
                                        l9190 E17A                                          l9182 E14E  
                                        l9174 E11E                                          l9350 A6DA  
                                        l9430 BCA0                                          l8710 BAD6  
                                        l9422 AD24                                          l9414 ACEE  
                                        l9406 B34C                                          l8392 A2E8  
                                        l8296 A53E                                          l8288 A5C2  
                                        l8456 A2FE                                          l8368 A612  
                                        l8544 C27A                                          l8536 C23E  
                                        l8528 C1A2                                          l8448 B244  
                                        l8464 A19C                                          l8616 A27E  
                                        l8624 A1FE                                          l8480 A290  
                                        l8632 AD64                                          l8704 B1D4  
                                        l8720 A3EC                                          l9600 A202  
                                        l9520 C038                                          l9512 BF96  
                                        l9504 BF4A                                          l8376 A3B6  
                                        l9096 DAFE                                          l9088 DAC0  
                                        l9336 BDDC                                          l9328 BD7E  
                                        l9272 E478                                          l9280 E4C0  
                                        l9264 E412                                          l9256 E3E0  
                                        l9248 E374                                          l9192 E180  
                                        l9184 E15E                                          l9176 E12C  
                                        l8800 EAE4                                          l9360 BE6E  
                                        l9440 BCF2                                          l9432 BCC8  
                                        l8712 BAE0                                          l9424 AD42  
                                        l9416 ACFC                                          l9408 B36A  
                                        l8386 A2BC                                          l8474 A1C4  
                                        l8490 A340                                          l8546 C282  
                                        l8538 C24E                                          l8570 B446  
                                        l8618 A286                                          l8482 A294  
                                        l8642 AD72                                          l8650 AF64  
                                        l8722 A3F0                                          l9530 B3A2  
                                        l9522 C040                                          l9514 BFB2  
                                        l9506 BF5A                                          l8378 A3C6  
                                        l9098 DB0E                                          l9338 BDEA  
                                        l9290 E534                                          l9282 E4DA  
                                        l9274 E484                                          l9266 E420  
                                        l9258 E3EE                                          l9194 E18E  
                                        l9186 E164                                          l9178 E12E  
                                        l9346 A6B4                                          l8810 EB1E  
                                        l8802 EAE8                                          l8730 E9BC  
                                        l9370 BEBC                                          l9362 BE98  
                                        l9354 BE44                                          l9434 BCD4  
                                        l9426 BC42                                          l8714 BAFC  
                                        l8706 BAB6                                          l9418 AD10  
                                        l9450 A8B0                                          l9610 F420  
                                        l8396 A1AC                                          l8476 A1CA  
                                        l8468 A1D0                                          l8492 A34A  
                                        l8548 C286                                          l8556 C292  
                                        l8572 B45C                                          l8564 B42C  
                                        l8484 A298                                          l8636 AD6C  
                                        l8628 AD54                                          l8652 AF68  
                                        l8724 A3F4                                          l9540 B3BE  
                                        l9532 B3B2                                          l9516 BFE8  
                                        l9524 C050                                          l9508 BF6A  
                                        l9292 E542                                          l9284 E4EE  
                                        l9276 E492                                          l9268 E44E  
                                        l9196 E190                                          l9188 E174  
                                        l9348 A6CA                                          l8900 EDA4  
                                        l8820 EB70                                          l8812 EB3A  
                                        l8804 EAEC                                          l8740 E9FC  
                                        l8732 E9CA                                          l9380 BEE8  
                                        l9364 BE9A                                          l9356 BE5A  
                                        l9444 BD36                                          l9428 BC62  
                                        l9460 CC8C                                          l9452 AB8A  
                                        l8716 BB2E                                          l8708 BAC6  
                                        l9700 F7BE                                          l9620 F46A  
                                        l9612 F424                                          l9604 F3FC  
                                        l8398 A2D2                                          l8494 A352  
                                        l8590 B4C6                                          l8574 B48C  
                                        l8566 B440                                          l8478 A28C  
                                        l8662 AF82                                          l8654 AF72  
                                        l8726 A3F8                                          l9550 B3DC  
                                        l9542 B3C2                                          l9534 B3B6  
                                        l9518 C026                                          l9294 E544  
                                        l9286 E508                                          l9278 E4BC  
                                        l9198 E1A0                                          l8910 EE0E  
                                        l8902 EDB2                                          l8830 EBBC  
                                        l8822 EB7E                                          l8814 EB4A  
                                        l8806 EAF0                                          l8750 EA2E  
                                        l8742 E9FE                                          l8734 E9CC  
                                        l9390 BF18                                          l9366 BEAA  
                                        l9438 BCE0                                          l9462 CCAC  
                                        l9454 AB98                                          l9710 F80C  
                                        l9702 F7C2                                          l9630 F4B8  
                                        l9622 F47A                                          l9614 F448  
                                        l9606 F402                                          l8576 B49E  
                                        l8584 B4A8                                          l8680 A2A4  
                                        l9560 B404                                          l9552 B3E4  
                                        l9544 B3CA                                          l9536 B3B8  
                                        l9528 B39E                                          l9288 E524  
                                        l9296 E54A                                          l8920 EE48  
                                        l8912 EE2E                                          l8904 EDEC  
                                        l8840 EBFC                                          l8824 EB80  
                                        l8816 EB60                                          l8808 EAF4  
                                        l8760 EA56                                          l8752 EA30  
                                        l8736 E9DC                                          l8744 EA06  
                                        l8728 E9B0                                          l9392 BF28  
                                        l9376 BED4                                          l9368 BEAE  
                                        l9480 CE54                                          l9472 CD94  
                                        l9464 CD02                                          l9456 ABAC  
                                        l8488 A232                                          l9448 A8A8  
                                        l9800 FCF6                                          l9720 F8A4  
                                        l9704 F7D4                                          l9712 F814  
                                        l9640 F4F4                                          l9632 F4CA  
                                        l9624 F486                                          l9616 F452  
                                        l9608 F412                                          l8498 AAE6  
                                        l8586 B4AE                                          l8594 A498  
                                        l8658 AF7A                                          l8682 A2A8  
                                        l9570 B424                                          l9562 B40C  
                                        l9554 B3EC                                          l9546 B3CC  
                                        l9538 B3BA                                          l9298 E54E  
                                        l8922 EE4E                                          l8914 EE32  
                                        l8906 EDEE                                          l8850 EC26  
                                        l8842 EC08                                          l8834 EBD0  
                                        l8826 EB8A                                          l8818 EB6C  
                                        l8770 EA90                                          l8762 EA66  
                                        l8754 EA36                                          l8746 EA16  
                                        l8738 E9EC                                          l9394 BF38  
                                        l9386 BEFC                                          l9378 BEDE  
                                        l9482 CE7C                                          l9474 CDD0  
                                        l9466 CD16                                          l8930 A79E  
                                        l9810 FD4A                                          l9802 FCFA  
                                        l9730 F988                                          l9722 F8FC  
                                        l9714 F81C                                          l9706 F7E2  
                                        l9650 F552                                          l9642 F4FE  
                                        l9634 F4CE                                          l9626 F48E  
                                        l9618 F45A                                          l8588 B4C0  
                                        l8596 A49C                                          l8668 AF8A  
                                        l8676 A29C                                          l8940 A620  
                                        l9564 B414                                          l9556 B3F4  
                                        l9548 B3D4                                          l9572 B428  
                                        l9492 B622                                          l8924 EE5C  
                                        l8916 EE40                                          l8908 EDFE  
                                        l8860 EC98                                          l8844 EC0C  
                                        l8836 EBE0                                          l8828 EBAC  
                                        l8852 EC2C                                          l8780 EABC  
                                        l8772 EAA2                                          l8764 EA76  
                                        l8756 EA44                                          l8748 EA1C  
                                        l9388 BF08                                          l9484 CE8C  
                                        l9468 CD24                                          l9476 CE04  
                                        l8932 A7AA                                          l9820 FDC8  
                                        l9812 FD7A                                          l9804 FD18  
                                        l9740 FA22                                          l9732 F9BA  
                                        l9724 F930                                          l9716 F82C  
                                        l9708 F7FA                                          l9652 F556  
                                        l9636 F4D4                                          l9628 F492  
                                        l9900 BA74                                          l8950 A3CE  
                                        l9590 A506                                          l9582 A4EA  
                                        l8598 A4B0                                          l8678 A2A0  
                                        l8942 A630                                          l9566 B41C  
                                        l9558 B3FC                                          l9494 B632  
                                        l9910 AE56                                          l8926 EE5E  
                                        l8918 EE46                                          l8870 ECF2  
                                        l8854 EC52                                          l8862 ECA8  
                                        l8846 EC1A                                          l8838 EBEE  
                                        l8790 EAD0                                          l8782 EAC0  
                                        l8774 EAB0                                          l8766 EA78  
                                        l8758 EA46                                          l9478 CE40  
                                        l8934 A7B8                                          l9822 FDD0  
                                        l9814 FD88                                          l9806 FD34  
                                        l9750 FAFA                                          l9742 FA56  
                                        l9734 F9D0                                          l9718 F840  
                                        l9726 F936                                          l9670 F5E0  
                                        l9654 F55C                                          l9638 F4DC  
                                        l9646 F51A                                          l9902 BA80  
                                        l9398 B314                                          l9830 C086  
                                        l8952 A258                                          l9592 A50A  
                                        l9584 A4EE                                          l8696 B1A0  
                                        l8960 AB3E                                          l8944 A63C  
                                        l9568 B420                                          l9576 A384  
                                        l9920 EE88                                          l9496 B644  
                                        l9488 B60A                                          l9912 AE6A  
                                        l9904 AE26                                          l8880 ED22  
                                        l8872 ECFC                                          l8864 ECCE  
                                        l8856 EC86                                          l8848 EC1C  
                                        l8792 EAD4                                          l8784 EAC4  
                                        l8776 EAB4                                          l8768 EA80  
                                        l8936 A7BC                                          l9816 FDA0  
                                        l9808 FD3C                                          l9760 FB24  
                                        l9744 FAAC                                          l9752 FAFE  
                                        l9736 FA02                                          l9728 F954  
                                        l9680 F6C8                                          l9672 F5E6  
                                        l9656 F564                                          l9648 F540  
                                        l9664 F580                                          l9840 C0DA  
                                        l9832 C08E                                          l8954 A25C  
                                        l9594 A50E                                          l9586 A4FE  
                                        l8698 B1A4                                          l8970 AB6A  
                                        l8962 AB4E                                          l8946 A648  
                                        l9578 A20A                                          l9930 EEF6  
                                        l9922 EEA4                                          l9914 EE70  
                                        l8938 A1DC                                          l9498 B656  
                                        l9906 AE2A                                          l8890 ED4A  
                                        l8882 ED26                                          l8874 ED0A  
                                        l8866 ECDE                                          l8858 EC88  
                                        l8794 EAD8                                          l8786 EAC8  
                                        l8778 EAB8                                          l9818 FDB0  
                                        l9770 FBF2                                          l9762 FB30  
                                        l9754 FB0E                                          l9746 FAB2  
                                        l9738 FA12                                          l9682 F6DC  
                                        l9690 F758                                          l9674 F61A  
                                        l9666 F59A                                          l9850 C156  
                                        l9842 C0E0                                          l9834 C098  
                                        l9826 C05A                                          l8956 A260  
                                        l9588 A502                                          l9596 A512  
                                        l8972 AB70                                          l8964 AB50  
                                        l8980 AB86                                          l9940 EF5A  
                                        l9932 EF0A                                          l9924 EEB6  
                                        l9916 EE74                                          l9908 AE3E  
                                        l8892 ED58                                          l8884 ED36  
                                        l8876 ED0C                                          l8796 EADC  
                                        l8788 EACC                                          l9780 FC24  
                                        l9772 FC02                                          l9764 FBA8  
                                        l9756 FB16                                          l9748 FAE6  
                                        l9692 F792                                          l9684 F710  
                                        l9676 F658                                          l9836 C09E  
                                        l9844 C114                                          l9828 C06A  
                                        l9860 C2CA                                          l8974 AB78  
                                        l8966 AB54                                          l8958 AB3A  
                                        l8990 AC60                                          l9950 EF9C  
                                        l9942 EF5C                                          l9934 EF1E  
                                        l9926 EEC4                                          l9918 EE80  
                                        l8894 ED6E                                          l8878 ED1A  
                                        l8886 ED38                                          l8798 EAE0  
                                        l9790 FC58                                          l9782 FC28  
                                        l9774 FC06                                          l9766 FBC8  
                                        l9758 FB1C                                          l9694 F7A2  
                                        l9686 F718                                          l9678 F68A  
                                        l9846 C126                                          l9838 C0D4  
                                        l9870 C2F8                                          l9862 C2D4  
                                        l9854 C296                                          STR_1 FE98  
                                        l8976 AB7E                                          l8968 AB5A  
                                        l8992 AC72                                          l8984 AC38  
                                        l9960 EFFA                                          l9952 EFB0  
                                        l9944 EF74                                          l9936 EF30  
                                        l9928 EED6                                          l8888 ED46  
                                        l9792 FC5C                                          l9784 FC2E  
                                        l9776 FC0C                                          l9768 FBE4  
                                        l9696 F7AE                                          l9848 C13C  
                                        l9872 C2FC                                          l9864 C2DA  
                                        l9880 C350                                          l9856 C2A6  
                                        STR_2 FF8C                                          STR_3 FF6D  
                                        l8978 AB82                                          l8986 AC4C  
                                        l8994 AC76                                          l9970 F054  
                                        l9962 F002                                          l9954 EFC2  
                                        l9938 EF48                                          l8898 ED98  
                                        l9794 FC62                                          l9778 FC14  
                                        l9786 FC34                                          l9698 F7B6  
                                        l9890 B9F8                                          l9882 C36C  
                                        l9874 C30E                                          l9866 C2E0  
                                        l9858 C2C2                                          STR_4 FFEA  
                                        STR_5 FE15                                          l8988 AC5C  
                                        l9980 F0BC                                          l9972 F07A  
                                        l9964 F016                                          l9956 EFD6  
                                        l9948 EF8A                                          l9796 FCBA  
                                        l9788 FC46                                          l8996 A4C0  
                                        l9892 BA00                                          l9884 C382  
                                        l9876 C314                                          l9868 C2F0  
                                        STR_6 FF4C                                          STR_7 FFC7  
                                        l9990 F10E                                          l9982 F0CE  
                                        l9974 F096                                          l9966 F032  
                                        l9958 EFE8                                          l9798 FCEE  
                                        l8998 A4E0                                          l9894 BA28  
                                        l9886 C39C                                          l9878 C31A  
                                        STR_8 FF9F                                          STR_9 FFAE  
                                        l9992 F132                                          l9976 F0AE  
                                        l9968 F04A                                          l9984 F0D6  
                                        l9896 BA34                                          l9994 F186  
                                        l9986 F0E8                                          l9978 F0BA  
                                        l9898 BA54                                          l9996 F1A2  
                                        l9988 F100                                          l9998 F1BA  
                                        _LATA 3FBA                                          _LATB 3FBB  
                                        _LATC 3FBC                                          _LATD 3FBD  
                                        _LATE 3FBE                                          _PMD0 39C0  
                                        _PMD1 39C1                                          _PMD2 39C2  
                                        _PMD3 39C3                                          u8000 BAD6  
                                        _PMD4 39C4                                          u8001 BAD2  
                                        _PMD5 39C5                                          u8010 BAFC  
                                        _PMD6 39C6                                          u8011 BAF8  
                                        _PMD7 39C7                                          u8100 EA66  
                                        u8020 BB2E                                          u8101 EA62  
                                        u8021 BB2A                                          u8030 A408  
                                        u8110 EAA2                                          u8031 A404  
                                        u8111 EA9E                                          u9000 BDAC  
                                        u8200 EBBC                                          u8120 EAB0  
                                        u8040 E9CA                                          u9001 BDA8  
                                        u8201 EBB8                                          u8121 EAAC  
                                        u8041 E9C6                                          u9010 BDCA  
                                        u8210 EBEE                                          u8130 EB1E  
                                        u8050 E9DC                                          u9011 BDC6  
                                        u8211 EBEA                                          u8131 EB1A  
                                        u8051 E9D8                                          u9020 BDEA  
                                        u8300 ED36                                          u8220 EBFC  
                                        u8140 EB36                                          u8060 E9EC  
                                        u9100 BF18                                          u9021 BDE6  
                                        u8301 ED32                                          u8221 EBF8  
                                        u8141 EB30                                          u8061 E9E8  
                                        u9101 BF14                                          u9030 BE3A  
                                        u8310 ED46                                          u8230 EC1A  
                                        u8150 EB38                                          u8070 EA2E  
                                        u9110 BF28                                          u9031 BE36  
                                        u8311 ED42                                          u8231 EC16  
                                        u8071 EA2A                                          u9111 BF24  
                                        u9040 A6CA                                          u8400 EE2E  
                                        u8320 ED58                                          u8240 EC52  
                                        u8160 EB60                                          u8080 EA44  
                                        u9200 BCF2                                          u9120 B32A  
                                        u9041 A6C6                                          u8401 EE2A  
                                        u8321 ED54                                          u8241 EC4E  
                                        u8161 EB5C                                          u8081 EA40  
                                        u9201 BCEE                                          u9121 B326  
                                        u8410 EE40                                          u8330 ED6E  
                                        u8250 EC98                                          u8170 EB7E  
                                        u8090 EA56                                          u9050 BE5A  
                                        u9130 B34C                                          u8411 EE3C  
                                        u8331 ED6A                                          u8251 EC94  
                                        u8171 EB7A                                          u8091 EA52  
                                        u9051 BE56                                          u9131 B348  
                                        u7700 A326                                          u8500 B546  
                                        u8420 EE5C                                          u8340 ED84  
                                        u8260 ECCE                                          u8180 EB9E  
                                        u9060 BE8E                                          u9220 BD2C  
                                        u9300 CD90                                          u9140 B36A  
                                        u7701 A320                                          u8501 B542  
                                        u8421 EE58                                          u8341 ED80  
                                        u8261 ECCA                                          u8181 EB9A  
                                        u9221 BD26                                          u9301 CD8C  
                                        u9141 B366                                          u7710 A2CE  
                                        u8350 ED98                                          u8270 ECDE  
                                        u8190 EBAC                                          u9070 BEBC  
                                        u9230 BD2E                                          u9310 CDB4  
                                        u8430 A7DC                                          u9150 ACFC  
                                        u8510 B6D2                                          u7711 A2C8  
                                        u8351 ED94                                          u8271 ECDA  
                                        u8191 EBA8                                          u9071 BEB8  
                                        u9215 BD04                                          u8431 A7D8  
                                        u9151 ACF8                                          u8511 B6CE  
                                        u7720 A2FA                                          u7640 B2AA  
                                        u7800 C188                                          u8440 A630  
                                        u9400 BF5A                                          u8600 DA80  
                                        u8360 EDB2                                          u8280 ED0A  
                                        u9080 BED0                                          u9320 CDD0  
                                        u9160 AD42                                          u9240 A8EA  
                                        u8520 B6F4                                          u7721 A2F4  
                                        u7641 B2A6                                          u7801 C184  
                                        u8441 A62C                                          u9401 BF56  
                                        u8601 DA7C                                          u8361 EDAE  
                                        u8281 ED06                                          u9081 BECC  
                                        u9065 BE84                                          u9321 CDCC  
                                        u9161 AD3E                                          u9241 A8E6  
                                        u8521 B6F0                                          u7730 A2E4  
                                        u7650 A43C                                          u7706 A328  
                                        u8450 AB4E                                          u9410 BF6A  
                                        u8610 DAC0                                          u8370 EDEC  
                                        u8290 ED1A                                          u9090 BEF8  
                                        u9170 BC82                                          u9330 CE24  
                                        u9250 AB98                                          u8530 B71C  
                                        u7731 A2DE                                          u7651 A438  
                                        u8451 AB4A                                          u9411 BF66  
                                        u8611 DABC                                          u8371 EDE8  
                                        u8291 ED16                                          u9091 BEF4  
                                        u9315 CDAA                                          u9251 AB94  
                                        u8531 B718                                          u7716 A2D0  
                                        u7740 A33C                                          u7820 C210  
                                        u7660 B5A6                                          u8460 AB6A  
                                        u9420 BFB2                                          u8700 DC3A  
                                        u8620 DB36                                          u8540 D9B8  
                                        u8380 EDFE                                          u9180 BCA0  
                                        u9340 CE40                                          u9260 CCD4  
                                        u9500 F4CA                                          u7741 A336  
                                        u7821 C20C                                          u7661 B5A2  
                                        u8461 AB66                                          u9421 BFAE  
                                        u8701 DC36                                          u8621 DB32  
                                        u8541 D9B4                                          u8381 EDFA  
                                        u9181 BC9C                                          u9341 CE3C  
                                        u9501 F4C6                                          u7726 A2FC  
                                        u7830 C226                                          u7910 ACA2  
                                        u8470 AC90                                          u9430 C038  
                                        u8710 DC50                                          u8630 DB58  
                                        u8550 D9CA                                          u8390 EE0E  
                                        u9190 BCC8                                          u9350 CE7C  
                                        u9270 CD02                                          u9510 F540  
                                        u7831 C222                                          u7911 AC9E  
                                        u8471 AC8C                                          u9431 C034  
                                        u8711 DC4C                                          u8631 DB54  
                                        u8551 D9C6                                          u8391 EE0A  
                                        u9191 BCC4                                          u9175 BC78  
                                        u9351 CE78                                          u9335 CE1A  
                                        u9271 CCFE                                          u9511 F53C  
                                        u7736 A2E6                                          u7760 A310  
                                        u7680 A60E                                          u7840 C26A  
                                        u7920 ACB4                                          u9440 B3B2  
                                        u9360 B61E                                          u8720 DC64  
                                        u8640 DB82                                          u8560 D9DA  
                                        u8800 E18E                                          u9280 CD24  
                                        u9600 F7D4                                          u9520 F552  
                                        u7761 A30A                                          u7681 A60A  
                                        u7841 C266                                          u7921 ACB0  
                                        u9441 B3AE                                          u8481 B4D0  
                                        u9361 B61A                                          u8721 DC60  
                                        u8641 DB7E                                          u8561 D9D6  
                                        u8801 E18A                                          u9281 CD20  
                                        u9265 CCCA                                          u9601 F7D0  
                                        u9521 F54E                                          u9450 A4FE  
                                        u7770 AAFA                                          u7746 A33E  
                                        u7818 C1B0                                          u7850 B440  
                                        u7930 ACC8                                          u8490 B4E4  
                                        u9370 B632                                          u7690 A3C6  
                                        u8730 DC7E                                          u8650 DBA6  
                                        u8570 DA1E                                          u8810 E1A0  
                                        u9610 F7E2                                          u9530 F5CC  
                                        u9451 A4FA                                          u7771 AAF6  
                                        u7819 C1C4                                          u7851 B43C  
                                        u7931 ACC4                                          u8491 B4E0  
                                        u9371 B62E                                          u7691 A3C2  
                                        u8731 DC7A                                          u8651 DBA2  
                                        u8571 DA1A                                          u8811 E19C  
                                        u9611 F7DE                                          u9531 F5C8  
                                        u7780 AB16                                          u7860 B45C  
                                        u7908 AF98                                          u7940 ACDA  
                                        u9380 B644                                          u8740 DCC6  
                                        u8660 DBBC                                          u8580 DA30  
                                        u8900 E464                                          u8820 E1B0  
                                        u9700 FBE4                                          u9620 F80C  
                                        u9540 F658                                          u9460 F420  
                                        u7781 AB12                                          u7861 B458  
                                        u7909 AFAA                                          u7941 ACD6  
                                        u9381 B640                                          u8741 DCC2  
                                        u8661 DBB8                                          u8581 DA2C  
                                        u8901 E460                                          u8821 E1AC  
                                        u9701 FBE0                                          u9621 F808  
                                        u9541 F654                                          u9461 F41C  
                                        u7790 AB32                                          u7766 A312  
                                        u7870 B48C                                          u7758 B252  
                                        u7678 B5BE                                          u7950 ACEC  
                                        u9390 B67A                                          u8750 DCF6  
                                        u8670 DBDA                                          u8590 DA40  
                                        u8910 E478                                          u8830 E1E6  
                                        u9710 FBF2                                          u9630 F954  
                                        u9550 F68A                                          u9470 F46A  
                                        u7791 AB2E                                          u7871 B488  
                                        u7759 B264                                          u7679 B5D0  
                                        u7951 ACE8                                          u9391 B676  
                                        u8751 DCF2                                          u8671 DBD6  
                                        u8591 DA3C                                          u8911 E474  
                                        u8831 E1E2                                          u9295 CD38  
                                        u9711 FBEE                                          u9631 F950  
                                        u9551 F686                                          u9471 F466  
                                        u7880 A4B0                                          u7960 B1BA  
                                        u8760 DD24                                          u8680 DBFA  
                                        u8920 E492                                          u8840 E1F6  
                                        u9296 CD42                                          u9720 FC46  
                                        u9640 F9BA                                          u9560 F6C8  
                                        u9480 F47A                                          u9800 C13C  
                                        u7881 A4AC                                          u7961 B1B6  
                                        u8761 DD20                                          u8681 DBF6  
                                        u8921 E48E                                          u8841 E1F2  
                                        u9297 CD52                                          u9721 FC42  
                                        u9641 F9B6                                          u9561 F6C4  
                                        u9481 F476                                          u9801 C138  
                                        u7970 B1CE                                          u8690 DC0C  
                                        u8930 E4DA                                          u8850 E394  
                                        u8770 E12C                                          u9730 FD18  
                                        u9650 FA02                                          u9570 F754  
                                        u9490 F4B8                                          u9810 C156  
                                        u7971 B1CA                                          u8691 DC08  
                                        u8931 E4D6                                          u8771 E128  
                                        u9731 FD14                                          u9651 F9FE  
                                        u9571 F750                                          u9491 F4B4  
                                        u9811 C152                                          u9900 AE3E  
                                        u8940 E508                                          u8860 E3EE  
                                        u8780 E13E                                          u9740 FD34  
                                        u9660 FA12                                          u9580 F78A  
                                        u9820 C2A6                                          u9901 AE3A  
                                        u8941 E504                                          u8861 E3EA  
                                        u8781 E13A                                          u9741 FD30  
                                        u9661 FA0E                                          u9581 F786  
                                        u9821 C2A2                                          u9910 AE56  
                                        u8950 E542                                          u8870 E40E  
                                        u8790 E14E                                          u7990 BAC6  
                                        u9750 FD9A                                          u9670 FAAC  
                                        u9590 F7A2                                          u9830 C2F0  
                                        u9911 AE52                                          u8951 E53E  
                                        u8871 E40A                                          u8855 E38A  
                                        u8791 E14A                                          u7991 BAC2  
                                        u9751 FD94                                          u9671 FAA8  
                                        u9591 F79E                                          u9831 C2EC  
                                        u9920 AE8E                                          u8960 B822  
                                        u8880 E420                                          u9760 FD9C  
                                        u9680 FAFA                                          u9840 C33A  
                                        u9921 AE8A                                          u8961 B81E  
                                        u8881 E41C                                          u9681 FAF6  
                                        u7898 AD80                                          u8970 B860  
                                        u8890 E44E                                          u9770 FDB0  
                                        u9690 FBA8                                          u9850 C36C  
                                        u7899 AD92                                          u9931 EE7A  
                                        u8971 B85C                                          u8891 E44A  
                                        u9771 FDAC                                          u9691 FBA4  
                                        u9851 C368                                          u7988 B202  
                                        u9940 EEA4                                          u8980 B894  
                                        u9780 C06A                                          u9860 C382  
                                        u7989 B214                                          u9941 EEA0  
                                        u8981 B890                                          u9781 C066  
                                        u9861 C37E                                          u9845 C330  
                                        u9950 EEB6                                          u8990 BD6E  
                                        u9790 C126                                          u9870 C39C  
                                        u9951 EEB2                                          u8991 BD6A  
                                        u9791 C122                                          u9871 C398  
                                        u9960 EED6                                          u9880 BA28  
                                        u9961 EED2                                          u9881 BA24  
                                        u9970 EEF2                                          u9890 BAAC  
                                        u9971 EEEE                                          u9891 BAA8  
                                        u9980 EF30                                          u9981 EF2C  
                                        u9990 EF48                                          u9991 EF44  
                                        _WPUA 3A41                                          _WPUB 3A51  
                                        _WPUC 3A61                                          _WPUD 3A71  
                                        _WPUE 3A81                       ??_wr2RegCompleteHandler 000C  
                            ??_I2C1_MasterFsm 0013                                          _Ndat 00E9  
                            ParseUserInput@Tm 0090                     ??_I2C1_CallbackReturnStop 000C  
                                        _dbuf 0324                                          _labs AB8A  
                                        _atou CE9E                                          _main D672  
                                        _asup 00C9                                          _ncnv 00BB  
                                        _prec 00C3                                          pad@i 0017  
                                        pad@p 0014                                          fsr0h 3FEA  
                                        fsr1h 3FE2                                          indf0 3FEF  
                                        fsr2h 3FDA                                          fsr0l 3FE9  
                                        indf2 3FDF                                          fsr1l 3FE1  
                                        fsr2l 3FD9                                          _utoa C05A  
                        EEPROM_WriteByte@data 001D                                          _xtoa C296  
                       I2C1_ReadDataBlock@len 0019                         EEPROM_WriteBlock@data 0025  
                       I2C1_ReadDataBlock@reg 0017                                 ___fpclassifyf BC42  
                                        prodh 3FF4                                          prodl 3FF3  
                       EEPROM_WriteBlock@size 0027                                          start FFFC  
                            ??_I2C1_SetBuffer 0005                               ___fldiv@new_exp 0020  
                                ___param_bank 0000                                   ?_UART1_Read 0001  
                   __end_of_StoreLastSettings AA9A                 I2C1_CallbackReturnStop@funPtr 000A  
                             _I2C1_DO_TX$1073 0011                                         ??_pad 0016  
               __end_of_OSCILLATOR_Initialize A3B4                                         l10000 F1C4  
                           ??_I2C1_ReadNBytes 001A                                         l10010 F22E  
                                       l10002 F1DC                                         l10020 F352  
                                       l10012 F2BC                                         l10004 F1F4  
                                       l10100 E602                                         l10014 F2EA  
                                       l10022 F354                                         l10006 F1F8  
                                       l10030 F3A2                                         l10102 E61C  
                                       l10110 E634                                         l10032 F3B2  
                                       l10024 F368                                         l10016 F2FA  
                                       l10104 E624                                         l10112 E666  
                                       l11000 D6AC                                         l10050 AC1E  
                                       l10042 ABE2                                         l10034 F3C0  
                                       l10018 F348                                         l10026 F36E  
                                       l10130 E76E                                         l10114 E688  
                                       l10122 E706                                         l10106 E62C  
                                       l11010 D70E                                         l11002 D6CA  
                                       l10060 A84A                                         l10052 AC22  
                                       l10044 ABE2                                         l10036 F3C8  
                                       l10028 F382                                         l10220 CEA6  
                                       l10140 E7D6                                         l10124 E730  
                                       l10116 E6AE                                         l10300 AA9A  
                                       l11020 D788                                         l11012 D71A  
                                       l11004 D6D6                                         l10062 A84E  
                                       l10054 A822                                         l10046 ABF8  
                                       l10038 F3DA                                         l10230 CEFE  
                                       l10222 CEBA                                         l10070 C3E0  
                                       l10310 DD38                                         l10142 E7F0  
                                       l10150 E808                                         l10126 E752  
                                       l10118 E6DA                                         l10302 AAA6  
                                       l11030 D814                                         l11022 D7AE  
                                       l11014 D726                                         l11006 D6E2  
                                       l10056 A822                                         l10048 AC0A  
                                       l10240 CF6A                                         l10232 CF12  
                                       l10224 CECE                                         l10080 C4AC  
                                       l10072 C3EE                                         l10064 C3BA  
                                       l10320 DDC2                                         l10312 DD60  
                                       l10160 E8C4                                         l10144 E7F8  
                                       l10152 E83A                                         l10136 E78A  
                                       l10304 AAB8                                         l11040 D8C8  
                                       l11032 D852                                         l11024 D7DC  
                                       l11016 D732                                         l11008 D6FE  
                                       l10058 A838                                         l10250 CFB6  
                                       l10242 CF7C                                         l10234 CF30  
                                       l10226 CEDA                                         l10218 CE9E  
                                       l10074 C428                                         l10066 C3D4  
                                       l10322 DDD6                                         l10330 DE24  
                                       l10314 DD6C                                         l10170 E942  
                                       l10162 E8EE                                         l10154 E860  
                                       l10146 E800                                         l10138 E7C4  
                                       l10090 E5A2                                         l10306 AADA  
                                       l11050 D97E                                         l11034 D866  
                                       l11026 D7F0                                         l11042 D8F0  
                                       l11018 D760                                         l10260 CFE8  
                                       l10244 CF80                                         l10236 CF42  
                                       l10228 CEEA                                         l10076 C44A  
                                       l10404 E0F8                                         l10332 DE5C  
                                       l10324 DDF2                                         l10316 DD8E  
                                       l10164 E910                                         l10156 E892  
                                       l10172 E974                                         l10092 E5A6  
                                       l10084 E560                                         l10420 B138  
                                       l10500 C622                                         l11052 D982  
                                       l11044 D91E                                         l11036 D878  
                                       l11028 D802                                         l10270 D0A4  
                                       l10262 CFFE                                         l10238 CF56  
                                       l10246 CF8A                                         l10078 C45C  
                                       l10406 E10C                                         l10350 DF26  
                                       l10334 DE6A                                         l10326 DE18  
                                       l10318 DDB6                                         l10094 E5CE  
                                       l10086 E58A                                         l10430 B18A  
                                       l10422 B14E                                         l10510 C678  
                                       l10502 C630                                         l11054 D98A  
                                       l11038 D88A                                         l10272 D0C0  
                                       l10264 D00C                                         l10248 CFA2  
                                       l10352 DF32                                         l10360 DF42  
                                       l10336 DE7E                                         l10344 DED0  
                                       l10520 BB7A                                         l10440 B048  
                                       l10096 E5DA                                         l10088 E596  
                                       l10176 E986                                         l10600 B89E  
                                       l10432 A244                                         l10424 B160  
                                       l10512 C688                                         l10504 C64E  
                                       l10280 A658                                         l11048 D958  
                                       l10290 A688                                         l10266 D07E  
                                       l10258 CFCA                                         l10362 DF56  
                                       l10354 DF36                                         l10346 DEF8  
                                       l10338 DE9A                                         l10530 BBC0  
                                       l10522 BB82                                         l10442 B076  
                                       l10098 E5EE                                         l10610 B918  
                                       l10602 B8B6                                         l10434 A24E  
                                       l10426 B172                                         l10418 B12C  
                                       l10514 C696                                         l10506 C650  
                                       l10282 A65C                                         l10450 A80A  
                                       l10292 A69A                                         l10460 A962  
                                       l10268 D092                                         l10380 DFEC  
                                       l10364 DF66                                         l10348 DF10  
                                       l10540 BC1A                                         l10524 BB94  
                                       l10444 B07A                                         l10620 B926  
                                       l10612 B91A                                         l10604 B8C4  
                                       l10436 A23A                                         l10428 B186  
                                       l10516 C698                                         l10508 C654  
                                       l10284 A66E                                         l10276 A650  
                                       l10452 A80C                                         l10294 A69E  
                                       l10286 A680                                         l10454 A932  
                                       l10550 ADE6                                         l10390 E06A  
                                       l10382 DFF8                                         l10374 DF82  
                                       l10542 BC2C                                         l10534 BBD4  
                                       l10526 BBA0                                         l10438 B044  
                                       l10470 A91E                                         l10462 A8EC  
                                       l10622 B928                                         l10614 B91C  
                                       l10606 B8D4                                         l10630 D0F6  
                                       l10278 A654                                         l10446 A7E0  
                                       l10710 AF32                                         l10702 AEFA  
                                       l10296 A6B0                                         l10288 A684  
                                       l10456 A93A                                         l10552 ADF8  
                                       l10544 ADBE                                         l10392 E080  
                                       l10384 E020                                         l10376 DF92  
                                       l10368 DF72                                         l10528 BBA8  
                                       l10536 BBDC                                         l10464 A8F8  
                                       l10624 A39C                                         l10616 B922  
                                       l10608 B916                                         l10560 AECE  
                                       l10712 A356                                         l10480 C55C  
                                       l10640 D164                                         l10632 D10C  
                                       l10448 A7E8                                         l10704 AF0A  
                                       l10800 D4B6                                         l10720 B948  
                                       l10458 A960                                         l10554 AE0C  
                                       l10546 ADBE                                         l10394 E098  
                                       l10386 E056                                         l10378 DFBA  
                                       l10538 BC06                                         l10466 A900  
                                       l10618 B924                                         l10562 AEDA  
                                       l10714 A366                                         l10490 C59A  
                                       l10482 C572                                         l10474 C4F8  
                                       l10650 D326                                         l10642 D1BE  
                                       l10634 D122                                         l10626 D0CA  
                                       l10706 AF18                                         l10810 D546  
                                       l10802 D4C4                                         l10570 B760  
                                       l10730 B98E                                         l10722 B950  
                                       l10556 AE10                                         l10548 ADD4  
                                       l10716 A2AC                                         l10396 E0AC  
                                       l10388 E05A                                         l11380 E7AE  
                                       l10468 A908                                         l10564 AEE6  
                                       l10492 C5CC                                         l10476 C508  
                                       l10644 D218                                         l10636 D138  
                                       l10628 D0E0                                         l10660 C8AC  
                                       l10708 AF28                                         l10652 A726  
                                       l10820 D5D0                                         l10812 D55A  
                                       l10804 D4D8                                         l10580 B7A4  
                                       l10572 B766                                         l10724 B956  
                                       l10740 B9B8                                         l10900 B0F4  
                                       l11390 ADA4                                         l10718 A2AC  
                                       l10398 E0C0                                         l11382 E81C  
                                       l10750 CAAA                                         l10566 AEF2  
                                       l10558 AE90                                         l10494 C5CE  
                                       l10486 C586                                         l10478 C516  
                                       l10646 D272                                         l10638 D14E  
                                       l10670 C930                                         l10662 C8C2  
                                       l10654 A72A                                         l10822 D5E2  
                                       l10814 D56C                                         l10830 D65E  
                                       l10806 D506                                         l10582 B7A8  
                                       l10574 B776                                         l10742 B9E8  
                                       l10726 B966                                         l10902 B10A  
                                       l11392 B5E2                                         l11384 E8D8  
                                       l11376 E648                                         l10760 CB2E  
                                       l10752 CAC0                                         l10592 A40A  
                                       l10496 C5DA                                         l10488 C58E  
                                       l10648 D2CC                                         l10680 CA52  
                                       l10672 C99E                                         l10664 C8DC  
                                       l10656 A738                                         l10832 D66A  
                                       l10824 D5F4                                         l10816 D57E  
                                       l10808 D53A                                         l10584 B7C2  
                                       l10576 B77A                                         l10568 B750  
                                       l10736 B9A4                                         l10728 B978  
                                       l10904 B112                                         l11394 B276  
                                       l10850 AA06                                         l10690 A864  
                                       l10842 B040                                         l10834 AFD4  
                                       l11386 E966                                         l11378 E71A  
                                       l10770 CC50                                         l10762 CB9C  
                                       l10754 CADA                                         l10746 CA8E  
                                       l10594 A428                                         l10498 C616  
                                       l10674 CA14                                         l10666 C8F8  
                                       l10682 CA5E                                         l10658 C89C  
                                       l10826 D632                                         l10818 D5BC  
                                       l10586 B7D4                                         l10578 B794  
                                       l10738 B9B6                                         l10906 B114  
                                       l11396 C1D6                                         l11388 AFBC  
                                       l10852 AA1E                                         l10692 A872  
                                       l10836 B008                                         l10860 C6EA  
                                       l10764 CC12                                         l10756 CAF6  
                                       l10772 CC5C                                         l10748 CA9E  
                                       l10676 CA20                                         l10668 C914  
                                       l10684 A474                                         l10828 D656  
                                       l10780 D382                                         l10588 B7EE  
                                       l10908 B11A                                         l10774 A6EC  
                                       l10854 AA36                                         l10694 A87A  
                                       l10838 B03A                                         l10870 C822  
                                       l10862 C706                                         l10766 CC1E  
                                       l10758 CB12                                         l10598 A450  
                                       l10678 CA3A                                         l10686 A47A  
                                       l10790 D402                                         l10782 D398  
                                       l10846 AA50                                         l10776 A704  
                                       l10696 A882                                         l10872 C82E  
                                       l10864 C722                                         l10856 C6AA  
                                       l10768 CC38                                         l10688 A47E  
                                       l10792 D41C                                         l10784 D3B4  
                                       l10848 AA80                                         l10880 A760  
                                       l10778 A71C                                         l10698 A89E  
                                       l10874 C848                                         l10866 C73E  
                                       l10858 C6D0                                         l10794 D436  
                                       l10786 D3CE                                         l10890 B0BE  
                                       l10882 A76C                                         l10876 C860  
                                       l10868 C7AC                                         l10796 D484  
                                       l10788 D3E8                                         l10892 B0D0  
                                       l10884 A77E                                         l10878 C86C  
                                       l10798 D49E                                         l10894 B0D8  
                                       l10886 A782                                         l10990 D676  
                                       l10896 B0E0                                         l10888 B0B6  
                                       l10992 D67A                                         l10898 B0EE  
                                       l10994 D67E                                         l10996 D682  
                                       l10988 D672                                         l10998 D6A0  
                               ___fltol@sign1 0009                                         ?_labs 0001  
                           __end_of_I2C1_Open B42C                               __end_of___fladd EE70  
                                       ?_atou 0049                                         ?_main 0001  
                             __end_of___fldiv DD38                               __end_of___flneg A6EC  
                                       STR_10 FF6D                                         STR_11 FECA  
                                       STR_20 FF26                                         STR_12 FEF8  
                                       STR_21 FFEF                                         STR_13 FE5A  
                                       STR_14 FFBC                                         STR_15 FFAC  
                                       STR_24 FFF3                                         STR_16 FFE2  
                                       STR_17 FFD0                                         STR_18 FFD9  
                                       STR_19 FE98                                         STR_27 FFF7  
                                       STR_29 FFF7                               __end_of___flmul E560  
                             __end_of___flsub A9BC                               __end_of___fltol BF4A  
                                       u10000 EF5A                                         u10001 EF56  
                                       u10010 EF86                                         u10011 EF82  
                             __end_of___lldiv B750                                         u10100 F096  
                                       u10020 EF9C                                         u10101 F092  
                                       u10021 EF98                                         u10110 F0AE  
                                       u10030 EFC2                                         u10111 F0AA  
                                       u10031 EFBE                                         ?_utoa 0019  
                                       u11000 AE24                                         u10200 F22E  
                                       u10120 F0CE                                         u10040 EFD6  
                                       u11001 AE20                                         u10201 F22A  
                                       u10121 F0CA                                         u10041 EFD2  
                                       u10210 F2EA                                         u10130 F0E8  
                                       u10050 EFE8                                         u11010 B760  
                                       u10211 F2E6                                         u10131 F0E4  
                                       u10051 EFE4                                         u11011 B75C  
                                       u10300 A862                                         u10220 F2FA  
                                       u10140 F100                                         u10060 EFFA  
                                       u11100 AF18                                         u11020 B776  
                                       u10301 A85E                                         u10221 F2F6  
                                       u10141 F0FC                                         u10061 EFF6  
                                       u11101 AF14                                         u11021 B772  
                                       u10230 F328                                         u10150 F10E  
                                       u10070 F032                                         u10310 C3D4  
                                       u11110 AF52                                         u10231 F324  
                                       u10151 F10A                                         u10071 F02E  
                                       u10311 C3D0                                         u11111 AF4E  
                                       u10240 F382                                         u10160 F1A2  
                                       u10080 F04A                                         u10320 C418  
                                       u10400 E688                                         u11200 D55A  
                                       u11040 B7A4                                         u11120 B966  
                                       u10241 F37E                                         u10161 F19E  
                                       u10081 F046                                         u10401 E684  
                                       u11201 D556                                         u11041 B7A0  
                                       u11121 B962                                         u10250 F3B2  
                                       u10170 F1BA                                         u10090 F07A  
                                       u10330 C428                                         u10410 E6AA  
                                       u11210 D5D0                                         u11130 B978  
                                       u10251 F3AE                                         u10171 F1B6  
                                       u10091 F076                                         u10331 C424  
                                       u10411 E6A6                                         u11211 D5CC  
                                       u11131 B974                                         u10260 F3C0  
                                       u10180 F1F4                                         u10500 CFA2  
                                       u10340 C44A                                         u11220 B008  
                                       u10420 E85C                                         u11060 B7D4  
                                       u11140 B98A                                         u10261 F3BC  
                                       u10181 F1F0                                         u10501 CF9E  
                                       u10341 C446                                         u11221 B004  
                                       u10421 E858                                         u11061 B7D0  
                                       u11141 B986                                         u10270 ABF8  
                                       u10190 F21C                                         u10510 CFB6  
                                       u10430 CEBA                                         u10350 C45C  
                                       u11230 B03A                                         u11038 B780  
                                       u11150 B9A0                                         u10271 ABF4  
                                       u10191 F218                                         u10511 CFB2  
                                       u10431 CEB6                                         u10351 C458  
                                       u10327 C40A                                         u11231 B036  
                                       u11039 B794                                         u11151 B99C  
                                       u10280 AC36                                         u10520 CFE8  
                                       u10440 CEFE                                         u10360 C4AC  
                                       u10600 DD8A                                         u11240 C89A  
                                       u11080 A75E                                         u11160 B9E8  
                                       u11400 D866                                         u10281 AC32  
                                       u10521 CFE4                                         u10441 CEFA  
                                       u10361 C4A8                                         u10601 DD84  
                                       u11241 C896                                         u11081 A75A  
                                       u11161 B9E4                                         u11401 D862  
                                       u10290 A838                                         u10530 CFFE  
                                       u10450 CF12                                         u10370 C4D6  
                                       u10610 DD8C                                         u11170 CC8A  
                                       u11090 CA8C                                         u11058 B7AE  
                                       u11250 A79C                                         u11410 D91E  
                                       u10291 A834                                         u10531 CFFA  
                                       u10451 CF0E                                         u11171 CC86  
                                       u11091 CA88                                         u11059 B7C2  
                                       u11251 A798                                         u11411 D91A  
                                       u10540 D092                                         u10460 CF24  
                                       u10700 DFEC                                         u10620 DDB6  
                                       u10380 E58A                                         u11180 D506  
                                       u11260 B0D0                                         u11420 D97E  
                                       u10541 D08E                                         u10461 CF20  
                                       u10365 C49C                                         u10701 DFE8  
                                       u10621 DDB2                                         u10381 E586  
                                       u11181 D502                                         u11261 B0CC  
                                       u11421 D97A                                         u10550 D0A4  
                                       u10470 CF42                                         u10710 E020  
                                       u10630 DDF2                                         u10390 E5CE  
                                       u11190 D53A                                         u11078 B7DA  
                                       u11270 B0EE                                         u10551 D0A0  
                                       u10471 CF3E                                         u10367 C48E  
                                       u10711 E01C                                         u10631 DDEE  
                                       u10391 E5CA                                         u11191 D536  
                                       u11079 B7EE                                         u11271 B0EA  
                                       ?_xtoa 0019                                         u10560 D0B6  
                                       u10480 CF56                                         u10720 E052  
                                       u10640 DE5C                                         u10800 B072  
                                       u11280 B10A                                         u10561 D0B0  
                                       u10481 CF52                                         u10377 C4C8  
                                       u10721 E04E                                         u10641 DE58  
                             __end_of___llmod B39C                                         u11281 B106  
                                       u10570 D0B8                                         u10490 CF6A  
                                       u10730 E080                                         u10650 DE9A  
                                       u10810 B0A4                                         u11370 D760  
                                       _U1P1H 3DED                                         u10491 CF66  
                                       u10731 E07C                                         u10651 DE96  
                                       u11371 D75C                                         u10740 E098  
                                       u10660 DEF8                                         u10820 B0B4  
                                       u10580 AADA                                         u10900 C630  
                                       u11380 D7DC                                         _U1P2H 3DEF  
                                       u10741 E094                                         u10661 DEF4  
                                       u10821 B0B0                                         u10581 AAD6  
                                       u10901 C62C                                         u11437 A730  
                                       u11381 D7D8                                         u10750 E0AC  
                                       u10670 DF26                                         u10590 DD60  
                                       u10910 C640                                         u10830 A81E  
                                       u11390 D7F0                                         _U1P3H 3DF1  
                                       _U1P1L 3DEC                                         u10751 E0A8  
                                       u10671 DF22                                         u10591 DD5C  
                                       u10807 B064                                         u10911 C63C  
                                       u11447 A674                                         u10831 A81A  
                                       u11391 D7EC                                         u10840 A974  
                                       u10760 E0F4                                         u10680 DF56  
                                       u10920 C64E                                         _U1P2L 3DEE  
                                       u10841 A970                                         u10761 E0F0  
                                       u10681 DF52                                         u10817 B096  
                                       u10921 C64A                                         u10770 E10C  
                                       u10690 DFBA                                         u10930 C688  
                                       u10850 C508                                         _U1P3L 3DF0  
                                       u10771 E108                                         u10691 DFB6  
                                       u10931 C684                                         u10851 C504  
                                       u10780 B14E                                         u10940 C696  
                                       u10860 C516                                         u10781 B14A  
                                       u10941 C692                                         u10861 C512  
                                       u10950 BBD0                                         u10790 B19E  
                                       u10870 C572                                         u10951 BBCC  
                                       u10791 B19A                                         u10871 C56E  
                                       u10960 BBFE                                         u10880 C5C8  
                                       u10961 BBFA                                         u10881 C5C4  
                                       u10970 BC1A                                         u10890 C612  
                                       u10971 BC16                                         u10891 C60E  
                                       u10980 BC2C                                         u10981 BC28  
                                       u10990 ADD4                                         u10991 ADD0  
                      I2C1_ReadNBytes@address 001A                               __end_of___lwdiv B12A  
                                       _U1UIR 3DF8                                         _U1RXB 3DE8  
                                       _U1TXB 3DEA                    __end_of_i2c1_fsmStateTable FE15  
                                       _OSCEN 39DD                                  vfpfcnvrt@fmt 008D  
                                       _TRISA 3FC2                                         _TRISB 3FC3  
                                       _TRISC 3FC4                                         _TRISD 3FC5  
                                       _TRISE 3FC6                        ??_I2C1_MasterGetRxData 0001  
                       ?_I2C1_DO_RX_NACK_STOP 0001                           ___lmul@multiplicand 0005  
                           ??_I2C1_MasterRead 0017                    ??_I2C1_CallbackReturnReset 000C  
                           ??_I2C1_MasterOpen 0001                             ??_I2C1_MasterStop 0001  
                           ??_I2C1_Initialize 0001                     ?_I2C1_MasterIsNackFlagSet 0001  
                  ??_ReadAndSendEEPROMDataCSV 005C                                         _fgetc BF4A  
                                       _flags 00CA                                 ?_MPU6050_Init 0001  
                                       _getch A1DC                           read_prec_or_width@c 0009  
                                       _errno 00BF                           read_prec_or_width@n 000A  
                                       _fputc BAB6                                         _fputs A79E  
                    ??_MPU6050_ReadSensorData 002E                                         labs@a 0001  
                                       pad@fp 0011                                         _width 00C1  
                                       _putch A230                                         atou@c 0059  
                                       atou@i 0057                        ?_ReadAndSendEEPROMData 00AF  
                                       atou@w 0055                        I2C1_ReadDataBlock@data 0018  
                            ?_UART_SendString 0002              __end_of_I2C1_MasterClearNackFlag A1AC  
                                       pclath 3FFA                                         tablat 3FF5  
                      LoadLastSettings@buffer 0029                               __end_of_vfscanf BC42  
                                       utoa@d 001A                                         utoa@i 0022  
                                       utoa@p 0020                                         utoa@w 001E  
                                       status 3FD8                               __end_of_sprintf A930  
                              ?___fpclassifyf 0001                                  ??_I2C1_DO_RX 000F  
                                       xtoa@c 0026                                  ??_I2C1_DO_TX 000D  
                                       xtoa@d 001A                                         xtoa@i 0027  
                                       xtoa@p 0024                                         xtoa@w 0022  
                   _I2C1_MasterClearCountFlag A1A0                               __end_of_strncmp C4F6  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler A18E  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler A18C                        ??_I2C1_DO_ADDRESS_NACK 000D  
                           _dbuf@doscan$F2284 0374                                  ??_I2C1_Close 0001  
       LoadCurrentAddressEEPROM@addressBuffer 002B        StoreCurrentAddressEEPROM@addressBuffer 002A  
                   ?_LoadCurrentAddressEEPROM 0001                EEPROM_WriteBlock@deviceAddress 0028  
                    fp__rd1RegCompleteHandler 0000                               __initialization A5C6  
                 ReadAllEEPROMDataCSV@ax_read 01E4                   ReadAllEEPROMDataCSV@ay_read 01E8  
                 ReadAllEEPROMDataCSV@az_read 01EC                                  __end_of_labs ABE0  
                                __end_of_atou D0CA                                  __end_of_main D99E  
                    fp__wr1RegCompleteHandler 0000                              _LoadLastSettings AA06  
                                __end_of_utoa C174                                  __end_of_xtoa C3BA  
                 ReadAllEEPROMDataCSV@gx_read 01F0                   ??_UART1_DefaultErrorHandler 0001  
                 ReadAllEEPROMDataCSV@gy_read 01F4                    ?_I2C1_MasterDisableRestart 0001  
                                vfsfcnvrt@fmt 005C                   ReadAllEEPROMDataCSV@gz_read 01F8  
                                vfsfcnvrt@llu 0063                      __end_of_EEPROM_ReadBlock A976  
                I2C1_MasterSetCounter@counter 0001                                  ?_UART1_Write 0001  
            __end_of_I2C1_MasterClearStopFlag A1B2                  fp__I2C1_DO_SEND_RESTART_READ 0000  
                                      ??_labs 0005                        ??_I2C1_MasterOperation 0015  
                                      ??_atou 004B                                        ??_main 005E  
                                      ??_utoa 001E                                        ??_xtoa 001E  
                               __activetblptr 0003                    __end_of_read_prec_or_width BAB6  
                          __end_of_I2C1_DO_RX B4CA                            __end_of_I2C1_DO_TX C296  
                            _UART1_Initialize AE90                                ??_MPU6050_Init 001A  
                          __end_of_I2C1_Close A516                      __end_of_I2C1_WriteNBytes AC38  
                                      ?_fgetc 0003                                        ?_getch 0001  
                                      ?_fputc 0003                              ___llmod@dividend 0001  
                                      ?_fputs 000B                                        _ANSELA 3A40  
                                      ?_putch 0001                                        _ANSELB 3A50  
                                      _ANSELC 3A60                                        _ANSELD 3A70  
                                      _ANSELE 3A80                                        _RB1I2C 3A5A  
                                      _RB2I2C 3A5B                                        _RD0I2C 3A7A  
                                      _U1CON0 3DF2                                        _U1CON1 3DF3  
                                      _U1CON2 3DF4                                        _RD1I2C 3A7B  
                                      _RC3I2C 3A6A                                        _RC4I2C 3A6B  
                                      _U1BRGH 3DF6                                        _U1FIFO 3DF7  
                                      _U1BRGL 3DF5                                        _RB1PPS 3A09  
                                      _RB2PPS 3A0A                                        _ODCONA 3A42  
                                      _ODCONB 3A52                                        _RC6PPS 3A16  
                                      _ODCONC 3A62                                        _ODCOND 3A72  
                                      _ODCONE 3A82                                        _INLVLA 3A44  
                                      _INLVLB 3A54                                        _INLVLC 3A64  
                                      _INLVLD 3A74                                        _INLVLE 3A84  
                     ??_I2C1_MasterGetCounter 0001                                        _OSCFRQ 39DF  
                           ?_I2C1_MasterClose 0001                 EEPROM_WriteByte@deviceAddress 001F  
                       _UART1_SetErrorHandler A23A                              __end_of___xxtofl C6AA  
                            _I2C1_DO_RX_EMPTY B568                       ??_I2C1_MasterDisableIrq 0001  
                           ?_I2C1_MasterWrite 0001                      ?_I2C1_MasterWaitForEvent 0001  
                          ??_I2C1_MasterClose 0001                              _I2C1_DO_TX_EMPTY B21A  
                          ParseUserInput@Ndat 0091         ReadAndSendEEPROMData@eepromReadBuffer 01C8  
                          ??_I2C1_MasterWrite 0017                                  vfprintf@cfmt 004D  
                                ___strtoxll@a 003E                                  ___strtoxll@c 0048  
                                ___strtoxll@s 0019                      ?_I2C1_Write1ByteRegister 0017  
                                      ___flge BD40                                        ___fleq B7F4  
                                      ___lmul AEFA                                        ___omul B4CA  
                                   ??___fladd 0009                                        ___wmul A4C0  
                                   ??___fldiv 0017                                     ??___flneg 0005  
                                   ??___flmul 0009                                     ??___flsub 0022  
                                   ??___fltol 0005                                     ??___lldiv 0009  
                                   ??___llmod 0009                        ReadAndSendEEPROMData@i 01E0  
                                      _efgtoa F3FC                                     ??___lwdiv 0005  
                                      _floorf CC8C                                        _memcpy AC38  
                        read_prec_or_width@ap 0008             __end_of_I2C1_MasterDisableRestart A1B8  
                                      _memset A760                             ??_EEPROM_ReadByte 001D  
                                      clear_0 A5CC                                        clear_1 A5D8  
                                      clear_2 A5E4                                        _nmatch 00B9  
                                      fgetc@c 000A                                        isa$std 0001  
                                      _sscanf A864                      __end_of_EEPROM_WriteByte A67E  
                                      pad@buf 0012                                        _skipws AE26  
                                      _ungetc B60A                                        atou@ep 0053  
                                      atou@fp 0049                      ??_I2C1_DO_SEND_ADR_WRITE 0001  
                                      _strcpy A8A8                             ??_custom_delay_ms 0005  
                           ?_I2C1_SetCallback 0001                        ??_I2C1_DO_RX_NACK_STOP 0001  
                     ??_I2C1_DO_BUS_COLLISION 000D                        EEPROM_WriteByte@buffer 0020  
                       _I2C1_DO_SEND_ADR_READ A5F2                                        fputc@c 0003  
                              _PMD_Initialize A450                                        fputs@c 000E  
                                      fputs@i 000F                                        fputs@s 000B  
               ?_I2C1_SetDataCompleteCallback 0006                               ___fpclassifyf@e 0009  
                             ___fpclassifyf@u 000B                               ___fpclassifyf@x 0001  
                          ??_I2C1_SetCallback 0005                                  __mediumconst FDEE  
                EEPROM_ReadByte@deviceAddress 001F                                        tblptrh 3FF7  
                                      tblptrl 3FF6                                        tblptru 3FF8  
                __end_of_ReadAllEEPROMDataCSV C89C                                     ??_vfscanf 005E  
                            __end_of_vfprintf AAE6                                        utoa@fp 0019  
                            ___strtoxll@flags 003D          __end_of_UART1_SetOverrunErrorHandler A258  
                _UART1_SetOverrunErrorHandler A24E                     _UART1_DefaultErrorHandler A18A  
                                   ??_sprintf 004F                              ___strtoxll@limit 0035  
                               main@userInput 04C8                                        xtoa@fp 0019  
                                   ??_strncmp 0007                       _I2C1_DO_RX_NACK_RESTART A1FA  
                  fp__I2C1_DO_RX_NACK_RESTART 0000                           I2C1_WriteNBytes@len 0018  
                                  ___flge@ff1 001A                                    ___flge@ff2 001E  
                             ??___fpclassifyf 0005                                  ___xxtofl@arg 000B  
                                ___xxtofl@exp 000A                             _SYSTEM_Initialize A356  
                                ___xxtofl@val 0001                                    ___fleq@ff1 0001  
                                  ___fleq@ff2 0005                I2C1_SetDataCompleteCallback@cb 0006  
                                  __accesstop 0060                       __end_of__initialization A5EC  
                                  ___flneg@f1 0001               I2C1_MasterOperation@returnValue 0016  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 0001  
                   ReadAndSendEEPROMDataCSV@i 01E0                                    ___fltol@f1 0001  
                    _I2C1_MasterClearNackFlag A1A6                     ReadAndSendEEPROMData@Ndat 00AF  
                               ??_I2C1_Poller 0015                       _rdBlkRegCompleteHandler A9BC  
                  fp__rdBlkRegCompleteHandler 0000                                __pcstackCOMRAM 0001  
                         ??_SYSTEM_Initialize 0003              __end_of_I2C1_MasterEnableRestart A1BE  
                               __end_of_fgetc C05A                                 __end_of_getch A1E2  
                               __end_of_fputc BB7A                                 __end_of_fputs A7DE  
            UART_ReceiveString@receivedString 0001                                 __end_of_putch A23A  
         StartLogging@startReadAddressEEPROM1 0200           StartLogging@startReadAddressEEPROM2 0204  
                     ??_I2C1_MasterSetCounter 0001                        __end_of_PMD_Initialize A474  
                ??_I2C1_DO_SEND_RESTART_WRITE 0001                       ??_I2C1_MasterSendTxData 0001  
                                  ___ungetbuf 021C                                    ___ungetcnt 005E  
                  ?_I2C1_MasterIsCountFlagSet 0001                     _UART1_FramingErrorHandler 0221  
                    _I2C1_MasterClearStopFlag A1AC                         __end_of_I2C1_DO_RESET A29C  
                                  ___strtoxll EE70                   ??_StoreCurrentAddressEEPROM 002A  
                           _I2C1_DO_BUS_ERROR A29C                                       ??_fgetc 0005  
                                     ??_getch 0003                            _width@doscan$F2281 00BD  
                                     ??_fputc 0006                     __end_of_SYSTEM_Initialize A36C  
                                     ??_fputs 000E                                       ??_putch 0002  
                   ?_I2C1_ClearInterruptFlags 0001                                    __pbssBANK0 00B9  
                                  __pbssBANK2 0214                                    __pbssBANK3 0300  
                          ?_I2C1_DO_BUS_ERROR 0001               __end_of_I2C1_MasterWaitForEvent ACEE  
               ?_UART1_SetOverrunErrorHandler 0001                        ?_UART1_SetErrorHandler 0001  
               __end_of_rd2RegCompleteHandler A59A                          I2C1_Open@returnValue 0002  
               __end_of_wr2RegCompleteHandler A542               __end_of_I2C1_Write1ByteRegister AE26  
                       _rd1RegCompleteHandler A542                    __end_of_I2C1_ReadDataBlock B1A0  
                             _I2C1_ReadNBytes A820                           ??_I2C1_DO_BUS_ERROR 0001  
                           _I2C1_DO_SEND_STOP A498                         _wr1RegCompleteHandler A59A  
                    rd1RegCompleteHandler@ptr 000A                             _StartLogging$1474 0208  
                           _StartLogging$1476 020C                                 fp__I2C1_DO_RX 0000  
                               fp__I2C1_DO_TX 0000                               fp__I2C1_DO_IDLE 0000  
                                     ?___flge 001A                                       ?___fleq 0001  
                     fp__I2C1_DO_ADDRESS_NACK 0000                                       ?___lmul 0001  
                          ?_I2C1_DO_SEND_STOP 0001                          __end_of_MPU6050_Init A2BC  
                                     ?___omul 0001                                  ??_UART1_Read 0001  
                                     _I2C1CLK 3D7B                                       _I2C1CNT 3D6C  
                                     _I2C1ERR 3D76                                       _I2C1PIE 3D7A  
                                     ?___wmul 0001                                       _I2C1PIR 3D79  
                                     _I2C1RXB 3D6A                                       _I2C1TXB 3D6B  
            __end_of_I2C1_MasterIsNackFlagSet A2E8                        _MPU6050_ReadSensorData D0CA  
             ReadAndSendEEPROMDataCSV@ax_read 01E4                               _I2C1_MasterRead A202  
             ReadAndSendEEPROMDataCSV@ay_read 01E8                               _I2C1_MasterOpen A620  
                                     ?_efgtoa 003C                           main@totalLoggedData 04DC  
             ReadAndSendEEPROMDataCSV@az_read 01EC                       _I2C1_MasterIsTxBufEmpty A32A  
                             _I2C1_MasterStop A1D0                               _I2C1_Initialize A40A  
                         __end_of_I2C1_Poller A40A                                       ?_floorf 0028  
                                     ?_memcpy 0001                                       ?_memset 0001  
                         ___omul@multiplicand 0009                                ___lmul@product 0009  
             ReadAndSendEEPROMDataCSV@gx_read 01F0               ReadAndSendEEPROMDataCSV@gy_read 01F4  
             ReadAndSendEEPROMDataCSV@gz_read 01F8                             fp__I2C1_DO_RX_ACK 0000  
                           fp__I2C1_DO_TX_ACK 0000                                       ?_sscanf 0079  
                             ?_PMD_Initialize 0001                                       ?_skipws 000C  
                                     ?_ungetc 0001                        ?_I2C1_DO_SEND_ADR_READ 0001  
                         ??_I2C1_DO_SEND_STOP 0002                                       ?_strcpy 0001  
                                     _U1ERRIE 3DFA                                       _U1ERRIR 3DF9  
                                     _U1RXPPS 3AE5                                     ?___xxtofl 0001  
                   __end_of_I2C1_DO_BUS_ERROR A2AC                             _I2C1_MasterIsNack A314  
           __end_of_I2C1_MasterIsCountFlagSet A2D2                                       _OSCCON1 39D9  
                                     _OSCCON3 39DB                                     _I2C1_Open B39C  
                     ??_ReadAndSendEEPROMData 005C                     ??_I2C1_DO_RX_NACK_RESTART 0001  
                                     _OSCTUNE 39DE                                       _SLRCONA 3A43  
                                     _SLRCONB 3A53                                       _SLRCONC 3A63  
                                     _SLRCOND 3A73                                       _SLRCONE 3A83  
                       I2C1_DO_RX@retFsmState 0011                            ?_I2C1_MasterIsNack 0001  
            __end_of_LoadCurrentAddressEEPROM A726                    ?_I2C1_DO_SEND_RESTART_READ 0001  
                    __end_of_LoadLastSettings AA50                ??_I2C1_SetDataCompleteCallback 000A  
              ReadAndSendEEPROMDataCSV@buffer 0100                            __end_of_UART1_Read B7F4  
                          _i2c1_fsmStateTable FDEF                           ??_I2C1_MasterIsNack 0001  
                   __end_of_I2C1_DO_SEND_STOP A4C0                     ??_rdBlkRegCompleteHandler 000C  
                          I2C1_SetCallback@cb 0001                                       __Hparam 0000  
                                     __Lparam 0000                           ParseUserInput@input 008E  
                    __end_of_UART1_Initialize AEFA                            UART_SendString@str 0002  
                   _StoreCurrentAddressEEPROM A474                           fp__I2C1_DO_RX_EMPTY 0000  
                 main@startReadAddressEEPROM1 04E0                   main@startReadAddressEEPROM2 04E4  
                               ___strtoxll@cp 0046                                       ___fladd E9B0  
                                     ___fldiv D99E                           fp__I2C1_DO_TX_EMPTY 0000  
                                     ___flneg A6B4                          _ReadAllEEPROMDataCSV C6AA  
                   ?_I2C1_MasterIsStopFlagSet 0001                                       ___flmul E112  
                                     ___flsub A976                                       ___fltol BE44  
                                     ___lldiv B6AC                                       ___llmod B314  
                                     ___lwdiv B0B6                                     ?_vfprintf 008F  
                 ??_I2C1_MasterDisableRestart 0001                                       __pcinit A5C6  
                               ?_I2C1_DO_IDLE 0001                                       __ramtop 1000  
                  __end_of_UART_ReceiveString B9F8                             ?_EEPROM_ReadBlock 0021  
                                     __ptext0 D672                                       __ptext1 A760  
                                     __ptext2 B0B6                                       __ptext3 B948  
                                     __ptext4 B750                                       __ptext5 A18E  
                                     __ptext6 A18C                                       __ptext7 A18A  
                                     __ptext8 AA50                                       __ptext9 D382  
                    _I2C1_MasterEnableRestart A1B8                     __end_of_I2C1_MasterIsNack A32A  
                ?_I2C1_SetAddressNackCallback 0006                      __end_of_I2C1_DO_RX_EMPTY B60A  
                       _OSCILLATOR_Initialize A39C                            ??_EEPROM_ReadBlock 0026  
               EEPROM_ReadBlock@memoryAddress 0021                         read_prec_or_width@fmt 0007  
                                 _I2C1ERRbits 3D76                                    ??___xxtofl 0005  
                    __end_of_I2C1_DO_TX_EMPTY B296                                       _logging 00CB  
                    ??_I2C1_MasterIsRxBufFull 0001                      ??_PIN_MANAGER_Initialize 0001  
                                 _I2C1PIEbits 3D7A                      wr1RegCompleteHandler@ptr 000A  
                                  ?_I2C1_Open 0001                                       fgetc@fp 0003  
                                     efgtoa@c 0041                                       efgtoa@d 006B  
                                     efgtoa@e 006F                                       efgtoa@f 003D  
                                     efgtoa@g 0082                                       efgtoa@h 0079  
                                     efgtoa@i 0077                                       efgtoa@l 007D  
                                     efgtoa@m 006D                                       efgtoa@n 0086  
                                     efgtoa@p 0062                                       efgtoa@t 0064  
                                     efgtoa@u 0088                                       efgtoa@w 0071  
                                 ?___strtoxll 0019                                   _I2C1PIRbits 3D79  
                                _eepromBuffer 0394                       fp__I2C1_DO_RX_NACK_STOP 0000  
                                     _vfscanf BB7A                      ?_I2C1_CallbackReturnStop 000A  
                           ?_I2C1_WriteNBytes 0017                                       _sprintf A8EC  
                                     atou@pll 004A                                       _strncmp C3BA  
           __end_of_I2C1_DO_SEND_RESTART_READ A27E                          end_of_initialization A5EC  
                  __end_of_I2C1_MasterSendAck A1CA                       __end_of_I2C1_ReadNBytes A864  
                                     floorf@e 0036                                       floorf@m 0032  
                                     floorf@u 0038                                       floorf@x 0028  
                         _I2C1_MasterClearIrq A1E2                            ??_I2C1_WriteNBytes 001A  
                              ___omul@product 0011                                       memcpy@d 0008  
                                     memcpy@n 0005                                       memcpy@s 000A  
                                     fputc@fp 0005                                       memset@c 0003  
                                     memset@n 0005                                       memset@p 0007  
                                     fputs@fp 000D                        ?_rd1RegCompleteHandler 000A  
                      _I2C1_DO_SEND_ADR_WRITE A340                            _read_prec_or_width B9F8  
               __end_of_I2C1_MasterGetCounter A1DC                               _EEPROM_ReadByte A67E  
                __end_of_I2C1_DO_SEND_RESTART A1A0                       __end_of_I2C1_MasterRead A20A  
                     __end_of_I2C1_MasterOpen A64E                        ?_wr1RegCompleteHandler 000A  
                     __end_of_I2C1_MasterStop A1D6                ??_UART1_SetOverrunErrorHandler 0003  
                     __end_of_I2C1_Initialize A42C                               ___lldiv@divisor 0005  
                                 _I2C1_Poller A3EC                               ___lldiv@counter 000D  
                   ?_I2C1_CallbackReturnReset 000A                 __end_of_I2C1_MasterDisableIrq A3EC  
                                 _I2C1_Status 0300                               _custom_delay_ms A726  
                   ??_I2C1_MasterIsTxBufEmpty 0001                      fp__rd2RegCompleteHandler 0000  
                   ?_ReadAndSendEEPROMDataCSV 00AF                             __end_of_vfpfcnvrt E9B0  
                                  efgtoa@mode 0069                                    efgtoa@sign 0081  
                                     sscanf@f 0082                                       sscanf@s 0079  
                                     skipws@c 000E                         ?_ReadAllEEPROMDataCSV 00AF  
                           __end_of_vfsfcnvrt E112                                       postdec2 3FDD  
                         ?_read_prec_or_width 0007                                       ungetc@c 0001  
                    fp__wr2RegCompleteHandler 0000                                       postinc0 3FEE  
                                     postinc1 3FE6                                       postinc2 3FDE  
                   I2C1_ReadDataBlock@address 001B                              vfpfcnvrt@convarg 0046  
                         _I2C1_MasterSendNack A1CA           __end_of_I2C1_SetAddressNackCallback A39C  
                 _I2C1_SetAddressNackCallback A384          ReadAllEEPROMDataCSV@readBlockEEPROM1 01FC  
    ReadAndSendEEPROMDataCSV@readBlockEEPROM1 01FC          ReadAllEEPROMDataCSV@readBlockEEPROM2 01FE  
    ReadAndSendEEPROMDataCSV@readBlockEEPROM2 01FE                                    ??_vfprintf 004D  
                        ?_I2C1_MasterClearIrq 0001                                ??_I2C1_DO_IDLE 0001  
                         _I2C1_MasterResetBus A212                             ___strtoxll@endptr 001B  
                           UART1_Write@txData 0001            __end_of_I2C1_DO_SEND_RESTART_WRITE A19C  
                  _I2C1_DO_SEND_RESTART_WRITE A198                                 ?_StartLogging 0001  
                                     strcpy@d 0005                             ___strtoxll@prev_a 0029  
             __end_of_rdBlkRegCompleteHandler AA06                             ?_EEPROM_WriteByte 001B  
                    _I2C1_MasterIsNackFlagSet A2D2                          I2C1_WriteNBytes@data 0017  
                                 ___fladd@grs 0010                 ??_I2C1_SetAddressNackCallback 000A  
                          ??_EEPROM_WriteByte 001E                                 ___xxtofl@sign 0009  
               __end_of_I2C1_DO_BUS_COLLISION AFD4               I2C1_SetDataCompleteCallback@ptr 0008  
                 I2C1_Write1ByteRegister@data 0018                            vfscanf@saved_errno 0073  
                        ??_read_prec_or_width 0009                                   ___fldiv@grs 0022  
                                 ___fldiv@rem 001B                I2C1_CallbackReturnReset@funPtr 000A  
                  ??_I2C1_MasterClearNackFlag 0001                          ?_I2C1_MasterSendNack 0001  
                          EEPROM_WriteBlock@i 0029                     _I2C1_MasterDisableRestart A1B2  
                        ?_I2C1_MasterResetBus 0001                                   ___flmul@grs 000F  
                  rdBlkRegCompleteHandler@ptr 000A                      _LoadCurrentAddressEEPROM A6EC  
                                  main@buffer 0400                   custom_delay_ms@milliseconds 0001  
                                 vfscanf@cfmt 0077                         ??_I2C1_MasterClearIrq 0001  
                     StoreLastSettings@buffer 002A                                __end_of___flge BE44  
                              ??_StartLogging 00B7                                __end_of___fleq B89E  
                            I2C1_DO_TX@dataTx 000F                    ??_I2C1_MasterClearStopFlag 0001  
                              __end_of___lmul AF64                                __end_of___omul B568  
                                 vfpfcnvrt@ap 008E                                   vfpfcnvrt@cp 004B  
                                 vfpfcnvrt@fp 008C                                __end_of___wmul A4EA  
                              _I2C1_DO_RX_ACK A1F2                                _I2C1_DO_TX_ACK A1EA  
                              __end_of_efgtoa FDEE              __end_of_I2C1_ClearInterruptFlags AB38  
                              __end_of_floorf CE9E                                __end_of_memcpy AC92  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F521 0214  
                              __end_of_memset A79E               __end_of_I2C1_CallbackReturnStop A194  
               __end_of_I2C1_MasterSetCounter A226                                __end_of_sscanf A8A8  
                              __end_of_skipws AE90                                __end_of_ungetc B6AC  
               __end_of_I2C1_MasterSendTxData A230                                __end_of_strcpy A8EC  
                 ??_I2C1_MasterIsCountFlagSet 0001                           start_initialization A5C6  
                                 ??_I2C1_Open 0001                                   __end_of_pad AD54  
                     ??_UART1_SetErrorHandler 0003                         ??_I2C1_MasterSendNack 0001  
                                 vfsfcnvrt@ap 005D                                   vfsfcnvrt@fp 005B  
                                 vfsfcnvrt@vp 0062                                  _MPU6050_Init A2AC  
                       ??_I2C1_MasterResetBus 0001                       __end_of_EEPROM_ReadByte A6B4  
                                 putch@txData 0002                              ?_I2C1_ReadNBytes 0017  
                 UART_ReceiveString@maxLength 0003                       __end_of_custom_delay_ms A760  
                       __end_of___fpclassifyf BD40                             ___omul@multiplier 0001  
                             ___llmod@divisor 0005                               ___llmod@counter 0009  
                    I2C1_SetBuffer@bufferSize 0003                              ?_I2C1_MasterRead 0001  
                            ?_I2C1_MasterOpen 0001                              ?_I2C1_MasterStop 0001  
              I2C1_Write1ByteRegister@address 0019                              ?_I2C1_Initialize 0001  
                     ?_MPU6050_ReadSensorData 0028                        ??_ReadAllEEPROMDataCSV 005C  
                             ___strtoxll$2338 0031                               ___strtoxll$2339 0033  
                                 vfprintf@fmt 0090                                      ??___flge 0022  
                                    ??___fleq 0009                              ??_PMD_Initialize 0001  
                                    ??___lmul 0009                                      ??___omul 0011  
                      __end_of_I2C1_DO_RX_ACK A1FA                                      ??___wmul 0005  
                      __end_of_I2C1_DO_TX_ACK A1F2                       ??_I2C1_DO_SEND_ADR_READ 0001  
                                    ??_efgtoa 0042                                _ParseUserInput AFD4  
                                    ??_floorf 002C                                      ??_memcpy 0007  
                                    ??_memset 0007                             ??_UART_SendString 0004  
                                  memset@dest 0001                                      ??_sscanf 005E  
                                    ??_skipws 000D                               ___strtoxll@base 001C  
                                    ??_ungetc 0004                            _I2C1_ReadDataBlock B12A  
                                    ??_strcpy 0005                              I2C1_Open@address 0001  
                                   ___fladd@a 0005                                     ___fladd@b 0001  
                                   ___fldiv@a 0013                                     ___fldiv@b 000F  
                                   ___flmul@a 0005                                     ___flmul@b 0001  
                                 __pbssCOMRAM 005E                          _I2C1_DO_SEND_RESTART A19C  
                                   ___flsub@a 001E                                     ___flsub@b 001A  
                          _UART1_ErrorHandler 03AC                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0100                                 __pcstackBANK2 0200  
                               __pcstackBANK4 0400                           ?_I2C1_ReadDataBlock 0017  
               __end_of_ReadAndSendEEPROMData CA8E                   ??_I2C1_DO_SEND_RESTART_READ 0002  
                       I2C1_DO_TX@retFsmState 0010                             ?_LoadLastSettings 0001  
                 ReadAndSendEEPROMData@buffer 0100              __end_of_I2C1_MasterIsStopFlagSet A2FE  
                    fp__I2C1_DO_BUS_COLLISION 0000                          __end_of_I2C1_DO_IDLE A270  
                          ??_LoadLastSettings 0029                  fp__UART1_DefaultErrorHandler 0000  
               I2C1_SetAddressNackCallback@cb 0006                __end_of_MPU6050_ReadSensorData D382  
                                   __pnvBANK2 021F                                     __pnvBANK3 03AC  
                   _I2C1_MasterIsCountFlagSet A2BC                         _rd2RegCompleteHandler A56E  
                   fp__I2C1_DO_SEND_ADR_WRITE 0000                                   _efgtoa$2113 0066  
                      _I2C1_MasterIsRxBufFull A2FE                                     _main$1534 04E8  
                                   _main$1536 04EC                              ___lwdiv@dividend 0001  
                      _PIN_MANAGER_Initialize B89E                         _wr2RegCompleteHandler A516  
                  ??_I2C1_MasterEnableRestart 0001                          ??_I2C1_ReadDataBlock 001B  
                           ?_UART1_Initialize 0001                      rd2RegCompleteHandler@ptr 000A  
                      __end_of_ParseUserInput B044          __end_of_UART1_SetFramingErrorHandler A24E  
                _UART1_SetFramingErrorHandler A244                                _I2C1_MasterFsm B1A0  
                               __pmediumconst FDEE                              fp__I2C1_DO_RESET 0000  
                                    ?___fladd 0001                               ?_I2C1_DO_RX_ACK 0001  
                                    ?___fldiv 000F                                     __ptext100 B21A  
                                   __ptext101 B42C                                     __ptext110 A1D0  
                                   __ptext102 C174                                      ?___flneg 0001  
                                   __ptext111 A1CA                                     __ptext103 A340  
                                   __ptext120 A194                                     __ptext112 A1C4  
                                   __ptext104 A5F2                                     __ptext121 A190  
                                   __ptext113 A2FE                                     __ptext105 A264  
                                   __ptext130 AAE6                                     __ptext122 A9BC  
                                   __ptext114 A1BE                                     __ptext106 A1EA  
                                   __ptext131 A2E8                                     __ptext123 A59A  
                                   __ptext115 A226                                     __ptext107 A32A  
                                   __ptext140 A1E2                                     __ptext132 A2D2  
                                   __ptext124 A56E                                     __ptext116 A21C  
                                   __ptext108 A314                                     __ptext141 0000  
                                   __ptext133 A2BC                                     __ptext125 A542  
                                   __ptext117 A1B8                                     __ptext109 A1D6  
                                   __ptext134 A1AC                                     __ptext126 A516  
                                   __ptext118 A1B2                                     __ptext135 A1A6  
                                   __ptext127 A36C                                     __ptext119 A212  
                                   __ptext136 A1A0                                     __ptext128 B296  
                                   __ptext137 A4EA                                     __ptext129 A42C  
                                   __ptext138 A3CE                                     __ptext139 A258  
                             ?_I2C1_DO_TX_ACK 0001                                      ?___flmul 0001  
                                    ?___flsub 001A                                      ?___fltol 0001  
                                    ?___lldiv 0001                                      ?___llmod 0001  
                                    ?___lwdiv 0001                            ??_UART1_Initialize 0003  
                                    _I2C1CON0 3D73                                      _I2C1CON1 3D74  
                                    _I2C1CON2 3D75                              _uart1RxLastError 00CC  
                               ??_UART1_Write 0001                       _I2C1_MasterWaitForEvent AC92  
                            _I2C1_MasterClose A258                                _I2C1_SetBuffer A42C  
                            _I2C1_MasterWrite A20A                       _I2C1_Write1ByteRegister ADBC  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler A190  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler A18E                         ?_I2C1_DO_SEND_RESTART 0001  
                           ?_I2C1_DO_RX_EMPTY 0001             __end_of_StoreCurrentAddressEEPROM A498  
                    _I2C1_ClearInterruptFlags AAE6                             ?_I2C1_DO_TX_EMPTY 0001  
                                ??___strtoxll 0021                            ??_I2C1_DO_RX_EMPTY 000D  
                                    ?_vfscanf 006F              __end_of_I2C1_CallbackReturnReset A198  
                            ___lwdiv@quotient 0006                            ??_I2C1_DO_TX_EMPTY 000D  
               I2C1_ReadDataBlock@bufferBlock 001C                                      ?_sprintf 0093  
            __end_of_ReadAndSendEEPROMDataCSV CC8C                       ??_rd1RegCompleteHandler 000C  
                                    ?_strncmp 0001                                   _U1ERRIRbits 3DF9  
                     ?_I2C1_DO_SEND_ADR_WRITE 0001                            _UART_ReceiveString B948  
                            ?_EEPROM_ReadByte 001B                     I2C1_MasterSendTxData@data 0001  
                                  _I2C1SDAPPS 3AE2                          __end_of_StartLogging D672  
                                  _I2C1SCLPPS 3AE1                       ??_wr1RegCompleteHandler 000C  
                            ?_custom_delay_ms 0001                              _I2C1_SetCallback B296  
                              ___wmul@product 0005         UART1_SetErrorHandler@interruptHandler 0001  
                                  _I2C1_DO_RX B42C                                    _I2C1_DO_TX C174  
                                    _PIE2bits 3992                           ?_UART_ReceiveString 0001  
                                    _PIE3bits 3993                                    _I2C1_Close A4EA  
                                ?_I2C1_Poller 0001                        __end_of_I2C1_MasterFsm B21A  
                        fp__I2C1_DO_BUS_ERROR 0000                  __end_of_I2C1_MasterGetRxData A1C4  
                               _I2C1STAT1bits 3D78                                      _PIR2bits 39A2  
                                    _PIR3bits 39A3                    ??_I2C1_MasterIsNackFlagSet 0001  
                          _I2C1_MasterSendAck A1C4                               ?_ParseUserInput 008E  
                   _I2C1_DO_SEND_RESTART_READ A270                            __end_of___strtoxll F3FC  
                      __end_of_I2C1_SetBuffer A450          ReadAllEEPROMDataCSV@eepromReadBuffer 01C8  
    ReadAndSendEEPROMDataCSV@eepromReadBuffer 01C8                 ?_UART1_SetFramingErrorHandler 0001  
        __end_of_I2C1_SetDataCompleteCallback A384                  _I2C1_SetDataCompleteCallback A36C  
              EEPROM_WriteBlock@memoryAddress 0023                                     _vfpfcnvrt E560  
                 ?_I2C1_DO_SEND_RESTART_WRITE 0001                                     _vfsfcnvrt DD38  
                  I2C1_Write1ByteRegister@reg 0017                           ?_I2C1_MasterSendAck 0001  
                           ___wmul@multiplier 0001                      ?_I2C1_DO_RX_NACK_RESTART 0001  
                        fp__I2C1_DO_SEND_STOP 0000                    ?_I2C1_MasterClearCountFlag 0001  
                        ??_UART_ReceiveString 0004                           I2C1_ReadNBytes@data 0017  
                __end_of_I2C1_DO_ADDRESS_NACK ADBC                    ??_LoadCurrentAddressEEPROM 0029  
                         __end_of_UART1_Write A3CE                      wr2RegCompleteHandler@ptr 000A  
                                  vfscanf@fmt 0070                         ReadAllEEPROMDataCSV@i 01E0  
              __end_of_I2C1_DO_SEND_ADR_WRITE A356                                 _I2C1_DO_RESET A28C  
                                  vfpfcnvrt@c 004A                    ReadAllEEPROMDataCSV@buffer 0100  
                           ___lmul@multiplier 0001                         I2C1_Close@returnValue 0001  
                    ?_rdBlkRegCompleteHandler 000A                           I2C1_SetCallback@idx 0005  
                         I2C1_SetCallback@ptr 0003               ReadAllEEPROMDataCSV@totalLogged 00AF  
                        ??_I2C1_MasterSendAck 0001                                    vfsfcnvrt@c 006D  
                                  vfsfcnvrt@i 006B                        ?_rd2RegCompleteHandler 000A  
                __end_of_I2C1_MasterOperation AB8A                        ?_wr2RegCompleteHandler 000A  
                    _I2C1_MasterIsStopFlagSet A2E8                                      __Hrparam 0000  
                             ?_I2C1_MasterFsm 0001                         _I2C1_MasterGetCounter A1D6  
                                   memcpy@tmp 0007                 EEPROM_WriteByte@memoryAddress 001B  
                                  vfprintf@ap 0092                                      __Lrparam 0000  
                                  vfprintf@fp 008F                          EEPROM_ReadBlock@data 0023  
                        EEPROM_ReadBlock@size 0025                     ??_I2C1_MasterWaitForEvent 0001  
                       _I2C1_MasterDisableIrq A3CE                       ??_OSCILLATOR_Initialize 0001  
                             ?_I2C1_SetBuffer 0001                 EEPROM_ReadBlock@deviceAddress 0027  
                                  ?_vfpfcnvrt 008C                     ??_I2C1_Write1ByteRegister 0019  
                                  ?_vfsfcnvrt 005B                        ??_I2C1_DO_SEND_RESTART 0001  
                          ___fpclassifyf@F465 0218             __end_of_I2C1_MasterClearCountFlag A1A6  
                                  sprintf@fmt 0095                                      ___xxtofl C4F6  
                                _I2C1CON0bits 3D73                                  _I2C1CON1bits 3D74  
                             ___lwdiv@divisor 0003                                ?_I2C1_DO_RESET 0001  
                             ___lwdiv@counter 0005                                      __ptext10 A726  
                                    __ptext11 AEFA                                      __ptext20 AE90  
                                    __ptext12 A474                                      __ptext21 A24E  
                                    __ptext13 A7DE                                      __ptext30 A8EC  
                                    __ptext22 A244                                      __ptext14 A64E  
                                    __ptext31 AA9A                                      __ptext23 A23A  
                                    __ptext15 C89C                                      __ptext40 A8A8  
                                    __ptext32 E560                                      __ptext24 A450  
                                    __ptext16 D0CA                                      __ptext41 ACEE  
                                    __ptext33 C296                                      __ptext25 B89E  
                                    __ptext17 C4F6                                      __ptext50 E9B0  
                                    __ptext42 A79E                                      __ptext34 C05A  
                                    __ptext26 A39C                                      __ptext18 B12A  
                                    __ptext51 A6B4                                      __ptext43 BAB6  
                                    __ptext35 B314                                      __ptext27 A40A  
                                    __ptext19 A356                                      __ptext60 BB7A  
                                    __ptext52 E112                                      __ptext44 A230  
                                    __ptext36 B6AC                                      __ptext28 CA8E  
                                    __ptext61 DD38                                      __ptext53 BD40  
                                    __ptext45 AB8A                                      __ptext37 B9F8  
                                    __ptext29 C6AA                                      __ptext70 A2AC  
                                    __ptext62 C3BA                                      __ptext54 B7F4  
                                    __ptext46 CC8C                                      __ptext38 A4C0  
                                    __ptext71 ADBC                                      __ptext63 CE9E  
                                    __ptext55 D99E                                      __ptext47 BC42  
                                    __ptext39 F3FC                                      __ptext80 A820  
                                    __ptext72 AA06                                      __ptext64 AE26  
                                    __ptext56 B044                                      __ptext48 BE44  
                                    __ptext81 B39C                                      __ptext73 AC38  
                                    __ptext65 B60A                                      __ptext57 A3B4  
                                    __ptext49 A976                                      __ptext90 AD54  
                                    __ptext82 A620                                      __ptext74 A6EC  
                                    __ptext66 BF4A                                      __ptext58 AFD4  
                                    __ptext91 A28C                                      __ptext83 A202  
                                    __ptext75 A930                                      __ptext67 A1DC  
                                    __ptext59 A864                                      __ptext92 A1FA  
                                    __ptext84 AB38                                      __ptext76 A67E  
                                    __ptext68 EE70                                      __ptext93 A27E  
                                    __ptext85 A3EC                                      __ptext77 ABE0  
                                    __ptext69 B4CA                                      __ptext94 A1F2  
                                    __ptext86 AC92                                      __ptext78 A384  
                                    __ptext95 A498                                      __ptext87 B1A0  
                                    __ptext79 A20A                                      __ptext96 A19C  
                                    __ptext88 A29C                                      __ptext97 A198  
                                    __ptext89 AF64                                      __ptext98 A270  
                                    __ptext99 B568                  ReadAndSendEEPROMDataCSV@Ndat 00AF  
                       _I2C1_DO_BUS_COLLISION AF64                                    _U1CON0bits 3DF2  
                EEPROM_ReadByte@addressBuffer 001D                 __end_of_UART1_SetErrorHandler A244  
                EEPROM_ReadByte@memoryAddress 001B                                    strcpy@dest 0001  
                    MPU6050_ReadSensorData@ax 0028                      MPU6050_ReadSensorData@ay 0029  
                    MPU6050_ReadSensorData@az 002A                      MPU6050_ReadSensorData@gx 002B  
                    MPU6050_ReadSensorData@gy 002C                      MPU6050_ReadSensorData@gz 002D  
                    _I2C1_CallbackReturnReset A194                          ___strtoxll@is_signed 001E  
                 fp__I2C1_CallbackReturnReset 0000                      ?_I2C1_MasterIsTxBufEmpty 0001  
                    _ReadAndSendEEPROMDataCSV CA8E                                   ?_I2C1_DO_RX 0001  
                                 ?_I2C1_DO_TX 0001                               _UART_SendString B044  
                 __end_of_I2C1_MasterClearIrq A1EA                  __end_of_I2C1_DO_RX_NACK_STOP A28C  
                                 ?_I2C1_Close 0001                                      efgtoa@fp 003C  
                                    efgtoa@ne 0060                                      efgtoa@pp 0068  
                                    efgtoa@ou 0073                     _UART1_OverrunErrorHandler 021F  
UART1_SetOverrunErrorHandler@interruptHandler 0001                                      isa$xinst 0000  
                   ?_I2C1_MasterClearNackFlag 0001                    ?_UART1_DefaultErrorHandler 0001  
             __end_of_I2C1_DO_RX_NACK_RESTART A202                      I2C1_MasterOperation@read 0015  
                                    _vfprintf AA9A                  ReadAndSendEEPROMData@ax_read 01E4  
                                   sscanf@fmt 007B                  ReadAndSendEEPROMData@ay_read 01E8  
                                   sscanf@ret 007F                  ReadAndSendEEPROMData@az_read 01EC  
    ReadAndSendEEPROMData@startAddressEEPROM1 00B3      ReadAndSendEEPROMData@startAddressEEPROM2 00B5  
                          I2C1_ReadNBytes@len 0018                 __end_of_I2C1_DO_SEND_ADR_READ A620  
                                   vfscanf@ap 0072                                     vfscanf@fp 006F  
                                _I2C1_DO_IDLE A264                                   _UART1_Write A3B4  
                ReadAndSendEEPROMData@gx_read 01F0                  ReadAndSendEEPROMData@gy_read 01F4  
                ReadAndSendEEPROMData@gz_read 01F8                   __end_of_I2C1_MasterSendNack A1D0  
              ??_UART1_SetFramingErrorHandler 0003                   __end_of_I2C1_MasterResetBus A21C  
               fp__I2C1_DO_SEND_RESTART_WRITE 0000                  MPU6050_ReadSensorData@buffer 0030  
                MPU6050_ReadSensorData@ax_raw 003C                  MPU6050_ReadSensorData@ay_raw 003E  
                MPU6050_ReadSensorData@az_raw 0040                                      memcpy@d1 0001  
                                    memcpy@s1 0003                I2C1_SetAddressNackCallback@ptr 0008  
                MPU6050_ReadSensorData@gx_raw 0042                  MPU6050_ReadSensorData@gy_raw 0044  
                MPU6050_ReadSensorData@gz_raw 0046                         _I2C1_MasterSetCounter A21C  
                        _I2C1_MasterGetRxData A1BE                         _I2C1_MasterSendTxData A226  
                   ?_I2C1_MasterClearStopFlag 0001                                     sprintf@ap 004F  
                            _EEPROM_ReadBlock A930                      __end_of_I2C1_MasterClose A264  
                     ?_I2C1_MasterIsRxBufFull 0001                              ___lldiv@dividend 0001  
                     ?_PIN_MANAGER_Initialize 0001                      __end_of_I2C1_MasterWrite A212  
                     I2C1_WriteNBytes@address 001A                                     strcpy@src 0003  
                            ??_I2C1_DO_RX_ACK 0001                              ??_I2C1_DO_TX_ACK 0001  
                      ?_I2C1_MasterGetCounter 0001                       _I2C1_CallbackReturnStop A190  
                  fp__I2C1_CallbackReturnStop 0000                           EEPROM_ReadByte@data 0020  
       ReadAndSendEEPROMData@readBlockEEPROM1 01FC         ReadAndSendEEPROMData@readBlockEEPROM2 01FE  
                        _I2C1_DO_ADDRESS_NACK AD54                        ?_I2C1_MasterDisableIrq 0001  
                            _I2C1_WriteNBytes ABE0                                   efgtoa@nmode 006A  
                                    sscanf@ap 0081                                    _UART1_Read B750  
                                    skipws@fp 000C                                      vfscanf@n 0075  
UART1_SetFramingErrorHandler@interruptHandler 0001                    ??_I2C1_ClearInterruptFlags 0001  
           __end_of_UART1_DefaultErrorHandler A18C                                      ungetc@fp 0003  
                                 ??_vfpfcnvrt 0044                                  _StartLogging D382  
                                 ??_vfsfcnvrt 0060                      __end_of_I2C1_SetCallback B314  
                                    sprintf@f 0050                                      sprintf@s 0093  
                 StartLogging@loggedDataCount 0210                               ??_I2C1_DO_RESET 0001  
                            ___lldiv@quotient 0009                          _I2C1_MasterOperation AB38  
                                    strncmp@l 0001                                      strncmp@n 0005  
                                    strncmp@r 0003                         ?_I2C1_MasterGetRxData 0001  
                           _EEPROM_WriteBlock A7DE                        ?_I2C1_DO_BUS_COLLISION 0001  
             __end_of_I2C1_MasterIsTxBufEmpty A340                            ?_EEPROM_WriteBlock 0023  
                               ___fladd@signs 000D                             EEPROM_ReadBlock@i 0028  
                     __end_of_UART_SendString B0B6                       UART_ReceiveString@index 000A  
              __end_of_I2C1_MasterIsRxBufFull A314                __end_of_PIN_MANAGER_Initialize B948  
                       _ReadAndSendEEPROMData C89C                 __end_of_rd1RegCompleteHandler A56E  
                            _EEPROM_WriteByte A64E                                  ___fladd@aexp 000E  
                                ___fladd@bexp 000F                        UART_ReceiveString@data 0009  
                            ??_ParseUserInput 005E                 __end_of_wr1RegCompleteHandler A5C6  
                         ??_EEPROM_WriteBlock 0028                         ?_I2C1_DO_ADDRESS_NACK 0001  
