

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Oct 25 20:46:40 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=4
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=4
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=4
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=4
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=4
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=4
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=4
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=4
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=4
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=4
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=4
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=4
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=4
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=4
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=4
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   121                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1,inline
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   129                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   130                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   131                           	psect	text114,global,reloc=2,class=CODE,delta=1,inline
   132                           	psect	text115,global,reloc=2,class=CODE,delta=1,inline
   133                           	psect	text116,global,reloc=2,class=CODE,delta=1
   134                           	psect	text117,global,reloc=2,class=CODE,delta=1
   135                           	psect	text118,global,reloc=2,class=CODE,delta=1
   136                           	psect	text119,global,reloc=2,class=CODE,delta=1
   137                           	psect	text120,global,reloc=2,class=CODE,delta=1
   138                           	psect	text121,global,reloc=2,class=CODE,delta=1
   139                           	psect	text122,global,reloc=2,class=CODE,delta=1
   140                           	psect	text123,global,reloc=2,class=CODE,delta=1
   141                           	psect	text124,global,reloc=2,class=CODE,delta=1
   142                           	psect	text125,global,reloc=2,class=CODE,delta=1
   143                           	psect	text126,global,reloc=2,class=CODE,delta=1,inline
   144                           	psect	text127,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	text128,global,reloc=2,class=CODE,delta=1,inline
   146                           	psect	text129,global,reloc=2,class=CODE,delta=1,inline
   147                           	psect	text130,global,reloc=2,class=CODE,delta=1,inline
   148                           	psect	text131,global,reloc=2,class=CODE,delta=1,inline
   149                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   150                           	psect	text133,global,reloc=2,class=CODE,delta=1
   151                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   152                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   153                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   154                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   155                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   156                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   157                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   158   000000                     
   159                           ; Generated 21/07/2023 GMT
   160                           ; 
   161                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   162                           ; All rights reserved.
   163                           ; 
   164                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   165                           ; 
   166                           ; Redistribution and use in source and binary forms, with or without modification, are
   167                           ; permitted provided that the following conditions are met:
   168                           ; 
   169                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   170                           ;        conditions and the following disclaimer.
   171                           ; 
   172                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   173                           ;        of conditions and the following disclaimer in the documentation and/or other
   174                           ;        materials provided with the distribution. Publication is not required when
   175                           ;        this file is used in an embedded application.
   176                           ; 
   177                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   178                           ;        software without specific prior written permission.
   179                           ; 
   180                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   181                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   182                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   183                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   184                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   185                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   186                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   187                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   188                           ; 
   189                           ; 
   190                           ; Code-generator required, PIC18F46K42 Definitions
   191                           ; 
   192                           ; SFR Addresses
   193   000000                     
   194                           	psect	mediumconst
   195   00FDF6                     __pmediumconst:
   196                           	callstack 0
   197   00FDF6  00                 	db	0
   198   00FDF7                     _i2c1_fsmStateTable:
   199                           	callstack 0
   200   00FDF7  EA                 	db	low _I2C1_DO_IDLE
   201   00FDF8  A5                 	db	high _I2C1_DO_IDLE
   202   00FDF9  78                 	db	low _I2C1_DO_SEND_ADR_READ
   203   00FDFA  A9                 	db	high _I2C1_DO_SEND_ADR_READ
   204   00FDFB  C6                 	db	low _I2C1_DO_SEND_ADR_WRITE
   205   00FDFC  A6                 	db	high _I2C1_DO_SEND_ADR_WRITE
   206   00FDFD  F2                 	db	low _I2C1_DO_TX
   207   00FDFE  C3                 	db	high _I2C1_DO_TX
   208   00FDFF  AA                 	db	low _I2C1_DO_RX
   209   00FE00  B6                 	db	high _I2C1_DO_RX
   210   00FE01  98                 	db	low _I2C1_DO_TX_EMPTY
   211   00FE02  B4                 	db	high _I2C1_DO_TX_EMPTY
   212   00FE03  E6                 	db	low _I2C1_DO_RX_EMPTY
   213   00FE04  B7                 	db	high _I2C1_DO_RX_EMPTY
   214   00FE05  F6                 	db	low _I2C1_DO_SEND_RESTART_READ
   215   00FE06  A5                 	db	high _I2C1_DO_SEND_RESTART_READ
   216   00FE07  1E                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   217   00FE08  A5                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   218   00FE09  22                 	db	low _I2C1_DO_SEND_RESTART
   219   00FE0A  A5                 	db	high _I2C1_DO_SEND_RESTART
   220   00FE0B  1E                 	db	low _I2C1_DO_SEND_STOP
   221   00FE0C  A8                 	db	high _I2C1_DO_SEND_STOP
   222   00FE0D  78                 	db	low _I2C1_DO_RX_ACK
   223   00FE0E  A5                 	db	high _I2C1_DO_RX_ACK
   224   00FE0F  70                 	db	low _I2C1_DO_TX_ACK
   225   00FE10  A5                 	db	high _I2C1_DO_TX_ACK
   226   00FE11  04                 	db	low _I2C1_DO_RX_NACK_STOP
   227   00FE12  A6                 	db	high _I2C1_DO_RX_NACK_STOP
   228   00FE13  80                 	db	low _I2C1_DO_RX_NACK_RESTART
   229   00FE14  A5                 	db	high _I2C1_DO_RX_NACK_RESTART
   230   00FE15  12                 	db	low _I2C1_DO_RESET
   231   00FE16  A6                 	db	high _I2C1_DO_RESET
   232   00FE17  46                 	db	low _I2C1_DO_ADDRESS_NACK
   233   00FE18  B0                 	db	high _I2C1_DO_ADDRESS_NACK
   234   00FE19  56                 	db	low _I2C1_DO_BUS_COLLISION
   235   00FE1A  B2                 	db	high _I2C1_DO_BUS_COLLISION
   236   00FE1B  22                 	db	low _I2C1_DO_BUS_ERROR
   237   00FE1C  A6                 	db	high _I2C1_DO_BUS_ERROR
   238   00FE1D                     __end_of_i2c1_fsmStateTable:
   239                           	callstack 0
   240   000000                     _TRISD	set	16325
   241   000000                     _TRISC	set	16324
   242   000000                     _TRISB	set	16323
   243   000000                     _LATC	set	16316
   244   000000                     _LATB	set	16315
   245   000000                     _OSCTUNE	set	14814
   246   000000                     _OSCFRQ	set	14815
   247   000000                     _I2C1TXB	set	15723
   248   000000                     _I2C1PIE	set	15738
   249   00FE1D                     STR_5:
   250                           
   251                           ; BSR set to: 61
   252   00FE1D  45                 	db	69	;'E'
   253   00FE1E  45                 	db	69	;'E'
   254   00FE1F  50                 	db	80	;'P'
   255   00FE20  52                 	db	82	;'R'
   256   00FE21  4F                 	db	79	;'O'
   257   00FE22  4D                 	db	77	;'M'
   258   00FE23  20                 	db	32
   259   00FE24  2D                 	db	45
   260   00FE25  20                 	db	32
   261   00FE26  41                 	db	65	;'A'
   262   00FE27  58                 	db	88	;'X'
   263   00FE28  3A                 	db	58	;':'
   264   00FE29  20                 	db	32
   265   00FE2A  25                 	db	37
   266   00FE2B  2E                 	db	46
   267   00FE2C  32                 	db	50	;'2'
   268   00FE2D  66                 	db	102	;'f'
   269   00FE2E  2C                 	db	44
   270   00FE2F  20                 	db	32
   271   00FE30  41                 	db	65	;'A'
   272   00FE31  59                 	db	89	;'Y'
   273   00FE32  3A                 	db	58	;':'
   274   00FE33  20                 	db	32
   275   00FE34  25                 	db	37
   276   00FE35  2E                 	db	46
   277   00FE36  32                 	db	50	;'2'
   278   00FE37  66                 	db	102	;'f'
   279   00FE38  2C                 	db	44
   280   00FE39  20                 	db	32
   281   00FE3A  41                 	db	65	;'A'
   282   00FE3B  5A                 	db	90	;'Z'
   283   00FE3C  3A                 	db	58	;':'
   284   00FE3D  20                 	db	32
   285   00FE3E  25                 	db	37
   286   00FE3F  2E                 	db	46
   287   00FE40  32                 	db	50	;'2'
   288   00FE41  66                 	db	102	;'f'
   289   00FE42  2C                 	db	44
   290   00FE43  20                 	db	32
   291   00FE44  47                 	db	71	;'G'
   292   00FE45  58                 	db	88	;'X'
   293   00FE46  3A                 	db	58	;':'
   294   00FE47  20                 	db	32
   295   00FE48  25                 	db	37
   296   00FE49  2E                 	db	46
   297   00FE4A  32                 	db	50	;'2'
   298   00FE4B  66                 	db	102	;'f'
   299   00FE4C  2C                 	db	44
   300   00FE4D  20                 	db	32
   301   00FE4E  47                 	db	71	;'G'
   302   00FE4F  59                 	db	89	;'Y'
   303   00FE50  3A                 	db	58	;':'
   304   00FE51  20                 	db	32
   305   00FE52  25                 	db	37
   306   00FE53  2E                 	db	46
   307   00FE54  32                 	db	50	;'2'
   308   00FE55  66                 	db	102	;'f'
   309   00FE56  2C                 	db	44
   310   00FE57  20                 	db	32
   311   00FE58  47                 	db	71	;'G'
   312   00FE59  5A                 	db	90	;'Z'
   313   00FE5A  3A                 	db	58	;':'
   314   00FE5B  20                 	db	32
   315   00FE5C  25                 	db	37
   316   00FE5D  2E                 	db	46
   317   00FE5E  32                 	db	50	;'2'
   318   00FE5F  66                 	db	102	;'f'
   319   00FE60  0A                 	db	10
   320   00FE61  00                 	db	0
   321   00FE62                     STR_12:
   322                           
   323                           ; BSR set to: 61
   324   00FE62  49                 	db	73	;'I'
   325   00FE63  6E                 	db	110	;'n'
   326   00FE64  67                 	db	103	;'g'
   327   00FE65  72                 	db	114	;'r'
   328   00FE66  65                 	db	101	;'e'
   329   00FE67  73                 	db	115	;'s'
   330   00FE68  65                 	db	101	;'e'
   331   00FE69  20                 	db	32
   332   00FE6A  63                 	db	99	;'c'
   333   00FE6B  6F                 	db	111	;'o'
   334   00FE6C  6D                 	db	109	;'m'
   335   00FE6D  61                 	db	97	;'a'
   336   00FE6E  6E                 	db	110	;'n'
   337   00FE6F  64                 	db	100	;'d'
   338   00FE70  6F                 	db	111	;'o'
   339   00FE71  20                 	db	32
   340   00FE72  28                 	db	40
   341   00FE73  65                 	db	101	;'e'
   342   00FE74  6A                 	db	106	;'j'
   343   00FE75  65                 	db	101	;'e'
   344   00FE76  6D                 	db	109	;'m'
   345   00FE77  70                 	db	112	;'p'
   346   00FE78  6C                 	db	108	;'l'
   347   00FE79  6F                 	db	111	;'o'
   348   00FE7A  3A                 	db	58	;':'
   349   00FE7B  20                 	db	32
   350   00FE7C  4C                 	db	76	;'L'
   351   00FE7D  4F                 	db	79	;'O'
   352   00FE7E  47                 	db	71	;'G'
   353   00FE7F  28                 	db	40
   354   00FE80  31                 	db	49	;'1'
   355   00FE81  30                 	db	48	;'0'
   356   00FE82  2C                 	db	44
   357   00FE83  31                 	db	49	;'1'
   358   00FE84  30                 	db	48	;'0'
   359   00FE85  30                 	db	48	;'0'
   360   00FE86  29                 	db	41
   361   00FE87  2C                 	db	44
   362   00FE88  20                 	db	32
   363   00FE89  4C                 	db	76	;'L'
   364   00FE8A  4F                 	db	79	;'O'
   365   00FE8B  47                 	db	71	;'G'
   366   00FE8C  5F                 	db	95	;'_'
   367   00FE8D  52                 	db	82	;'R'
   368   00FE8E  45                 	db	69	;'E'
   369   00FE8F  41                 	db	65	;'A'
   370   00FE90  44                 	db	68	;'D'
   371   00FE91  20                 	db	32
   372   00FE92  6F                 	db	111	;'o'
   373   00FE93  20                 	db	32
   374   00FE94  4C                 	db	76	;'L'
   375   00FE95  4F                 	db	79	;'O'
   376   00FE96  47                 	db	71	;'G'
   377   00FE97  5F                 	db	95	;'_'
   378   00FE98  53                 	db	83	;'S'
   379   00FE99  54                 	db	84	;'T'
   380   00FE9A  41                 	db	65	;'A'
   381   00FE9B  54                 	db	84	;'T'
   382   00FE9C  29                 	db	41
   383   00FE9D  3A                 	db	58	;':'
   384   00FE9E  20                 	db	32
   385   00FE9F  00                 	db	0
   386   00FEA0                     STR_1:
   387                           
   388                           ; BSR set to: 61
   389   00FEA0  44                 	db	68	;'D'
   390   00FEA1  61                 	db	97	;'a'
   391   00FEA2  74                 	db	116	;'t'
   392   00FEA3  6F                 	db	111	;'o'
   393   00FEA4  73                 	db	115	;'s'
   394   00FEA5  20                 	db	32
   395   00FEA6  61                 	db	97	;'a'
   396   00FEA7  6C                 	db	108	;'l'
   397   00FEA8  6D                 	db	109	;'m'
   398   00FEA9  61                 	db	97	;'a'
   399   00FEAA  63                 	db	99	;'c'
   400   00FEAB  65                 	db	101	;'e'
   401   00FEAC  6E                 	db	110	;'n'
   402   00FEAD  61                 	db	97	;'a'
   403   00FEAE  64                 	db	100	;'d'
   404   00FEAF  6F                 	db	111	;'o'
   405   00FEB0  73                 	db	115	;'s'
   406   00FEB1  3A                 	db	58	;':'
   407   00FEB2  20                 	db	32
   408   00FEB3  25                 	db	37
   409   00FEB4  6C                 	db	108	;'l'
   410   00FEB5  75                 	db	117	;'u'
   411   00FEB6  2C                 	db	44
   412   00FEB7  20                 	db	32
   413   00FEB8  54                 	db	84	;'T'
   414   00FEB9  61                 	db	97	;'a'
   415   00FEBA  73                 	db	115	;'s'
   416   00FEBB  61                 	db	97	;'a'
   417   00FEBC  20                 	db	32
   418   00FEBD  64                 	db	100	;'d'
   419   00FEBE  65                 	db	101	;'e'
   420   00FEBF  20                 	db	32
   421   00FEC0  6D                 	db	109	;'m'
   422   00FEC1  75                 	db	117	;'u'
   423   00FEC2  65                 	db	101	;'e'
   424   00FEC3  73                 	db	115	;'s'
   425   00FEC4  74                 	db	116	;'t'
   426   00FEC5  72                 	db	114	;'r'
   427   00FEC6  65                 	db	101	;'e'
   428   00FEC7  6F                 	db	111	;'o'
   429   00FEC8  3A                 	db	58	;':'
   430   00FEC9  20                 	db	32
   431   00FECA  25                 	db	37
   432   00FECB  6C                 	db	108	;'l'
   433   00FECC  75                 	db	117	;'u'
   434   00FECD  20                 	db	32
   435   00FECE  6D                 	db	109	;'m'
   436   00FECF  73                 	db	115	;'s'
   437   00FED0  0A                 	db	10
   438   00FED1  00                 	db	0
   439   00FED2                     STR_10:
   440                           
   441                           ; BSR set to: 61
   442   00FED2  55                 	db	85	;'U'
   443   00FED3  6C                 	db	108	;'l'
   444   00FED4  74                 	db	116	;'t'
   445   00FED5  69                 	db	105	;'i'
   446   00FED6  6D                 	db	109	;'m'
   447   00FED7  61                 	db	97	;'a'
   448   00FED8  20                 	db	32
   449   00FED9  64                 	db	100	;'d'
   450   00FEDA  69                 	db	105	;'i'
   451   00FEDB  72                 	db	114	;'r'
   452   00FEDC  65                 	db	101	;'e'
   453   00FEDD  63                 	db	99	;'c'
   454   00FEDE  63                 	db	99	;'c'
   455   00FEDF  69                 	db	105	;'i'
   456   00FEE0  6F                 	db	111	;'o'
   457   00FEE1  6E                 	db	110	;'n'
   458   00FEE2  20                 	db	32
   459   00FEE3  72                 	db	114	;'r'
   460   00FEE4  65                 	db	101	;'e'
   461   00FEE5  67                 	db	103	;'g'
   462   00FEE6  69                 	db	105	;'i'
   463   00FEE7  73                 	db	115	;'s'
   464   00FEE8  74                 	db	116	;'t'
   465   00FEE9  72                 	db	114	;'r'
   466   00FEEA  61                 	db	97	;'a'
   467   00FEEB  64                 	db	100	;'d'
   468   00FEEC  61                 	db	97	;'a'
   469   00FEED  20                 	db	32
   470   00FEEE  65                 	db	101	;'e'
   471   00FEEF  6E                 	db	110	;'n'
   472   00FEF0  20                 	db	32
   473   00FEF1  45                 	db	69	;'E'
   474   00FEF2  45                 	db	69	;'E'
   475   00FEF3  50                 	db	80	;'P'
   476   00FEF4  52                 	db	82	;'R'
   477   00FEF5  4F                 	db	79	;'O'
   478   00FEF6  4D                 	db	77	;'M'
   479   00FEF7  31                 	db	49	;'1'
   480   00FEF8  3A                 	db	58	;':'
   481   00FEF9  20                 	db	32
   482   00FEFA  30                 	db	48	;'0'
   483   00FEFB  78                 	db	120	;'x'
   484   00FEFC  25                 	db	37
   485   00FEFD  58                 	db	88	;'X'
   486   00FEFE  0A                 	db	10
   487   00FEFF  00                 	db	0
   488   00FF00                     STR_11:
   489                           
   490                           ; BSR set to: 61
   491   00FF00  55                 	db	85	;'U'
   492   00FF01  6C                 	db	108	;'l'
   493   00FF02  74                 	db	116	;'t'
   494   00FF03  69                 	db	105	;'i'
   495   00FF04  6D                 	db	109	;'m'
   496   00FF05  61                 	db	97	;'a'
   497   00FF06  20                 	db	32
   498   00FF07  64                 	db	100	;'d'
   499   00FF08  69                 	db	105	;'i'
   500   00FF09  72                 	db	114	;'r'
   501   00FF0A  65                 	db	101	;'e'
   502   00FF0B  63                 	db	99	;'c'
   503   00FF0C  63                 	db	99	;'c'
   504   00FF0D  69                 	db	105	;'i'
   505   00FF0E  6F                 	db	111	;'o'
   506   00FF0F  6E                 	db	110	;'n'
   507   00FF10  20                 	db	32
   508   00FF11  72                 	db	114	;'r'
   509   00FF12  65                 	db	101	;'e'
   510   00FF13  67                 	db	103	;'g'
   511   00FF14  69                 	db	105	;'i'
   512   00FF15  73                 	db	115	;'s'
   513   00FF16  74                 	db	116	;'t'
   514   00FF17  72                 	db	114	;'r'
   515   00FF18  61                 	db	97	;'a'
   516   00FF19  64                 	db	100	;'d'
   517   00FF1A  61                 	db	97	;'a'
   518   00FF1B  20                 	db	32
   519   00FF1C  65                 	db	101	;'e'
   520   00FF1D  6E                 	db	110	;'n'
   521   00FF1E  20                 	db	32
   522   00FF1F  45                 	db	69	;'E'
   523   00FF20  45                 	db	69	;'E'
   524   00FF21  50                 	db	80	;'P'
   525   00FF22  52                 	db	82	;'R'
   526   00FF23  4F                 	db	79	;'O'
   527   00FF24  4D                 	db	77	;'M'
   528   00FF25  32                 	db	50	;'2'
   529   00FF26  3A                 	db	58	;':'
   530   00FF27  20                 	db	32
   531   00FF28  30                 	db	48	;'0'
   532   00FF29  78                 	db	120	;'x'
   533   00FF2A  25                 	db	37
   534   00FF2B  58                 	db	88	;'X'
   535   00FF2C  0A                 	db	10
   536   00FF2D  00                 	db	0
   537   00FF2E                     STR_18:
   538                           
   539                           ; BSR set to: 61
   540   00FF2E  45                 	db	69	;'E'
   541   00FF2F  6E                 	db	110	;'n'
   542   00FF30  74                 	db	116	;'t'
   543   00FF31  72                 	db	114	;'r'
   544   00FF32  61                 	db	97	;'a'
   545   00FF33  64                 	db	100	;'d'
   546   00FF34  61                 	db	97	;'a'
   547   00FF35  20                 	db	32
   548   00FF36  6E                 	db	110	;'n'
   549   00FF37  6F                 	db	111	;'o'
   550   00FF38  20                 	db	32
   551   00FF39  76                 	db	118	;'v'
   552   00FF3A  61                 	db	97	;'a'
   553   00FF3B  6C                 	db	108	;'l'
   554   00FF3C  69                 	db	105	;'i'
   555   00FF3D  64                 	db	100	;'d'
   556   00FF3E  61                 	db	97	;'a'
   557   00FF3F  2E                 	db	46
   558   00FF40  20                 	db	32
   559   00FF41  49                 	db	73	;'I'
   560   00FF42  6E                 	db	110	;'n'
   561   00FF43  74                 	db	116	;'t'
   562   00FF44  65                 	db	101	;'e'
   563   00FF45  6E                 	db	110	;'n'
   564   00FF46  74                 	db	116	;'t'
   565   00FF47  65                 	db	101	;'e'
   566   00FF48  20                 	db	32
   567   00FF49  64                 	db	100	;'d'
   568   00FF4A  65                 	db	101	;'e'
   569   00FF4B  20                 	db	32
   570   00FF4C  6E                 	db	110	;'n'
   571   00FF4D  75                 	db	117	;'u'
   572   00FF4E  65                 	db	101	;'e'
   573   00FF4F  76                 	db	118	;'v'
   574   00FF50  6F                 	db	111	;'o'
   575   00FF51  2E                 	db	46
   576   00FF52  0A                 	db	10
   577   00FF53  00                 	db	0
   578   00FF54                     STR_6:
   579                           
   580                           ; BSR set to: 61
   581   00FF54  2D                 	db	45
   582   00FF55  2D                 	db	45
   583   00FF56  2D                 	db	45
   584   00FF57  2D                 	db	45
   585   00FF58  2D                 	db	45
   586   00FF59  2D                 	db	45
   587   00FF5A  2D                 	db	45
   588   00FF5B  2D                 	db	45
   589   00FF5C  2D                 	db	45
   590   00FF5D  2D                 	db	45
   591   00FF5E  2D                 	db	45
   592   00FF5F  2D                 	db	45
   593   00FF60  4C                 	db	76	;'L'
   594   00FF61  4F                 	db	79	;'O'
   595   00FF62  47                 	db	71	;'G'
   596   00FF63  5F                 	db	95	;'_'
   597   00FF64  4F                 	db	79	;'O'
   598   00FF65  4B                 	db	75	;'K'
   599   00FF66  2D                 	db	45
   600   00FF67  2D                 	db	45
   601   00FF68  2D                 	db	45
   602   00FF69  2D                 	db	45
   603   00FF6A  2D                 	db	45
   604   00FF6B  2D                 	db	45
   605   00FF6C  2D                 	db	45
   606   00FF6D  2D                 	db	45
   607   00FF6E  2D                 	db	45
   608   00FF6F  2D                 	db	45
   609   00FF70  2D                 	db	45
   610   00FF71  2D                 	db	45
   611   00FF72  2D                 	db	45
   612   00FF73  0A                 	db	10
   613   00FF74  00                 	db	0
   614   00FF75                     STR_3:
   615                           
   616                           ; BSR set to: 61
   617   00FF75  25                 	db	37
   618   00FF76  2E                 	db	46
   619   00FF77  32                 	db	50	;'2'
   620   00FF78  66                 	db	102	;'f'
   621   00FF79  2C                 	db	44
   622   00FF7A  25                 	db	37
   623   00FF7B  2E                 	db	46
   624   00FF7C  32                 	db	50	;'2'
   625   00FF7D  66                 	db	102	;'f'
   626   00FF7E  2C                 	db	44
   627   00FF7F  25                 	db	37
   628   00FF80  2E                 	db	46
   629   00FF81  32                 	db	50	;'2'
   630   00FF82  66                 	db	102	;'f'
   631   00FF83  2C                 	db	44
   632   00FF84  25                 	db	37
   633   00FF85  2E                 	db	46
   634   00FF86  32                 	db	50	;'2'
   635   00FF87  66                 	db	102	;'f'
   636   00FF88  2C                 	db	44
   637   00FF89  25                 	db	37
   638   00FF8A  2E                 	db	46
   639   00FF8B  32                 	db	50	;'2'
   640   00FF8C  66                 	db	102	;'f'
   641   00FF8D  2C                 	db	44
   642   00FF8E  25                 	db	37
   643   00FF8F  2E                 	db	46
   644   00FF90  32                 	db	50	;'2'
   645   00FF91  66                 	db	102	;'f'
   646   00FF92  0A                 	db	10
   647   00FF93  00                 	db	0
   648   00FF94                     STR_2:
   649                           
   650                           ; BSR set to: 61
   651   00FF94  41                 	db	65	;'A'
   652   00FF95  58                 	db	88	;'X'
   653   00FF96  2C                 	db	44
   654   00FF97  41                 	db	65	;'A'
   655   00FF98  59                 	db	89	;'Y'
   656   00FF99  2C                 	db	44
   657   00FF9A  41                 	db	65	;'A'
   658   00FF9B  5A                 	db	90	;'Z'
   659   00FF9C  2C                 	db	44
   660   00FF9D  47                 	db	71	;'G'
   661   00FF9E  58                 	db	88	;'X'
   662   00FF9F  2C                 	db	44
   663   00FFA0  47                 	db	71	;'G'
   664   00FFA1  59                 	db	89	;'Y'
   665   00FFA2  2C                 	db	44
   666   00FFA3  47                 	db	71	;'G'
   667   00FFA4  5A                 	db	90	;'Z'
   668   00FFA5  0A                 	db	10
   669   00FFA6  00                 	db	0
   670   00FFA7                     STR_8:
   671                           
   672                           ; BSR set to: 61
   673   00FFA7  4C                 	db	76	;'L'
   674   00FFA8  4F                 	db	79	;'O'
   675   00FFA9  47                 	db	71	;'G'
   676   00FFAA  28                 	db	40
   677   00FFAB  25                 	db	37
   678   00FFAC  6C                 	db	108	;'l'
   679   00FFAD  75                 	db	117	;'u'
   680   00FFAE  2C                 	db	44
   681   00FFAF  25                 	db	37
   682   00FFB0  6C                 	db	108	;'l'
   683   00FFB1  75                 	db	117	;'u'
   684   00FFB2  29                 	db	41
   685   00FFB3  0D                 	db	13
   686   00FFB4  0A                 	db	10
   687   00FFB5  00                 	db	0
   688   00FFB6                     STR_9:
   689                           
   690                           ; BSR set to: 61
   691   00FFB6  4C                 	db	76	;'L'
   692   00FFB7  4F                 	db	79	;'O'
   693   00FFB8  47                 	db	71	;'G'
   694   00FFB9  28                 	db	40
   695   00FFBA  25                 	db	37
   696   00FFBB  6C                 	db	108	;'l'
   697   00FFBC  75                 	db	117	;'u'
   698   00FFBD  2C                 	db	44
   699   00FFBE  25                 	db	37
   700   00FFBF  6C                 	db	108	;'l'
   701   00FFC0  75                 	db	117	;'u'
   702   00FFC1  29                 	db	41
   703   00FFC2  0A                 	db	10
   704   00FFC3  00                 	db	0
   705   00FFC4                     STR_13:
   706                           
   707                           ; BSR set to: 61
   708   00FFC4  52                 	db	82	;'R'
   709   00FFC5  65                 	db	101	;'e'
   710   00FFC6  63                 	db	99	;'c'
   711   00FFC7  69                 	db	105	;'i'
   712   00FFC8  62                 	db	98	;'b'
   713   00FFC9  69                 	db	105	;'i'
   714   00FFCA  64                 	db	100	;'d'
   715   00FFCB  6F                 	db	111	;'o'
   716   00FFCC  3A                 	db	58	;':'
   717   00FFCD  20                 	db	32
   718   00FFCE  00                 	db	0
   719   00FFCF                     STR_7:
   720                           
   721                           ; BSR set to: 61
   722   00FFCF  4C                 	db	76	;'L'
   723   00FFD0  4F                 	db	79	;'O'
   724   00FFD1  47                 	db	71	;'G'
   725   00FFD2  5F                 	db	95	;'_'
   726   00FFD3  45                 	db	69	;'E'
   727   00FFD4  52                 	db	82	;'R'
   728   00FFD5  52                 	db	82	;'R'
   729   00FFD6  0A                 	db	10
   730   00FFD7  00                 	db	0
   731   00FFD8                     STR_15:
   732                           
   733                           ; BSR set to: 61
   734   00FFD8  4C                 	db	76	;'L'
   735   00FFD9  4F                 	db	79	;'O'
   736   00FFDA  47                 	db	71	;'G'
   737   00FFDB  5F                 	db	95	;'_'
   738   00FFDC  52                 	db	82	;'R'
   739   00FFDD  45                 	db	69	;'E'
   740   00FFDE  41                 	db	65	;'A'
   741   00FFDF  44                 	db	68	;'D'
   742   00FFE0  00                 	db	0
   743   00FFE1                     STR_16:
   744                           
   745                           ; BSR set to: 61
   746   00FFE1  4C                 	db	76	;'L'
   747   00FFE2  4F                 	db	79	;'O'
   748   00FFE3  47                 	db	71	;'G'
   749   00FFE4  5F                 	db	95	;'_'
   750   00FFE5  53                 	db	83	;'S'
   751   00FFE6  54                 	db	84	;'T'
   752   00FFE7  41                 	db	65	;'A'
   753   00FFE8  54                 	db	84	;'T'
   754   00FFE9  00                 	db	0
   755   00FFEA                     
   756                           ; BSR set to: 61
   757   00FFEA  45                 	db	69	;'E'
   758   00FFEB  4E                 	db	78	;'N'
   759   00FFEC  44                 	db	68	;'D'
   760   00FFED  0A                 	db	10
   761   00FFEE  00                 	db	0
   762   00FFEF                     STR_19:
   763                           
   764                           ; BSR set to: 61
   765   00FFEF  69                 	db	105	;'i'
   766   00FFF0  6E                 	db	110	;'n'
   767   00FFF1  66                 	db	102	;'f'
   768   00FFF2  00                 	db	0
   769   00FFF3                     STR_22:
   770                           
   771                           ; BSR set to: 61
   772   00FFF3  6E                 	db	110	;'n'
   773   00FFF4  61                 	db	97	;'a'
   774   00FFF5  6E                 	db	110	;'n'
   775   00FFF6  00                 	db	0
   776   00FFF7                     STR_25:
   777                           
   778                           ; BSR set to: 61
   779   00FFF7  6C                 	db	108	;'l'
   780   00FFF8  75                 	db	117	;'u'
   781   00FFF9  00                 	db	0
   782   00FFFA  00                 	db	0	; dummy byte at the end
   783   000000                     
   784                           	psect	nvBANK2
   785   00021F                     __pnvBANK2:
   786                           	callstack 0
   787   00021F                     _UART1_ErrorHandler:
   788                           	callstack 0
   789   00021F                     	ds	2
   790   000221                     _UART1_OverrunErrorHandler:
   791                           	callstack 0
   792   000221                     	ds	2
   793   000223                     _UART1_FramingErrorHandler:
   794                           	callstack 0
   795   000223                     	ds	2
   796   000000                     _I2C1PIEbits	set	15738
   797   000000                     _I2C1PIRbits	set	15737
   798   000000                     _I2C1ERRbits	set	15734
   799   000000                     _I2C1CON1bits	set	15732
   800   000000                     _I2C1CON0bits	set	15731
   801   000000                     _U1ERRIRbits	set	15865
   802   000000                     _U1CON0bits	set	15858
   803   000000                     _PIE2bits	set	14738
   804   000000                     _PIE3bits	set	14739
   805   000000                     _PIR3bits	set	14755
   806   000000                     _U1P1L	set	15852
   807   000000                     _LATA	set	16314
   808   000000                     _LATD	set	16317
   809   000000                     _LATE	set	16318
   810   000000                     _U1ERRIE	set	15866
   811   000000                     _U1ERRIR	set	15865
   812   000000                     _U1UIR	set	15864
   813   000000                     _U1FIFO	set	15863
   814   000000                     _U1BRGH	set	15862
   815   000000                     _U1BRGL	set	15861
   816   000000                     _U1CON2	set	15860
   817   000000                     _U1CON1	set	15859
   818   000000                     _U1CON0	set	15858
   819   000000                     _U1P3H	set	15857
   820   000000                     _U1P3L	set	15856
   821   000000                     _U1P2H	set	15855
   822   000000                     _U1P2L	set	15854
   823   000000                     _U1P1H	set	15853
   824   000000                     _PMD0	set	14784
   825   000000                     _OSCCON1	set	14809
   826   000000                     _RB1I2C	set	14938
   827   000000                     _I2C1CNT	set	15724
   828   000000                     _I2C1CON0	set	15731
   829   000000                     _U1RXB	set	15848
   830   000000                     _U1TXB	set	15850
   831   000000                     _I2C1STAT1bits	set	15736
   832   000000                     _I2C1ERR	set	15734
   833   000000                     _I2C1PIR	set	15737
   834   000000                     _I2C1CLK	set	15739
   835   000000                     _I2C1CON2	set	15733
   836   000000                     _I2C1CON1	set	15732
   837   000000                     _ANSELC	set	14944
   838   000000                     _ANSELD	set	14960
   839   000000                     _I2C1RXB	set	15722
   840   000000                     _RB2I2C	set	14939
   841   000000                     _PIR2bits	set	14754
   842   000000                     _OSCCON3	set	14811
   843   000000                     _OSCEN	set	14813
   844   000000                     _RB1PPS	set	14857
   845   000000                     _ANSELA	set	14912
   846   000000                     _ANSELB	set	14928
   847   000000                     _PMD7	set	14791
   848   000000                     _PMD6	set	14790
   849   000000                     _PMD5	set	14789
   850   000000                     _PMD4	set	14788
   851   000000                     _PMD3	set	14787
   852   000000                     _PMD2	set	14786
   853   000000                     _PMD1	set	14785
   854   000000                     _TRISA	set	16322
   855   000000                     _TRISE	set	16326
   856   000000                     _INLVLD	set	14964
   857   000000                     _SLRCOND	set	14963
   858   000000                     _ODCOND	set	14962
   859   000000                     _RD0I2C	set	14970
   860   000000                     _WPUD	set	14961
   861   000000                     _ANSELE	set	14976
   862   000000                     _INLVLC	set	14948
   863   000000                     _SLRCONC	set	14947
   864   000000                     _ODCONC	set	14946
   865   000000                     _RC3I2C	set	14954
   866   000000                     _WPUC	set	14945
   867   000000                     _INLVLB	set	14932
   868   000000                     _SLRCONB	set	14931
   869   000000                     _ODCONB	set	14930
   870   000000                     _WPUB	set	14929
   871   000000                     _I2C1SCLPPS	set	15073
   872   000000                     _I2C1SDAPPS	set	15074
   873   000000                     _INLVLE	set	14980
   874   000000                     _SLRCONE	set	14979
   875   000000                     _ODCONE	set	14978
   876   000000                     _WPUE	set	14977
   877   000000                     _INLVLA	set	14916
   878   000000                     _SLRCONA	set	14915
   879   000000                     _ODCONA	set	14914
   880   000000                     _WPUA	set	14913
   881   000000                     _RC4I2C	set	14955
   882   000000                     _RD1I2C	set	14971
   883   000000                     _U1RXPPS	set	15077
   884   000000                     _RC6PPS	set	14870
   885   000000                     _RB2PPS	set	14858
   886                           
   887                           ; #config settings
   888                           
   889                           	psect	cinit
   890   00A94C                     __pcinit:
   891                           	callstack 0
   892   00A94C                     start_initialization:
   893                           	callstack 0
   894   00A94C                     __initialization:
   895                           	callstack 0
   896                           
   897                           ; Clear objects allocated to BANK3 (172 bytes)
   898   00A94C  EE00  F300         	lfsr	0,__pbssBANK3
   899   00A950  0EAC               	movlw	172
   900   00A952                     clear_0:
   901   00A952  6AEE               	clrf	postinc0,c
   902   00A954  06E8               	decf	wreg,f,c
   903   00A956  E1FD               	bnz	clear_0
   904                           
   905                           ; Clear objects allocated to BANK2 (11 bytes)
   906   00A958  EE00  F214         	lfsr	0,__pbssBANK2
   907   00A95C  0E0B               	movlw	11
   908   00A95E                     clear_1:
   909   00A95E  6AEE               	clrf	postinc0,c
   910   00A960  06E8               	decf	wreg,f,c
   911   00A962  E1FD               	bnz	clear_1
   912                           
   913                           ; Clear objects allocated to BANK0 (52 bytes)
   914   00A964  EE00  F0B9         	lfsr	0,__pbssBANK0
   915   00A968  0E34               	movlw	52
   916   00A96A                     clear_2:
   917   00A96A  6AEE               	clrf	postinc0,c
   918   00A96C  06E8               	decf	wreg,f,c
   919   00A96E  E1FD               	bnz	clear_2
   920                           
   921                           ; Clear objects allocated to COMRAM (1 bytes)
   922   00A970  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   923   00A972                     end_of_initialization:
   924                           	callstack 0
   925   00A972                     __end_of__initialization:
   926                           	callstack 0
   927   00A972  0100               	movlb	0
   928   00A974  EFAB  F068         	goto	_main	;jump to C main() function
   929                           
   930                           	psect	bssCOMRAM
   931   00005E                     __pbssCOMRAM:
   932                           	callstack 0
   933   00005E                     ___ungetcnt:
   934                           	callstack 0
   935   00005E                     	ds	1
   936                           
   937                           	psect	bssBANK0
   938   0000B9                     __pbssBANK0:
   939                           	callstack 0
   940   0000B9                     _nmatch:
   941                           	callstack 0
   942   0000B9                     	ds	2
   943   0000BB                     _ncnv:
   944                           	callstack 0
   945   0000BB                     	ds	2
   946   0000BD                     _width@doscan$F2256:
   947                           	callstack 0
   948   0000BD                     	ds	2
   949   0000BF                     _errno:
   950                           	callstack 0
   951   0000BF                     	ds	2
   952   0000C1                     _width:
   953                           	callstack 0
   954   0000C1                     	ds	2
   955   0000C3                     _prec:
   956                           	callstack 0
   957   0000C3                     	ds	2
   958   0000C5                     _currentBlockEEPROM2:
   959                           	callstack 0
   960   0000C5                     	ds	2
   961   0000C7                     _currentBlockEEPROM1:
   962                           	callstack 0
   963   0000C7                     	ds	2
   964   0000C9                     _asup:
   965                           	callstack 0
   966   0000C9                     	ds	1
   967   0000CA                     _flags:
   968                           	callstack 0
   969   0000CA                     	ds	1
   970   0000CB                     _logging:
   971                           	callstack 0
   972   0000CB                     	ds	1
   973   0000CC                     _uart1RxLastError:
   974                           	callstack 0
   975   0000CC                     	ds	1
   976   0000CD                     _gz:
   977                           	callstack 0
   978   0000CD                     	ds	4
   979   0000D1                     _gy:
   980                           	callstack 0
   981   0000D1                     	ds	4
   982   0000D5                     _gx:
   983                           	callstack 0
   984   0000D5                     	ds	4
   985   0000D9                     _az:
   986                           	callstack 0
   987   0000D9                     	ds	4
   988   0000DD                     _ay:
   989                           	callstack 0
   990   0000DD                     	ds	4
   991   0000E1                     _ax:
   992                           	callstack 0
   993   0000E1                     	ds	4
   994   0000E5                     _Tm:
   995                           	callstack 0
   996   0000E5                     	ds	4
   997   0000E9                     _Ndat:
   998                           	callstack 0
   999   0000E9                     	ds	4
  1000                           
  1001                           	psect	bssBANK2
  1002   000214                     __pbssBANK2:
  1003                           	callstack 0
  1004   000214                     floorf@F521:
  1005                           	callstack 0
  1006   000214                     	ds	4
  1007   000218                     ___fpclassifyf@F465:
  1008                           	callstack 0
  1009   000218                     	ds	4
  1010   00021C                     ___ungetbuf:
  1011                           	callstack 0
  1012   00021C                     	ds	3
  1013                           
  1014                           	psect	bssBANK3
  1015   000300                     __pbssBANK3:
  1016                           	callstack 0
  1017   000300                     _I2C1_Status:
  1018                           	callstack 0
  1019   000300                     	ds	36
  1020   000324                     _dbuf:
  1021                           	callstack 0
  1022   000324                     	ds	80
  1023   000374                     _dbuf@doscan$F2259:
  1024                           	callstack 0
  1025   000374                     	ds	32
  1026   000394                     _eepromBuffer:
  1027                           	callstack 0
  1028   000394                     	ds	24
  1029                           
  1030                           	psect	cstackBANK4
  1031   000400                     __pcstackBANK4:
  1032                           	callstack 0
  1033   000400                     main@buffer:
  1034                           	callstack 0
  1035                           
  1036                           ; 200 bytes @ 0x0
  1037   000400                     	ds	200
  1038   0004C8                     main@userInput:
  1039                           	callstack 0
  1040                           
  1041                           ; 20 bytes @ 0xC8
  1042   0004C8                     	ds	20
  1043   0004DC                     main@startReadAddressEEPROM1:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0xDC
  1047   0004DC                     	ds	4
  1048   0004E0                     main@startReadAddressEEPROM2:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0xE0
  1052   0004E0                     	ds	4
  1053   0004E4                     _main$1510:
  1054                           	callstack 0
  1055                           
  1056                           ; 4 bytes @ 0xE4
  1057   0004E4                     	ds	4
  1058   0004E8                     _main$1512:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0xE8
  1062   0004E8                     	ds	4
  1063                           
  1064                           	psect	cstackBANK2
  1065   000200                     __pcstackBANK2:
  1066                           	callstack 0
  1067   000200                     StartLogging@startReadAddressEEPROM1:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x0
  1071   000200                     	ds	4
  1072   000204                     StartLogging@startReadAddressEEPROM2:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x4
  1076   000204                     	ds	4
  1077   000208                     _StartLogging$1474:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x8
  1081   000208                     	ds	4
  1082   00020C                     _StartLogging$1476:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0xC
  1086   00020C                     	ds	4
  1087   000210                     StartLogging@loggedDataCount:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x10
  1091   000210                     	ds	4
  1092                           
  1093                           	psect	cstackBANK1
  1094   000100                     __pcstackBANK1:
  1095                           	callstack 0
  1096   000100                     ReadAndSendEEPROMDataCSV@buffer:
  1097                           	callstack 0
  1098   000100                     ReadAndSendEEPROMData@buffer:
  1099                           	callstack 0
  1100                           
  1101                           ; 200 bytes @ 0x0
  1102   000100                     	ds	200
  1103   0001C8                     ReadAndSendEEPROMDataCSV@eepromReadBuffer:
  1104                           	callstack 0
  1105   0001C8                     ReadAndSendEEPROMData@eepromReadBuffer:
  1106                           	callstack 0
  1107                           
  1108                           ; 24 bytes @ 0xC8
  1109   0001C8                     	ds	24
  1110   0001E0                     ReadAndSendEEPROMDataCSV@i:
  1111                           	callstack 0
  1112   0001E0                     ReadAndSendEEPROMData@i:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0xE0
  1116   0001E0                     	ds	4
  1117   0001E4                     ReadAndSendEEPROMDataCSV@ax_read:
  1118                           	callstack 0
  1119   0001E4                     ReadAndSendEEPROMData@ax_read:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0xE4
  1123   0001E4                     	ds	4
  1124   0001E8                     ReadAndSendEEPROMDataCSV@ay_read:
  1125                           	callstack 0
  1126   0001E8                     ReadAndSendEEPROMData@ay_read:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0xE8
  1130   0001E8                     	ds	4
  1131   0001EC                     ReadAndSendEEPROMDataCSV@az_read:
  1132                           	callstack 0
  1133   0001EC                     ReadAndSendEEPROMData@az_read:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0xEC
  1137   0001EC                     	ds	4
  1138   0001F0                     ReadAndSendEEPROMDataCSV@gx_read:
  1139                           	callstack 0
  1140   0001F0                     ReadAndSendEEPROMData@gx_read:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0xF0
  1144   0001F0                     	ds	4
  1145   0001F4                     ReadAndSendEEPROMDataCSV@gy_read:
  1146                           	callstack 0
  1147   0001F4                     ReadAndSendEEPROMData@gy_read:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0xF4
  1151   0001F4                     	ds	4
  1152   0001F8                     ReadAndSendEEPROMDataCSV@gz_read:
  1153                           	callstack 0
  1154   0001F8                     ReadAndSendEEPROMData@gz_read:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0xF8
  1158   0001F8                     	ds	4
  1159   0001FC                     ReadAndSendEEPROMDataCSV@readBlockEEPROM1:
  1160                           	callstack 0
  1161   0001FC                     ReadAndSendEEPROMData@readBlockEEPROM1:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0xFC
  1165   0001FC                     	ds	2
  1166   0001FE                     ReadAndSendEEPROMDataCSV@readBlockEEPROM2:
  1167                           	callstack 0
  1168   0001FE                     ReadAndSendEEPROMData@readBlockEEPROM2:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0xFE
  1172   0001FE                     	ds	2
  1173                           
  1174                           	psect	cstackBANK0
  1175   000060                     __pcstackBANK0:
  1176                           	callstack 0
  1177   000060                     ??_vfsfcnvrt:
  1178   000060                     efgtoa@ne:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x0
  1182   000060                     	ds	2
  1183   000062                     vfsfcnvrt@vp:
  1184                           	callstack 0
  1185   000062                     efgtoa@p:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x2
  1189   000062                     	ds	1
  1190   000063                     vfsfcnvrt@llu:
  1191                           	callstack 0
  1192                           
  1193                           ; 8 bytes @ 0x3
  1194   000063                     	ds	1
  1195   000064                     efgtoa@t:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x4
  1199   000064                     	ds	2
  1200   000066                     _efgtoa$2088:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x6
  1204   000066                     	ds	2
  1205   000068                     efgtoa@pp:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x8
  1209   000068                     	ds	1
  1210   000069                     efgtoa@mode:
  1211                           	callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x9
  1214   000069                     	ds	1
  1215   00006A                     efgtoa@nmode:
  1216                           	callstack 0
  1217                           
  1218                           ; 1 bytes @ 0xA
  1219   00006A                     	ds	1
  1220   00006B                     efgtoa@d:
  1221                           	callstack 0
  1222   00006B                     vfsfcnvrt@i:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0xB
  1226   00006B                     	ds	2
  1227   00006D                     efgtoa@m:
  1228                           	callstack 0
  1229   00006D                     vfsfcnvrt@c:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0xD
  1233   00006D                     	ds	2
  1234   00006F                     ?_vfscanf:
  1235                           	callstack 0
  1236   00006F                     vfscanf@fp:
  1237                           	callstack 0
  1238   00006F                     efgtoa@e:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0xF
  1242   00006F                     	ds	1
  1243   000070                     vfscanf@fmt:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x10
  1247   000070                     	ds	1
  1248   000071                     efgtoa@w:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x11
  1252   000071                     	ds	1
  1253   000072                     vfscanf@ap:
  1254                           	callstack 0
  1255                           
  1256                           ; 1 bytes @ 0x12
  1257   000072                     	ds	1
  1258   000073                     vfscanf@saved_errno:
  1259                           	callstack 0
  1260   000073                     efgtoa@ou:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x13
  1264   000073                     	ds	2
  1265   000075                     vfscanf@n:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x15
  1269   000075                     	ds	2
  1270   000077                     efgtoa@i:
  1271                           	callstack 0
  1272   000077                     vfscanf@cfmt:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x17
  1276   000077                     	ds	2
  1277   000079                     ?_sscanf:
  1278                           	callstack 0
  1279   000079                     sscanf@s:
  1280                           	callstack 0
  1281   000079                     efgtoa@h:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x19
  1285   000079                     	ds	2
  1286   00007B                     sscanf@fmt:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x1B
  1290   00007B                     	ds	2
  1291   00007D                     efgtoa@l:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x1D
  1295   00007D                     	ds	2
  1296   00007F                     sscanf@ret:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x1F
  1300   00007F                     	ds	2
  1301   000081                     efgtoa@sign:
  1302                           	callstack 0
  1303   000081                     sscanf@ap:
  1304                           	callstack 0
  1305                           
  1306                           ; 1 bytes @ 0x21
  1307   000081                     	ds	1
  1308   000082                     efgtoa@g:
  1309                           	callstack 0
  1310   000082                     sscanf@f:
  1311                           	callstack 0
  1312                           
  1313                           ; 12 bytes @ 0x22
  1314   000082                     	ds	4
  1315   000086                     efgtoa@n:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x26
  1319   000086                     	ds	2
  1320   000088                     efgtoa@u:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0x28
  1324   000088                     	ds	4
  1325   00008C                     vfpfcnvrt@fp:
  1326                           	callstack 0
  1327                           
  1328                           ; 1 bytes @ 0x2C
  1329   00008C                     	ds	1
  1330   00008D                     vfpfcnvrt@fmt:
  1331                           	callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x2D
  1334   00008D                     	ds	1
  1335   00008E                     vfpfcnvrt@ap:
  1336                           	callstack 0
  1337   00008E                     ParseUserInput@input:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x2E
  1341   00008E                     	ds	1
  1342   00008F                     ?_vfprintf:
  1343                           	callstack 0
  1344   00008F                     vfprintf@fp:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x2F
  1348   00008F                     	ds	1
  1349   000090                     ParseUserInput@Tm:
  1350                           	callstack 0
  1351   000090                     vfprintf@fmt:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x30
  1355   000090                     	ds	1
  1356   000091                     ParseUserInput@Ndat:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x31
  1360   000091                     	ds	1
  1361   000092                     vfprintf@ap:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x32
  1365   000092                     	ds	1
  1366   000093                     ?_sprintf:
  1367                           	callstack 0
  1368   000093                     sprintf@s:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x33
  1372   000093                     	ds	2
  1373   000095                     sprintf@fmt:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x35
  1377   000095                     	ds	26
  1378   0000AF                     ReadAndSendEEPROMDataCSV@Ndat:
  1379                           	callstack 0
  1380   0000AF                     ReadAndSendEEPROMData@Ndat:
  1381                           	callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x4F
  1384   0000AF                     	ds	4
  1385   0000B3                     ReadAndSendEEPROMDataCSV@startAddressEEPROM1:
  1386                           	callstack 0
  1387   0000B3                     ReadAndSendEEPROMData@startAddressEEPROM1:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x53
  1391   0000B3                     	ds	2
  1392   0000B5                     ReadAndSendEEPROMDataCSV@startAddressEEPROM2:
  1393                           	callstack 0
  1394   0000B5                     ReadAndSendEEPROMData@startAddressEEPROM2:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x55
  1398   0000B5                     	ds	2
  1399   0000B7                     ??_StartLogging:
  1400                           
  1401                           ; 1 bytes @ 0x57
  1402   0000B7                     	ds	2
  1403                           
  1404                           	psect	cstackCOMRAM
  1405   000001                     __pcstackCOMRAM:
  1406                           	callstack 0
  1407   000001                     ?_strncmp:
  1408                           	callstack 0
  1409   000001                     ?___fpclassifyf:
  1410                           	callstack 0
  1411   000001                     ?_getch:
  1412                           	callstack 0
  1413   000001                     ?___wmul:
  1414                           	callstack 0
  1415   000001                     ?___fladd:
  1416                           	callstack 0
  1417   000001                     ?___flmul:
  1418                           	callstack 0
  1419   000001                     ?_labs:
  1420                           	callstack 0
  1421   000001                     ?___lmul:
  1422                           	callstack 0
  1423   000001                     ?___lldiv:
  1424                           	callstack 0
  1425   000001                     ?___flneg:
  1426                           	callstack 0
  1427   000001                     ?___fltol:
  1428                           	callstack 0
  1429   000001                     ?___llmod:
  1430                           	callstack 0
  1431   000001                     ?___xxtofl:
  1432                           	callstack 0
  1433   000001                     ?___omul:
  1434                           	callstack 0
  1435   000001                     UART1_Write@txData:
  1436                           	callstack 0
  1437   000001                     I2C1_Open@address:
  1438                           	callstack 0
  1439   000001                     I2C1_Close@returnValue:
  1440                           	callstack 0
  1441   000001                     I2C1_MasterSendTxData@data:
  1442                           	callstack 0
  1443   000001                     I2C1_MasterSetCounter@counter:
  1444                           	callstack 0
  1445   000001                     UART1_SetFramingErrorHandler@interruptHandler:
  1446                           	callstack 0
  1447   000001                     UART1_SetOverrunErrorHandler@interruptHandler:
  1448                           	callstack 0
  1449   000001                     UART1_SetErrorHandler@interruptHandler:
  1450                           	callstack 0
  1451   000001                     I2C1_SetBuffer@buffer:
  1452                           	callstack 0
  1453   000001                     I2C1_SetCallback@cb:
  1454                           	callstack 0
  1455   000001                     UART_ReceiveString@receivedString:
  1456                           	callstack 0
  1457   000001                     ___wmul@multiplier:
  1458                           	callstack 0
  1459   000001                     memcpy@d1:
  1460                           	callstack 0
  1461   000001                     memset@dest:
  1462                           	callstack 0
  1463   000001                     ungetc@c:
  1464                           	callstack 0
  1465   000001                     strcpy@dest:
  1466                           	callstack 0
  1467   000001                     strncmp@l:
  1468                           	callstack 0
  1469   000001                     custom_delay_ms@milliseconds:
  1470                           	callstack 0
  1471   000001                     ___lmul@multiplier:
  1472                           	callstack 0
  1473   000001                     ___lldiv@dividend:
  1474                           	callstack 0
  1475   000001                     ___fleq@ff1:
  1476                           	callstack 0
  1477   000001                     ___flneg@f1:
  1478                           	callstack 0
  1479   000001                     ___fltol@f1:
  1480                           	callstack 0
  1481   000001                     ___llmod@dividend:
  1482                           	callstack 0
  1483   000001                     ___fladd@b:
  1484                           	callstack 0
  1485   000001                     ___flmul@b:
  1486                           	callstack 0
  1487   000001                     ___xxtofl@val:
  1488                           	callstack 0
  1489   000001                     ___fpclassifyf@x:
  1490                           	callstack 0
  1491   000001                     labs@a:
  1492                           	callstack 0
  1493   000001                     ___omul@multiplier:
  1494                           	callstack 0
  1495                           
  1496                           ; 8 bytes @ 0x0
  1497   000001                     	ds	1
  1498   000002                     putch@txData:
  1499                           	callstack 0
  1500   000002                     I2C1_Open@returnValue:
  1501                           	callstack 0
  1502   000002                     UART_SendString@str:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x1
  1506   000002                     	ds	1
  1507   000003                     ?_fgetc:
  1508                           	callstack 0
  1509   000003                     UART_ReceiveString@maxLength:
  1510                           	callstack 0
  1511   000003                     fgetc@fp:
  1512                           	callstack 0
  1513   000003                     ungetc@fp:
  1514                           	callstack 0
  1515   000003                     I2C1_SetBuffer@bufferSize:
  1516                           	callstack 0
  1517   000003                     I2C1_SetCallback@ptr:
  1518                           	callstack 0
  1519   000003                     ___wmul@multiplicand:
  1520                           	callstack 0
  1521   000003                     memcpy@s1:
  1522                           	callstack 0
  1523   000003                     memset@c:
  1524                           	callstack 0
  1525   000003                     fputc@c:
  1526                           	callstack 0
  1527   000003                     strcpy@src:
  1528                           	callstack 0
  1529   000003                     strncmp@r:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x2
  1533   000003                     	ds	1
  1534   000004                     ??_ungetc:
  1535   000004                     ??_UART_ReceiveString:
  1536                           
  1537                           ; 1 bytes @ 0x3
  1538   000004                     	ds	1
  1539   000005                     ??___fpclassifyf:
  1540   000005                     ??_labs:
  1541   000005                     ??_fgetc:
  1542   000005                     ??_custom_delay_ms:
  1543   000005                     ??___fltol:
  1544   000005                     ??___xxtofl:
  1545   000005                     I2C1_SetCallback@idx:
  1546                           	callstack 0
  1547   000005                     fputc@fp:
  1548                           	callstack 0
  1549   000005                     ___wmul@product:
  1550                           	callstack 0
  1551   000005                     memcpy@n:
  1552                           	callstack 0
  1553   000005                     memset@n:
  1554                           	callstack 0
  1555   000005                     strcpy@d:
  1556                           	callstack 0
  1557   000005                     strncmp@n:
  1558                           	callstack 0
  1559   000005                     ___lmul@multiplicand:
  1560                           	callstack 0
  1561   000005                     ___lldiv@divisor:
  1562                           	callstack 0
  1563   000005                     ___fleq@ff2:
  1564                           	callstack 0
  1565   000005                     ___llmod@divisor:
  1566                           	callstack 0
  1567   000005                     ___fladd@a:
  1568                           	callstack 0
  1569   000005                     ___flmul@a:
  1570                           	callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x4
  1573   000005                     	ds	1
  1574   000006                     ??_fputc:
  1575   000006                     I2C1_SetDataCompleteCallback@cb:
  1576                           	callstack 0
  1577   000006                     I2C1_SetAddressNackCallback@cb:
  1578                           	callstack 0
  1579                           
  1580                           ; 2 bytes @ 0x5
  1581   000006                     	ds	1
  1582   000007                     ??_strncmp:
  1583   000007                     ?_read_prec_or_width:
  1584                           	callstack 0
  1585   000007                     memcpy@tmp:
  1586                           	callstack 0
  1587   000007                     read_prec_or_width@fmt:
  1588                           	callstack 0
  1589   000007                     memset@p:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x6
  1593   000007                     	ds	1
  1594   000008                     read_prec_or_width@ap:
  1595                           	callstack 0
  1596   000008                     I2C1_SetDataCompleteCallback@ptr:
  1597                           	callstack 0
  1598   000008                     I2C1_SetAddressNackCallback@ptr:
  1599                           	callstack 0
  1600   000008                     memcpy@d:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x7
  1604   000008                     	ds	1
  1605   000009                     ??___fladd:
  1606   000009                     ??___flmul:
  1607   000009                     ??___fleq:
  1608   000009                     UART_ReceiveString@data:
  1609                           	callstack 0
  1610   000009                     ___fltol@sign1:
  1611                           	callstack 0
  1612   000009                     ___llmod@counter:
  1613                           	callstack 0
  1614   000009                     ___xxtofl@sign:
  1615                           	callstack 0
  1616   000009                     read_prec_or_width@c:
  1617                           	callstack 0
  1618   000009                     ___fpclassifyf@e:
  1619                           	callstack 0
  1620   000009                     ___lmul@product:
  1621                           	callstack 0
  1622   000009                     ___lldiv@quotient:
  1623                           	callstack 0
  1624   000009                     ___omul@multiplicand:
  1625                           	callstack 0
  1626                           
  1627                           ; 8 bytes @ 0x8
  1628   000009                     	ds	1
  1629   00000A                     UART_ReceiveString@index:
  1630                           	callstack 0
  1631   00000A                     ___fltol@exp1:
  1632                           	callstack 0
  1633   00000A                     ___xxtofl@exp:
  1634                           	callstack 0
  1635   00000A                     rd1RegCompleteHandler@ptr:
  1636                           	callstack 0
  1637   00000A                     rd2RegCompleteHandler@ptr:
  1638                           	callstack 0
  1639   00000A                     wr1RegCompleteHandler@ptr:
  1640                           	callstack 0
  1641   00000A                     wr2RegCompleteHandler@ptr:
  1642                           	callstack 0
  1643   00000A                     rdBlkRegCompleteHandler@ptr:
  1644                           	callstack 0
  1645   00000A                     I2C1_CallbackReturnReset@funPtr:
  1646                           	callstack 0
  1647   00000A                     memcpy@s:
  1648                           	callstack 0
  1649   00000A                     read_prec_or_width@n:
  1650                           	callstack 0
  1651   00000A                     fgetc@c:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x9
  1655   00000A                     	ds	1
  1656   00000B                     fputs@s:
  1657                           	callstack 0
  1658   00000B                     ___xxtofl@arg:
  1659                           	callstack 0
  1660   00000B                     ___fpclassifyf@u:
  1661                           	callstack 0
  1662                           
  1663                           ; 4 bytes @ 0xA
  1664   00000B                     	ds	1
  1665   00000C                     ??_rdBlkRegCompleteHandler:
  1666   00000C                     skipws@fp:
  1667                           	callstack 0
  1668                           
  1669                           ; 1 bytes @ 0xB
  1670   00000C                     	ds	1
  1671   00000D                     ??_I2C1_DO_TX:
  1672   00000D                     ??_I2C1_DO_TX_EMPTY:
  1673   00000D                     ??_I2C1_DO_RX_EMPTY:
  1674   00000D                     ??_I2C1_DO_ADDRESS_NACK:
  1675   00000D                     ??_I2C1_DO_BUS_COLLISION:
  1676   00000D                     ??_skipws:
  1677   00000D                     ___lldiv@counter:
  1678                           	callstack 0
  1679   00000D                     ___fladd@signs:
  1680                           	callstack 0
  1681   00000D                     ___flmul@sign:
  1682                           	callstack 0
  1683   00000D                     fputs@fp:
  1684                           	callstack 0
  1685                           
  1686                           ; 1 bytes @ 0xC
  1687   00000D                     	ds	1
  1688   00000E                     ___fladd@aexp:
  1689                           	callstack 0
  1690   00000E                     ___flmul@aexp:
  1691                           	callstack 0
  1692   00000E                     fputs@c:
  1693                           	callstack 0
  1694   00000E                     skipws@c:
  1695                           	callstack 0
  1696                           
  1697                           ; 2 bytes @ 0xD
  1698   00000E                     	ds	1
  1699   00000F                     ??_I2C1_DO_RX:
  1700   00000F                     ?___fldiv:
  1701                           	callstack 0
  1702   00000F                     I2C1_DO_TX@dataTx:
  1703                           	callstack 0
  1704   00000F                     ___fladd@bexp:
  1705                           	callstack 0
  1706   00000F                     fputs@i:
  1707                           	callstack 0
  1708   00000F                     ___fldiv@b:
  1709                           	callstack 0
  1710   00000F                     ___flmul@grs:
  1711                           	callstack 0
  1712                           
  1713                           ; 4 bytes @ 0xE
  1714   00000F                     	ds	1
  1715   000010                     I2C1_DO_TX@retFsmState:
  1716                           	callstack 0
  1717   000010                     ___fladd@grs:
  1718                           	callstack 0
  1719                           
  1720                           ; 1 bytes @ 0xF
  1721   000010                     	ds	1
  1722   000011                     I2C1_DO_RX@retFsmState:
  1723                           	callstack 0
  1724   000011                     pad@fp:
  1725                           	callstack 0
  1726   000011                     _I2C1_DO_TX$1073:
  1727                           	callstack 0
  1728   000011                     ___omul@product:
  1729                           	callstack 0
  1730                           
  1731                           ; 8 bytes @ 0x10
  1732   000011                     	ds	1
  1733   000012                     pad@buf:
  1734                           	callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x11
  1737   000012                     	ds	1
  1738   000013                     ??_I2C1_MasterFsm:
  1739   000013                     ___flmul@bexp:
  1740                           	callstack 0
  1741   000013                     ___fldiv@a:
  1742                           	callstack 0
  1743                           
  1744                           ; 4 bytes @ 0x12
  1745   000013                     	ds	1
  1746   000014                     pad@p:
  1747                           	callstack 0
  1748   000014                     ___flmul@prod:
  1749                           	callstack 0
  1750                           
  1751                           ; 4 bytes @ 0x13
  1752   000014                     	ds	1
  1753   000015                     I2C1_MasterOperation@read:
  1754                           	callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x14
  1757   000015                     	ds	1
  1758   000016                     ??_pad:
  1759   000016                     I2C1_MasterOperation@returnValue:
  1760                           	callstack 0
  1761                           
  1762                           ; 1 bytes @ 0x15
  1763   000016                     	ds	1
  1764   000017                     ??___fldiv:
  1765   000017                     I2C1_Write1ByteRegister@reg:
  1766                           	callstack 0
  1767   000017                     I2C1_WriteNBytes@data:
  1768                           	callstack 0
  1769   000017                     I2C1_ReadNBytes@data:
  1770                           	callstack 0
  1771   000017                     I2C1_ReadDataBlock@reg:
  1772                           	callstack 0
  1773   000017                     pad@i:
  1774                           	callstack 0
  1775                           
  1776                           ; 2 bytes @ 0x16
  1777   000017                     	ds	1
  1778   000018                     I2C1_Write1ByteRegister@data:
  1779                           	callstack 0
  1780   000018                     I2C1_ReadDataBlock@data:
  1781                           	callstack 0
  1782   000018                     I2C1_WriteNBytes@len:
  1783                           	callstack 0
  1784   000018                     I2C1_ReadNBytes@len:
  1785                           	callstack 0
  1786   000018                     ___flmul@temp:
  1787                           	callstack 0
  1788                           
  1789                           ; 2 bytes @ 0x17
  1790   000018                     	ds	1
  1791   000019                     ?___strtoxll:
  1792                           	callstack 0
  1793   000019                     I2C1_Write1ByteRegister@address:
  1794                           	callstack 0
  1795   000019                     utoa@fp:
  1796                           	callstack 0
  1797   000019                     xtoa@fp:
  1798                           	callstack 0
  1799   000019                     I2C1_ReadDataBlock@len:
  1800                           	callstack 0
  1801   000019                     ___strtoxll@s:
  1802                           	callstack 0
  1803                           
  1804                           ; 2 bytes @ 0x18
  1805   000019                     	ds	1
  1806   00001A                     ?___flsub:
  1807                           	callstack 0
  1808   00001A                     I2C1_WriteNBytes@address:
  1809                           	callstack 0
  1810   00001A                     I2C1_ReadNBytes@address:
  1811                           	callstack 0
  1812   00001A                     ___flge@ff1:
  1813                           	callstack 0
  1814   00001A                     ___flsub@b:
  1815                           	callstack 0
  1816   00001A                     utoa@d:
  1817                           	callstack 0
  1818   00001A                     xtoa@d:
  1819                           	callstack 0
  1820                           
  1821                           ; 4 bytes @ 0x19
  1822   00001A                     	ds	1
  1823   00001B                     I2C1_ReadDataBlock@address:
  1824                           	callstack 0
  1825   00001B                     ___strtoxll@endptr:
  1826                           	callstack 0
  1827   00001B                     EEPROM_WriteByte@memoryAddress:
  1828                           	callstack 0
  1829   00001B                     EEPROM_ReadByte@memoryAddress:
  1830                           	callstack 0
  1831   00001B                     ___fldiv@rem:
  1832                           	callstack 0
  1833                           
  1834                           ; 4 bytes @ 0x1A
  1835   00001B                     	ds	1
  1836   00001C                     ___strtoxll@base:
  1837                           	callstack 0
  1838   00001C                     I2C1_ReadDataBlock@bufferBlock:
  1839                           	callstack 0
  1840                           
  1841                           ; 3 bytes @ 0x1B
  1842   00001C                     	ds	1
  1843   00001D                     EEPROM_WriteByte@data:
  1844                           	callstack 0
  1845   00001D                     EEPROM_ReadByte@addressBuffer:
  1846                           	callstack 0
  1847                           
  1848                           ; 2 bytes @ 0x1C
  1849   00001D                     	ds	1
  1850   00001E                     ??_EEPROM_WriteByte:
  1851   00001E                     ??_xtoa:
  1852   00001E                     ___strtoxll@is_signed:
  1853                           	callstack 0
  1854   00001E                     utoa@w:
  1855                           	callstack 0
  1856   00001E                     ___flge@ff2:
  1857                           	callstack 0
  1858   00001E                     ___flsub@a:
  1859                           	callstack 0
  1860                           
  1861                           ; 4 bytes @ 0x1D
  1862   00001E                     	ds	1
  1863   00001F                     EEPROM_WriteByte@deviceAddress:
  1864                           	callstack 0
  1865   00001F                     EEPROM_ReadByte@deviceAddress:
  1866                           	callstack 0
  1867   00001F                     ___fldiv@sign:
  1868                           	callstack 0
  1869                           
  1870                           ; 1 bytes @ 0x1E
  1871   00001F                     	ds	1
  1872   000020                     EEPROM_ReadByte@data:
  1873                           	callstack 0
  1874   000020                     ___fldiv@new_exp:
  1875                           	callstack 0
  1876   000020                     utoa@p:
  1877                           	callstack 0
  1878   000020                     EEPROM_WriteByte@buffer:
  1879                           	callstack 0
  1880                           
  1881                           ; 3 bytes @ 0x1F
  1882   000020                     	ds	1
  1883   000021                     ??___strtoxll:
  1884   000021                     EEPROM_ReadBlock@memoryAddress:
  1885                           	callstack 0
  1886                           
  1887                           ; 2 bytes @ 0x20
  1888   000021                     	ds	1
  1889   000022                     ??___flge:
  1890   000022                     utoa@i:
  1891                           	callstack 0
  1892   000022                     xtoa@w:
  1893                           	callstack 0
  1894   000022                     ___fldiv@grs:
  1895                           	callstack 0
  1896                           
  1897                           ; 4 bytes @ 0x21
  1898   000022                     	ds	1
  1899   000023                     EEPROM_WriteBlock@memoryAddress:
  1900                           	callstack 0
  1901   000023                     EEPROM_ReadBlock@data:
  1902                           	callstack 0
  1903                           
  1904                           ; 2 bytes @ 0x22
  1905   000023                     	ds	1
  1906   000024                     xtoa@p:
  1907                           	callstack 0
  1908                           
  1909                           ; 2 bytes @ 0x23
  1910   000024                     	ds	1
  1911   000025                     EEPROM_ReadBlock@size:
  1912                           	callstack 0
  1913   000025                     EEPROM_WriteBlock@data:
  1914                           	callstack 0
  1915                           
  1916                           ; 2 bytes @ 0x24
  1917   000025                     	ds	1
  1918   000026                     ??_EEPROM_ReadBlock:
  1919   000026                     ___fldiv@bexp:
  1920                           	callstack 0
  1921   000026                     xtoa@c:
  1922                           	callstack 0
  1923                           
  1924                           ; 1 bytes @ 0x25
  1925   000026                     	ds	1
  1926   000027                     EEPROM_WriteBlock@size:
  1927                           	callstack 0
  1928   000027                     EEPROM_ReadBlock@deviceAddress:
  1929                           	callstack 0
  1930   000027                     ___fldiv@aexp:
  1931                           	callstack 0
  1932   000027                     xtoa@i:
  1933                           	callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x26
  1936   000027                     	ds	1
  1937   000028                     ?_floorf:
  1938                           	callstack 0
  1939   000028                     MPU6050_ReadSensorData@ax:
  1940                           	callstack 0
  1941   000028                     EEPROM_WriteBlock@deviceAddress:
  1942                           	callstack 0
  1943   000028                     EEPROM_ReadBlock@i:
  1944                           	callstack 0
  1945   000028                     floorf@x:
  1946                           	callstack 0
  1947                           
  1948                           ; 4 bytes @ 0x27
  1949   000028                     	ds	1
  1950   000029                     ??_LoadCurrentAddressEEPROM:
  1951   000029                     MPU6050_ReadSensorData@ay:
  1952                           	callstack 0
  1953   000029                     EEPROM_WriteBlock@i:
  1954                           	callstack 0
  1955   000029                     ___strtoxll@prev_a:
  1956                           	callstack 0
  1957                           
  1958                           ; 8 bytes @ 0x28
  1959   000029                     	ds	1
  1960   00002A                     MPU6050_ReadSensorData@az:
  1961                           	callstack 0
  1962   00002A                     StoreCurrentAddressEEPROM@addressBuffer:
  1963                           	callstack 0
  1964                           
  1965                           ; 2 bytes @ 0x29
  1966   00002A                     	ds	1
  1967   00002B                     MPU6050_ReadSensorData@gx:
  1968                           	callstack 0
  1969   00002B                     LoadCurrentAddressEEPROM@addressBuffer:
  1970                           	callstack 0
  1971                           
  1972                           ; 2 bytes @ 0x2A
  1973   00002B                     	ds	1
  1974   00002C                     ??_floorf:
  1975   00002C                     MPU6050_ReadSensorData@gy:
  1976                           	callstack 0
  1977                           
  1978                           ; 1 bytes @ 0x2B
  1979   00002C                     	ds	1
  1980   00002D                     MPU6050_ReadSensorData@gz:
  1981                           	callstack 0
  1982                           
  1983                           ; 1 bytes @ 0x2C
  1984   00002D                     	ds	1
  1985   00002E                     ??_MPU6050_ReadSensorData:
  1986                           
  1987                           ; 1 bytes @ 0x2D
  1988   00002E                     	ds	2
  1989   000030                     MPU6050_ReadSensorData@buffer:
  1990                           	callstack 0
  1991                           
  1992                           ; 12 bytes @ 0x2F
  1993   000030                     	ds	1
  1994   000031                     ___strtoxll$2313:
  1995                           	callstack 0
  1996                           
  1997                           ; 2 bytes @ 0x30
  1998   000031                     	ds	1
  1999   000032                     floorf@m:
  2000                           	callstack 0
  2001                           
  2002                           ; 4 bytes @ 0x31
  2003   000032                     	ds	1
  2004   000033                     ___strtoxll$2314:
  2005                           	callstack 0
  2006                           
  2007                           ; 2 bytes @ 0x32
  2008   000033                     	ds	2
  2009   000035                     ___strtoxll@limit:
  2010                           	callstack 0
  2011                           
  2012                           ; 8 bytes @ 0x34
  2013   000035                     	ds	1
  2014   000036                     floorf@e:
  2015                           	callstack 0
  2016                           
  2017                           ; 2 bytes @ 0x35
  2018   000036                     	ds	2
  2019   000038                     floorf@u:
  2020                           	callstack 0
  2021                           
  2022                           ; 4 bytes @ 0x37
  2023   000038                     	ds	4
  2024   00003C                     efgtoa@fp:
  2025                           	callstack 0
  2026   00003C                     MPU6050_ReadSensorData@ax_raw:
  2027                           	callstack 0
  2028                           
  2029                           ; 2 bytes @ 0x3B
  2030   00003C                     	ds	1
  2031   00003D                     ___strtoxll@flags:
  2032                           	callstack 0
  2033   00003D                     efgtoa@f:
  2034                           	callstack 0
  2035                           
  2036                           ; 4 bytes @ 0x3C
  2037   00003D                     	ds	1
  2038   00003E                     MPU6050_ReadSensorData@ay_raw:
  2039                           	callstack 0
  2040   00003E                     ___strtoxll@a:
  2041                           	callstack 0
  2042                           
  2043                           ; 8 bytes @ 0x3D
  2044   00003E                     	ds	2
  2045   000040                     MPU6050_ReadSensorData@az_raw:
  2046                           	callstack 0
  2047                           
  2048                           ; 2 bytes @ 0x3F
  2049   000040                     	ds	1
  2050   000041                     efgtoa@c:
  2051                           	callstack 0
  2052                           
  2053                           ; 1 bytes @ 0x40
  2054   000041                     	ds	1
  2055   000042                     ??_efgtoa:
  2056   000042                     MPU6050_ReadSensorData@gx_raw:
  2057                           	callstack 0
  2058                           
  2059                           ; 2 bytes @ 0x41
  2060   000042                     	ds	2
  2061   000044                     ??_vfpfcnvrt:
  2062   000044                     MPU6050_ReadSensorData@gy_raw:
  2063                           	callstack 0
  2064                           
  2065                           ; 2 bytes @ 0x43
  2066   000044                     	ds	2
  2067   000046                     MPU6050_ReadSensorData@gz_raw:
  2068                           	callstack 0
  2069   000046                     ___strtoxll@cp:
  2070                           	callstack 0
  2071   000046                     vfpfcnvrt@convarg:
  2072                           	callstack 0
  2073                           
  2074                           ; 4 bytes @ 0x45
  2075   000046                     	ds	2
  2076   000048                     ___strtoxll@c:
  2077                           	callstack 0
  2078                           
  2079                           ; 1 bytes @ 0x47
  2080   000048                     	ds	1
  2081   000049                     ?_atou:
  2082                           	callstack 0
  2083   000049                     atou@fp:
  2084                           	callstack 0
  2085                           
  2086                           ; 1 bytes @ 0x48
  2087   000049                     	ds	1
  2088   00004A                     vfpfcnvrt@c:
  2089                           	callstack 0
  2090   00004A                     atou@pll:
  2091                           	callstack 0
  2092                           
  2093                           ; 1 bytes @ 0x49
  2094   00004A                     	ds	1
  2095   00004B                     ??_atou:
  2096   00004B                     vfpfcnvrt@cp:
  2097                           	callstack 0
  2098                           
  2099                           ; 2 bytes @ 0x4A
  2100   00004B                     	ds	2
  2101   00004D                     vfprintf@cfmt:
  2102                           	callstack 0
  2103                           
  2104                           ; 2 bytes @ 0x4C
  2105   00004D                     	ds	2
  2106   00004F                     sprintf@ap:
  2107                           	callstack 0
  2108                           
  2109                           ; 1 bytes @ 0x4E
  2110   00004F                     	ds	1
  2111   000050                     sprintf@f:
  2112                           	callstack 0
  2113                           
  2114                           ; 12 bytes @ 0x4F
  2115   000050                     	ds	3
  2116   000053                     atou@ep:
  2117                           	callstack 0
  2118                           
  2119                           ; 2 bytes @ 0x52
  2120   000053                     	ds	2
  2121   000055                     atou@w:
  2122                           	callstack 0
  2123                           
  2124                           ; 2 bytes @ 0x54
  2125   000055                     	ds	2
  2126   000057                     atou@i:
  2127                           	callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x56
  2130   000057                     	ds	2
  2131   000059                     atou@c:
  2132                           	callstack 0
  2133                           
  2134                           ; 2 bytes @ 0x58
  2135   000059                     	ds	2
  2136   00005B                     ?_vfsfcnvrt:
  2137                           	callstack 0
  2138   00005B                     vfsfcnvrt@fp:
  2139                           	callstack 0
  2140                           
  2141                           ; 1 bytes @ 0x5A
  2142   00005B                     	ds	1
  2143   00005C                     ??_ReadAndSendEEPROMDataCSV:
  2144   00005C                     ??_ReadAndSendEEPROMData:
  2145   00005C                     vfsfcnvrt@fmt:
  2146                           	callstack 0
  2147                           
  2148                           ; 1 bytes @ 0x5B
  2149   00005C                     	ds	1
  2150   00005D                     vfsfcnvrt@ap:
  2151                           	callstack 0
  2152                           
  2153                           ; 1 bytes @ 0x5C
  2154   00005D                     	ds	1
  2155   00005E                     
  2156                           ; 1 bytes @ 0x5D
  2157 ;;
  2158 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2159 ;;
  2160 ;; *************** function _main *****************
  2161 ;; Defined at:
  2162 ;;		line 382 in file "main.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  startReadAdd    4  224[BANK4 ] unsigned long 
  2167 ;;  startReadAdd    4  220[BANK4 ] unsigned long 
  2168 ;;  buffer        200    0[BANK4 ] unsigned char [200]
  2169 ;;  userInput      20  200[BANK4 ] unsigned char [20]
  2170 ;;  gz_read         4    0        float 
  2171 ;;  gy_read         4    0        float 
  2172 ;;  gx_read         4    0        float 
  2173 ;;  az_read         4    0        float 
  2174 ;;  ay_read         4    0        float 
  2175 ;;  ax_read         4    0        float 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0     236       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Totals:         0       0       0       0       0     236       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;Total ram usage:      236 bytes
  2190 ;; Hardware stack levels required when called: 16
  2191 ;; This function calls:
  2192 ;;		_LoadCurrentAddressEEPROM
  2193 ;;		_MPU6050_Init
  2194 ;;		_ParseUserInput
  2195 ;;		_ReadAndSendEEPROMDataCSV
  2196 ;;		_SYSTEM_Initialize
  2197 ;;		_StartLogging
  2198 ;;		_UART_ReceiveString
  2199 ;;		_UART_SendString
  2200 ;;		___lmul
  2201 ;;		_memset
  2202 ;;		_sprintf
  2203 ;;		_strncmp
  2204 ;; This function is called by:
  2205 ;;		Startup code after reset
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text0
  2210   00D156                     __ptext0:
  2211                           	callstack 0
  2212   00D156                     _main:
  2213                           	callstack 15
  2214   00D156                     
  2215                           ;main.c: 383:     SYSTEM_Initialize();
  2216   00D156  EC6E  F053         	call	_SYSTEM_Initialize	;wreg free
  2217   00D15A                     
  2218                           ;main.c: 384:     MPU6050_Init();
  2219   00D15A  EC19  F053         	call	_MPU6050_Init	;wreg free
  2220   00D15E                     
  2221                           ;main.c: 386:     char buffer[200];;main.c: 387:     float ax_read, ay_read, az_read, gx
      +                          _read, gy_read, gz_read;;main.c: 389:     char userInput[20];;main.c: 391:     LoadCurre
      +                          ntAddressEEPROM();
  2222   00D15E  EC39  F055         	call	_LoadCurrentAddressEEPROM	;wreg free
  2223   00D162                     
  2224                           ;main.c: 394:     sprintf(buffer, "Ultima direccion registrada en EEPROM1: 0x%X\n", curr
      +                          entBlockEEPROM1);
  2225   00D162  0E00               	movlw	low main@buffer
  2226   00D164  0100               	movlb	0	; () banked
  2227   00D166  6F93               	movwf	sprintf@s& (0+255),b
  2228   00D168  0E04               	movlw	high main@buffer
  2229   00D16A  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2230   00D16C  0ED2               	movlw	low STR_10
  2231   00D16E  6F95               	movwf	sprintf@fmt& (0+255),b
  2232   00D170  0EFE               	movlw	high STR_10
  2233   00D172  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2234   00D174  C0C7  F097         	movff	_currentBlockEEPROM1,?_sprintf+4
  2235   00D178  C0C8  F098         	movff	_currentBlockEEPROM1+1,?_sprintf+5
  2236   00D17C  EC39  F056         	call	_sprintf	;wreg free
  2237   00D180                     
  2238                           ;main.c: 395:     UART_SendString(buffer);
  2239   00D180  0E00               	movlw	low main@buffer
  2240   00D182  6E02               	movwf	UART_SendString@str^0,c
  2241   00D184  0E04               	movlw	high main@buffer
  2242   00D186  6E03               	movwf	(UART_SendString@str+1)^0,c
  2243   00D188  EC9B  F059         	call	_UART_SendString	;wreg free
  2244   00D18C                     
  2245                           ;main.c: 398:     sprintf(buffer, "Ultima direccion registrada en EEPROM2: 0x%X\n", curr
      +                          entBlockEEPROM2);
  2246   00D18C  0E00               	movlw	low main@buffer
  2247   00D18E  0100               	movlb	0	; () banked
  2248   00D190  6F93               	movwf	sprintf@s& (0+255),b
  2249   00D192  0E04               	movlw	high main@buffer
  2250   00D194  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2251   00D196  0E00               	movlw	low STR_11
  2252   00D198  6F95               	movwf	sprintf@fmt& (0+255),b
  2253   00D19A  0EFF               	movlw	high STR_11
  2254   00D19C  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2255   00D19E  C0C5  F097         	movff	_currentBlockEEPROM2,?_sprintf+4
  2256   00D1A2  C0C6  F098         	movff	_currentBlockEEPROM2+1,?_sprintf+5
  2257   00D1A6  EC39  F056         	call	_sprintf	;wreg free
  2258   00D1AA                     l10799:
  2259                           
  2260                           ;main.c: 399:     UART_SendString(buffer);
  2261   00D1AA  0E00               	movlw	low main@buffer
  2262   00D1AC  6E02               	movwf	UART_SendString@str^0,c
  2263   00D1AE  0E04               	movlw	high main@buffer
  2264   00D1B0  6E03               	movwf	(UART_SendString@str+1)^0,c
  2265   00D1B2  EC9B  F059         	call	_UART_SendString	;wreg free
  2266   00D1B6                     l10801:
  2267                           
  2268                           ;main.c: 404:         UART_SendString("Ingrese comando (ejemplo: LOG(10,100), LOG_READ o
      +                           LOG_STAT): ");
  2269   00D1B6  0E62               	movlw	low STR_12
  2270   00D1B8  6E02               	movwf	UART_SendString@str^0,c
  2271   00D1BA  0EFE               	movlw	high STR_12
  2272   00D1BC  6E03               	movwf	(UART_SendString@str+1)^0,c
  2273   00D1BE  EC9B  F059         	call	_UART_SendString	;wreg free
  2274   00D1C2                     
  2275                           ;main.c: 406:         memset(userInput, 0, sizeof(userInput));
  2276   00D1C2  0EC8               	movlw	low main@userInput
  2277   00D1C4  6E01               	movwf	memset@dest^0,c
  2278   00D1C6  0E04               	movlw	high main@userInput
  2279   00D1C8  6E02               	movwf	(memset@dest+1)^0,c
  2280   00D1CA  0E00               	movlw	0
  2281   00D1CC  6E04               	movwf	(memset@c+1)^0,c
  2282   00D1CE  0E00               	movlw	0
  2283   00D1D0  6E03               	movwf	memset@c^0,c
  2284   00D1D2  0E00               	movlw	0
  2285   00D1D4  6E06               	movwf	(memset@n+1)^0,c
  2286   00D1D6  0E14               	movlw	20
  2287   00D1D8  6E05               	movwf	memset@n^0,c
  2288   00D1DA  EC73  F055         	call	_memset	;wreg free
  2289   00D1DE                     
  2290                           ;main.c: 408:         UART_ReceiveString(userInput, sizeof(userInput));
  2291   00D1DE  0EC8               	movlw	low main@userInput
  2292   00D1E0  6E01               	movwf	UART_ReceiveString@receivedString^0,c
  2293   00D1E2  0E04               	movlw	high main@userInput
  2294   00D1E4  6E02               	movwf	(UART_ReceiveString@receivedString+1)^0,c
  2295   00D1E6  0E14               	movlw	20
  2296   00D1E8  6E03               	movwf	UART_ReceiveString@maxLength^0,c
  2297   00D1EA  ECE3  F05D         	call	_UART_ReceiveString	;wreg free
  2298   00D1EE                     
  2299                           ;main.c: 411:         UART_SendString("Recibido: ");
  2300   00D1EE  0EC4               	movlw	low STR_13
  2301   00D1F0  6E02               	movwf	UART_SendString@str^0,c
  2302   00D1F2  0EFF               	movlw	high STR_13
  2303   00D1F4  6E03               	movwf	(UART_SendString@str+1)^0,c
  2304   00D1F6  EC9B  F059         	call	_UART_SendString	;wreg free
  2305   00D1FA                     
  2306                           ;main.c: 412:         UART_SendString(userInput);
  2307   00D1FA  0EC8               	movlw	low main@userInput
  2308   00D1FC  6E02               	movwf	UART_SendString@str^0,c
  2309   00D1FE  0E04               	movlw	high main@userInput
  2310   00D200  6E03               	movwf	(UART_SendString@str+1)^0,c
  2311   00D202  EC9B  F059         	call	_UART_SendString	;wreg free
  2312   00D206                     
  2313                           ;main.c: 413:         UART_SendString("\n");
  2314   00D206  0EB4               	movlw	low (STR_8+13)
  2315   00D208  6E02               	movwf	UART_SendString@str^0,c
  2316   00D20A  0EFF               	movlw	high (STR_8+13)
  2317   00D20C  6E03               	movwf	(UART_SendString@str+1)^0,c
  2318   00D20E  EC9B  F059         	call	_UART_SendString	;wreg free
  2319   00D212                     
  2320                           ;main.c: 415:         if (strncmp(userInput, "LOG_READ", 8) == 0) {
  2321   00D212  0EC8               	movlw	low main@userInput
  2322   00D214  6E01               	movwf	strncmp@l^0,c
  2323   00D216  0E04               	movlw	high main@userInput
  2324   00D218  6E02               	movwf	(strncmp@l+1)^0,c
  2325   00D21A  0ED8               	movlw	low STR_15
  2326   00D21C  6E03               	movwf	strncmp@r^0,c
  2327   00D21E  0EFF               	movlw	high STR_15
  2328   00D220  6E04               	movwf	(strncmp@r+1)^0,c
  2329   00D222  0E00               	movlw	0
  2330   00D224  6E06               	movwf	(strncmp@n+1)^0,c
  2331   00D226  0E08               	movlw	8
  2332   00D228  6E05               	movwf	strncmp@n^0,c
  2333   00D22A  EC1C  F063         	call	_strncmp	;wreg free
  2334   00D22E  5001               	movf	?_strncmp^0,w,c
  2335   00D230  1002               	iorwf	(?_strncmp+1)^0,w,c
  2336   00D232  A4D8               	btfss	status,2,c
  2337   00D234  EF1E  F069         	goto	u11231
  2338   00D238  EF20  F069         	goto	u11230
  2339   00D23C                     u11231:
  2340   00D23C  EFAA  F069         	goto	l10833
  2341   00D240                     u11230:
  2342   00D240                     
  2343                           ;main.c: 416:             unsigned long startReadAddressEEPROM1 = (currentBlockEEPROM1 =
      +                          = 0 ? 32768 : currentBlockEEPROM1) - (Ndat * 12);
  2344   00D240  0100               	movlb	0	; () banked
  2345   00D242  51C7               	movf	_currentBlockEEPROM1& (0+255),w,b
  2346   00D244  11C8               	iorwf	(_currentBlockEEPROM1+1)& (0+255),w,b
  2347   00D246  B4D8               	btfsc	status,2,c
  2348   00D248  EF28  F069         	goto	u11241
  2349   00D24C  EF2A  F069         	goto	u11240
  2350   00D250                     u11241:
  2351   00D250  EF33  F069         	goto	l10819
  2352   00D254                     u11240:
  2353   00D254                     
  2354                           ; BSR set to: 0
  2355   00D254  C0C7  F4E4         	movff	_currentBlockEEPROM1,_main$1510
  2356   00D258  C0C8  F4E5         	movff	_currentBlockEEPROM1+1,_main$1510+1
  2357   00D25C  0104               	movlb	4	; () banked
  2358   00D25E  6BE6               	clrf	(_main$1510+2)& (0+255),b
  2359   00D260  6BE7               	clrf	(_main$1510+3)& (0+255),b
  2360   00D262  EF3C  F069         	goto	l10821
  2361   00D266                     l10819:
  2362                           
  2363                           ; BSR set to: 0
  2364   00D266  0E00               	movlw	0
  2365   00D268  0104               	movlb	4	; () banked
  2366   00D26A  6FE4               	movwf	_main$1510& (0+255),b
  2367   00D26C  0E80               	movlw	128
  2368   00D26E  6FE5               	movwf	(_main$1510+1)& (0+255),b
  2369   00D270  0E00               	movlw	0
  2370   00D272  6FE6               	movwf	(_main$1510+2)& (0+255),b
  2371   00D274  0E00               	movlw	0
  2372   00D276  6FE7               	movwf	(_main$1510+3)& (0+255),b
  2373   00D278                     l10821:
  2374                           
  2375                           ; BSR set to: 4
  2376   00D278  C0E9  F001         	movff	_Ndat,___lmul@multiplier
  2377   00D27C  C0EA  F002         	movff	_Ndat+1,___lmul@multiplier+1
  2378   00D280  C0EB  F003         	movff	_Ndat+2,___lmul@multiplier+2
  2379   00D284  C0EC  F004         	movff	_Ndat+3,___lmul@multiplier+3
  2380   00D288  0EF4               	movlw	244
  2381   00D28A  6E05               	movwf	___lmul@multiplicand^0,c
  2382   00D28C  0EFF               	movlw	255
  2383   00D28E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2384   00D290  0EFF               	movlw	255
  2385   00D292  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2386   00D294  0EFF               	movlw	255
  2387   00D296  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2388   00D298  ECF6  F058         	call	___lmul	;wreg free
  2389   00D29C  0104               	movlb	4	; () banked
  2390   00D29E  51E4               	movf	_main$1510& (0+255),w,b
  2391   00D2A0  2401               	addwf	?___lmul^0,w,c
  2392   00D2A2  6FDC               	movwf	main@startReadAddressEEPROM1& (0+255),b
  2393   00D2A4  51E5               	movf	(_main$1510+1)& (0+255),w,b
  2394   00D2A6  2002               	addwfc	(?___lmul+1)^0,w,c
  2395   00D2A8  6FDD               	movwf	(main@startReadAddressEEPROM1+1)& (0+255),b
  2396   00D2AA  51E6               	movf	(_main$1510+2)& (0+255),w,b
  2397   00D2AC  2003               	addwfc	(?___lmul+2)^0,w,c
  2398   00D2AE  6FDE               	movwf	(main@startReadAddressEEPROM1+2)& (0+255),b
  2399   00D2B0  51E7               	movf	(_main$1510+3)& (0+255),w,b
  2400   00D2B2  2004               	addwfc	(?___lmul+3)^0,w,c
  2401   00D2B4  6FDF               	movwf	(main@startReadAddressEEPROM1+3)& (0+255),b
  2402   00D2B6                     
  2403                           ; BSR set to: 4
  2404                           ;main.c: 417:             unsigned long startReadAddressEEPROM2 = (currentBlockEEPROM2 =
      +                          = 0 ? 32768 : currentBlockEEPROM2) - (Ndat * 12);
  2405   00D2B6  0100               	movlb	0	; () banked
  2406   00D2B8  51C5               	movf	_currentBlockEEPROM2& (0+255),w,b
  2407   00D2BA  11C6               	iorwf	(_currentBlockEEPROM2+1)& (0+255),w,b
  2408   00D2BC  B4D8               	btfsc	status,2,c
  2409   00D2BE  EF63  F069         	goto	u11251
  2410   00D2C2  EF65  F069         	goto	u11250
  2411   00D2C6                     u11251:
  2412   00D2C6  EF6E  F069         	goto	l10827
  2413   00D2CA                     u11250:
  2414   00D2CA                     
  2415                           ; BSR set to: 0
  2416   00D2CA  C0C5  F4E8         	movff	_currentBlockEEPROM2,_main$1512
  2417   00D2CE  C0C6  F4E9         	movff	_currentBlockEEPROM2+1,_main$1512+1
  2418   00D2D2  0104               	movlb	4	; () banked
  2419   00D2D4  6BEA               	clrf	(_main$1512+2)& (0+255),b
  2420   00D2D6  6BEB               	clrf	(_main$1512+3)& (0+255),b
  2421   00D2D8  EF77  F069         	goto	l10829
  2422   00D2DC                     l10827:
  2423                           
  2424                           ; BSR set to: 0
  2425   00D2DC  0E00               	movlw	0
  2426   00D2DE  0104               	movlb	4	; () banked
  2427   00D2E0  6FE8               	movwf	_main$1512& (0+255),b
  2428   00D2E2  0E80               	movlw	128
  2429   00D2E4  6FE9               	movwf	(_main$1512+1)& (0+255),b
  2430   00D2E6  0E00               	movlw	0
  2431   00D2E8  6FEA               	movwf	(_main$1512+2)& (0+255),b
  2432   00D2EA  0E00               	movlw	0
  2433   00D2EC  6FEB               	movwf	(_main$1512+3)& (0+255),b
  2434   00D2EE                     l10829:
  2435                           
  2436                           ; BSR set to: 4
  2437   00D2EE  C0E9  F001         	movff	_Ndat,___lmul@multiplier
  2438   00D2F2  C0EA  F002         	movff	_Ndat+1,___lmul@multiplier+1
  2439   00D2F6  C0EB  F003         	movff	_Ndat+2,___lmul@multiplier+2
  2440   00D2FA  C0EC  F004         	movff	_Ndat+3,___lmul@multiplier+3
  2441   00D2FE  0EF4               	movlw	244
  2442   00D300  6E05               	movwf	___lmul@multiplicand^0,c
  2443   00D302  0EFF               	movlw	255
  2444   00D304  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2445   00D306  0EFF               	movlw	255
  2446   00D308  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2447   00D30A  0EFF               	movlw	255
  2448   00D30C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2449   00D30E  ECF6  F058         	call	___lmul	;wreg free
  2450   00D312  0104               	movlb	4	; () banked
  2451   00D314  51E8               	movf	_main$1512& (0+255),w,b
  2452   00D316  2401               	addwf	?___lmul^0,w,c
  2453   00D318  6FE0               	movwf	main@startReadAddressEEPROM2& (0+255),b
  2454   00D31A  51E9               	movf	(_main$1512+1)& (0+255),w,b
  2455   00D31C  2002               	addwfc	(?___lmul+1)^0,w,c
  2456   00D31E  6FE1               	movwf	(main@startReadAddressEEPROM2+1)& (0+255),b
  2457   00D320  51EA               	movf	(_main$1512+2)& (0+255),w,b
  2458   00D322  2003               	addwfc	(?___lmul+2)^0,w,c
  2459   00D324  6FE2               	movwf	(main@startReadAddressEEPROM2+2)& (0+255),b
  2460   00D326  51EB               	movf	(_main$1512+3)& (0+255),w,b
  2461   00D328  2004               	addwfc	(?___lmul+3)^0,w,c
  2462   00D32A  6FE3               	movwf	(main@startReadAddressEEPROM2+3)& (0+255),b
  2463   00D32C                     
  2464                           ; BSR set to: 4
  2465                           ;main.c: 418:             ReadAndSendEEPROMDataCSV(Ndat, (uint16_t)startReadAddressEEPRO
      +                          M1, (uint16_t)startReadAddressEEPROM2);
  2466   00D32C  C0E9  F0AF         	movff	_Ndat,ReadAndSendEEPROMDataCSV@Ndat
  2467   00D330  C0EA  F0B0         	movff	_Ndat+1,ReadAndSendEEPROMDataCSV@Ndat+1
  2468   00D334  C0EB  F0B1         	movff	_Ndat+2,ReadAndSendEEPROMDataCSV@Ndat+2
  2469   00D338  C0EC  F0B2         	movff	_Ndat+3,ReadAndSendEEPROMDataCSV@Ndat+3
  2470   00D33C  C4DC  F0B3         	movff	main@startReadAddressEEPROM1,ReadAndSendEEPROMDataCSV@startAddressEEPROM1
  2471   00D340  C4DD  F0B4         	movff	main@startReadAddressEEPROM1+1,ReadAndSendEEPROMDataCSV@startAddressEEPROM1+1
  2472   00D344  C4E0  F0B5         	movff	main@startReadAddressEEPROM2,ReadAndSendEEPROMDataCSV@startAddressEEPROM2
  2473   00D348  C4E1  F0B6         	movff	main@startReadAddressEEPROM2+1,ReadAndSendEEPROMDataCSV@startAddressEEPROM2+1
  2474   00D34C  EC8D  F065         	call	_ReadAndSendEEPROMDataCSV	;wreg free
  2475                           
  2476                           ;main.c: 419:         } else if (strncmp(userInput, "LOG_STAT", 8) == 0) {
  2477   00D350  EFDB  F068         	goto	l10801
  2478   00D354                     l10833:
  2479   00D354  0EC8               	movlw	low main@userInput
  2480   00D356  6E01               	movwf	strncmp@l^0,c
  2481   00D358  0E04               	movlw	high main@userInput
  2482   00D35A  6E02               	movwf	(strncmp@l+1)^0,c
  2483   00D35C  0EE1               	movlw	low STR_16
  2484   00D35E  6E03               	movwf	strncmp@r^0,c
  2485   00D360  0EFF               	movlw	high STR_16
  2486   00D362  6E04               	movwf	(strncmp@r+1)^0,c
  2487   00D364  0E00               	movlw	0
  2488   00D366  6E06               	movwf	(strncmp@n+1)^0,c
  2489   00D368  0E08               	movlw	8
  2490   00D36A  6E05               	movwf	strncmp@n^0,c
  2491   00D36C  EC1C  F063         	call	_strncmp	;wreg free
  2492   00D370  5001               	movf	?_strncmp^0,w,c
  2493   00D372  1002               	iorwf	(?_strncmp+1)^0,w,c
  2494   00D374  A4D8               	btfss	status,2,c
  2495   00D376  EFBF  F069         	goto	u11261
  2496   00D37A  EFC1  F069         	goto	u11260
  2497   00D37E                     u11261:
  2498   00D37E  EFDE  F069         	goto	l10839
  2499   00D382                     u11260:
  2500   00D382                     
  2501                           ;main.c: 420:             sprintf(buffer, "Datos almacenados: %lu, Tasa de muestreo: %lu
      +                           ms\n", Ndat, Tm);
  2502   00D382  0E00               	movlw	low main@buffer
  2503   00D384  0100               	movlb	0	; () banked
  2504   00D386  6F93               	movwf	sprintf@s& (0+255),b
  2505   00D388  0E04               	movlw	high main@buffer
  2506   00D38A  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2507   00D38C  0EA0               	movlw	low STR_1
  2508   00D38E  6F95               	movwf	sprintf@fmt& (0+255),b
  2509   00D390  0EFE               	movlw	high STR_1
  2510   00D392  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2511   00D394  C0E9  F097         	movff	_Ndat,?_sprintf+4
  2512   00D398  C0EA  F098         	movff	_Ndat+1,?_sprintf+5
  2513   00D39C  C0EB  F099         	movff	_Ndat+2,?_sprintf+6
  2514   00D3A0  C0EC  F09A         	movff	_Ndat+3,?_sprintf+7
  2515   00D3A4  C0E5  F09B         	movff	_Tm,?_sprintf+8
  2516   00D3A8  C0E6  F09C         	movff	_Tm+1,?_sprintf+9
  2517   00D3AC  C0E7  F09D         	movff	_Tm+2,?_sprintf+10
  2518   00D3B0  C0E8  F09E         	movff	_Tm+3,?_sprintf+11
  2519   00D3B4  EC39  F056         	call	_sprintf	;wreg free
  2520   00D3B8  EFD5  F068         	goto	l10799
  2521   00D3BC                     l10839:
  2522   00D3BC  0EC8               	movlw	low main@userInput
  2523   00D3BE  0100               	movlb	0	; () banked
  2524   00D3C0  6F8E               	movwf	ParseUserInput@input& (0+255),b
  2525   00D3C2  0E04               	movlw	high main@userInput
  2526   00D3C4  6F8F               	movwf	(ParseUserInput@input+1)& (0+255),b
  2527   00D3C6  0EE5               	movlw	low _Tm
  2528   00D3C8  6F90               	movwf	ParseUserInput@Tm& (0+255),b
  2529   00D3CA  0EE9               	movlw	low _Ndat
  2530   00D3CC  6F91               	movwf	ParseUserInput@Ndat& (0+255),b
  2531   00D3CE  EC63  F059         	call	_ParseUserInput	;wreg free
  2532   00D3D2  0900               	iorlw	0
  2533   00D3D4  B4D8               	btfsc	status,2,c
  2534   00D3D6  EFEF  F069         	goto	u11271
  2535   00D3DA  EFF1  F069         	goto	u11270
  2536   00D3DE                     u11271:
  2537   00D3DE  EFF5  F069         	goto	l10843
  2538   00D3E2                     u11270:
  2539   00D3E2                     
  2540                           ;main.c: 424:             StartLogging();
  2541   00D3E2  EC5B  F06B         	call	_StartLogging	;wreg free
  2542                           
  2543                           ;main.c: 425:         } else {
  2544   00D3E6  EFDB  F068         	goto	l10801
  2545   00D3EA                     l10843:
  2546                           
  2547                           ;main.c: 427:             UART_SendString("Entrada no valida. Intente de nuevo.\n");
  2548   00D3EA  0E2E               	movlw	low STR_18
  2549   00D3EC  6E02               	movwf	UART_SendString@str^0,c
  2550   00D3EE  0EFF               	movlw	high STR_18
  2551   00D3F0  6E03               	movwf	(UART_SendString@str+1)^0,c
  2552   00D3F2  EC9B  F059         	call	_UART_SendString	;wreg free
  2553   00D3F6  EFDB  F068         	goto	l10801
  2554   00D3FA  EFFE  F07F         	goto	start
  2555   00D3FE                     __end_of_main:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _memset *****************
  2559 ;; Defined at:
  2560 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  dest            2    0[COMRAM] PTR void 
  2563 ;;		 -> main@userInput(20), 
  2564 ;;  c               2    2[COMRAM] int 
  2565 ;;  n               2    4[COMRAM] unsigned int 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  p               2    6[COMRAM] PTR unsigned char 
  2568 ;;		 -> main@userInput(20), 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2    0[COMRAM] PTR void 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2578 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;Total ram usage:        8 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text1
  2592   00AAE6                     __ptext1:
  2593                           	callstack 0
  2594   00AAE6                     _memset:
  2595                           	callstack 30
  2596   00AAE6  C001  F007         	movff	memset@dest,memset@p
  2597   00AAEA  C002  F008         	movff	memset@dest+1,memset@p+1
  2598   00AAEE  EF84  F055         	goto	l10707
  2599   00AAF2                     l10703:
  2600   00AAF2  0060  F01F  FFD9   	movff	memset@p,fsr2l
  2601   00AAF8  0060  F023  FFDA   	movff	memset@p+1,fsr2h
  2602   00AAFE  0060  F00F  FFDF   	movff	memset@c,indf2
  2603   00AB04  4A07               	infsnz	memset@p^0,f,c
  2604   00AB06  2A08               	incf	(memset@p+1)^0,f,c
  2605   00AB08                     l10707:
  2606   00AB08  0605               	decf	memset@n^0,f,c
  2607   00AB0A  A0D8               	btfss	status,0,c
  2608   00AB0C  0606               	decf	(memset@n+1)^0,f,c
  2609   00AB0E  2805               	incf	memset@n^0,w,c
  2610   00AB10  E106               	bnz	u11141
  2611   00AB12  2806               	incf	(memset@n+1)^0,w,c
  2612   00AB14  A4D8               	btfss	status,2,c
  2613   00AB16  EF8F  F055         	goto	u11141
  2614   00AB1A  EF91  F055         	goto	u11140
  2615   00AB1E                     u11141:
  2616   00AB1E  EF79  F055         	goto	l10703
  2617   00AB22                     u11140:
  2618   00AB22  0012               	return		;funcret
  2619   00AB24                     __end_of_memset:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _UART_ReceiveString *****************
  2623 ;; Defined at:
  2624 ;;		line 155 in file "main.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  receivedStri    2    0[COMRAM] PTR unsigned char 
  2627 ;;		 -> main@userInput(20), 
  2628 ;;  maxLength       1    2[COMRAM] unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  index           1    9[COMRAM] unsigned char 
  2631 ;;  data            1    8[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      unsigned char 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2641 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;Total ram usage:       10 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 2
  2648 ;; This function calls:
  2649 ;;		_UART1_Read
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text2
  2656   00BBC6                     __ptext2:
  2657                           	callstack 0
  2658   00BBC6                     _UART_ReceiveString:
  2659                           	callstack 28
  2660   00BBC6                     
  2661                           ;main.c: 156:     char data;;main.c: 157:     uint8_t index = 0;
  2662   00BBC6  0E00               	movlw	0
  2663   00BBC8  6E0A               	movwf	UART_ReceiveString@index^0,c
  2664                           
  2665                           ;main.c: 159:     while (index < maxLength - 1){
  2666   00BBCA  EF1B  F05E         	goto	l10595
  2667   00BBCE                     l10577:
  2668                           
  2669                           ;main.c: 160:         data = UART1_Read();
  2670   00BBCE  ECE7  F05C         	call	_UART1_Read	;wreg free
  2671   00BBD2  6E09               	movwf	UART_ReceiveString@data^0,c
  2672   00BBD4                     
  2673                           ;main.c: 163:         if (index == 0 && (data == '\r' || data == '\n')) {
  2674   00BBD4  500A               	movf	UART_ReceiveString@index^0,w,c
  2675   00BBD6  A4D8               	btfss	status,2,c
  2676   00BBD8  EFF0  F05D         	goto	u11021
  2677   00BBDC  EFF2  F05D         	goto	u11020
  2678   00BBE0                     u11021:
  2679   00BBE0  EF06  F05E         	goto	l10585
  2680   00BBE4                     u11020:
  2681   00BBE4  0E0D               	movlw	13
  2682   00BBE6  1809               	xorwf	UART_ReceiveString@data^0,w,c
  2683   00BBE8  B4D8               	btfsc	status,2,c
  2684   00BBEA  EFF9  F05D         	goto	u11031
  2685   00BBEE  EFFB  F05D         	goto	u11030
  2686   00BBF2                     u11031:
  2687   00BBF2  EF1B  F05E         	goto	l10595
  2688   00BBF6                     u11030:
  2689   00BBF6  0E0A               	movlw	10
  2690   00BBF8  1809               	xorwf	UART_ReceiveString@data^0,w,c
  2691   00BBFA  A4D8               	btfss	status,2,c
  2692   00BBFC  EF02  F05E         	goto	u11041
  2693   00BC00  EF04  F05E         	goto	u11040
  2694   00BC04                     u11041:
  2695   00BC04  EF06  F05E         	goto	l10585
  2696   00BC08                     u11040:
  2697   00BC08  EF1B  F05E         	goto	l10595
  2698   00BC0C                     l10585:
  2699                           
  2700                           ;main.c: 167:         if (data == '\r') {
  2701   00BC0C  0E0D               	movlw	13
  2702   00BC0E  1809               	xorwf	UART_ReceiveString@data^0,w,c
  2703   00BC10  A4D8               	btfss	status,2,c
  2704   00BC12  EF0D  F05E         	goto	u11051
  2705   00BC16  EF0F  F05E         	goto	u11050
  2706   00BC1A                     u11051:
  2707   00BC1A  EF11  F05E         	goto	l10591
  2708   00BC1E                     u11050:
  2709   00BC1E  EF33  F05E         	goto	l10597
  2710   00BC22                     l10591:
  2711                           
  2712                           ;main.c: 170:             receivedString[index] = data;
  2713   00BC22  500A               	movf	UART_ReceiveString@index^0,w,c
  2714   00BC24  2401               	addwf	UART_ReceiveString@receivedString^0,w,c
  2715   00BC26  6ED9               	movwf	fsr2l,c
  2716   00BC28  0E00               	movlw	0
  2717   00BC2A  2002               	addwfc	(UART_ReceiveString@receivedString+1)^0,w,c
  2718   00BC2C  6EDA               	movwf	fsr2h,c
  2719   00BC2E  0060  F027  FFDF   	movff	UART_ReceiveString@data,indf2
  2720   00BC34                     
  2721                           ;main.c: 171:             index++;
  2722   00BC34  2A0A               	incf	UART_ReceiveString@index^0,f,c
  2723   00BC36                     l10595:
  2724                           
  2725                           ;main.c: 159:     while (index < maxLength - 1){
  2726   00BC36  0EFF               	movlw	255
  2727   00BC38  2403               	addwf	UART_ReceiveString@maxLength^0,w,c
  2728   00BC3A  6E04               	movwf	??_UART_ReceiveString^0,c
  2729   00BC3C  6A05               	clrf	(??_UART_ReceiveString+1)^0,c
  2730   00BC3E  0EFF               	movlw	255
  2731   00BC40  2205               	addwfc	(??_UART_ReceiveString+1)^0,f,c
  2732   00BC42  500A               	movf	UART_ReceiveString@index^0,w,c
  2733   00BC44  6E06               	movwf	(??_UART_ReceiveString+2)^0,c
  2734   00BC46  6A07               	clrf	(??_UART_ReceiveString+3)^0,c
  2735   00BC48  5004               	movf	??_UART_ReceiveString^0,w,c
  2736   00BC4A  5C06               	subwf	(??_UART_ReceiveString+2)^0,w,c
  2737   00BC4C  5007               	movf	(??_UART_ReceiveString+3)^0,w,c
  2738   00BC4E  0A80               	xorlw	128
  2739   00BC50  6E08               	movwf	(??_UART_ReceiveString+4)^0,c
  2740   00BC52  5005               	movf	(??_UART_ReceiveString+1)^0,w,c
  2741   00BC54  0A80               	xorlw	128
  2742   00BC56  5808               	subwfb	(??_UART_ReceiveString+4)^0,w,c
  2743   00BC58  A0D8               	btfss	status,0,c
  2744   00BC5A  EF31  F05E         	goto	u11061
  2745   00BC5E  EF33  F05E         	goto	u11060
  2746   00BC62                     u11061:
  2747   00BC62  EFE7  F05D         	goto	l10577
  2748   00BC66                     u11060:
  2749   00BC66                     l10597:
  2750                           
  2751                           ;main.c: 175:     receivedString[index] = '\0';
  2752   00BC66  500A               	movf	UART_ReceiveString@index^0,w,c
  2753   00BC68  2401               	addwf	UART_ReceiveString@receivedString^0,w,c
  2754   00BC6A  6ED9               	movwf	fsr2l,c
  2755   00BC6C  0E00               	movlw	0
  2756   00BC6E  2002               	addwfc	(UART_ReceiveString@receivedString+1)^0,w,c
  2757   00BC70  6EDA               	movwf	fsr2h,c
  2758   00BC72  6ADF               	clrf	indf2,c
  2759   00BC74  0012               	return		;funcret
  2760   00BC76                     __end_of_UART_ReceiveString:
  2761                           	callstack 0
  2762                           
  2763 ;; *************** function _UART1_Read *****************
  2764 ;; Defined at:
  2765 ;;		line 145 in file "mcc_generated_files/uart1.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      unsigned char 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, pcl, pclath, pclatu, tosl, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;Total ram usage:        0 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 1
  2786 ;; This function calls:
  2787 ;;		NULL
  2788 ;;		_UART1_DefaultErrorHandler
  2789 ;;		_UART1_DefaultFramingErrorHandler
  2790 ;;		_UART1_DefaultOverrunErrorHandler
  2791 ;; This function is called by:
  2792 ;;		_UART_ReceiveString
  2793 ;;		_getch3
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text3
  2798   00B9CE                     __ptext3:
  2799                           	callstack 0
  2800   00B9CE                     _UART1_Read:
  2801                           	callstack 28
  2802   00B9CE                     l182:
  2803                           
  2804                           ;mcc_generated_files/uart1.c: 147:     while(!PIR3bits.U1RXIF)
  2805   00B9CE  0139               	movlb	57	; () banked
  2806   00B9D0  A7A3               	btfss	163,3,b	;volatile
  2807   00B9D2  EFED  F05C         	goto	u10911
  2808   00B9D6  EFEF  F05C         	goto	u10910
  2809   00B9DA                     u10911:
  2810   00B9DA  EFE7  F05C         	goto	l182
  2811   00B9DE                     u10910:
  2812   00B9DE                     
  2813                           ; BSR set to: 57
  2814                           ;mcc_generated_files/uart1.c: 151:     uart1RxLastError.status = 0;
  2815   00B9DE  0E00               	movlw	0
  2816   00B9E0  0100               	movlb	0	; () banked
  2817   00B9E2  6FCC               	movwf	_uart1RxLastError& (0+255),b	;volatile
  2818   00B9E4                     
  2819                           ; BSR set to: 0
  2820                           ;mcc_generated_files/uart1.c: 153:     if(U1ERRIRbits.FERIF){
  2821   00B9E4  013D               	movlb	61	; () banked
  2822   00B9E6  A7F9               	btfss	249,3,b	;volatile
  2823   00B9E8  EFF8  F05C         	goto	u10921
  2824   00B9EC  EFFA  F05C         	goto	u10920
  2825   00B9F0                     u10921:
  2826   00B9F0  EF09  F05D         	goto	l10433
  2827   00B9F4                     u10920:
  2828   00B9F4                     
  2829                           ; BSR set to: 61
  2830                           ;mcc_generated_files/uart1.c: 154:         uart1RxLastError.ferr = 1;
  2831   00B9F4  0100               	movlb	0	; () banked
  2832   00B9F6  83CC               	bsf	_uart1RxLastError& (0+255),1,b	;volatile
  2833   00B9F8                     
  2834                           ; BSR set to: 0
  2835                           ;mcc_generated_files/uart1.c: 155:         UART1_FramingErrorHandler();
  2836   00B9F8  D802               	call	u10938
  2837   00B9FA  EF09  F05D         	goto	u10939
  2838   00B9FE                     u10938:
  2839   00B9FE  0005               	push	
  2840   00BA00  6EFA               	movwf	pclath,c
  2841   00BA02  0102               	movlb	2	; () banked
  2842   00BA04  5123               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  2843   00BA06  6EFD               	movwf	tosl,c
  2844   00BA08  5124               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  2845   00BA0A  6EFE               	movwf	tosh,c
  2846   00BA0C  6AFF               	clrf	tosu,c
  2847   00BA0E  50FA               	movf	pclath,w,c
  2848   00BA10  0012               	return		;indir
  2849   00BA12                     u10939:
  2850   00BA12                     l10433:
  2851                           
  2852                           ;mcc_generated_files/uart1.c: 158:     if(U1ERRIRbits.RXFOIF){
  2853   00BA12  013D               	movlb	61	; () banked
  2854   00BA14  A3F9               	btfss	249,1,b	;volatile
  2855   00BA16  EF0F  F05D         	goto	u10941
  2856   00BA1A  EF11  F05D         	goto	u10940
  2857   00BA1E                     u10941:
  2858   00BA1E  EF20  F05D         	goto	l10439
  2859   00BA22                     u10940:
  2860   00BA22                     
  2861                           ; BSR set to: 61
  2862                           ;mcc_generated_files/uart1.c: 159:         uart1RxLastError.oerr = 1;
  2863   00BA22  0100               	movlb	0	; () banked
  2864   00BA24  85CC               	bsf	_uart1RxLastError& (0+255),2,b	;volatile
  2865   00BA26                     
  2866                           ; BSR set to: 0
  2867                           ;mcc_generated_files/uart1.c: 160:         UART1_OverrunErrorHandler();
  2868   00BA26  D802               	call	u10958
  2869   00BA28  EF20  F05D         	goto	u10959
  2870   00BA2C                     u10958:
  2871   00BA2C  0005               	push	
  2872   00BA2E  6EFA               	movwf	pclath,c
  2873   00BA30  0102               	movlb	2	; () banked
  2874   00BA32  5121               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  2875   00BA34  6EFD               	movwf	tosl,c
  2876   00BA36  5122               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  2877   00BA38  6EFE               	movwf	tosh,c
  2878   00BA3A  6AFF               	clrf	tosu,c
  2879   00BA3C  50FA               	movf	pclath,w,c
  2880   00BA3E  0012               	return		;indir
  2881   00BA40                     u10959:
  2882   00BA40                     l10439:
  2883                           
  2884                           ;mcc_generated_files/uart1.c: 163:     if(uart1RxLastError.status){
  2885   00BA40  0100               	movlb	0	; () banked
  2886   00BA42  51CC               	movf	_uart1RxLastError& (0+255),w,b	;volatile
  2887   00BA44  B4D8               	btfsc	status,2,c
  2888   00BA46  EF27  F05D         	goto	u10961
  2889   00BA4A  EF29  F05D         	goto	u10960
  2890   00BA4E                     u10961:
  2891   00BA4E  EF36  F05D         	goto	l10443
  2892   00BA52                     u10960:
  2893   00BA52                     
  2894                           ; BSR set to: 0
  2895                           ;mcc_generated_files/uart1.c: 164:         UART1_ErrorHandler();
  2896   00BA52  D802               	call	u10978
  2897   00BA54  EF36  F05D         	goto	u10979
  2898   00BA58                     u10978:
  2899   00BA58  0005               	push	
  2900   00BA5A  6EFA               	movwf	pclath,c
  2901   00BA5C  0102               	movlb	2	; () banked
  2902   00BA5E  511F               	movf	_UART1_ErrorHandler& (0+255),w,b
  2903   00BA60  6EFD               	movwf	tosl,c
  2904   00BA62  5120               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  2905   00BA64  6EFE               	movwf	tosh,c
  2906   00BA66  6AFF               	clrf	tosu,c
  2907   00BA68  50FA               	movf	pclath,w,c
  2908   00BA6A  0012               	return		;indir
  2909   00BA6C                     u10979:
  2910   00BA6C                     l10443:
  2911                           
  2912                           ;mcc_generated_files/uart1.c: 167:     return U1RXB;
  2913   00BA6C  013D               	movlb	61	; () banked
  2914   00BA6E  51E8               	movf	232,w,b	;volatile
  2915   00BA70                     
  2916                           ; BSR set to: 61
  2917   00BA70  0012               	return		;funcret
  2918   00BA72                     __end_of_UART1_Read:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  2922 ;; Defined at:
  2923 ;;		line 195 in file "mcc_generated_files/uart1.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		None
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;Total ram usage:        0 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_UART1_Initialize
  2947 ;;		_UART1_Read
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text4
  2952   00A514                     __ptext4:
  2953                           	callstack 0
  2954   00A514                     _UART1_DefaultOverrunErrorHandler:
  2955                           	callstack 28
  2956   00A514  0012               	return		;funcret
  2957   00A516                     __end_of_UART1_DefaultOverrunErrorHandler:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  2961 ;; Defined at:
  2962 ;;		line 193 in file "mcc_generated_files/uart1.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		None
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_UART1_Initialize
  2986 ;;		_UART1_Read
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text5
  2991   00A512                     __ptext5:
  2992                           	callstack 0
  2993   00A512                     _UART1_DefaultFramingErrorHandler:
  2994                           	callstack 28
  2995   00A512  0012               	return		;funcret
  2996   00A514                     __end_of_UART1_DefaultFramingErrorHandler:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _UART1_DefaultErrorHandler *****************
  3000 ;; Defined at:
  3001 ;;		line 197 in file "mcc_generated_files/uart1.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		None
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;Total ram usage:        0 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_UART1_Initialize
  3025 ;;		_UART1_Read
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text6
  3030   00A510                     __ptext6:
  3031                           	callstack 0
  3032   00A510                     _UART1_DefaultErrorHandler:
  3033                           	callstack 28
  3034   00A510  0012               	return		;funcret
  3035   00A512                     __end_of_UART1_DefaultErrorHandler:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _StartLogging *****************
  3039 ;; Defined at:
  3040 ;;		line 294 in file "main.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  startReadAdd    4    4[BANK2 ] unsigned long 
  3045 ;;  startReadAdd    4    0[BANK2 ] unsigned long 
  3046 ;;  buffer        200    0        unsigned char [200]
  3047 ;;  loggedDataCo    4   16[BANK2 ] unsigned long 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Locals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Totals:         0       2       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;Total ram usage:       22 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 15
  3064 ;; This function calls:
  3065 ;;		_EEPROM_WriteBlock
  3066 ;;		_MPU6050_ReadSensorData
  3067 ;;		_ReadAndSendEEPROMData
  3068 ;;		_StoreCurrentAddressEEPROM
  3069 ;;		_UART_SendString
  3070 ;;		___lmul
  3071 ;;		_custom_delay_ms
  3072 ;;		_memcpy
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text7
  3079   00D6B6                     __ptext7:
  3080                           	callstack 0
  3081   00D6B6                     _StartLogging:
  3082                           	callstack 15
  3083   00D6B6                     
  3084                           ;main.c: 295:     uint32_t loggedDataCount = 0;
  3085   00D6B6  0E00               	movlw	0
  3086   00D6B8  0102               	movlb	2	; () banked
  3087   00D6BA  6F10               	movwf	StartLogging@loggedDataCount& (0+255),b
  3088   00D6BC  0E00               	movlw	0
  3089   00D6BE  6F11               	movwf	(StartLogging@loggedDataCount+1)& (0+255),b
  3090   00D6C0  0E00               	movlw	0
  3091   00D6C2  6F12               	movwf	(StartLogging@loggedDataCount+2)& (0+255),b
  3092   00D6C4  0E00               	movlw	0
  3093   00D6C6  6F13               	movwf	(StartLogging@loggedDataCount+3)& (0+255),b
  3094                           
  3095                           ;main.c: 296:     char buffer[200];;main.c: 297:     while (loggedDataCount < Ndat) {
  3096   00D6C8  EF06  F06C         	goto	l10659
  3097   00D6CC                     l10637:
  3098                           
  3099                           ; BSR set to: 2
  3100                           ;main.c: 299:         MPU6050_ReadSensorData(&ax, &ay, &az, &gx, &gy, &gz);
  3101   00D6CC  0EE1               	movlw	low _ax
  3102   00D6CE  6E28               	movwf	MPU6050_ReadSensorData@ax^0,c
  3103   00D6D0  0EDD               	movlw	low _ay
  3104   00D6D2  6E29               	movwf	MPU6050_ReadSensorData@ay^0,c
  3105   00D6D4  0ED9               	movlw	low _az
  3106   00D6D6  6E2A               	movwf	MPU6050_ReadSensorData@az^0,c
  3107   00D6D8  0ED5               	movlw	low _gx
  3108   00D6DA  6E2B               	movwf	MPU6050_ReadSensorData@gx^0,c
  3109   00D6DC  0ED1               	movlw	low _gy
  3110   00D6DE  6E2C               	movwf	MPU6050_ReadSensorData@gy^0,c
  3111   00D6E0  0ECD               	movlw	low _gz
  3112   00D6E2  6E2D               	movwf	MPU6050_ReadSensorData@gz^0,c
  3113   00D6E4  ECFF  F069         	call	_MPU6050_ReadSensorData	;wreg free
  3114   00D6E8                     
  3115                           ;main.c: 302:         memcpy(&eepromBuffer[0], &ax, sizeof(float));
  3116   00D6E8  0E94               	movlw	low _eepromBuffer
  3117   00D6EA  6E01               	movwf	memcpy@d1^0,c
  3118   00D6EC  0E03               	movlw	high _eepromBuffer
  3119   00D6EE  6E02               	movwf	(memcpy@d1+1)^0,c
  3120   00D6F0  0EE1               	movlw	low _ax
  3121   00D6F2  6E03               	movwf	memcpy@s1^0,c
  3122   00D6F4  6A04               	clrf	(memcpy@s1+1)^0,c
  3123   00D6F6  0E00               	movlw	0
  3124   00D6F8  6E06               	movwf	(memcpy@n+1)^0,c
  3125   00D6FA  0E04               	movlw	4
  3126   00D6FC  6E05               	movwf	memcpy@n^0,c
  3127   00D6FE  EC95  F057         	call	_memcpy	;wreg free
  3128   00D702                     
  3129                           ;main.c: 303:         memcpy(&eepromBuffer[4], &ay, sizeof(float));
  3130   00D702  0E98               	movlw	low (_eepromBuffer+4)
  3131   00D704  6E01               	movwf	memcpy@d1^0,c
  3132   00D706  0E03               	movlw	high (_eepromBuffer+4)
  3133   00D708  6E02               	movwf	(memcpy@d1+1)^0,c
  3134   00D70A  0EDD               	movlw	low _ay
  3135   00D70C  6E03               	movwf	memcpy@s1^0,c
  3136   00D70E  6A04               	clrf	(memcpy@s1+1)^0,c
  3137   00D710  0E00               	movlw	0
  3138   00D712  6E06               	movwf	(memcpy@n+1)^0,c
  3139   00D714  0E04               	movlw	4
  3140   00D716  6E05               	movwf	memcpy@n^0,c
  3141   00D718  EC95  F057         	call	_memcpy	;wreg free
  3142   00D71C                     
  3143                           ;main.c: 304:         memcpy(&eepromBuffer[8], &az, sizeof(float));
  3144   00D71C  0E9C               	movlw	low (_eepromBuffer+8)
  3145   00D71E  6E01               	movwf	memcpy@d1^0,c
  3146   00D720  0E03               	movlw	high (_eepromBuffer+8)
  3147   00D722  6E02               	movwf	(memcpy@d1+1)^0,c
  3148   00D724  0ED9               	movlw	low _az
  3149   00D726  6E03               	movwf	memcpy@s1^0,c
  3150   00D728  6A04               	clrf	(memcpy@s1+1)^0,c
  3151   00D72A  0E00               	movlw	0
  3152   00D72C  6E06               	movwf	(memcpy@n+1)^0,c
  3153   00D72E  0E04               	movlw	4
  3154   00D730  6E05               	movwf	memcpy@n^0,c
  3155   00D732  EC95  F057         	call	_memcpy	;wreg free
  3156   00D736                     
  3157                           ;main.c: 305:         memcpy(&eepromBuffer[12], &gx, sizeof(float));
  3158   00D736  0EA0               	movlw	low (_eepromBuffer+12)
  3159   00D738  6E01               	movwf	memcpy@d1^0,c
  3160   00D73A  0E03               	movlw	high (_eepromBuffer+12)
  3161   00D73C  6E02               	movwf	(memcpy@d1+1)^0,c
  3162   00D73E  0ED5               	movlw	low _gx
  3163   00D740  6E03               	movwf	memcpy@s1^0,c
  3164   00D742  6A04               	clrf	(memcpy@s1+1)^0,c
  3165   00D744  0E00               	movlw	0
  3166   00D746  6E06               	movwf	(memcpy@n+1)^0,c
  3167   00D748  0E04               	movlw	4
  3168   00D74A  6E05               	movwf	memcpy@n^0,c
  3169   00D74C  EC95  F057         	call	_memcpy	;wreg free
  3170   00D750                     
  3171                           ;main.c: 306:         memcpy(&eepromBuffer[16], &gy, sizeof(float));
  3172   00D750  0EA4               	movlw	low (_eepromBuffer+16)
  3173   00D752  6E01               	movwf	memcpy@d1^0,c
  3174   00D754  0E03               	movlw	high (_eepromBuffer+16)
  3175   00D756  6E02               	movwf	(memcpy@d1+1)^0,c
  3176   00D758  0ED1               	movlw	low _gy
  3177   00D75A  6E03               	movwf	memcpy@s1^0,c
  3178   00D75C  6A04               	clrf	(memcpy@s1+1)^0,c
  3179   00D75E  0E00               	movlw	0
  3180   00D760  6E06               	movwf	(memcpy@n+1)^0,c
  3181   00D762  0E04               	movlw	4
  3182   00D764  6E05               	movwf	memcpy@n^0,c
  3183   00D766  EC95  F057         	call	_memcpy	;wreg free
  3184   00D76A                     
  3185                           ;main.c: 307:         memcpy(&eepromBuffer[20], &gz, sizeof(float));
  3186   00D76A  0EA8               	movlw	low (_eepromBuffer+20)
  3187   00D76C  6E01               	movwf	memcpy@d1^0,c
  3188   00D76E  0E03               	movlw	high (_eepromBuffer+20)
  3189   00D770  6E02               	movwf	(memcpy@d1+1)^0,c
  3190   00D772  0ECD               	movlw	low _gz
  3191   00D774  6E03               	movwf	memcpy@s1^0,c
  3192   00D776  6A04               	clrf	(memcpy@s1+1)^0,c
  3193   00D778  0E00               	movlw	0
  3194   00D77A  6E06               	movwf	(memcpy@n+1)^0,c
  3195   00D77C  0E04               	movlw	4
  3196   00D77E  6E05               	movwf	memcpy@n^0,c
  3197   00D780  EC95  F057         	call	_memcpy	;wreg free
  3198                           
  3199                           ;main.c: 315:         EEPROM_WriteBlock(0x50, currentBlockEEPROM1, eepromBuffer, 12);
  3200   00D784  C0C7  F023         	movff	_currentBlockEEPROM1,EEPROM_WriteBlock@memoryAddress
  3201   00D788  C0C8  F024         	movff	_currentBlockEEPROM1+1,EEPROM_WriteBlock@memoryAddress+1
  3202   00D78C  0E94               	movlw	low _eepromBuffer
  3203   00D78E  6E25               	movwf	EEPROM_WriteBlock@data^0,c
  3204   00D790  0E03               	movlw	high _eepromBuffer
  3205   00D792  6E26               	movwf	(EEPROM_WriteBlock@data+1)^0,c
  3206   00D794  0E0C               	movlw	12
  3207   00D796  6E27               	movwf	EEPROM_WriteBlock@size^0,c
  3208   00D798  0E50               	movlw	80
  3209   00D79A  ECB2  F055         	call	_EEPROM_WriteBlock
  3210                           
  3211                           ;main.c: 324:         EEPROM_WriteBlock(0x51, currentBlockEEPROM2, &eepromBuffer[12], 12
      +                          );
  3212   00D79E  C0C5  F023         	movff	_currentBlockEEPROM2,EEPROM_WriteBlock@memoryAddress
  3213   00D7A2  C0C6  F024         	movff	_currentBlockEEPROM2+1,EEPROM_WriteBlock@memoryAddress+1
  3214   00D7A6  0EA0               	movlw	low (_eepromBuffer+12)
  3215   00D7A8  6E25               	movwf	EEPROM_WriteBlock@data^0,c
  3216   00D7AA  0E03               	movlw	high (_eepromBuffer+12)
  3217   00D7AC  6E26               	movwf	(EEPROM_WriteBlock@data+1)^0,c
  3218   00D7AE  0E0C               	movlw	12
  3219   00D7B0  6E27               	movwf	EEPROM_WriteBlock@size^0,c
  3220   00D7B2  0E51               	movlw	81
  3221   00D7B4  ECB2  F055         	call	_EEPROM_WriteBlock
  3222   00D7B8                     
  3223                           ;main.c: 327:         currentBlockEEPROM1 = (currentBlockEEPROM1 + 12) % 32768;
  3224   00D7B8  0E0C               	movlw	12
  3225   00D7BA  0100               	movlb	0	; () banked
  3226   00D7BC  25C7               	addwf	_currentBlockEEPROM1& (0+255),w,b
  3227   00D7BE  6FB7               	movwf	??_StartLogging& (0+255),b
  3228   00D7C0  0E00               	movlw	0
  3229   00D7C2  21C8               	addwfc	(_currentBlockEEPROM1+1)& (0+255),w,b
  3230   00D7C4  6FB8               	movwf	(??_StartLogging+1)& (0+255),b
  3231   00D7C6  0EFF               	movlw	255
  3232   00D7C8  15B7               	andwf	??_StartLogging& (0+255),w,b
  3233   00D7CA  6FC7               	movwf	_currentBlockEEPROM1& (0+255),b
  3234   00D7CC  0E7F               	movlw	127
  3235   00D7CE  15B8               	andwf	(??_StartLogging+1)& (0+255),w,b
  3236   00D7D0  6FC8               	movwf	(_currentBlockEEPROM1+1)& (0+255),b
  3237   00D7D2                     
  3238                           ; BSR set to: 0
  3239                           ;main.c: 328:         currentBlockEEPROM2 = (currentBlockEEPROM2 + 12) % 32768;
  3240   00D7D2  0E0C               	movlw	12
  3241   00D7D4  25C5               	addwf	_currentBlockEEPROM2& (0+255),w,b
  3242   00D7D6  6FB7               	movwf	??_StartLogging& (0+255),b
  3243   00D7D8  0E00               	movlw	0
  3244   00D7DA  21C6               	addwfc	(_currentBlockEEPROM2+1)& (0+255),w,b
  3245   00D7DC  6FB8               	movwf	(??_StartLogging+1)& (0+255),b
  3246   00D7DE  0EFF               	movlw	255
  3247   00D7E0  15B7               	andwf	??_StartLogging& (0+255),w,b
  3248   00D7E2  6FC5               	movwf	_currentBlockEEPROM2& (0+255),b
  3249   00D7E4  0E7F               	movlw	127
  3250   00D7E6  15B8               	andwf	(??_StartLogging+1)& (0+255),w,b
  3251   00D7E8  6FC6               	movwf	(_currentBlockEEPROM2+1)& (0+255),b
  3252   00D7EA                     
  3253                           ; BSR set to: 0
  3254                           ;main.c: 330:         loggedDataCount++;
  3255   00D7EA  0E01               	movlw	1
  3256   00D7EC  0102               	movlb	2	; () banked
  3257   00D7EE  2710               	addwf	StartLogging@loggedDataCount& (0+255),f,b
  3258   00D7F0  0E00               	movlw	0
  3259   00D7F2  2311               	addwfc	(StartLogging@loggedDataCount+1)& (0+255),f,b
  3260   00D7F4  2312               	addwfc	(StartLogging@loggedDataCount+2)& (0+255),f,b
  3261   00D7F6  2313               	addwfc	(StartLogging@loggedDataCount+3)& (0+255),f,b
  3262   00D7F8                     
  3263                           ; BSR set to: 2
  3264                           ;main.c: 331:         custom_delay_ms(Tm);
  3265   00D7F8  C0E5  F001         	movff	_Tm,custom_delay_ms@milliseconds
  3266   00D7FC  C0E6  F002         	movff	_Tm+1,custom_delay_ms@milliseconds+1
  3267   00D800  C0E7  F003         	movff	_Tm+2,custom_delay_ms@milliseconds+2
  3268   00D804  C0E8  F004         	movff	_Tm+3,custom_delay_ms@milliseconds+3
  3269   00D808  EC56  F055         	call	_custom_delay_ms	;wreg free
  3270   00D80C                     l10659:
  3271                           
  3272                           ;main.c: 297:     while (loggedDataCount < Ndat) {
  3273   00D80C  0100               	movlb	0	; () banked
  3274   00D80E  51E9               	movf	_Ndat& (0+255),w,b
  3275   00D810  0102               	movlb	2	; () banked
  3276   00D812  5D10               	subwf	StartLogging@loggedDataCount& (0+255),w,b
  3277   00D814  0100               	movlb	0	; () banked
  3278   00D816  51EA               	movf	(_Ndat+1)& (0+255),w,b
  3279   00D818  0102               	movlb	2	; () banked
  3280   00D81A  5911               	subwfb	(StartLogging@loggedDataCount+1)& (0+255),w,b
  3281   00D81C  0100               	movlb	0	; () banked
  3282   00D81E  51EB               	movf	(_Ndat+2)& (0+255),w,b
  3283   00D820  0102               	movlb	2	; () banked
  3284   00D822  5912               	subwfb	(StartLogging@loggedDataCount+2)& (0+255),w,b
  3285   00D824  0100               	movlb	0	; () banked
  3286   00D826  51EC               	movf	(_Ndat+3)& (0+255),w,b
  3287   00D828  0102               	movlb	2	; () banked
  3288   00D82A  5913               	subwfb	(StartLogging@loggedDataCount+3)& (0+255),w,b
  3289   00D82C  A0D8               	btfss	status,0,c
  3290   00D82E  EF1B  F06C         	goto	u11081
  3291   00D832  EF1D  F06C         	goto	u11080
  3292   00D836                     u11081:
  3293   00D836  EF66  F06B         	goto	l10637
  3294   00D83A                     u11080:
  3295   00D83A                     
  3296                           ; BSR set to: 2
  3297                           ;main.c: 334:     if (loggedDataCount == Ndat) {
  3298   00D83A  0100               	movlb	0	; () banked
  3299   00D83C  51E9               	movf	_Ndat& (0+255),w,b
  3300   00D83E  0102               	movlb	2	; () banked
  3301   00D840  1910               	xorwf	StartLogging@loggedDataCount& (0+255),w,b
  3302   00D842  E113               	bnz	u11091
  3303   00D844  0100               	movlb	0	; () banked
  3304   00D846  51EA               	movf	(_Ndat+1)& (0+255),w,b
  3305   00D848  0102               	movlb	2	; () banked
  3306   00D84A  1911               	xorwf	(StartLogging@loggedDataCount+1)& (0+255),w,b
  3307   00D84C  E10E               	bnz	u11091
  3308   00D84E  0100               	movlb	0	; () banked
  3309   00D850  51EB               	movf	(_Ndat+2)& (0+255),w,b
  3310   00D852  0102               	movlb	2	; () banked
  3311   00D854  1912               	xorwf	(StartLogging@loggedDataCount+2)& (0+255),w,b
  3312   00D856  E109               	bnz	u11091
  3313   00D858  0100               	movlb	0	; () banked
  3314   00D85A  51EC               	movf	(_Ndat+3)& (0+255),w,b
  3315   00D85C  0102               	movlb	2	; () banked
  3316   00D85E  1913               	xorwf	(StartLogging@loggedDataCount+3)& (0+255),w,b
  3317   00D860  A4D8               	btfss	status,2,c
  3318   00D862  EF35  F06C         	goto	u11091
  3319   00D866  EF37  F06C         	goto	u11090
  3320   00D86A                     u11091:
  3321   00D86A  EFC9  F06C         	goto	l10685
  3322   00D86E                     u11090:
  3323   00D86E                     
  3324                           ; BSR set to: 2
  3325                           ;main.c: 335:     UART_SendString("------------LOG_OK-------------\n");
  3326   00D86E  0E54               	movlw	low STR_6
  3327   00D870  6E02               	movwf	UART_SendString@str^0,c
  3328   00D872  0EFF               	movlw	high STR_6
  3329   00D874  6E03               	movwf	(UART_SendString@str+1)^0,c
  3330   00D876  EC9B  F059         	call	_UART_SendString	;wreg free
  3331   00D87A                     
  3332                           ;main.c: 337:     unsigned long startReadAddressEEPROM1 = (currentBlockEEPROM1 == 0 ? 32
      +                          768 : currentBlockEEPROM1) - (Ndat * 12);
  3333   00D87A  0100               	movlb	0	; () banked
  3334   00D87C  51C7               	movf	_currentBlockEEPROM1& (0+255),w,b
  3335   00D87E  11C8               	iorwf	(_currentBlockEEPROM1+1)& (0+255),w,b
  3336   00D880  B4D8               	btfsc	status,2,c
  3337   00D882  EF45  F06C         	goto	u11101
  3338   00D886  EF47  F06C         	goto	u11100
  3339   00D88A                     u11101:
  3340   00D88A  EF50  F06C         	goto	l10669
  3341   00D88E                     u11100:
  3342   00D88E                     
  3343                           ; BSR set to: 0
  3344   00D88E  C0C7  F208         	movff	_currentBlockEEPROM1,_StartLogging$1474
  3345   00D892  C0C8  F209         	movff	_currentBlockEEPROM1+1,_StartLogging$1474+1
  3346   00D896  0102               	movlb	2	; () banked
  3347   00D898  6B0A               	clrf	(_StartLogging$1474+2)& (0+255),b
  3348   00D89A  6B0B               	clrf	(_StartLogging$1474+3)& (0+255),b
  3349   00D89C  EF59  F06C         	goto	l10671
  3350   00D8A0                     l10669:
  3351                           
  3352                           ; BSR set to: 0
  3353   00D8A0  0E00               	movlw	0
  3354   00D8A2  0102               	movlb	2	; () banked
  3355   00D8A4  6F08               	movwf	_StartLogging$1474& (0+255),b
  3356   00D8A6  0E80               	movlw	128
  3357   00D8A8  6F09               	movwf	(_StartLogging$1474+1)& (0+255),b
  3358   00D8AA  0E00               	movlw	0
  3359   00D8AC  6F0A               	movwf	(_StartLogging$1474+2)& (0+255),b
  3360   00D8AE  0E00               	movlw	0
  3361   00D8B0  6F0B               	movwf	(_StartLogging$1474+3)& (0+255),b
  3362   00D8B2                     l10671:
  3363                           
  3364                           ; BSR set to: 2
  3365   00D8B2  C0E9  F001         	movff	_Ndat,___lmul@multiplier
  3366   00D8B6  C0EA  F002         	movff	_Ndat+1,___lmul@multiplier+1
  3367   00D8BA  C0EB  F003         	movff	_Ndat+2,___lmul@multiplier+2
  3368   00D8BE  C0EC  F004         	movff	_Ndat+3,___lmul@multiplier+3
  3369   00D8C2  0EF4               	movlw	244
  3370   00D8C4  6E05               	movwf	___lmul@multiplicand^0,c
  3371   00D8C6  0EFF               	movlw	255
  3372   00D8C8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3373   00D8CA  0EFF               	movlw	255
  3374   00D8CC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3375   00D8CE  0EFF               	movlw	255
  3376   00D8D0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3377   00D8D2  ECF6  F058         	call	___lmul	;wreg free
  3378   00D8D6  0102               	movlb	2	; () banked
  3379   00D8D8  5108               	movf	_StartLogging$1474& (0+255),w,b
  3380   00D8DA  2401               	addwf	?___lmul^0,w,c
  3381   00D8DC  6F00               	movwf	StartLogging@startReadAddressEEPROM1& (0+255),b
  3382   00D8DE  5109               	movf	(_StartLogging$1474+1)& (0+255),w,b
  3383   00D8E0  2002               	addwfc	(?___lmul+1)^0,w,c
  3384   00D8E2  6F01               	movwf	(StartLogging@startReadAddressEEPROM1+1)& (0+255),b
  3385   00D8E4  510A               	movf	(_StartLogging$1474+2)& (0+255),w,b
  3386   00D8E6  2003               	addwfc	(?___lmul+2)^0,w,c
  3387   00D8E8  6F02               	movwf	(StartLogging@startReadAddressEEPROM1+2)& (0+255),b
  3388   00D8EA  510B               	movf	(_StartLogging$1474+3)& (0+255),w,b
  3389   00D8EC  2004               	addwfc	(?___lmul+3)^0,w,c
  3390   00D8EE  6F03               	movwf	(StartLogging@startReadAddressEEPROM1+3)& (0+255),b
  3391   00D8F0                     
  3392                           ; BSR set to: 2
  3393                           ;main.c: 338:     unsigned long startReadAddressEEPROM2 = (currentBlockEEPROM2 == 0 ? 32
      +                          768 : currentBlockEEPROM2) - (Ndat * 12);
  3394   00D8F0  0100               	movlb	0	; () banked
  3395   00D8F2  51C5               	movf	_currentBlockEEPROM2& (0+255),w,b
  3396   00D8F4  11C6               	iorwf	(_currentBlockEEPROM2+1)& (0+255),w,b
  3397   00D8F6  B4D8               	btfsc	status,2,c
  3398   00D8F8  EF80  F06C         	goto	u11111
  3399   00D8FC  EF82  F06C         	goto	u11110
  3400   00D900                     u11111:
  3401   00D900  EF8B  F06C         	goto	l10677
  3402   00D904                     u11110:
  3403   00D904                     
  3404                           ; BSR set to: 0
  3405   00D904  C0C5  F20C         	movff	_currentBlockEEPROM2,_StartLogging$1476
  3406   00D908  C0C6  F20D         	movff	_currentBlockEEPROM2+1,_StartLogging$1476+1
  3407   00D90C  0102               	movlb	2	; () banked
  3408   00D90E  6B0E               	clrf	(_StartLogging$1476+2)& (0+255),b
  3409   00D910  6B0F               	clrf	(_StartLogging$1476+3)& (0+255),b
  3410   00D912  EF94  F06C         	goto	l10679
  3411   00D916                     l10677:
  3412                           
  3413                           ; BSR set to: 0
  3414   00D916  0E00               	movlw	0
  3415   00D918  0102               	movlb	2	; () banked
  3416   00D91A  6F0C               	movwf	_StartLogging$1476& (0+255),b
  3417   00D91C  0E80               	movlw	128
  3418   00D91E  6F0D               	movwf	(_StartLogging$1476+1)& (0+255),b
  3419   00D920  0E00               	movlw	0
  3420   00D922  6F0E               	movwf	(_StartLogging$1476+2)& (0+255),b
  3421   00D924  0E00               	movlw	0
  3422   00D926  6F0F               	movwf	(_StartLogging$1476+3)& (0+255),b
  3423   00D928                     l10679:
  3424                           
  3425                           ; BSR set to: 2
  3426   00D928  C0E9  F001         	movff	_Ndat,___lmul@multiplier
  3427   00D92C  C0EA  F002         	movff	_Ndat+1,___lmul@multiplier+1
  3428   00D930  C0EB  F003         	movff	_Ndat+2,___lmul@multiplier+2
  3429   00D934  C0EC  F004         	movff	_Ndat+3,___lmul@multiplier+3
  3430   00D938  0EF4               	movlw	244
  3431   00D93A  6E05               	movwf	___lmul@multiplicand^0,c
  3432   00D93C  0EFF               	movlw	255
  3433   00D93E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3434   00D940  0EFF               	movlw	255
  3435   00D942  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3436   00D944  0EFF               	movlw	255
  3437   00D946  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3438   00D948  ECF6  F058         	call	___lmul	;wreg free
  3439   00D94C  0102               	movlb	2	; () banked
  3440   00D94E  510C               	movf	_StartLogging$1476& (0+255),w,b
  3441   00D950  2401               	addwf	?___lmul^0,w,c
  3442   00D952  6F04               	movwf	StartLogging@startReadAddressEEPROM2& (0+255),b
  3443   00D954  510D               	movf	(_StartLogging$1476+1)& (0+255),w,b
  3444   00D956  2002               	addwfc	(?___lmul+1)^0,w,c
  3445   00D958  6F05               	movwf	(StartLogging@startReadAddressEEPROM2+1)& (0+255),b
  3446   00D95A  510E               	movf	(_StartLogging$1476+2)& (0+255),w,b
  3447   00D95C  2003               	addwfc	(?___lmul+2)^0,w,c
  3448   00D95E  6F06               	movwf	(StartLogging@startReadAddressEEPROM2+2)& (0+255),b
  3449   00D960  510F               	movf	(_StartLogging$1476+3)& (0+255),w,b
  3450   00D962  2004               	addwfc	(?___lmul+3)^0,w,c
  3451   00D964  6F07               	movwf	(StartLogging@startReadAddressEEPROM2+3)& (0+255),b
  3452   00D966                     
  3453                           ; BSR set to: 2
  3454                           ;main.c: 363:     ReadAndSendEEPROMData(Ndat, (uint16_t)startReadAddressEEPROM1, (uint16
      +                          _t)startReadAddressEEPROM2);
  3455   00D966  C0E9  F0AF         	movff	_Ndat,ReadAndSendEEPROMData@Ndat
  3456   00D96A  C0EA  F0B0         	movff	_Ndat+1,ReadAndSendEEPROMData@Ndat+1
  3457   00D96E  C0EB  F0B1         	movff	_Ndat+2,ReadAndSendEEPROMData@Ndat+2
  3458   00D972  C0EC  F0B2         	movff	_Ndat+3,ReadAndSendEEPROMData@Ndat+3
  3459   00D976  C200  F0B3         	movff	StartLogging@startReadAddressEEPROM1,ReadAndSendEEPROMData@startAddressEEPROM1
  3460   00D97A  C201  F0B4         	movff	StartLogging@startReadAddressEEPROM1+1,ReadAndSendEEPROMData@startAddressEEPROM1+
      +                          1
  3461   00D97E  C204  F0B5         	movff	StartLogging@startReadAddressEEPROM2,ReadAndSendEEPROMData@startAddressEEPROM2
  3462   00D982  C205  F0B6         	movff	StartLogging@startReadAddressEEPROM2+1,ReadAndSendEEPROMData@startAddressEEPROM2+
      +                          1
  3463   00D986  EC94  F064         	call	_ReadAndSendEEPROMData	;wreg free
  3464   00D98A                     
  3465                           ;main.c: 365:     StoreCurrentAddressEEPROM();
  3466   00D98A  ECFD  F053         	call	_StoreCurrentAddressEEPROM	;wreg free
  3467                           
  3468                           ;main.c: 367:     } else {
  3469   00D98E  EFCF  F06C         	goto	l10687
  3470   00D992                     l10685:
  3471                           
  3472                           ; BSR set to: 2
  3473                           ;main.c: 368:         UART_SendString("LOG_ERR\n");
  3474   00D992  0ECF               	movlw	low STR_7
  3475   00D994  6E02               	movwf	UART_SendString@str^0,c
  3476   00D996  0EFF               	movlw	high STR_7
  3477   00D998  6E03               	movwf	(UART_SendString@str+1)^0,c
  3478   00D99A  EC9B  F059         	call	_UART_SendString	;wreg free
  3479   00D99E                     l10687:
  3480                           
  3481                           ;main.c: 370:     logging = 0;
  3482   00D99E  0E00               	movlw	0
  3483   00D9A0  0100               	movlb	0	; () banked
  3484   00D9A2  6FCB               	movwf	_logging& (0+255),b
  3485   00D9A4                     
  3486                           ; BSR set to: 0
  3487   00D9A4  0012               	return		;funcret
  3488   00D9A6                     __end_of_StartLogging:
  3489                           	callstack 0
  3490                           
  3491 ;; *************** function _custom_delay_ms *****************
  3492 ;; Defined at:
  3493 ;;		line 232 in file "main.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  milliseconds    4    0[COMRAM] unsigned long 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;Total ram usage:        5 bytes
  3512 ;; Hardware stack levels used: 1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_StartLogging
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text8
  3521   00AAAC                     __ptext8:
  3522                           	callstack 0
  3523   00AAAC                     _custom_delay_ms:
  3524                           	callstack 29
  3525   00AAAC                     
  3526                           ;main.c: 233:     while(milliseconds--) {
  3527   00AAAC  EF5F  F055         	goto	l10511
  3528   00AAB0                     l10509:
  3529                           
  3530                           ;main.c: 234:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3531   00AAB0  0E03               	movlw	3
  3532   00AAB2  6E05               	movwf	??_custom_delay_ms^0,c
  3533   00AAB4  0E98               	movlw	152
  3534   00AAB6                     u11287:
  3535   00AAB6  2EE8               	decfsz	wreg,f,c
  3536   00AAB8  D7FE               	bra	u11287
  3537   00AABA  2E05               	decfsz	??_custom_delay_ms^0,f,c
  3538   00AABC  D7FC               	bra	u11287
  3539   00AABE                     l10511:
  3540                           
  3541                           ;main.c: 233:     while(milliseconds--) {
  3542   00AABE  0601               	decf	custom_delay_ms@milliseconds^0,f,c
  3543   00AAC0  0E00               	movlw	0
  3544   00AAC2  5A02               	subwfb	(custom_delay_ms@milliseconds+1)^0,f,c
  3545   00AAC4  5A03               	subwfb	(custom_delay_ms@milliseconds+2)^0,f,c
  3546   00AAC6  5A04               	subwfb	(custom_delay_ms@milliseconds+3)^0,f,c
  3547   00AAC8  2801               	incf	custom_delay_ms@milliseconds^0,w,c
  3548   00AACA  E10A               	bnz	u10981
  3549   00AACC  2802               	incf	(custom_delay_ms@milliseconds+1)^0,w,c
  3550   00AACE  E108               	bnz	u10981
  3551   00AAD0  2803               	incf	(custom_delay_ms@milliseconds+2)^0,w,c
  3552   00AAD2  E106               	bnz	u10981
  3553   00AAD4  2804               	incf	(custom_delay_ms@milliseconds+3)^0,w,c
  3554   00AAD6  A4D8               	btfss	status,2,c
  3555   00AAD8  EF70  F055         	goto	u10981
  3556   00AADC  EF72  F055         	goto	u10980
  3557   00AAE0                     u10981:
  3558   00AAE0  EF58  F055         	goto	l10509
  3559   00AAE4                     u10980:
  3560   00AAE4  0012               	return		;funcret
  3561   00AAE6                     __end_of_custom_delay_ms:
  3562                           	callstack 0
  3563                           
  3564 ;; *************** function ___lmul *****************
  3565 ;; Defined at:
  3566 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  multiplier      4    0[COMRAM] unsigned long 
  3569 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  product         4    8[COMRAM] unsigned long 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  4    0[COMRAM] unsigned long 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3581 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;Total ram usage:       12 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_StartLogging
  3591 ;;		_main
  3592 ;;		_Handle_LOG_READ
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text9
  3597   00B1EC                     __ptext9:
  3598                           	callstack 0
  3599   00B1EC                     ___lmul:
  3600                           	callstack 30
  3601   00B1EC  0E00               	movlw	0
  3602   00B1EE  6E09               	movwf	___lmul@product^0,c
  3603   00B1F0  0E00               	movlw	0
  3604   00B1F2  6E0A               	movwf	(___lmul@product+1)^0,c
  3605   00B1F4  0E00               	movlw	0
  3606   00B1F6  6E0B               	movwf	(___lmul@product+2)^0,c
  3607   00B1F8  0E00               	movlw	0
  3608   00B1FA  6E0C               	movwf	(___lmul@product+3)^0,c
  3609   00B1FC                     l10559:
  3610   00B1FC  A001               	btfss	___lmul@multiplier^0,0,c
  3611   00B1FE  EF03  F059         	goto	u11001
  3612   00B202  EF05  F059         	goto	u11000
  3613   00B206                     u11001:
  3614   00B206  EF0D  F059         	goto	l10563
  3615   00B20A                     u11000:
  3616   00B20A  5005               	movf	___lmul@multiplicand^0,w,c
  3617   00B20C  2609               	addwf	___lmul@product^0,f,c
  3618   00B20E  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  3619   00B210  220A               	addwfc	(___lmul@product+1)^0,f,c
  3620   00B212  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  3621   00B214  220B               	addwfc	(___lmul@product+2)^0,f,c
  3622   00B216  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  3623   00B218  220C               	addwfc	(___lmul@product+3)^0,f,c
  3624   00B21A                     l10563:
  3625   00B21A  90D8               	bcf	status,0,c
  3626   00B21C  3605               	rlcf	___lmul@multiplicand^0,f,c
  3627   00B21E  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3628   00B220  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3629   00B222  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3630   00B224  90D8               	bcf	status,0,c
  3631   00B226  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  3632   00B228  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  3633   00B22A  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  3634   00B22C  3201               	rrcf	___lmul@multiplier^0,f,c
  3635   00B22E  5001               	movf	___lmul@multiplier^0,w,c
  3636   00B230  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  3637   00B232  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  3638   00B234  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  3639   00B236  A4D8               	btfss	status,2,c
  3640   00B238  EF20  F059         	goto	u11011
  3641   00B23C  EF22  F059         	goto	u11010
  3642   00B240                     u11011:
  3643   00B240  EFFE  F058         	goto	l10559
  3644   00B244                     u11010:
  3645   00B244  C009  F001         	movff	___lmul@product,?___lmul
  3646   00B248  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3647   00B24C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3648   00B250  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3649   00B254  0012               	return		;funcret
  3650   00B256                     __end_of___lmul:
  3651                           	callstack 0
  3652                           
  3653 ;; *************** function _StoreCurrentAddressEEPROM *****************
  3654 ;; Defined at:
  3655 ;;		line 272 in file "main.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  addressBuffe    2   41[COMRAM] unsigned char [2]
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;Total ram usage:        2 bytes
  3674 ;; Hardware stack levels used: 1
  3675 ;; Hardware stack levels required when called: 14
  3676 ;; This function calls:
  3677 ;;		_EEPROM_WriteBlock
  3678 ;; This function is called by:
  3679 ;;		_StartLogging
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text10
  3684   00A7FA                     __ptext10:
  3685                           	callstack 0
  3686   00A7FA                     _StoreCurrentAddressEEPROM:
  3687                           	callstack 15
  3688   00A7FA                     
  3689                           ;main.c: 273:     uint8_t addressBuffer[2];;main.c: 275:     addressBuffer[0] = (current
      +                          BlockEEPROM1 >> 8) & 0xFF;
  3690   00A7FA  0100               	movlb	0	; () banked
  3691   00A7FC  51C8               	movf	(_currentBlockEEPROM1+1)& (0+255),w,b
  3692   00A7FE  6E2A               	movwf	StoreCurrentAddressEEPROM@addressBuffer^0,c
  3693   00A800                     
  3694                           ; BSR set to: 0
  3695                           ;main.c: 276:     addressBuffer[1] = currentBlockEEPROM1 & 0xFF;
  3696   00A800  C0C7  F02B         	movff	_currentBlockEEPROM1,StoreCurrentAddressEEPROM@addressBuffer+1
  3697   00A804                     
  3698                           ; BSR set to: 0
  3699                           ;main.c: 277:     EEPROM_WriteBlock(0x50, 0x0000, addressBuffer, 2);
  3700   00A804  0E00               	movlw	0
  3701   00A806  6E24               	movwf	(EEPROM_WriteBlock@memoryAddress+1)^0,c
  3702   00A808  0E00               	movlw	0
  3703   00A80A  6E23               	movwf	EEPROM_WriteBlock@memoryAddress^0,c
  3704   00A80C  0E2A               	movlw	low StoreCurrentAddressEEPROM@addressBuffer
  3705   00A80E  6E25               	movwf	EEPROM_WriteBlock@data^0,c
  3706   00A810  6A26               	clrf	(EEPROM_WriteBlock@data+1)^0,c
  3707   00A812  0E02               	movlw	2
  3708   00A814  6E27               	movwf	EEPROM_WriteBlock@size^0,c
  3709   00A816  0E50               	movlw	80
  3710   00A818  ECB2  F055         	call	_EEPROM_WriteBlock
  3711   00A81C  0012               	return		;funcret
  3712   00A81E                     __end_of_StoreCurrentAddressEEPROM:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _EEPROM_WriteBlock *****************
  3716 ;; Defined at:
  3717 ;;		line 141 in file "main.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  deviceAddres    1    wreg     unsigned char 
  3720 ;;  memoryAddres    2   34[COMRAM] unsigned short 
  3721 ;;  data            2   36[COMRAM] PTR unsigned char 
  3722 ;;		 -> eepromBuffer(24), StoreCurrentAddressEEPROM@addressBuffer(2), 
  3723 ;;  size            1   38[COMRAM] unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  deviceAddres    1   39[COMRAM] unsigned char 
  3726 ;;  i               1   40[COMRAM] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3736 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;Total ram usage:        7 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 13
  3743 ;; This function calls:
  3744 ;;		_EEPROM_WriteByte
  3745 ;; This function is called by:
  3746 ;;		_StoreCurrentAddressEEPROM
  3747 ;;		_StartLogging
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text11
  3752   00AB64                     __ptext11:
  3753                           	callstack 0
  3754   00AB64                     _EEPROM_WriteBlock:
  3755                           	callstack 15
  3756                           
  3757                           ;incstack = 0
  3758                           ;EEPROM_WriteBlock@deviceAddress stored from wreg
  3759   00AB64  6E28               	movwf	EEPROM_WriteBlock@deviceAddress^0,c
  3760   00AB66                     
  3761                           ;main.c: 142:     for (uint8_t i = 0; i < size; i++){
  3762   00AB66  0E00               	movlw	0
  3763   00AB68  6E29               	movwf	EEPROM_WriteBlock@i^0,c
  3764   00AB6A  EFC9  F055         	goto	l10307
  3765   00AB6E                     l10303:
  3766                           
  3767                           ;main.c: 143:         EEPROM_WriteByte(deviceAddress, memoryAddress + i, data[i]);
  3768   00AB6E  5029               	movf	EEPROM_WriteBlock@i^0,w,c
  3769   00AB70  2423               	addwf	EEPROM_WriteBlock@memoryAddress^0,w,c
  3770   00AB72  6E1B               	movwf	EEPROM_WriteByte@memoryAddress^0,c
  3771   00AB74  0E00               	movlw	0
  3772   00AB76  2024               	addwfc	(EEPROM_WriteBlock@memoryAddress+1)^0,w,c
  3773   00AB78  6E1C               	movwf	(EEPROM_WriteByte@memoryAddress+1)^0,c
  3774   00AB7A  5029               	movf	EEPROM_WriteBlock@i^0,w,c
  3775   00AB7C  2425               	addwf	EEPROM_WriteBlock@data^0,w,c
  3776   00AB7E  6ED9               	movwf	fsr2l,c
  3777   00AB80  0E00               	movlw	0
  3778   00AB82  2026               	addwfc	(EEPROM_WriteBlock@data+1)^0,w,c
  3779   00AB84  6EDA               	movwf	fsr2h,c
  3780   00AB86  50DF               	movf	indf2,w,c
  3781   00AB88  6E1D               	movwf	EEPROM_WriteByte@data^0,c
  3782   00AB8A  5028               	movf	EEPROM_WriteBlock@deviceAddress^0,w,c
  3783   00AB8C  ECEA  F054         	call	_EEPROM_WriteByte
  3784   00AB90                     
  3785                           ;main.c: 144:     }
  3786   00AB90  2A29               	incf	EEPROM_WriteBlock@i^0,f,c
  3787   00AB92                     l10307:
  3788   00AB92  5027               	movf	EEPROM_WriteBlock@size^0,w,c
  3789   00AB94  5C29               	subwf	EEPROM_WriteBlock@i^0,w,c
  3790   00AB96  A0D8               	btfss	status,0,c
  3791   00AB98  EFD0  F055         	goto	u10731
  3792   00AB9C  EFD2  F055         	goto	u10730
  3793   00ABA0                     u10731:
  3794   00ABA0  EFB7  F055         	goto	l10303
  3795   00ABA4                     u10730:
  3796   00ABA4  0012               	return		;funcret
  3797   00ABA6                     __end_of_EEPROM_WriteBlock:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _EEPROM_WriteByte *****************
  3801 ;; Defined at:
  3802 ;;		line 114 in file "main.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  deviceAddres    1    wreg     unsigned char 
  3805 ;;  memoryAddres    2   26[COMRAM] unsigned short 
  3806 ;;  data            1   28[COMRAM] unsigned char 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  deviceAddres    1   30[COMRAM] unsigned char 
  3809 ;;  buffer          3   31[COMRAM] unsigned char [3]
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3819 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;Total ram usage:        8 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 12
  3826 ;; This function calls:
  3827 ;;		_I2C1_WriteNBytes
  3828 ;; This function is called by:
  3829 ;;		_EEPROM_WriteBlock
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text12
  3834   00A9D4                     __ptext12:
  3835                           	callstack 0
  3836   00A9D4                     _EEPROM_WriteByte:
  3837                           	callstack 15
  3838                           
  3839                           ;incstack = 0
  3840                           ;EEPROM_WriteByte@deviceAddress stored from wreg
  3841   00A9D4  6E1F               	movwf	EEPROM_WriteByte@deviceAddress^0,c
  3842   00A9D6                     
  3843                           ;main.c: 115:     uint8_t buffer[3];;main.c: 116:     buffer[0] = (memoryAddress >> 8) &
      +                           0xFF;
  3844   00A9D6  501C               	movf	(EEPROM_WriteByte@memoryAddress+1)^0,w,c
  3845   00A9D8  6E20               	movwf	EEPROM_WriteByte@buffer^0,c
  3846   00A9DA                     
  3847                           ;main.c: 117:     buffer[1] = memoryAddress & 0xFF;
  3848   00A9DA  C01B  F021         	movff	EEPROM_WriteByte@memoryAddress,EEPROM_WriteByte@buffer+1
  3849   00A9DE                     
  3850                           ;main.c: 118:     buffer[2] = data;
  3851   00A9DE  C01D  F022         	movff	EEPROM_WriteByte@data,EEPROM_WriteByte@buffer+2
  3852   00A9E2                     
  3853                           ;main.c: 120:     I2C1_WriteNBytes(deviceAddress, buffer, 3);
  3854   00A9E2  0E20               	movlw	low EEPROM_WriteByte@buffer
  3855   00A9E4  6E17               	movwf	I2C1_WriteNBytes@data^0,c
  3856   00A9E6  0E00               	movlw	0
  3857   00A9E8  6E19               	movwf	(I2C1_WriteNBytes@len+1)^0,c
  3858   00A9EA  0E03               	movlw	3
  3859   00A9EC  6E18               	movwf	I2C1_WriteNBytes@len^0,c
  3860   00A9EE  501F               	movf	EEPROM_WriteByte@deviceAddress^0,w,c
  3861   00A9F0  EC69  F057         	call	_I2C1_WriteNBytes
  3862   00A9F4                     
  3863                           ;main.c: 122:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3864   00A9F4  0E0D               	movlw	13
  3865   00A9F6  6E1E               	movwf	??_EEPROM_WriteByte^0,c
  3866   00A9F8  0EFC               	movlw	252
  3867   00A9FA                     u11297:
  3868   00A9FA  2EE8               	decfsz	wreg,f,c
  3869   00A9FC  D7FE               	bra	u11297
  3870   00A9FE  2E1E               	decfsz	??_EEPROM_WriteByte^0,f,c
  3871   00AA00  D7FC               	bra	u11297
  3872   00AA02  0012               	return		;funcret
  3873   00AA04                     __end_of_EEPROM_WriteByte:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _ReadAndSendEEPROMData *****************
  3877 ;; Defined at:
  3878 ;;		line 239 in file "main.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  Ndat            4   79[BANK0 ] unsigned long 
  3881 ;;  startAddress    2   83[BANK0 ] unsigned short 
  3882 ;;  startAddress    2   85[BANK0 ] unsigned short 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  i               4  224[BANK1 ] unsigned long 
  3885 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  3886 ;;  eepromReadBu   24  200[BANK1 ] unsigned char [24]
  3887 ;;  gz_read         4  248[BANK1 ] float 
  3888 ;;  gy_read         4  244[BANK1 ] float 
  3889 ;;  gx_read         4  240[BANK1 ] float 
  3890 ;;  az_read         4  236[BANK1 ] float 
  3891 ;;  ay_read         4  232[BANK1 ] float 
  3892 ;;  ax_read         4  228[BANK1 ] float 
  3893 ;;  readBlockEEP    2  254[BANK1 ] unsigned short 
  3894 ;;  readBlockEEP    2  252[BANK1 ] unsigned short 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Locals:         0       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Totals:         2       8     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;Total ram usage:      266 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 14
  3911 ;; This function calls:
  3912 ;;		_EEPROM_ReadBlock
  3913 ;;		_UART_SendString
  3914 ;;		_memcpy
  3915 ;;		_sprintf
  3916 ;; This function is called by:
  3917 ;;		_StartLogging
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text13
  3922   00C928                     __ptext13:
  3923                           	callstack 0
  3924   00C928                     _ReadAndSendEEPROMData:
  3925                           	callstack 15
  3926   00C928                     
  3927                           ;main.c: 241:     uint16_t readBlockEEPROM1 = startAddressEEPROM1;
  3928   00C928  C0B3  F1FC         	movff	ReadAndSendEEPROMData@startAddressEEPROM1,ReadAndSendEEPROMData@readBlockEEPROM1
  3929   00C92C  C0B4  F1FD         	movff	ReadAndSendEEPROMData@startAddressEEPROM1+1,ReadAndSendEEPROMData@readBlockEEPROM
      +                          1+1
  3930                           
  3931                           ;main.c: 242:     uint16_t readBlockEEPROM2 = startAddressEEPROM2;
  3932   00C930  C0B5  F1FE         	movff	ReadAndSendEEPROMData@startAddressEEPROM2,ReadAndSendEEPROMData@readBlockEEPROM2
  3933   00C934  C0B6  F1FF         	movff	ReadAndSendEEPROMData@startAddressEEPROM2+1,ReadAndSendEEPROMData@readBlockEEPROM
      +                          2+1
  3934   00C938                     
  3935                           ;main.c: 243:     uint8_t eepromReadBuffer[24];;main.c: 244:     float ax_read, ay_read,
      +                           az_read, gx_read, gy_read, gz_read;;main.c: 245:     char buffer[200];;main.c: 247:    
      +                           for (uint32_t i = 0; i < Ndat; i++) {
  3936   00C938  0E00               	movlw	0
  3937   00C93A  0101               	movlb	1	; () banked
  3938   00C93C  6FE0               	movwf	ReadAndSendEEPROMData@i& (0+255),b
  3939   00C93E  0E00               	movlw	0
  3940   00C940  6FE1               	movwf	(ReadAndSendEEPROMData@i+1)& (0+255),b
  3941   00C942  0E00               	movlw	0
  3942   00C944  6FE2               	movwf	(ReadAndSendEEPROMData@i+2)& (0+255),b
  3943   00C946  0E00               	movlw	0
  3944   00C948  6FE3               	movwf	(ReadAndSendEEPROMData@i+3)& (0+255),b
  3945   00C94A  EF75  F065         	goto	l10537
  3946   00C94E                     l10517:
  3947                           
  3948                           ; BSR set to: 1
  3949                           ;main.c: 249:         EEPROM_ReadBlock(0x50, readBlockEEPROM1, eepromReadBuffer, 12);
  3950   00C94E  C1FC  F021         	movff	ReadAndSendEEPROMData@readBlockEEPROM1,EEPROM_ReadBlock@memoryAddress
  3951   00C952  C1FD  F022         	movff	ReadAndSendEEPROMData@readBlockEEPROM1+1,EEPROM_ReadBlock@memoryAddress+1
  3952   00C956  0EC8               	movlw	low ReadAndSendEEPROMData@eepromReadBuffer
  3953   00C958  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  3954   00C95A  0E01               	movlw	high ReadAndSendEEPROMData@eepromReadBuffer
  3955   00C95C  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  3956   00C95E  0E0C               	movlw	12
  3957   00C960  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  3958   00C962  0E50               	movlw	80
  3959   00C964  EC5B  F056         	call	_EEPROM_ReadBlock
  3960   00C968                     
  3961                           ;main.c: 250:         memcpy(&ax_read, &eepromReadBuffer[0], sizeof(float));
  3962   00C968  0EE4               	movlw	low ReadAndSendEEPROMData@ax_read
  3963   00C96A  6E01               	movwf	memcpy@d1^0,c
  3964   00C96C  0E01               	movlw	high ReadAndSendEEPROMData@ax_read
  3965   00C96E  6E02               	movwf	(memcpy@d1+1)^0,c
  3966   00C970  0EC8               	movlw	low ReadAndSendEEPROMData@eepromReadBuffer
  3967   00C972  6E03               	movwf	memcpy@s1^0,c
  3968   00C974  0E01               	movlw	high ReadAndSendEEPROMData@eepromReadBuffer
  3969   00C976  6E04               	movwf	(memcpy@s1+1)^0,c
  3970   00C978  0E00               	movlw	0
  3971   00C97A  6E06               	movwf	(memcpy@n+1)^0,c
  3972   00C97C  0E04               	movlw	4
  3973   00C97E  6E05               	movwf	memcpy@n^0,c
  3974   00C980  EC95  F057         	call	_memcpy	;wreg free
  3975   00C984                     
  3976                           ;main.c: 251:         memcpy(&ay_read, &eepromReadBuffer[4], sizeof(float));
  3977   00C984  0EE8               	movlw	low ReadAndSendEEPROMData@ay_read
  3978   00C986  6E01               	movwf	memcpy@d1^0,c
  3979   00C988  0E01               	movlw	high ReadAndSendEEPROMData@ay_read
  3980   00C98A  6E02               	movwf	(memcpy@d1+1)^0,c
  3981   00C98C  0ECC               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+4)
  3982   00C98E  6E03               	movwf	memcpy@s1^0,c
  3983   00C990  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+4)
  3984   00C992  6E04               	movwf	(memcpy@s1+1)^0,c
  3985   00C994  0E00               	movlw	0
  3986   00C996  6E06               	movwf	(memcpy@n+1)^0,c
  3987   00C998  0E04               	movlw	4
  3988   00C99A  6E05               	movwf	memcpy@n^0,c
  3989   00C99C  EC95  F057         	call	_memcpy	;wreg free
  3990   00C9A0                     
  3991                           ;main.c: 252:         memcpy(&az_read, &eepromReadBuffer[8], sizeof(float));
  3992   00C9A0  0EEC               	movlw	low ReadAndSendEEPROMData@az_read
  3993   00C9A2  6E01               	movwf	memcpy@d1^0,c
  3994   00C9A4  0E01               	movlw	high ReadAndSendEEPROMData@az_read
  3995   00C9A6  6E02               	movwf	(memcpy@d1+1)^0,c
  3996   00C9A8  0ED0               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+8)
  3997   00C9AA  6E03               	movwf	memcpy@s1^0,c
  3998   00C9AC  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+8)
  3999   00C9AE  6E04               	movwf	(memcpy@s1+1)^0,c
  4000   00C9B0  0E00               	movlw	0
  4001   00C9B2  6E06               	movwf	(memcpy@n+1)^0,c
  4002   00C9B4  0E04               	movlw	4
  4003   00C9B6  6E05               	movwf	memcpy@n^0,c
  4004   00C9B8  EC95  F057         	call	_memcpy	;wreg free
  4005   00C9BC                     
  4006                           ;main.c: 255:         EEPROM_ReadBlock(0x51, readBlockEEPROM2, &eepromReadBuffer[12], 12
      +                          );
  4007   00C9BC  C1FE  F021         	movff	ReadAndSendEEPROMData@readBlockEEPROM2,EEPROM_ReadBlock@memoryAddress
  4008   00C9C0  C1FF  F022         	movff	ReadAndSendEEPROMData@readBlockEEPROM2+1,EEPROM_ReadBlock@memoryAddress+1
  4009   00C9C4  0ED4               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+12)
  4010   00C9C6  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  4011   00C9C8  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+12)
  4012   00C9CA  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  4013   00C9CC  0E0C               	movlw	12
  4014   00C9CE  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  4015   00C9D0  0E51               	movlw	81
  4016   00C9D2  EC5B  F056         	call	_EEPROM_ReadBlock
  4017                           
  4018                           ;main.c: 256:         memcpy(&gx_read, &eepromReadBuffer[12], sizeof(float));
  4019   00C9D6  0EF0               	movlw	low ReadAndSendEEPROMData@gx_read
  4020   00C9D8  6E01               	movwf	memcpy@d1^0,c
  4021   00C9DA  0E01               	movlw	high ReadAndSendEEPROMData@gx_read
  4022   00C9DC  6E02               	movwf	(memcpy@d1+1)^0,c
  4023   00C9DE  0ED4               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+12)
  4024   00C9E0  6E03               	movwf	memcpy@s1^0,c
  4025   00C9E2  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+12)
  4026   00C9E4  6E04               	movwf	(memcpy@s1+1)^0,c
  4027   00C9E6  0E00               	movlw	0
  4028   00C9E8  6E06               	movwf	(memcpy@n+1)^0,c
  4029   00C9EA  0E04               	movlw	4
  4030   00C9EC  6E05               	movwf	memcpy@n^0,c
  4031   00C9EE  EC95  F057         	call	_memcpy	;wreg free
  4032                           
  4033                           ;main.c: 257:         memcpy(&gy_read, &eepromReadBuffer[16], sizeof(float));
  4034   00C9F2  0EF4               	movlw	low ReadAndSendEEPROMData@gy_read
  4035   00C9F4  6E01               	movwf	memcpy@d1^0,c
  4036   00C9F6  0E01               	movlw	high ReadAndSendEEPROMData@gy_read
  4037   00C9F8  6E02               	movwf	(memcpy@d1+1)^0,c
  4038   00C9FA  0ED8               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+16)
  4039   00C9FC  6E03               	movwf	memcpy@s1^0,c
  4040   00C9FE  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+16)
  4041   00CA00  6E04               	movwf	(memcpy@s1+1)^0,c
  4042   00CA02  0E00               	movlw	0
  4043   00CA04  6E06               	movwf	(memcpy@n+1)^0,c
  4044   00CA06  0E04               	movlw	4
  4045   00CA08  6E05               	movwf	memcpy@n^0,c
  4046   00CA0A  EC95  F057         	call	_memcpy	;wreg free
  4047                           
  4048                           ;main.c: 258:         memcpy(&gz_read, &eepromReadBuffer[20], sizeof(float));
  4049   00CA0E  0EF8               	movlw	low ReadAndSendEEPROMData@gz_read
  4050   00CA10  6E01               	movwf	memcpy@d1^0,c
  4051   00CA12  0E01               	movlw	high ReadAndSendEEPROMData@gz_read
  4052   00CA14  6E02               	movwf	(memcpy@d1+1)^0,c
  4053   00CA16  0EDC               	movlw	low (ReadAndSendEEPROMData@eepromReadBuffer+20)
  4054   00CA18  6E03               	movwf	memcpy@s1^0,c
  4055   00CA1A  0E01               	movlw	high (ReadAndSendEEPROMData@eepromReadBuffer+20)
  4056   00CA1C  6E04               	movwf	(memcpy@s1+1)^0,c
  4057   00CA1E  0E00               	movlw	0
  4058   00CA20  6E06               	movwf	(memcpy@n+1)^0,c
  4059   00CA22  0E04               	movlw	4
  4060   00CA24  6E05               	movwf	memcpy@n^0,c
  4061   00CA26  EC95  F057         	call	_memcpy	;wreg free
  4062   00CA2A                     
  4063                           ;main.c: 261:         sprintf(buffer, "EEPROM - AX: %.2f, AY: %.2f, AZ: %.2f, GX: %.2f, 
      +                          GY: %.2f, GZ: %.2f\n", ax_read, ay_read, az_read, gx_read, gy_read, gz_read);
  4064   00CA2A  0E00               	movlw	low ReadAndSendEEPROMData@buffer
  4065   00CA2C  0100               	movlb	0	; () banked
  4066   00CA2E  6F93               	movwf	sprintf@s& (0+255),b
  4067   00CA30  0E01               	movlw	high ReadAndSendEEPROMData@buffer
  4068   00CA32  6F94               	movwf	(sprintf@s+1)& (0+255),b
  4069   00CA34  0E1D               	movlw	low STR_5
  4070   00CA36  6F95               	movwf	sprintf@fmt& (0+255),b
  4071   00CA38  0EFE               	movlw	high STR_5
  4072   00CA3A  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  4073   00CA3C  C1E4  F097         	movff	ReadAndSendEEPROMData@ax_read,?_sprintf+4
  4074   00CA40  C1E5  F098         	movff	ReadAndSendEEPROMData@ax_read+1,?_sprintf+5
  4075   00CA44  C1E6  F099         	movff	ReadAndSendEEPROMData@ax_read+2,?_sprintf+6
  4076   00CA48  C1E7  F09A         	movff	ReadAndSendEEPROMData@ax_read+3,?_sprintf+7
  4077   00CA4C  C1E8  F09B         	movff	ReadAndSendEEPROMData@ay_read,?_sprintf+8
  4078   00CA50  C1E9  F09C         	movff	ReadAndSendEEPROMData@ay_read+1,?_sprintf+9
  4079   00CA54  C1EA  F09D         	movff	ReadAndSendEEPROMData@ay_read+2,?_sprintf+10
  4080   00CA58  C1EB  F09E         	movff	ReadAndSendEEPROMData@ay_read+3,?_sprintf+11
  4081   00CA5C  C1EC  F09F         	movff	ReadAndSendEEPROMData@az_read,?_sprintf+12
  4082   00CA60  C1ED  F0A0         	movff	ReadAndSendEEPROMData@az_read+1,?_sprintf+13
  4083   00CA64  C1EE  F0A1         	movff	ReadAndSendEEPROMData@az_read+2,?_sprintf+14
  4084   00CA68  C1EF  F0A2         	movff	ReadAndSendEEPROMData@az_read+3,?_sprintf+15
  4085   00CA6C  C1F0  F0A3         	movff	ReadAndSendEEPROMData@gx_read,?_sprintf+16
  4086   00CA70  C1F1  F0A4         	movff	ReadAndSendEEPROMData@gx_read+1,?_sprintf+17
  4087   00CA74  C1F2  F0A5         	movff	ReadAndSendEEPROMData@gx_read+2,?_sprintf+18
  4088   00CA78  C1F3  F0A6         	movff	ReadAndSendEEPROMData@gx_read+3,?_sprintf+19
  4089   00CA7C  C1F4  F0A7         	movff	ReadAndSendEEPROMData@gy_read,?_sprintf+20
  4090   00CA80  C1F5  F0A8         	movff	ReadAndSendEEPROMData@gy_read+1,?_sprintf+21
  4091   00CA84  C1F6  F0A9         	movff	ReadAndSendEEPROMData@gy_read+2,?_sprintf+22
  4092   00CA88  C1F7  F0AA         	movff	ReadAndSendEEPROMData@gy_read+3,?_sprintf+23
  4093   00CA8C  C1F8  F0AB         	movff	ReadAndSendEEPROMData@gz_read,?_sprintf+24
  4094   00CA90  C1F9  F0AC         	movff	ReadAndSendEEPROMData@gz_read+1,?_sprintf+25
  4095   00CA94  C1FA  F0AD         	movff	ReadAndSendEEPROMData@gz_read+2,?_sprintf+26
  4096   00CA98  C1FB  F0AE         	movff	ReadAndSendEEPROMData@gz_read+3,?_sprintf+27
  4097   00CA9C  EC39  F056         	call	_sprintf	;wreg free
  4098   00CAA0                     
  4099                           ;main.c: 262:         UART_SendString(buffer);
  4100   00CAA0  0E00               	movlw	low ReadAndSendEEPROMData@buffer
  4101   00CAA2  6E02               	movwf	UART_SendString@str^0,c
  4102   00CAA4  0E01               	movlw	high ReadAndSendEEPROMData@buffer
  4103   00CAA6  6E03               	movwf	(UART_SendString@str+1)^0,c
  4104   00CAA8  EC9B  F059         	call	_UART_SendString	;wreg free
  4105   00CAAC                     
  4106                           ;main.c: 265:         readBlockEEPROM1 = (readBlockEEPROM1 + 12) % 32768;
  4107   00CAAC  0E0C               	movlw	12
  4108   00CAAE  0101               	movlb	1	; () banked
  4109   00CAB0  25FC               	addwf	ReadAndSendEEPROMData@readBlockEEPROM1& (0+255),w,b
  4110   00CAB2  6E5C               	movwf	??_ReadAndSendEEPROMData^0,c
  4111   00CAB4  0E00               	movlw	0
  4112   00CAB6  21FD               	addwfc	(ReadAndSendEEPROMData@readBlockEEPROM1+1)& (0+255),w,b
  4113   00CAB8  6E5D               	movwf	(??_ReadAndSendEEPROMData+1)^0,c
  4114   00CABA  0EFF               	movlw	255
  4115   00CABC  145C               	andwf	??_ReadAndSendEEPROMData^0,w,c
  4116   00CABE  6FFC               	movwf	ReadAndSendEEPROMData@readBlockEEPROM1& (0+255),b
  4117   00CAC0  0E7F               	movlw	127
  4118   00CAC2  145D               	andwf	(??_ReadAndSendEEPROMData+1)^0,w,c
  4119   00CAC4  6FFD               	movwf	(ReadAndSendEEPROMData@readBlockEEPROM1+1)& (0+255),b
  4120   00CAC6                     
  4121                           ; BSR set to: 1
  4122                           ;main.c: 266:         readBlockEEPROM2 = (readBlockEEPROM2 + 12) % 32768;
  4123   00CAC6  0E0C               	movlw	12
  4124   00CAC8  25FE               	addwf	ReadAndSendEEPROMData@readBlockEEPROM2& (0+255),w,b
  4125   00CACA  6E5C               	movwf	??_ReadAndSendEEPROMData^0,c
  4126   00CACC  0E00               	movlw	0
  4127   00CACE  21FF               	addwfc	(ReadAndSendEEPROMData@readBlockEEPROM2+1)& (0+255),w,b
  4128   00CAD0  6E5D               	movwf	(??_ReadAndSendEEPROMData+1)^0,c
  4129   00CAD2  0EFF               	movlw	255
  4130   00CAD4  145C               	andwf	??_ReadAndSendEEPROMData^0,w,c
  4131   00CAD6  6FFE               	movwf	ReadAndSendEEPROMData@readBlockEEPROM2& (0+255),b
  4132   00CAD8  0E7F               	movlw	127
  4133   00CADA  145D               	andwf	(??_ReadAndSendEEPROMData+1)^0,w,c
  4134   00CADC  6FFF               	movwf	(ReadAndSendEEPROMData@readBlockEEPROM2+1)& (0+255),b
  4135   00CADE                     
  4136                           ; BSR set to: 1
  4137                           ;main.c: 267:     }
  4138   00CADE  0E01               	movlw	1
  4139   00CAE0  27E0               	addwf	ReadAndSendEEPROMData@i& (0+255),f,b
  4140   00CAE2  0E00               	movlw	0
  4141   00CAE4  23E1               	addwfc	(ReadAndSendEEPROMData@i+1)& (0+255),f,b
  4142   00CAE6  23E2               	addwfc	(ReadAndSendEEPROMData@i+2)& (0+255),f,b
  4143   00CAE8  23E3               	addwfc	(ReadAndSendEEPROMData@i+3)& (0+255),f,b
  4144   00CAEA                     l10537:
  4145                           
  4146                           ; BSR set to: 1
  4147   00CAEA  0100               	movlb	0	; () banked
  4148   00CAEC  51AF               	movf	ReadAndSendEEPROMData@Ndat& (0+255),w,b
  4149   00CAEE  0101               	movlb	1	; () banked
  4150   00CAF0  5DE0               	subwf	ReadAndSendEEPROMData@i& (0+255),w,b
  4151   00CAF2  0100               	movlb	0	; () banked
  4152   00CAF4  51B0               	movf	(ReadAndSendEEPROMData@Ndat+1)& (0+255),w,b
  4153   00CAF6  0101               	movlb	1	; () banked
  4154   00CAF8  59E1               	subwfb	(ReadAndSendEEPROMData@i+1)& (0+255),w,b
  4155   00CAFA  0100               	movlb	0	; () banked
  4156   00CAFC  51B1               	movf	(ReadAndSendEEPROMData@Ndat+2)& (0+255),w,b
  4157   00CAFE  0101               	movlb	1	; () banked
  4158   00CB00  59E2               	subwfb	(ReadAndSendEEPROMData@i+2)& (0+255),w,b
  4159   00CB02  0100               	movlb	0	; () banked
  4160   00CB04  51B2               	movf	(ReadAndSendEEPROMData@Ndat+3)& (0+255),w,b
  4161   00CB06  0101               	movlb	1	; () banked
  4162   00CB08  59E3               	subwfb	(ReadAndSendEEPROMData@i+3)& (0+255),w,b
  4163   00CB0A  A0D8               	btfss	status,0,c
  4164   00CB0C  EF8A  F065         	goto	u10991
  4165   00CB10  EF8C  F065         	goto	u10990
  4166   00CB14                     u10991:
  4167   00CB14  EFA7  F064         	goto	l10517
  4168   00CB18                     u10990:
  4169   00CB18                     
  4170                           ; BSR set to: 1
  4171   00CB18  0012               	return		;funcret
  4172   00CB1A                     __end_of_ReadAndSendEEPROMData:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _MPU6050_ReadSensorData *****************
  4176 ;; Defined at:
  4177 ;;		line 94 in file "main.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  ax              1   39[COMRAM] PTR float 
  4180 ;;		 -> ax(4), 
  4181 ;;  ay              1   40[COMRAM] PTR float 
  4182 ;;		 -> ay(4), 
  4183 ;;  az              1   41[COMRAM] PTR float 
  4184 ;;		 -> az(4), 
  4185 ;;  gx              1   42[COMRAM] PTR float 
  4186 ;;		 -> gx(4), 
  4187 ;;  gy              1   43[COMRAM] PTR float 
  4188 ;;		 -> gy(4), 
  4189 ;;  gz              1   44[COMRAM] PTR float 
  4190 ;;		 -> gz(4), 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  buffer         12   47[COMRAM] unsigned char [12]
  4193 ;;  gz_raw          2   69[COMRAM] short 
  4194 ;;  gy_raw          2   67[COMRAM] short 
  4195 ;;  gx_raw          2   65[COMRAM] short 
  4196 ;;  az_raw          2   63[COMRAM] short 
  4197 ;;  ay_raw          2   61[COMRAM] short 
  4198 ;;  ax_raw          2   59[COMRAM] short 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4208 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;Total ram usage:       32 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 12
  4215 ;; This function calls:
  4216 ;;		_I2C1_ReadDataBlock
  4217 ;;		___fldiv
  4218 ;;		___xxtofl
  4219 ;; This function is called by:
  4220 ;;		_StartLogging
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text14
  4225   00D3FE                     __ptext14:
  4226                           	callstack 0
  4227   00D3FE                     _MPU6050_ReadSensorData:
  4228                           	callstack 17
  4229   00D3FE                     
  4230                           ;main.c: 95:     uint8_t buffer[12];;main.c: 96:     I2C1_ReadDataBlock(0x68, 0x3B, buff
      +                          er, 12);
  4231   00D3FE  0E3B               	movlw	59
  4232   00D400  6E17               	movwf	I2C1_ReadDataBlock@reg^0,c
  4233   00D402  0E30               	movlw	low MPU6050_ReadSensorData@buffer
  4234   00D404  6E18               	movwf	I2C1_ReadDataBlock@data^0,c
  4235   00D406  0E00               	movlw	0
  4236   00D408  6E1A               	movwf	(I2C1_ReadDataBlock@len+1)^0,c
  4237   00D40A  0E0C               	movlw	12
  4238   00D40C  6E19               	movwf	I2C1_ReadDataBlock@len^0,c
  4239   00D40E  0E68               	movlw	104
  4240   00D410  ECD4  F059         	call	_I2C1_ReadDataBlock
  4241   00D414                     
  4242                           ;main.c: 98:     int16_t ax_raw = (buffer[0] << 8) | buffer[1];
  4243   00D414  5031               	movf	(MPU6050_ReadSensorData@buffer+1)^0,w,c
  4244   00D416  C030  F02E         	movff	MPU6050_ReadSensorData@buffer,??_MPU6050_ReadSensorData
  4245   00D41A  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4246   00D41C  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4247   00D420  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4248   00D422  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4249   00D424  6E3C               	movwf	MPU6050_ReadSensorData@ax_raw^0,c
  4250   00D426  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4251   00D428  6E3D               	movwf	(MPU6050_ReadSensorData@ax_raw+1)^0,c
  4252   00D42A                     
  4253                           ;main.c: 99:     int16_t ay_raw = (buffer[2] << 8) | buffer[3];
  4254   00D42A  5033               	movf	(MPU6050_ReadSensorData@buffer+3)^0,w,c
  4255   00D42C  C032  F02E         	movff	MPU6050_ReadSensorData@buffer+2,??_MPU6050_ReadSensorData
  4256   00D430  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4257   00D432  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4258   00D436  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4259   00D438  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4260   00D43A  6E3E               	movwf	MPU6050_ReadSensorData@ay_raw^0,c
  4261   00D43C  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4262   00D43E  6E3F               	movwf	(MPU6050_ReadSensorData@ay_raw+1)^0,c
  4263   00D440                     
  4264                           ;main.c: 100:     int16_t az_raw = (buffer[4] << 8) | buffer[5];
  4265   00D440  5035               	movf	(MPU6050_ReadSensorData@buffer+5)^0,w,c
  4266   00D442  C034  F02E         	movff	MPU6050_ReadSensorData@buffer+4,??_MPU6050_ReadSensorData
  4267   00D446  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4268   00D448  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4269   00D44C  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4270   00D44E  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4271   00D450  6E40               	movwf	MPU6050_ReadSensorData@az_raw^0,c
  4272   00D452  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4273   00D454  6E41               	movwf	(MPU6050_ReadSensorData@az_raw+1)^0,c
  4274   00D456                     
  4275                           ;main.c: 101:     int16_t gx_raw = (buffer[6] << 8) | buffer[7];
  4276   00D456  5037               	movf	(MPU6050_ReadSensorData@buffer+7)^0,w,c
  4277   00D458  C036  F02E         	movff	MPU6050_ReadSensorData@buffer+6,??_MPU6050_ReadSensorData
  4278   00D45C  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4279   00D45E  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4280   00D462  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4281   00D464  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4282   00D466  6E42               	movwf	MPU6050_ReadSensorData@gx_raw^0,c
  4283   00D468  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4284   00D46A  6E43               	movwf	(MPU6050_ReadSensorData@gx_raw+1)^0,c
  4285   00D46C                     
  4286                           ;main.c: 102:     int16_t gy_raw = (buffer[8] << 8) | buffer[9];
  4287   00D46C  5039               	movf	(MPU6050_ReadSensorData@buffer+9)^0,w,c
  4288   00D46E  C038  F02E         	movff	MPU6050_ReadSensorData@buffer+8,??_MPU6050_ReadSensorData
  4289   00D472  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4290   00D474  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4291   00D478  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4292   00D47A  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4293   00D47C  6E44               	movwf	MPU6050_ReadSensorData@gy_raw^0,c
  4294   00D47E  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4295   00D480  6E45               	movwf	(MPU6050_ReadSensorData@gy_raw+1)^0,c
  4296   00D482                     
  4297                           ;main.c: 103:     int16_t gz_raw = (buffer[10] << 8) | buffer[11];
  4298   00D482  503B               	movf	(MPU6050_ReadSensorData@buffer+11)^0,w,c
  4299   00D484  C03A  F02E         	movff	MPU6050_ReadSensorData@buffer+10,??_MPU6050_ReadSensorData
  4300   00D488  6A2F               	clrf	(??_MPU6050_ReadSensorData+1)^0,c
  4301   00D48A  C02E  F02F         	movff	??_MPU6050_ReadSensorData,??_MPU6050_ReadSensorData+1
  4302   00D48E  6A2E               	clrf	??_MPU6050_ReadSensorData^0,c
  4303   00D490  102E               	iorwf	??_MPU6050_ReadSensorData^0,w,c
  4304   00D492  6E46               	movwf	MPU6050_ReadSensorData@gz_raw^0,c
  4305   00D494  502F               	movf	(??_MPU6050_ReadSensorData+1)^0,w,c
  4306   00D496  6E47               	movwf	(MPU6050_ReadSensorData@gz_raw+1)^0,c
  4307   00D498                     
  4308                           ;main.c: 105:     *ax = ax_raw / 16384.0f;
  4309   00D498  C03C  F001         	movff	MPU6050_ReadSensorData@ax_raw,___xxtofl@val
  4310   00D49C  C03D  F002         	movff	MPU6050_ReadSensorData@ax_raw+1,___xxtofl@val+1
  4311   00D4A0  0E00               	movlw	0
  4312   00D4A2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4313   00D4A4  0EFF               	movlw	-1
  4314   00D4A6  6E03               	movwf	(___xxtofl@val+2)^0,c
  4315   00D4A8  6E04               	movwf	(___xxtofl@val+3)^0,c
  4316   00D4AA  0E01               	movlw	1
  4317   00D4AC  ECBA  F063         	call	___xxtofl
  4318   00D4B0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4319   00D4B4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4320   00D4B8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4321   00D4BC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4322   00D4C0  0E00               	movlw	0
  4323   00D4C2  6E13               	movwf	___fldiv@a^0,c
  4324   00D4C4  0E00               	movlw	0
  4325   00D4C6  6E14               	movwf	(___fldiv@a+1)^0,c
  4326   00D4C8  0E80               	movlw	128
  4327   00D4CA  6E15               	movwf	(___fldiv@a+2)^0,c
  4328   00D4CC  0E46               	movlw	70
  4329   00D4CE  6E16               	movwf	(___fldiv@a+3)^0,c
  4330   00D4D0  ECD3  F06C         	call	___fldiv	;wreg free
  4331   00D4D4  5028               	movf	MPU6050_ReadSensorData@ax^0,w,c
  4332   00D4D6  6ED9               	movwf	fsr2l,c
  4333   00D4D8  6ADA               	clrf	fsr2h,c
  4334   00D4DA  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4335   00D4E0  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4336   00D4E6  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4337   00D4EC  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4338   00D4F2                     
  4339                           ;main.c: 106:     *ay = ay_raw / 16384.0f;
  4340   00D4F2  C03E  F001         	movff	MPU6050_ReadSensorData@ay_raw,___xxtofl@val
  4341   00D4F6  C03F  F002         	movff	MPU6050_ReadSensorData@ay_raw+1,___xxtofl@val+1
  4342   00D4FA  0E00               	movlw	0
  4343   00D4FC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4344   00D4FE  0EFF               	movlw	-1
  4345   00D500  6E03               	movwf	(___xxtofl@val+2)^0,c
  4346   00D502  6E04               	movwf	(___xxtofl@val+3)^0,c
  4347   00D504  0E01               	movlw	1
  4348   00D506  ECBA  F063         	call	___xxtofl
  4349   00D50A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4350   00D50E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4351   00D512  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4352   00D516  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4353   00D51A  0E00               	movlw	0
  4354   00D51C  6E13               	movwf	___fldiv@a^0,c
  4355   00D51E  0E00               	movlw	0
  4356   00D520  6E14               	movwf	(___fldiv@a+1)^0,c
  4357   00D522  0E80               	movlw	128
  4358   00D524  6E15               	movwf	(___fldiv@a+2)^0,c
  4359   00D526  0E46               	movlw	70
  4360   00D528  6E16               	movwf	(___fldiv@a+3)^0,c
  4361   00D52A  ECD3  F06C         	call	___fldiv	;wreg free
  4362   00D52E  5029               	movf	MPU6050_ReadSensorData@ay^0,w,c
  4363   00D530  6ED9               	movwf	fsr2l,c
  4364   00D532  6ADA               	clrf	fsr2h,c
  4365   00D534  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4366   00D53A  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4367   00D540  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4368   00D546  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4369   00D54C                     
  4370                           ;main.c: 107:     *az = az_raw / 16384.0f;
  4371   00D54C  C040  F001         	movff	MPU6050_ReadSensorData@az_raw,___xxtofl@val
  4372   00D550  C041  F002         	movff	MPU6050_ReadSensorData@az_raw+1,___xxtofl@val+1
  4373   00D554  0E00               	movlw	0
  4374   00D556  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4375   00D558  0EFF               	movlw	-1
  4376   00D55A  6E03               	movwf	(___xxtofl@val+2)^0,c
  4377   00D55C  6E04               	movwf	(___xxtofl@val+3)^0,c
  4378   00D55E  0E01               	movlw	1
  4379   00D560  ECBA  F063         	call	___xxtofl
  4380   00D564  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4381   00D568  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4382   00D56C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4383   00D570  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4384   00D574  0E00               	movlw	0
  4385   00D576  6E13               	movwf	___fldiv@a^0,c
  4386   00D578  0E00               	movlw	0
  4387   00D57A  6E14               	movwf	(___fldiv@a+1)^0,c
  4388   00D57C  0E80               	movlw	128
  4389   00D57E  6E15               	movwf	(___fldiv@a+2)^0,c
  4390   00D580  0E46               	movlw	70
  4391   00D582  6E16               	movwf	(___fldiv@a+3)^0,c
  4392   00D584  ECD3  F06C         	call	___fldiv	;wreg free
  4393   00D588  502A               	movf	MPU6050_ReadSensorData@az^0,w,c
  4394   00D58A  6ED9               	movwf	fsr2l,c
  4395   00D58C  6ADA               	clrf	fsr2h,c
  4396   00D58E  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4397   00D594  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4398   00D59A  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4399   00D5A0  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4400   00D5A6                     
  4401                           ;main.c: 108:     *gx = gx_raw / 131.0f;
  4402   00D5A6  C042  F001         	movff	MPU6050_ReadSensorData@gx_raw,___xxtofl@val
  4403   00D5AA  C043  F002         	movff	MPU6050_ReadSensorData@gx_raw+1,___xxtofl@val+1
  4404   00D5AE  0E00               	movlw	0
  4405   00D5B0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4406   00D5B2  0EFF               	movlw	-1
  4407   00D5B4  6E03               	movwf	(___xxtofl@val+2)^0,c
  4408   00D5B6  6E04               	movwf	(___xxtofl@val+3)^0,c
  4409   00D5B8  0E01               	movlw	1
  4410   00D5BA  ECBA  F063         	call	___xxtofl
  4411   00D5BE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4412   00D5C2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4413   00D5C6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4414   00D5CA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4415   00D5CE  0E00               	movlw	0
  4416   00D5D0  6E13               	movwf	___fldiv@a^0,c
  4417   00D5D2  0E00               	movlw	0
  4418   00D5D4  6E14               	movwf	(___fldiv@a+1)^0,c
  4419   00D5D6  0E03               	movlw	3
  4420   00D5D8  6E15               	movwf	(___fldiv@a+2)^0,c
  4421   00D5DA  0E43               	movlw	67
  4422   00D5DC  6E16               	movwf	(___fldiv@a+3)^0,c
  4423   00D5DE  ECD3  F06C         	call	___fldiv	;wreg free
  4424   00D5E2  502B               	movf	MPU6050_ReadSensorData@gx^0,w,c
  4425   00D5E4  6ED9               	movwf	fsr2l,c
  4426   00D5E6  6ADA               	clrf	fsr2h,c
  4427   00D5E8  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4428   00D5EE  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4429   00D5F4  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4430   00D5FA  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4431   00D600                     
  4432                           ;main.c: 109:     *gy = gy_raw / 131.0f;
  4433   00D600  C044  F001         	movff	MPU6050_ReadSensorData@gy_raw,___xxtofl@val
  4434   00D604  C045  F002         	movff	MPU6050_ReadSensorData@gy_raw+1,___xxtofl@val+1
  4435   00D608  0E00               	movlw	0
  4436   00D60A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4437   00D60C  0EFF               	movlw	-1
  4438   00D60E  6E03               	movwf	(___xxtofl@val+2)^0,c
  4439   00D610  6E04               	movwf	(___xxtofl@val+3)^0,c
  4440   00D612  0E01               	movlw	1
  4441   00D614  ECBA  F063         	call	___xxtofl
  4442   00D618  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4443   00D61C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4444   00D620  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4445   00D624  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4446   00D628  0E00               	movlw	0
  4447   00D62A  6E13               	movwf	___fldiv@a^0,c
  4448   00D62C  0E00               	movlw	0
  4449   00D62E  6E14               	movwf	(___fldiv@a+1)^0,c
  4450   00D630  0E03               	movlw	3
  4451   00D632  6E15               	movwf	(___fldiv@a+2)^0,c
  4452   00D634  0E43               	movlw	67
  4453   00D636  6E16               	movwf	(___fldiv@a+3)^0,c
  4454   00D638  ECD3  F06C         	call	___fldiv	;wreg free
  4455   00D63C  502C               	movf	MPU6050_ReadSensorData@gy^0,w,c
  4456   00D63E  6ED9               	movwf	fsr2l,c
  4457   00D640  6ADA               	clrf	fsr2h,c
  4458   00D642  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4459   00D648  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4460   00D64E  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4461   00D654  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4462   00D65A                     
  4463                           ;main.c: 110:     *gz = gz_raw / 131.0f;
  4464   00D65A  C046  F001         	movff	MPU6050_ReadSensorData@gz_raw,___xxtofl@val
  4465   00D65E  C047  F002         	movff	MPU6050_ReadSensorData@gz_raw+1,___xxtofl@val+1
  4466   00D662  0E00               	movlw	0
  4467   00D664  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  4468   00D666  0EFF               	movlw	-1
  4469   00D668  6E03               	movwf	(___xxtofl@val+2)^0,c
  4470   00D66A  6E04               	movwf	(___xxtofl@val+3)^0,c
  4471   00D66C  0E01               	movlw	1
  4472   00D66E  ECBA  F063         	call	___xxtofl
  4473   00D672  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4474   00D676  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4475   00D67A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4476   00D67E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4477   00D682  0E00               	movlw	0
  4478   00D684  6E13               	movwf	___fldiv@a^0,c
  4479   00D686  0E00               	movlw	0
  4480   00D688  6E14               	movwf	(___fldiv@a+1)^0,c
  4481   00D68A  0E03               	movlw	3
  4482   00D68C  6E15               	movwf	(___fldiv@a+2)^0,c
  4483   00D68E  0E43               	movlw	67
  4484   00D690  6E16               	movwf	(___fldiv@a+3)^0,c
  4485   00D692  ECD3  F06C         	call	___fldiv	;wreg free
  4486   00D696  502D               	movf	MPU6050_ReadSensorData@gz^0,w,c
  4487   00D698  6ED9               	movwf	fsr2l,c
  4488   00D69A  6ADA               	clrf	fsr2h,c
  4489   00D69C  0060  F03F  FFDE   	movff	?___fldiv,postinc2
  4490   00D6A2  0060  F043  FFDE   	movff	?___fldiv+1,postinc2
  4491   00D6A8  0060  F047  FFDE   	movff	?___fldiv+2,postinc2
  4492   00D6AE  0060  F04B  FFDE   	movff	?___fldiv+3,postinc2
  4493   00D6B4  0012               	return		;funcret
  4494   00D6B6                     __end_of_MPU6050_ReadSensorData:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function ___xxtofl *****************
  4498 ;; Defined at:
  4499 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  sign            1    wreg     unsigned char 
  4502 ;;  val             4    0[COMRAM] long 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  sign            1    8[COMRAM] unsigned char 
  4505 ;;  arg             4   10[COMRAM] unsigned long 
  4506 ;;  exp             1    9[COMRAM] unsigned char 
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  4    0[COMRAM] unsigned char 
  4509 ;; Registers used:
  4510 ;;		wreg, status,2, status,0
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;Total ram usage:       14 bytes
  4521 ;; Hardware stack levels used: 1
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_MPU6050_ReadSensorData
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text15
  4530   00C774                     __ptext15:
  4531                           	callstack 0
  4532   00C774                     ___xxtofl:
  4533                           	callstack 28
  4534                           
  4535                           ;incstack = 0
  4536                           ;___xxtofl@sign stored from wreg
  4537   00C774  6E09               	movwf	___xxtofl@sign^0,c
  4538   00C776  5009               	movf	___xxtofl@sign^0,w,c
  4539   00C778  B4D8               	btfsc	status,2,c
  4540   00C77A  EFC1  F063         	goto	u10751
  4541   00C77E  EFC3  F063         	goto	u10750
  4542   00C782                     u10751:
  4543   00C782  EFE5  F063         	goto	l1622
  4544   00C786                     u10750:
  4545   00C786  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4546   00C788  EFCA  F063         	goto	u10760
  4547   00C78C  EFC8  F063         	goto	u10761
  4548   00C790                     u10761:
  4549   00C790  EFE5  F063         	goto	l1622
  4550   00C794                     u10760:
  4551   00C794  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4552   00C798  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4553   00C79C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4554   00C7A0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4555   00C7A4  1E05               	comf	??___xxtofl^0,f,c
  4556   00C7A6  1E06               	comf	(??___xxtofl+1)^0,f,c
  4557   00C7A8  1E07               	comf	(??___xxtofl+2)^0,f,c
  4558   00C7AA  1E08               	comf	(??___xxtofl+3)^0,f,c
  4559   00C7AC  2A05               	incf	??___xxtofl^0,f,c
  4560   00C7AE  0E00               	movlw	0
  4561   00C7B0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4562   00C7B2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4563   00C7B4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4564   00C7B6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4565   00C7BA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4566   00C7BE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4567   00C7C2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4568   00C7C6  EFED  F063         	goto	l10335
  4569   00C7CA                     l1622:
  4570   00C7CA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4571   00C7CE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4572   00C7D2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4573   00C7D6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4574   00C7DA                     l10335:
  4575   00C7DA  5001               	movf	___xxtofl@val^0,w,c
  4576   00C7DC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4577   00C7DE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4578   00C7E0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4579   00C7E2  A4D8               	btfss	status,2,c
  4580   00C7E4  EFF6  F063         	goto	u10771
  4581   00C7E8  EFF8  F063         	goto	u10770
  4582   00C7EC                     u10771:
  4583   00C7EC  EF02  F064         	goto	l10341
  4584   00C7F0                     u10770:
  4585   00C7F0  0E00               	movlw	0
  4586   00C7F2  6E01               	movwf	?___xxtofl^0,c
  4587   00C7F4  0E00               	movlw	0
  4588   00C7F6  6E02               	movwf	(?___xxtofl+1)^0,c
  4589   00C7F8  0E00               	movlw	0
  4590   00C7FA  6E03               	movwf	(?___xxtofl+2)^0,c
  4591   00C7FC  0E00               	movlw	0
  4592   00C7FE  6E04               	movwf	(?___xxtofl+3)^0,c
  4593   00C800  EF93  F064         	goto	l1625
  4594   00C804                     l10341:
  4595   00C804  0E96               	movlw	150
  4596   00C806  6E0A               	movwf	___xxtofl@exp^0,c
  4597   00C808  EF0C  F064         	goto	l10345
  4598   00C80C                     l10343:
  4599   00C80C  2A0A               	incf	___xxtofl@exp^0,f,c
  4600   00C80E  90D8               	bcf	status,0,c
  4601   00C810  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4602   00C812  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4603   00C814  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4604   00C816  320B               	rrcf	___xxtofl@arg^0,f,c
  4605   00C818                     l10345:
  4606   00C818  0E00               	movlw	0
  4607   00C81A  140B               	andwf	___xxtofl@arg^0,w,c
  4608   00C81C  6E05               	movwf	??___xxtofl^0,c
  4609   00C81E  0E00               	movlw	0
  4610   00C820  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4611   00C822  6E06               	movwf	(??___xxtofl+1)^0,c
  4612   00C824  0E00               	movlw	0
  4613   00C826  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4614   00C828  6E07               	movwf	(??___xxtofl+2)^0,c
  4615   00C82A  0EFE               	movlw	254
  4616   00C82C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4617   00C82E  6E08               	movwf	(??___xxtofl+3)^0,c
  4618   00C830  5005               	movf	??___xxtofl^0,w,c
  4619   00C832  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4620   00C834  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4621   00C836  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4622   00C838  A4D8               	btfss	status,2,c
  4623   00C83A  EF21  F064         	goto	u10781
  4624   00C83E  EF23  F064         	goto	u10780
  4625   00C842                     u10781:
  4626   00C842  EF06  F064         	goto	l10343
  4627   00C846                     u10780:
  4628   00C846  EF31  F064         	goto	l1629
  4629   00C84A                     l10347:
  4630   00C84A  2A0A               	incf	___xxtofl@exp^0,f,c
  4631   00C84C  0E01               	movlw	1
  4632   00C84E  260B               	addwf	___xxtofl@arg^0,f,c
  4633   00C850  0E00               	movlw	0
  4634   00C852  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4635   00C854  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4636   00C856  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4637   00C858  90D8               	bcf	status,0,c
  4638   00C85A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4639   00C85C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4640   00C85E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4641   00C860  320B               	rrcf	___xxtofl@arg^0,f,c
  4642   00C862                     l1629:
  4643   00C862  0E00               	movlw	0
  4644   00C864  140B               	andwf	___xxtofl@arg^0,w,c
  4645   00C866  6E05               	movwf	??___xxtofl^0,c
  4646   00C868  0E00               	movlw	0
  4647   00C86A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4648   00C86C  6E06               	movwf	(??___xxtofl+1)^0,c
  4649   00C86E  0E00               	movlw	0
  4650   00C870  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4651   00C872  6E07               	movwf	(??___xxtofl+2)^0,c
  4652   00C874  0EFF               	movlw	255
  4653   00C876  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4654   00C878  6E08               	movwf	(??___xxtofl+3)^0,c
  4655   00C87A  5005               	movf	??___xxtofl^0,w,c
  4656   00C87C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4657   00C87E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4658   00C880  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4659   00C882  A4D8               	btfss	status,2,c
  4660   00C884  EF46  F064         	goto	u10791
  4661   00C888  EF48  F064         	goto	u10790
  4662   00C88C                     u10791:
  4663   00C88C  EF25  F064         	goto	l10347
  4664   00C890                     u10790:
  4665   00C890  EF50  F064         	goto	l10355
  4666   00C894                     l10353:
  4667   00C894  060A               	decf	___xxtofl@exp^0,f,c
  4668   00C896  90D8               	bcf	status,0,c
  4669   00C898  360B               	rlcf	___xxtofl@arg^0,f,c
  4670   00C89A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4671   00C89C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4672   00C89E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4673   00C8A0                     l10355:
  4674   00C8A0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4675   00C8A2  EF55  F064         	goto	u10801
  4676   00C8A6  EF57  F064         	goto	u10800
  4677   00C8AA                     u10801:
  4678   00C8AA  EF5F  F064         	goto	l1636
  4679   00C8AE                     u10800:
  4680   00C8AE  0E02               	movlw	2
  4681   00C8B0  600A               	cpfslt	___xxtofl@exp^0,c
  4682   00C8B2  EF5D  F064         	goto	u10811
  4683   00C8B6  EF5F  F064         	goto	u10810
  4684   00C8BA                     u10811:
  4685   00C8BA  EF4A  F064         	goto	l10353
  4686   00C8BE                     u10810:
  4687   00C8BE                     l1636:
  4688   00C8BE  B00A               	btfsc	___xxtofl@exp^0,0,c
  4689   00C8C0  EF64  F064         	goto	u10821
  4690   00C8C4  EF66  F064         	goto	u10820
  4691   00C8C8                     u10821:
  4692   00C8C8  EF67  F064         	goto	l10361
  4693   00C8CC                     u10820:
  4694   00C8CC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4695   00C8CE                     l10361:
  4696   00C8CE  90D8               	bcf	status,0,c
  4697   00C8D0  320A               	rrcf	___xxtofl@exp^0,f,c
  4698   00C8D2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4699   00C8D6  6A06               	clrf	(??___xxtofl+1)^0,c
  4700   00C8D8  6A07               	clrf	(??___xxtofl+2)^0,c
  4701   00C8DA  6A08               	clrf	(??___xxtofl+3)^0,c
  4702   00C8DC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4703   00C8E0  6A07               	clrf	(??___xxtofl+2)^0,c
  4704   00C8E2  6A06               	clrf	(??___xxtofl+1)^0,c
  4705   00C8E4  6A05               	clrf	??___xxtofl^0,c
  4706   00C8E6  5005               	movf	??___xxtofl^0,w,c
  4707   00C8E8  120B               	iorwf	___xxtofl@arg^0,f,c
  4708   00C8EA  5006               	movf	(??___xxtofl+1)^0,w,c
  4709   00C8EC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4710   00C8EE  5007               	movf	(??___xxtofl+2)^0,w,c
  4711   00C8F0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4712   00C8F2  5008               	movf	(??___xxtofl+3)^0,w,c
  4713   00C8F4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4714   00C8F6  5009               	movf	___xxtofl@sign^0,w,c
  4715   00C8F8  B4D8               	btfsc	status,2,c
  4716   00C8FA  EF81  F064         	goto	u10831
  4717   00C8FE  EF83  F064         	goto	u10830
  4718   00C902                     u10831:
  4719   00C902  EF8B  F064         	goto	l10371
  4720   00C906                     u10830:
  4721   00C906  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4722   00C908  EF8A  F064         	goto	u10840
  4723   00C90C  EF88  F064         	goto	u10841
  4724   00C910                     u10841:
  4725   00C910  EF8B  F064         	goto	l10371
  4726   00C914                     u10840:
  4727   00C914  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4728   00C916                     l10371:
  4729   00C916  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4730   00C91A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4731   00C91E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4732   00C922  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4733   00C926                     l1625:
  4734   00C926  0012               	return		;funcret
  4735   00C928                     __end_of___xxtofl:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _I2C1_ReadDataBlock *****************
  4739 ;; Defined at:
  4740 ;;		line 128 in file "mcc_generated_files/examples/i2c1_master_example.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  address         1    wreg     unsigned char 
  4743 ;;  reg             1   22[COMRAM] unsigned char 
  4744 ;;  data            1   23[COMRAM] PTR unsigned char 
  4745 ;;		 -> MPU6050_ReadSensorData@buffer(12), 
  4746 ;;  len             2   24[COMRAM] unsigned int 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  address         1   26[COMRAM] unsigned char 
  4749 ;;  bufferBlock     3   27[COMRAM] struct .
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;Total ram usage:        8 bytes
  4764 ;; Hardware stack levels used: 1
  4765 ;; Hardware stack levels required when called: 11
  4766 ;; This function calls:
  4767 ;;		_I2C1_Close
  4768 ;;		_I2C1_MasterWrite
  4769 ;;		_I2C1_Open
  4770 ;;		_I2C1_SetAddressNackCallback
  4771 ;;		_I2C1_SetBuffer
  4772 ;;		_I2C1_SetDataCompleteCallback
  4773 ;; This function is called by:
  4774 ;;		_MPU6050_ReadSensorData
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text16
  4779   00B3A8                     __ptext16:
  4780                           	callstack 0
  4781   00B3A8                     _I2C1_ReadDataBlock:
  4782                           	callstack 17
  4783                           
  4784                           ;incstack = 0
  4785                           ;I2C1_ReadDataBlock@address stored from wreg
  4786   00B3A8  6E1B               	movwf	I2C1_ReadDataBlock@address^0,c
  4787   00B3AA                     
  4788                           ;mcc_generated_files/examples/i2c1_master_example.c: 128: void I2C1_ReadDataBlock(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t *data, size_t len);mcc_generated_files/examples/i
      +                          2c1_master_example.c: 129: {;mcc_generated_files/examples/i2c1_master_example.c: 130:   
      +                            i2c1_buffer_t bufferBlock;;mcc_generated_files/examples/i2c1_master_example.c: 131:   
      +                            bufferBlock.data = data;
  4789   00B3AA  C018  F01E         	movff	I2C1_ReadDataBlock@data,I2C1_ReadDataBlock@bufferBlock+2
  4790                           
  4791                           ;mcc_generated_files/examples/i2c1_master_example.c: 132:     bufferBlock.len = len;
  4792   00B3AE  C019  F01C         	movff	I2C1_ReadDataBlock@len,I2C1_ReadDataBlock@bufferBlock
  4793   00B3B2  C01A  F01D         	movff	I2C1_ReadDataBlock@len+1,I2C1_ReadDataBlock@bufferBlock+1
  4794   00B3B6                     l10275:
  4795   00B3B6  501B               	movf	I2C1_ReadDataBlock@address^0,w,c
  4796   00B3B8  EC0D  F05B         	call	_I2C1_Open
  4797   00B3BC  0900               	iorlw	0
  4798   00B3BE  B4D8               	btfsc	status,2,c
  4799   00B3C0  EFE4  F059         	goto	u10681
  4800   00B3C4  EFE6  F059         	goto	u10680
  4801   00B3C8                     u10681:
  4802   00B3C8  EFDB  F059         	goto	l10275
  4803   00B3CC                     u10680:
  4804   00B3CC                     
  4805                           ;mcc_generated_files/examples/i2c1_master_example.c: 135:     I2C1_SetDataCompleteCallba
      +                          ck(rdBlkRegCompleteHandler,&bufferBlock);
  4806   00B3CC  0E42               	movlw	low _rdBlkRegCompleteHandler
  4807   00B3CE  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
  4808   00B3D0  0EAD               	movlw	high _rdBlkRegCompleteHandler
  4809   00B3D2  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
  4810   00B3D4  0E1C               	movlw	low I2C1_ReadDataBlock@bufferBlock
  4811   00B3D6  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
  4812   00B3D8  6A09               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
  4813   00B3DA  EC79  F053         	call	_I2C1_SetDataCompleteCallback	;wreg free
  4814   00B3DE                     
  4815                           ;mcc_generated_files/examples/i2c1_master_example.c: 136:     I2C1_SetBuffer(&reg,1);
  4816   00B3DE  0E17               	movlw	low I2C1_ReadDataBlock@reg
  4817   00B3E0  6E01               	movwf	I2C1_SetBuffer@buffer^0,c
  4818   00B3E2  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
  4819   00B3E4  0E00               	movlw	0
  4820   00B3E6  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
  4821   00B3E8  0E01               	movlw	1
  4822   00B3EA  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
  4823   00B3EC  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
  4824   00B3F0                     
  4825                           ;mcc_generated_files/examples/i2c1_master_example.c: 137:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
  4826   00B3F0  0E00               	movlw	0
  4827   00B3F2  6E06               	movwf	I2C1_SetAddressNackCallback@cb^0,c
  4828   00B3F4  0E00               	movlw	0
  4829   00B3F6  6E07               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
  4830   00B3F8  0E00               	movlw	0
  4831   00B3FA  6E08               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
  4832   00B3FC  0E00               	movlw	0
  4833   00B3FE  6E09               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
  4834   00B400  EC85  F053         	call	_I2C1_SetAddressNackCallback	;wreg free
  4835   00B404                     
  4836                           ;mcc_generated_files/examples/i2c1_master_example.c: 138:     I2C1_MasterWrite();
  4837   00B404  ECC8  F052         	call	_I2C1_MasterWrite	;wreg free
  4838   00B408                     l10285:
  4839   00B408  EC38  F054         	call	_I2C1_Close	;wreg free
  4840   00B40C  06E8               	decf	wreg,f,c
  4841   00B40E  B4D8               	btfsc	status,2,c
  4842   00B410  EF0C  F05A         	goto	u10691
  4843   00B414  EF0E  F05A         	goto	u10690
  4844   00B418                     u10691:
  4845   00B418  EF04  F05A         	goto	l10285
  4846   00B41C                     u10690:
  4847   00B41C  0012               	return		;funcret
  4848   00B41E                     __end_of_I2C1_ReadDataBlock:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function _SYSTEM_Initialize *****************
  4852 ;; Defined at:
  4853 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 2
  4874 ;; This function calls:
  4875 ;;		_I2C1_Initialize
  4876 ;;		_OSCILLATOR_Initialize
  4877 ;;		_PIN_MANAGER_Initialize
  4878 ;;		_PMD_Initialize
  4879 ;;		_UART1_Initialize
  4880 ;; This function is called by:
  4881 ;;		_main
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text17
  4886   00A6DC                     __ptext17:
  4887                           	callstack 0
  4888   00A6DC                     _SYSTEM_Initialize:
  4889                           	callstack 28
  4890   00A6DC                     
  4891                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  4892   00A6DC  ECEB  F053         	call	_PMD_Initialize	;wreg free
  4893                           
  4894                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  4895   00A6E0  ECC8  F053         	call	_I2C1_Initialize	;wreg free
  4896                           
  4897                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4898   00A6E4  EC8E  F05D         	call	_PIN_MANAGER_Initialize	;wreg free
  4899                           
  4900                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4901   00A6E8  EC91  F053         	call	_OSCILLATOR_Initialize	;wreg free
  4902   00A6EC                     
  4903                           ;mcc_generated_files/mcc.c: 56:     UART1_Initialize();
  4904   00A6EC  ECC1  F058         	call	_UART1_Initialize	;wreg free
  4905   00A6F0  0012               	return		;funcret
  4906   00A6F2                     __end_of_SYSTEM_Initialize:
  4907                           	callstack 0
  4908                           
  4909 ;; *************** function _UART1_Initialize *****************
  4910 ;; Defined at:
  4911 ;;		line 66 in file "mcc_generated_files/uart1.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;		None
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;		None
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;Total ram usage:        0 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 1
  4932 ;; This function calls:
  4933 ;;		_UART1_SetErrorHandler
  4934 ;;		_UART1_SetFramingErrorHandler
  4935 ;;		_UART1_SetOverrunErrorHandler
  4936 ;; This function is called by:
  4937 ;;		_SYSTEM_Initialize
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text18
  4942   00B182                     __ptext18:
  4943                           	callstack 0
  4944   00B182                     _UART1_Initialize:
  4945                           	callstack 28
  4946   00B182                     
  4947                           ;mcc_generated_files/uart1.c: 73:     U1P1L = 0x00;
  4948   00B182  0E00               	movlw	0
  4949   00B184  013D               	movlb	61	; () banked
  4950   00B186  6FEC               	movwf	236,b	;volatile
  4951                           
  4952                           ;mcc_generated_files/uart1.c: 76:     U1P1H = 0x00;
  4953   00B188  0E00               	movlw	0
  4954   00B18A  6FED               	movwf	237,b	;volatile
  4955                           
  4956                           ;mcc_generated_files/uart1.c: 79:     U1P2L = 0x00;
  4957   00B18C  0E00               	movlw	0
  4958   00B18E  6FEE               	movwf	238,b	;volatile
  4959                           
  4960                           ;mcc_generated_files/uart1.c: 82:     U1P2H = 0x00;
  4961   00B190  0E00               	movlw	0
  4962   00B192  6FEF               	movwf	239,b	;volatile
  4963                           
  4964                           ;mcc_generated_files/uart1.c: 85:     U1P3L = 0x00;
  4965   00B194  0E00               	movlw	0
  4966   00B196  6FF0               	movwf	240,b	;volatile
  4967                           
  4968                           ;mcc_generated_files/uart1.c: 88:     U1P3H = 0x00;
  4969   00B198  0E00               	movlw	0
  4970   00B19A  6FF1               	movwf	241,b	;volatile
  4971                           
  4972                           ;mcc_generated_files/uart1.c: 91:     U1CON0 = 0xB0;
  4973   00B19C  0EB0               	movlw	176
  4974   00B19E  6FF2               	movwf	242,b	;volatile
  4975                           
  4976                           ;mcc_generated_files/uart1.c: 94:     U1CON1 = 0x80;
  4977   00B1A0  0E80               	movlw	128
  4978   00B1A2  6FF3               	movwf	243,b	;volatile
  4979                           
  4980                           ;mcc_generated_files/uart1.c: 97:     U1CON2 = 0x00;
  4981   00B1A4  0E00               	movlw	0
  4982   00B1A6  6FF4               	movwf	244,b	;volatile
  4983                           
  4984                           ;mcc_generated_files/uart1.c: 100:     U1BRGL = 0xCF;
  4985   00B1A8  0ECF               	movlw	207
  4986   00B1AA  6FF5               	movwf	245,b	;volatile
  4987                           
  4988                           ;mcc_generated_files/uart1.c: 103:     U1BRGH = 0x00;
  4989   00B1AC  0E00               	movlw	0
  4990   00B1AE  6FF6               	movwf	246,b	;volatile
  4991                           
  4992                           ;mcc_generated_files/uart1.c: 106:     U1FIFO = 0x00;
  4993   00B1B0  0E00               	movlw	0
  4994   00B1B2  6FF7               	movwf	247,b	;volatile
  4995                           
  4996                           ;mcc_generated_files/uart1.c: 109:     U1UIR = 0x00;
  4997   00B1B4  0E00               	movlw	0
  4998   00B1B6  6FF8               	movwf	248,b	;volatile
  4999                           
  5000                           ;mcc_generated_files/uart1.c: 112:     U1ERRIR = 0x00;
  5001   00B1B8  0E00               	movlw	0
  5002   00B1BA  6FF9               	movwf	249,b	;volatile
  5003                           
  5004                           ;mcc_generated_files/uart1.c: 115:     U1ERRIE = 0x00;
  5005   00B1BC  0E00               	movlw	0
  5006   00B1BE  6FFA               	movwf	250,b	;volatile
  5007   00B1C0                     
  5008                           ; BSR set to: 61
  5009                           ;mcc_generated_files/uart1.c: 118:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  5010   00B1C0  0E12               	movlw	low _UART1_DefaultFramingErrorHandler
  5011   00B1C2  6E01               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  5012   00B1C4  0EA5               	movlw	high _UART1_DefaultFramingErrorHandler
  5013   00B1C6  6E02               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5014   00B1C8  ECE5  F052         	call	_UART1_SetFramingErrorHandler	;wreg free
  5015   00B1CC                     
  5016                           ;mcc_generated_files/uart1.c: 119:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  5017   00B1CC  0E14               	movlw	low _UART1_DefaultOverrunErrorHandler
  5018   00B1CE  6E01               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  5019   00B1D0  0EA5               	movlw	high _UART1_DefaultOverrunErrorHandler
  5020   00B1D2  6E02               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5021   00B1D4  ECEA  F052         	call	_UART1_SetOverrunErrorHandler	;wreg free
  5022   00B1D8                     
  5023                           ;mcc_generated_files/uart1.c: 120:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  5024   00B1D8  0E10               	movlw	low _UART1_DefaultErrorHandler
  5025   00B1DA  6E01               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  5026   00B1DC  0EA5               	movlw	high _UART1_DefaultErrorHandler
  5027   00B1DE  6E02               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  5028   00B1E0  ECE0  F052         	call	_UART1_SetErrorHandler	;wreg free
  5029   00B1E4                     
  5030                           ;mcc_generated_files/uart1.c: 122:     uart1RxLastError.status = 0;
  5031   00B1E4  0E00               	movlw	0
  5032   00B1E6  0100               	movlb	0	; () banked
  5033   00B1E8  6FCC               	movwf	_uart1RxLastError& (0+255),b	;volatile
  5034   00B1EA                     
  5035                           ; BSR set to: 0
  5036   00B1EA  0012               	return		;funcret
  5037   00B1EC                     __end_of_UART1_Initialize:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  5041 ;; Defined at:
  5042 ;;		line 204 in file "mcc_generated_files/uart1.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5045 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5061 ;;Total ram usage:        2 bytes
  5062 ;; Hardware stack levels used: 1
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_UART1_Initialize
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text19
  5071   00A5D4                     __ptext19:
  5072                           	callstack 0
  5073   00A5D4                     _UART1_SetOverrunErrorHandler:
  5074                           	callstack 28
  5075   00A5D4                     
  5076                           ;mcc_generated_files/uart1.c: 205:     UART1_OverrunErrorHandler = interruptHandler;
  5077   00A5D4  C001  F221         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  5078   00A5D8  C002  F222         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  5079   00A5DC  0012               	return		;funcret
  5080   00A5DE                     __end_of_UART1_SetOverrunErrorHandler:
  5081                           	callstack 0
  5082                           
  5083 ;; *************** function _UART1_SetFramingErrorHandler *****************
  5084 ;; Defined at:
  5085 ;;		line 200 in file "mcc_generated_files/uart1.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5088 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:        2 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_UART1_Initialize
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text20
  5114   00A5CA                     __ptext20:
  5115                           	callstack 0
  5116   00A5CA                     _UART1_SetFramingErrorHandler:
  5117                           	callstack 28
  5118   00A5CA                     
  5119                           ;mcc_generated_files/uart1.c: 201:     UART1_FramingErrorHandler = interruptHandler;
  5120   00A5CA  C001  F223         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  5121   00A5CE  C002  F224         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  5122   00A5D2  0012               	return		;funcret
  5123   00A5D4                     __end_of_UART1_SetFramingErrorHandler:
  5124                           	callstack 0
  5125                           
  5126 ;; *************** function _UART1_SetErrorHandler *****************
  5127 ;; Defined at:
  5128 ;;		line 208 in file "mcc_generated_files/uart1.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5131 ;;		 -> UART1_DefaultErrorHandler(1), 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      void 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;Total ram usage:        2 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_UART1_Initialize
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text21
  5157   00A5C0                     __ptext21:
  5158                           	callstack 0
  5159   00A5C0                     _UART1_SetErrorHandler:
  5160                           	callstack 28
  5161   00A5C0                     
  5162                           ;mcc_generated_files/uart1.c: 209:     UART1_ErrorHandler = interruptHandler;
  5163   00A5C0  C001  F21F         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  5164   00A5C4  C002  F220         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  5165   00A5C8  0012               	return		;funcret
  5166   00A5CA                     __end_of_UART1_SetErrorHandler:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function _PMD_Initialize *****************
  5170 ;; Defined at:
  5171 ;;		line 73 in file "mcc_generated_files/mcc.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;		None
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;Total ram usage:        0 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_SYSTEM_Initialize
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text22
  5199   00A7D6                     __ptext22:
  5200                           	callstack 0
  5201   00A7D6                     _PMD_Initialize:
  5202                           	callstack 29
  5203   00A7D6                     
  5204                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  5205   00A7D6  0E00               	movlw	0
  5206   00A7D8  0139               	movlb	57	; () banked
  5207   00A7DA  6FC0               	movwf	192,b	;volatile
  5208                           
  5209                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  5210   00A7DC  0E00               	movlw	0
  5211   00A7DE  6FC1               	movwf	193,b	;volatile
  5212                           
  5213                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  5214   00A7E0  0E00               	movlw	0
  5215   00A7E2  6FC2               	movwf	194,b	;volatile
  5216                           
  5217                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  5218   00A7E4  0E00               	movlw	0
  5219   00A7E6  6FC3               	movwf	195,b	;volatile
  5220                           
  5221                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  5222   00A7E8  0E00               	movlw	0
  5223   00A7EA  6FC4               	movwf	196,b	;volatile
  5224                           
  5225                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  5226   00A7EC  0E00               	movlw	0
  5227   00A7EE  6FC5               	movwf	197,b	;volatile
  5228                           
  5229                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
  5230   00A7F0  0E00               	movlw	0
  5231   00A7F2  6FC6               	movwf	198,b	;volatile
  5232                           
  5233                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
  5234   00A7F4  0E00               	movlw	0
  5235   00A7F6  6FC7               	movwf	199,b	;volatile
  5236   00A7F8                     
  5237                           ; BSR set to: 57
  5238   00A7F8  0012               	return		;funcret
  5239   00A7FA                     __end_of_PMD_Initialize:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function _PIN_MANAGER_Initialize *****************
  5243 ;; Defined at:
  5244 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;Total ram usage:        0 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_SYSTEM_Initialize
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text23
  5272   00BB1C                     __ptext23:
  5273                           	callstack 0
  5274   00BB1C                     _PIN_MANAGER_Initialize:
  5275                           	callstack 29
  5276   00BB1C                     
  5277                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5278   00BB1C  0E00               	movlw	0
  5279   00BB1E  6EBE               	movwf	190,c	;volatile
  5280                           
  5281                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5282   00BB20  0E00               	movlw	0
  5283   00BB22  6EBD               	movwf	189,c	;volatile
  5284                           
  5285                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5286   00BB24  0E00               	movlw	0
  5287   00BB26  6EBA               	movwf	186,c	;volatile
  5288                           
  5289                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5290   00BB28  0E00               	movlw	0
  5291   00BB2A  6EBB               	movwf	187,c	;volatile
  5292                           
  5293                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5294   00BB2C  0E00               	movlw	0
  5295   00BB2E  6EBC               	movwf	188,c	;volatile
  5296                           
  5297                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5298   00BB30  0E07               	movlw	7
  5299   00BB32  6EC6               	movwf	198,c	;volatile
  5300   00BB34                     
  5301                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5302   00BB34  68C2               	setf	194,c	;volatile
  5303                           
  5304                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF9;
  5305   00BB36  0EF9               	movlw	249
  5306   00BB38  6EC3               	movwf	195,c	;volatile
  5307                           
  5308                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  5309   00BB3A  0EBF               	movlw	191
  5310   00BB3C  6EC4               	movwf	196,c	;volatile
  5311                           
  5312                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFC;
  5313   00BB3E  0EFC               	movlw	252
  5314   00BB40  6EC5               	movwf	197,c	;volatile
  5315   00BB42                     
  5316                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5317   00BB42  013A               	movlb	58	; () banked
  5318   00BB44  6970               	setf	112,b	;volatile
  5319                           
  5320                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x7F;
  5321   00BB46  0E7F               	movlw	127
  5322   00BB48  6F60               	movwf	96,b	;volatile
  5323                           
  5324                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xF9;
  5325   00BB4A  0EF9               	movlw	249
  5326   00BB4C  6F50               	movwf	80,b	;volatile
  5327                           
  5328                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  5329   00BB4E  0E07               	movlw	7
  5330   00BB50  6F80               	movwf	128,b	;volatile
  5331   00BB52                     
  5332                           ; BSR set to: 58
  5333                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5334   00BB52  6940               	setf	64,b	;volatile
  5335                           
  5336                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5337   00BB54  0E00               	movlw	0
  5338   00BB56  6F71               	movwf	113,b	;volatile
  5339                           
  5340                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5341   00BB58  0E00               	movlw	0
  5342   00BB5A  6F81               	movwf	129,b	;volatile
  5343                           
  5344                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5345   00BB5C  0E00               	movlw	0
  5346   00BB5E  6F51               	movwf	81,b	;volatile
  5347                           
  5348                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5349   00BB60  0E00               	movlw	0
  5350   00BB62  6F41               	movwf	65,b	;volatile
  5351                           
  5352                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5353   00BB64  0E00               	movlw	0
  5354   00BB66  6F61               	movwf	97,b	;volatile
  5355                           
  5356                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  5357   00BB68  0E00               	movlw	0
  5358   00BB6A  6F5A               	movwf	90,b	;volatile
  5359                           
  5360                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  5361   00BB6C  0E00               	movlw	0
  5362   00BB6E  6F5B               	movwf	91,b	;volatile
  5363                           
  5364                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  5365   00BB70  0E00               	movlw	0
  5366   00BB72  6F6A               	movwf	106,b	;volatile
  5367                           
  5368                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  5369   00BB74  0E00               	movlw	0
  5370   00BB76  6F6B               	movwf	107,b	;volatile
  5371                           
  5372                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  5373   00BB78  0E00               	movlw	0
  5374   00BB7A  6F7A               	movwf	122,b	;volatile
  5375                           
  5376                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  5377   00BB7C  0E00               	movlw	0
  5378   00BB7E  6F7B               	movwf	123,b	;volatile
  5379                           
  5380                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  5381   00BB80  0E00               	movlw	0
  5382   00BB82  6F82               	movwf	130,b	;volatile
  5383                           
  5384                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  5385   00BB84  0E00               	movlw	0
  5386   00BB86  6F42               	movwf	66,b	;volatile
  5387                           
  5388                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x26;
  5389   00BB88  0E26               	movlw	38
  5390   00BB8A  6F52               	movwf	82,b	;volatile
  5391                           
  5392                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x18;
  5393   00BB8C  0E18               	movlw	24
  5394   00BB8E  6F62               	movwf	98,b	;volatile
  5395                           
  5396                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  5397   00BB90  0E00               	movlw	0
  5398   00BB92  6F72               	movwf	114,b	;volatile
  5399   00BB94                     
  5400                           ; BSR set to: 58
  5401                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  5402   00BB94  6943               	setf	67,b	;volatile
  5403   00BB96                     
  5404                           ; BSR set to: 58
  5405                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  5406   00BB96  6953               	setf	83,b	;volatile
  5407   00BB98                     
  5408                           ; BSR set to: 58
  5409                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  5410   00BB98  6963               	setf	99,b	;volatile
  5411   00BB9A                     
  5412                           ; BSR set to: 58
  5413                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  5414   00BB9A  6973               	setf	115,b	;volatile
  5415                           
  5416                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  5417   00BB9C  0E07               	movlw	7
  5418   00BB9E  6F83               	movwf	131,b	;volatile
  5419   00BBA0                     
  5420                           ; BSR set to: 58
  5421                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  5422   00BBA0  6944               	setf	68,b	;volatile
  5423   00BBA2                     
  5424                           ; BSR set to: 58
  5425                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  5426   00BBA2  6954               	setf	84,b	;volatile
  5427   00BBA4                     
  5428                           ; BSR set to: 58
  5429                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  5430   00BBA4  6964               	setf	100,b	;volatile
  5431   00BBA6                     
  5432                           ; BSR set to: 58
  5433                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  5434   00BBA6  6974               	setf	116,b	;volatile
  5435                           
  5436                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  5437   00BBA8  0E0F               	movlw	15
  5438   00BBAA  6F84               	movwf	132,b	;volatile
  5439                           
  5440                           ;mcc_generated_files/pin_manager.c: 137:     I2C1SDAPPS = 0x0A;
  5441   00BBAC  0E0A               	movlw	10
  5442   00BBAE  6FE2               	movwf	226,b	;volatile
  5443                           
  5444                           ;mcc_generated_files/pin_manager.c: 138:     RB1PPS = 0x21;
  5445   00BBB0  0E21               	movlw	33
  5446   00BBB2  6F09               	movwf	9,b	;volatile
  5447                           
  5448                           ;mcc_generated_files/pin_manager.c: 139:     RB2PPS = 0x22;
  5449   00BBB4  0E22               	movlw	34
  5450   00BBB6  6F0A               	movwf	10,b	;volatile
  5451                           
  5452                           ;mcc_generated_files/pin_manager.c: 140:     RC6PPS = 0x13;
  5453   00BBB8  0E13               	movlw	19
  5454   00BBBA  6F16               	movwf	22,b	;volatile
  5455                           
  5456                           ;mcc_generated_files/pin_manager.c: 141:     U1RXPPS = 0x17;
  5457   00BBBC  0E17               	movlw	23
  5458   00BBBE  6FE5               	movwf	229,b	;volatile
  5459                           
  5460                           ;mcc_generated_files/pin_manager.c: 142:     I2C1SCLPPS = 0x09;
  5461   00BBC0  0E09               	movlw	9
  5462   00BBC2  6FE1               	movwf	225,b	;volatile
  5463   00BBC4                     
  5464                           ; BSR set to: 58
  5465   00BBC4  0012               	return		;funcret
  5466   00BBC6                     __end_of_PIN_MANAGER_Initialize:
  5467                           	callstack 0
  5468                           
  5469 ;; *************** function _OSCILLATOR_Initialize *****************
  5470 ;; Defined at:
  5471 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_SYSTEM_Initialize
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text24
  5499   00A722                     __ptext24:
  5500                           	callstack 0
  5501   00A722                     _OSCILLATOR_Initialize:
  5502                           	callstack 29
  5503   00A722                     
  5504                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x71;
  5505   00A722  0E71               	movlw	113
  5506   00A724  0139               	movlb	57	; () banked
  5507   00A726  6FD9               	movwf	217,b	;volatile
  5508                           
  5509                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  5510   00A728  0E00               	movlw	0
  5511   00A72A  6FDB               	movwf	219,b	;volatile
  5512                           
  5513                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  5514   00A72C  0E00               	movlw	0
  5515   00A72E  6FDD               	movwf	221,b	;volatile
  5516                           
  5517                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x01;
  5518   00A730  0E01               	movlw	1
  5519   00A732  6FDF               	movwf	223,b	;volatile
  5520                           
  5521                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  5522   00A734  0E00               	movlw	0
  5523   00A736  6FDE               	movwf	222,b	;volatile
  5524   00A738                     
  5525                           ; BSR set to: 57
  5526   00A738  0012               	return		;funcret
  5527   00A73A                     __end_of_OSCILLATOR_Initialize:
  5528                           	callstack 0
  5529                           
  5530 ;; *************** function _I2C1_Initialize *****************
  5531 ;; Defined at:
  5532 ;;		line 183 in file "mcc_generated_files/i2c1_master.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;Total ram usage:        0 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_SYSTEM_Initialize
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text25
  5560   00A790                     __ptext25:
  5561                           	callstack 0
  5562   00A790                     _I2C1_Initialize:
  5563                           	callstack 29
  5564   00A790                     
  5565                           ;mcc_generated_files/i2c1_master.c: 186:     I2C1CON0 = 0x04;
  5566   00A790  0E04               	movlw	4
  5567   00A792  013D               	movlb	61	; () banked
  5568   00A794  6F73               	movwf	115,b	;volatile
  5569                           
  5570                           ;mcc_generated_files/i2c1_master.c: 188:     I2C1CON1 = 0x80;
  5571   00A796  0E80               	movlw	128
  5572   00A798  6F74               	movwf	116,b	;volatile
  5573                           
  5574                           ;mcc_generated_files/i2c1_master.c: 190:     I2C1CON2 = 0x18;
  5575   00A79A  0E18               	movlw	24
  5576   00A79C  6F75               	movwf	117,b	;volatile
  5577                           
  5578                           ;mcc_generated_files/i2c1_master.c: 192:     I2C1CLK = 0x00;
  5579   00A79E  0E00               	movlw	0
  5580   00A7A0  6F7B               	movwf	123,b	;volatile
  5581                           
  5582                           ;mcc_generated_files/i2c1_master.c: 194:     I2C1PIR = 0x00;
  5583   00A7A2  0E00               	movlw	0
  5584   00A7A4  6F79               	movwf	121,b	;volatile
  5585                           
  5586                           ;mcc_generated_files/i2c1_master.c: 196:     I2C1PIE = 0x00;
  5587   00A7A6  0E00               	movlw	0
  5588   00A7A8  6F7A               	movwf	122,b	;volatile
  5589                           
  5590                           ;mcc_generated_files/i2c1_master.c: 198:     I2C1ERR = 0x00;
  5591   00A7AA  0E00               	movlw	0
  5592   00A7AC  6F76               	movwf	118,b	;volatile
  5593   00A7AE                     
  5594                           ; BSR set to: 61
  5595                           ;mcc_generated_files/i2c1_master.c: 200:     I2C1CNT = 0xFF;
  5596   00A7AE  696C               	setf	108,b	;volatile
  5597   00A7B0                     
  5598                           ; BSR set to: 61
  5599   00A7B0  0012               	return		;funcret
  5600   00A7B2                     __end_of_I2C1_Initialize:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function _ReadAndSendEEPROMDataCSV *****************
  5604 ;; Defined at:
  5605 ;;		line 189 in file "main.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  Ndat            4   79[BANK0 ] unsigned long 
  5608 ;;  startAddress    2   83[BANK0 ] unsigned short 
  5609 ;;  startAddress    2   85[BANK0 ] unsigned short 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  i               4  224[BANK1 ] unsigned long 
  5612 ;;  buffer        200    0[BANK1 ] unsigned char [200]
  5613 ;;  eepromReadBu   24  200[BANK1 ] unsigned char [24]
  5614 ;;  gz_read         4  248[BANK1 ] float 
  5615 ;;  gy_read         4  244[BANK1 ] float 
  5616 ;;  gx_read         4  240[BANK1 ] float 
  5617 ;;  az_read         4  236[BANK1 ] float 
  5618 ;;  ay_read         4  232[BANK1 ] float 
  5619 ;;  ax_read         4  228[BANK1 ] float 
  5620 ;;  readBlockEEP    2  254[BANK1 ] unsigned short 
  5621 ;;  readBlockEEP    2  252[BANK1 ] unsigned short 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5631 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Locals:         0       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Totals:         2       8     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;Total ram usage:      266 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 14
  5638 ;; This function calls:
  5639 ;;		_EEPROM_ReadBlock
  5640 ;;		_UART_SendString
  5641 ;;		_memcpy
  5642 ;;		_sprintf
  5643 ;; This function is called by:
  5644 ;;		_main
  5645 ;;		_Handle_LOG_READ
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text26
  5650   00CB1A                     __ptext26:
  5651                           	callstack 0
  5652   00CB1A                     _ReadAndSendEEPROMDataCSV:
  5653                           	callstack 16
  5654   00CB1A                     
  5655                           ;main.c: 190:     uint16_t readBlockEEPROM1 = startAddressEEPROM1;
  5656   00CB1A  C0B3  F1FC         	movff	ReadAndSendEEPROMDataCSV@startAddressEEPROM1,ReadAndSendEEPROMDataCSV@readBlockEE
      +                          PROM1
  5657   00CB1E  C0B4  F1FD         	movff	ReadAndSendEEPROMDataCSV@startAddressEEPROM1+1,ReadAndSendEEPROMDataCSV@readBlock
      +                          EEPROM1+1
  5658                           
  5659                           ;main.c: 191:     uint16_t readBlockEEPROM2 = startAddressEEPROM2;
  5660   00CB22  C0B5  F1FE         	movff	ReadAndSendEEPROMDataCSV@startAddressEEPROM2,ReadAndSendEEPROMDataCSV@readBlockEE
      +                          PROM2
  5661   00CB26  C0B6  F1FF         	movff	ReadAndSendEEPROMDataCSV@startAddressEEPROM2+1,ReadAndSendEEPROMDataCSV@readBlock
      +                          EEPROM2+1
  5662   00CB2A                     
  5663                           ;main.c: 192:     uint8_t eepromReadBuffer[24];;main.c: 193:     float ax_read, ay_read,
      +                           az_read, gx_read, gy_read, gz_read;;main.c: 194:     char buffer[200];;main.c: 197:    
      +                           UART_SendString("AX,AY,AZ,GX,GY,GZ\n");
  5664   00CB2A  0E94               	movlw	low STR_2
  5665   00CB2C  6E02               	movwf	UART_SendString@str^0,c
  5666   00CB2E  0EFF               	movlw	high STR_2
  5667   00CB30  6E03               	movwf	(UART_SendString@str+1)^0,c
  5668   00CB32  EC9B  F059         	call	_UART_SendString	;wreg free
  5669   00CB36                     
  5670                           ;main.c: 199:     for (uint32_t i = 0; i < Ndat; i++) {
  5671   00CB36  0E00               	movlw	0
  5672   00CB38  0101               	movlb	1	; () banked
  5673   00CB3A  6FE0               	movwf	ReadAndSendEEPROMDataCSV@i& (0+255),b
  5674   00CB3C  0E00               	movlw	0
  5675   00CB3E  6FE1               	movwf	(ReadAndSendEEPROMDataCSV@i+1)& (0+255),b
  5676   00CB40  0E00               	movlw	0
  5677   00CB42  6FE2               	movwf	(ReadAndSendEEPROMDataCSV@i+2)& (0+255),b
  5678   00CB44  0E00               	movlw	0
  5679   00CB46  6FE3               	movwf	(ReadAndSendEEPROMDataCSV@i+3)& (0+255),b
  5680   00CB48  EF74  F066         	goto	l10627
  5681   00CB4C                     l10607:
  5682                           
  5683                           ; BSR set to: 1
  5684                           ;main.c: 201:         EEPROM_ReadBlock(0x50, readBlockEEPROM1, eepromReadBuffer, 12);
  5685   00CB4C  C1FC  F021         	movff	ReadAndSendEEPROMDataCSV@readBlockEEPROM1,EEPROM_ReadBlock@memoryAddress
  5686   00CB50  C1FD  F022         	movff	ReadAndSendEEPROMDataCSV@readBlockEEPROM1+1,EEPROM_ReadBlock@memoryAddress+1
  5687   00CB54  0EC8               	movlw	low ReadAndSendEEPROMDataCSV@eepromReadBuffer
  5688   00CB56  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  5689   00CB58  0E01               	movlw	high ReadAndSendEEPROMDataCSV@eepromReadBuffer
  5690   00CB5A  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  5691   00CB5C  0E0C               	movlw	12
  5692   00CB5E  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  5693   00CB60  0E50               	movlw	80
  5694   00CB62  EC5B  F056         	call	_EEPROM_ReadBlock
  5695   00CB66                     
  5696                           ;main.c: 202:         memcpy(&ax_read, &eepromReadBuffer[0], sizeof(float));
  5697   00CB66  0EE4               	movlw	low ReadAndSendEEPROMDataCSV@ax_read
  5698   00CB68  6E01               	movwf	memcpy@d1^0,c
  5699   00CB6A  0E01               	movlw	high ReadAndSendEEPROMDataCSV@ax_read
  5700   00CB6C  6E02               	movwf	(memcpy@d1+1)^0,c
  5701   00CB6E  0EC8               	movlw	low ReadAndSendEEPROMDataCSV@eepromReadBuffer
  5702   00CB70  6E03               	movwf	memcpy@s1^0,c
  5703   00CB72  0E01               	movlw	high ReadAndSendEEPROMDataCSV@eepromReadBuffer
  5704   00CB74  6E04               	movwf	(memcpy@s1+1)^0,c
  5705   00CB76  0E00               	movlw	0
  5706   00CB78  6E06               	movwf	(memcpy@n+1)^0,c
  5707   00CB7A  0E04               	movlw	4
  5708   00CB7C  6E05               	movwf	memcpy@n^0,c
  5709   00CB7E  EC95  F057         	call	_memcpy	;wreg free
  5710   00CB82                     
  5711                           ;main.c: 203:         memcpy(&ay_read, &eepromReadBuffer[4], sizeof(float));
  5712   00CB82  0EE8               	movlw	low ReadAndSendEEPROMDataCSV@ay_read
  5713   00CB84  6E01               	movwf	memcpy@d1^0,c
  5714   00CB86  0E01               	movlw	high ReadAndSendEEPROMDataCSV@ay_read
  5715   00CB88  6E02               	movwf	(memcpy@d1+1)^0,c
  5716   00CB8A  0ECC               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+4)
  5717   00CB8C  6E03               	movwf	memcpy@s1^0,c
  5718   00CB8E  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+4)
  5719   00CB90  6E04               	movwf	(memcpy@s1+1)^0,c
  5720   00CB92  0E00               	movlw	0
  5721   00CB94  6E06               	movwf	(memcpy@n+1)^0,c
  5722   00CB96  0E04               	movlw	4
  5723   00CB98  6E05               	movwf	memcpy@n^0,c
  5724   00CB9A  EC95  F057         	call	_memcpy	;wreg free
  5725   00CB9E                     
  5726                           ;main.c: 204:         memcpy(&az_read, &eepromReadBuffer[8], sizeof(float));
  5727   00CB9E  0EEC               	movlw	low ReadAndSendEEPROMDataCSV@az_read
  5728   00CBA0  6E01               	movwf	memcpy@d1^0,c
  5729   00CBA2  0E01               	movlw	high ReadAndSendEEPROMDataCSV@az_read
  5730   00CBA4  6E02               	movwf	(memcpy@d1+1)^0,c
  5731   00CBA6  0ED0               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+8)
  5732   00CBA8  6E03               	movwf	memcpy@s1^0,c
  5733   00CBAA  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+8)
  5734   00CBAC  6E04               	movwf	(memcpy@s1+1)^0,c
  5735   00CBAE  0E00               	movlw	0
  5736   00CBB0  6E06               	movwf	(memcpy@n+1)^0,c
  5737   00CBB2  0E04               	movlw	4
  5738   00CBB4  6E05               	movwf	memcpy@n^0,c
  5739   00CBB6  EC95  F057         	call	_memcpy	;wreg free
  5740   00CBBA                     
  5741                           ;main.c: 207:         EEPROM_ReadBlock(0x51, readBlockEEPROM2, &eepromReadBuffer[12], 12
      +                          );
  5742   00CBBA  C1FE  F021         	movff	ReadAndSendEEPROMDataCSV@readBlockEEPROM2,EEPROM_ReadBlock@memoryAddress
  5743   00CBBE  C1FF  F022         	movff	ReadAndSendEEPROMDataCSV@readBlockEEPROM2+1,EEPROM_ReadBlock@memoryAddress+1
  5744   00CBC2  0ED4               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+12)
  5745   00CBC4  6E23               	movwf	EEPROM_ReadBlock@data^0,c
  5746   00CBC6  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+12)
  5747   00CBC8  6E24               	movwf	(EEPROM_ReadBlock@data+1)^0,c
  5748   00CBCA  0E0C               	movlw	12
  5749   00CBCC  6E25               	movwf	EEPROM_ReadBlock@size^0,c
  5750   00CBCE  0E51               	movlw	81
  5751   00CBD0  EC5B  F056         	call	_EEPROM_ReadBlock
  5752                           
  5753                           ;main.c: 208:         memcpy(&gx_read, &eepromReadBuffer[12], sizeof(float));
  5754   00CBD4  0EF0               	movlw	low ReadAndSendEEPROMDataCSV@gx_read
  5755   00CBD6  6E01               	movwf	memcpy@d1^0,c
  5756   00CBD8  0E01               	movlw	high ReadAndSendEEPROMDataCSV@gx_read
  5757   00CBDA  6E02               	movwf	(memcpy@d1+1)^0,c
  5758   00CBDC  0ED4               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+12)
  5759   00CBDE  6E03               	movwf	memcpy@s1^0,c
  5760   00CBE0  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+12)
  5761   00CBE2  6E04               	movwf	(memcpy@s1+1)^0,c
  5762   00CBE4  0E00               	movlw	0
  5763   00CBE6  6E06               	movwf	(memcpy@n+1)^0,c
  5764   00CBE8  0E04               	movlw	4
  5765   00CBEA  6E05               	movwf	memcpy@n^0,c
  5766   00CBEC  EC95  F057         	call	_memcpy	;wreg free
  5767                           
  5768                           ;main.c: 209:         memcpy(&gy_read, &eepromReadBuffer[16], sizeof(float));
  5769   00CBF0  0EF4               	movlw	low ReadAndSendEEPROMDataCSV@gy_read
  5770   00CBF2  6E01               	movwf	memcpy@d1^0,c
  5771   00CBF4  0E01               	movlw	high ReadAndSendEEPROMDataCSV@gy_read
  5772   00CBF6  6E02               	movwf	(memcpy@d1+1)^0,c
  5773   00CBF8  0ED8               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+16)
  5774   00CBFA  6E03               	movwf	memcpy@s1^0,c
  5775   00CBFC  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+16)
  5776   00CBFE  6E04               	movwf	(memcpy@s1+1)^0,c
  5777   00CC00  0E00               	movlw	0
  5778   00CC02  6E06               	movwf	(memcpy@n+1)^0,c
  5779   00CC04  0E04               	movlw	4
  5780   00CC06  6E05               	movwf	memcpy@n^0,c
  5781   00CC08  EC95  F057         	call	_memcpy	;wreg free
  5782                           
  5783                           ;main.c: 210:         memcpy(&gz_read, &eepromReadBuffer[20], sizeof(float));
  5784   00CC0C  0EF8               	movlw	low ReadAndSendEEPROMDataCSV@gz_read
  5785   00CC0E  6E01               	movwf	memcpy@d1^0,c
  5786   00CC10  0E01               	movlw	high ReadAndSendEEPROMDataCSV@gz_read
  5787   00CC12  6E02               	movwf	(memcpy@d1+1)^0,c
  5788   00CC14  0EDC               	movlw	low (ReadAndSendEEPROMDataCSV@eepromReadBuffer+20)
  5789   00CC16  6E03               	movwf	memcpy@s1^0,c
  5790   00CC18  0E01               	movlw	high (ReadAndSendEEPROMDataCSV@eepromReadBuffer+20)
  5791   00CC1A  6E04               	movwf	(memcpy@s1+1)^0,c
  5792   00CC1C  0E00               	movlw	0
  5793   00CC1E  6E06               	movwf	(memcpy@n+1)^0,c
  5794   00CC20  0E04               	movlw	4
  5795   00CC22  6E05               	movwf	memcpy@n^0,c
  5796   00CC24  EC95  F057         	call	_memcpy	;wreg free
  5797   00CC28                     
  5798                           ;main.c: 213:         sprintf(buffer, "%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n", ax_read, ay_rea
      +                          d, az_read, gx_read, gy_read, gz_read);
  5799   00CC28  0E00               	movlw	low ReadAndSendEEPROMDataCSV@buffer
  5800   00CC2A  0100               	movlb	0	; () banked
  5801   00CC2C  6F93               	movwf	sprintf@s& (0+255),b
  5802   00CC2E  0E01               	movlw	high ReadAndSendEEPROMDataCSV@buffer
  5803   00CC30  6F94               	movwf	(sprintf@s+1)& (0+255),b
  5804   00CC32  0E75               	movlw	low STR_3
  5805   00CC34  6F95               	movwf	sprintf@fmt& (0+255),b
  5806   00CC36  0EFF               	movlw	high STR_3
  5807   00CC38  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  5808   00CC3A  C1E4  F097         	movff	ReadAndSendEEPROMDataCSV@ax_read,?_sprintf+4
  5809   00CC3E  C1E5  F098         	movff	ReadAndSendEEPROMDataCSV@ax_read+1,?_sprintf+5
  5810   00CC42  C1E6  F099         	movff	ReadAndSendEEPROMDataCSV@ax_read+2,?_sprintf+6
  5811   00CC46  C1E7  F09A         	movff	ReadAndSendEEPROMDataCSV@ax_read+3,?_sprintf+7
  5812   00CC4A  C1E8  F09B         	movff	ReadAndSendEEPROMDataCSV@ay_read,?_sprintf+8
  5813   00CC4E  C1E9  F09C         	movff	ReadAndSendEEPROMDataCSV@ay_read+1,?_sprintf+9
  5814   00CC52  C1EA  F09D         	movff	ReadAndSendEEPROMDataCSV@ay_read+2,?_sprintf+10
  5815   00CC56  C1EB  F09E         	movff	ReadAndSendEEPROMDataCSV@ay_read+3,?_sprintf+11
  5816   00CC5A  C1EC  F09F         	movff	ReadAndSendEEPROMDataCSV@az_read,?_sprintf+12
  5817   00CC5E  C1ED  F0A0         	movff	ReadAndSendEEPROMDataCSV@az_read+1,?_sprintf+13
  5818   00CC62  C1EE  F0A1         	movff	ReadAndSendEEPROMDataCSV@az_read+2,?_sprintf+14
  5819   00CC66  C1EF  F0A2         	movff	ReadAndSendEEPROMDataCSV@az_read+3,?_sprintf+15
  5820   00CC6A  C1F0  F0A3         	movff	ReadAndSendEEPROMDataCSV@gx_read,?_sprintf+16
  5821   00CC6E  C1F1  F0A4         	movff	ReadAndSendEEPROMDataCSV@gx_read+1,?_sprintf+17
  5822   00CC72  C1F2  F0A5         	movff	ReadAndSendEEPROMDataCSV@gx_read+2,?_sprintf+18
  5823   00CC76  C1F3  F0A6         	movff	ReadAndSendEEPROMDataCSV@gx_read+3,?_sprintf+19
  5824   00CC7A  C1F4  F0A7         	movff	ReadAndSendEEPROMDataCSV@gy_read,?_sprintf+20
  5825   00CC7E  C1F5  F0A8         	movff	ReadAndSendEEPROMDataCSV@gy_read+1,?_sprintf+21
  5826   00CC82  C1F6  F0A9         	movff	ReadAndSendEEPROMDataCSV@gy_read+2,?_sprintf+22
  5827   00CC86  C1F7  F0AA         	movff	ReadAndSendEEPROMDataCSV@gy_read+3,?_sprintf+23
  5828   00CC8A  C1F8  F0AB         	movff	ReadAndSendEEPROMDataCSV@gz_read,?_sprintf+24
  5829   00CC8E  C1F9  F0AC         	movff	ReadAndSendEEPROMDataCSV@gz_read+1,?_sprintf+25
  5830   00CC92  C1FA  F0AD         	movff	ReadAndSendEEPROMDataCSV@gz_read+2,?_sprintf+26
  5831   00CC96  C1FB  F0AE         	movff	ReadAndSendEEPROMDataCSV@gz_read+3,?_sprintf+27
  5832   00CC9A  EC39  F056         	call	_sprintf	;wreg free
  5833   00CC9E                     
  5834                           ;main.c: 214:         UART_SendString(buffer);
  5835   00CC9E  0E00               	movlw	low ReadAndSendEEPROMDataCSV@buffer
  5836   00CCA0  6E02               	movwf	UART_SendString@str^0,c
  5837   00CCA2  0E01               	movlw	high ReadAndSendEEPROMDataCSV@buffer
  5838   00CCA4  6E03               	movwf	(UART_SendString@str+1)^0,c
  5839   00CCA6  EC9B  F059         	call	_UART_SendString	;wreg free
  5840   00CCAA                     
  5841                           ;main.c: 217:         readBlockEEPROM1 = (readBlockEEPROM1 + 12) % 32768;
  5842   00CCAA  0E0C               	movlw	12
  5843   00CCAC  0101               	movlb	1	; () banked
  5844   00CCAE  25FC               	addwf	ReadAndSendEEPROMDataCSV@readBlockEEPROM1& (0+255),w,b
  5845   00CCB0  6E5C               	movwf	??_ReadAndSendEEPROMDataCSV^0,c
  5846   00CCB2  0E00               	movlw	0
  5847   00CCB4  21FD               	addwfc	(ReadAndSendEEPROMDataCSV@readBlockEEPROM1+1)& (0+255),w,b
  5848   00CCB6  6E5D               	movwf	(??_ReadAndSendEEPROMDataCSV+1)^0,c
  5849   00CCB8  0EFF               	movlw	255
  5850   00CCBA  145C               	andwf	??_ReadAndSendEEPROMDataCSV^0,w,c
  5851   00CCBC  6FFC               	movwf	ReadAndSendEEPROMDataCSV@readBlockEEPROM1& (0+255),b
  5852   00CCBE  0E7F               	movlw	127
  5853   00CCC0  145D               	andwf	(??_ReadAndSendEEPROMDataCSV+1)^0,w,c
  5854   00CCC2  6FFD               	movwf	(ReadAndSendEEPROMDataCSV@readBlockEEPROM1+1)& (0+255),b
  5855   00CCC4                     
  5856                           ; BSR set to: 1
  5857                           ;main.c: 218:         readBlockEEPROM2 = (readBlockEEPROM2 + 12) % 32768;
  5858   00CCC4  0E0C               	movlw	12
  5859   00CCC6  25FE               	addwf	ReadAndSendEEPROMDataCSV@readBlockEEPROM2& (0+255),w,b
  5860   00CCC8  6E5C               	movwf	??_ReadAndSendEEPROMDataCSV^0,c
  5861   00CCCA  0E00               	movlw	0
  5862   00CCCC  21FF               	addwfc	(ReadAndSendEEPROMDataCSV@readBlockEEPROM2+1)& (0+255),w,b
  5863   00CCCE  6E5D               	movwf	(??_ReadAndSendEEPROMDataCSV+1)^0,c
  5864   00CCD0  0EFF               	movlw	255
  5865   00CCD2  145C               	andwf	??_ReadAndSendEEPROMDataCSV^0,w,c
  5866   00CCD4  6FFE               	movwf	ReadAndSendEEPROMDataCSV@readBlockEEPROM2& (0+255),b
  5867   00CCD6  0E7F               	movlw	127
  5868   00CCD8  145D               	andwf	(??_ReadAndSendEEPROMDataCSV+1)^0,w,c
  5869   00CCDA  6FFF               	movwf	(ReadAndSendEEPROMDataCSV@readBlockEEPROM2+1)& (0+255),b
  5870   00CCDC                     
  5871                           ; BSR set to: 1
  5872                           ;main.c: 219:     }
  5873   00CCDC  0E01               	movlw	1
  5874   00CCDE  27E0               	addwf	ReadAndSendEEPROMDataCSV@i& (0+255),f,b
  5875   00CCE0  0E00               	movlw	0
  5876   00CCE2  23E1               	addwfc	(ReadAndSendEEPROMDataCSV@i+1)& (0+255),f,b
  5877   00CCE4  23E2               	addwfc	(ReadAndSendEEPROMDataCSV@i+2)& (0+255),f,b
  5878   00CCE6  23E3               	addwfc	(ReadAndSendEEPROMDataCSV@i+3)& (0+255),f,b
  5879   00CCE8                     l10627:
  5880                           
  5881                           ; BSR set to: 1
  5882   00CCE8  0100               	movlb	0	; () banked
  5883   00CCEA  51AF               	movf	ReadAndSendEEPROMDataCSV@Ndat& (0+255),w,b
  5884   00CCEC  0101               	movlb	1	; () banked
  5885   00CCEE  5DE0               	subwf	ReadAndSendEEPROMDataCSV@i& (0+255),w,b
  5886   00CCF0  0100               	movlb	0	; () banked
  5887   00CCF2  51B0               	movf	(ReadAndSendEEPROMDataCSV@Ndat+1)& (0+255),w,b
  5888   00CCF4  0101               	movlb	1	; () banked
  5889   00CCF6  59E1               	subwfb	(ReadAndSendEEPROMDataCSV@i+1)& (0+255),w,b
  5890   00CCF8  0100               	movlb	0	; () banked
  5891   00CCFA  51B1               	movf	(ReadAndSendEEPROMDataCSV@Ndat+2)& (0+255),w,b
  5892   00CCFC  0101               	movlb	1	; () banked
  5893   00CCFE  59E2               	subwfb	(ReadAndSendEEPROMDataCSV@i+2)& (0+255),w,b
  5894   00CD00  0100               	movlb	0	; () banked
  5895   00CD02  51B2               	movf	(ReadAndSendEEPROMDataCSV@Ndat+3)& (0+255),w,b
  5896   00CD04  0101               	movlb	1	; () banked
  5897   00CD06  59E3               	subwfb	(ReadAndSendEEPROMDataCSV@i+3)& (0+255),w,b
  5898   00CD08  A0D8               	btfss	status,0,c
  5899   00CD0A  EF89  F066         	goto	u11071
  5900   00CD0E  EF8B  F066         	goto	u11070
  5901   00CD12                     u11071:
  5902   00CD12  EFA6  F065         	goto	l10607
  5903   00CD16                     u11070:
  5904   00CD16                     
  5905                           ; BSR set to: 1
  5906   00CD16  0012               	return		;funcret
  5907   00CD18                     __end_of_ReadAndSendEEPROMDataCSV:
  5908                           	callstack 0
  5909                           
  5910 ;; *************** function _sprintf *****************
  5911 ;; Defined at:
  5912 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  s               2   51[BANK0 ] PTR unsigned char 
  5915 ;;		 -> main@buffer(200), ReadAndSendEEPROMData@buffer(200), ReadAndSendEEPROMDataCSV@buffer(200), Handle_LOG_STAT@buffe
      +r(200), 
  5916 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  5917 ;;		 -> STR_17(50), STR_11(46), STR_10(46), STR_5(69), 
  5918 ;;		 -> STR_3(31), STR_1(50), 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  f              12   79[COMRAM] struct _IO_FILE
  5921 ;;  ret             2    0        int 
  5922 ;;  ap              1   78[COMRAM] PTR void [1]
  5923 ;;		 -> ?_sprintf(2), 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  2   51[BANK0 ] int 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5933 ;;      Params:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Totals:        13      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;Total ram usage:       41 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 8
  5940 ;; This function calls:
  5941 ;;		_vfprintf
  5942 ;; This function is called by:
  5943 ;;		_ReadAndSendEEPROMDataCSV
  5944 ;;		_ReadAndSendEEPROMData
  5945 ;;		_main
  5946 ;;		_Handle_LOG_STAT
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text27
  5951   00AC72                     __ptext27:
  5952                           	callstack 0
  5953   00AC72                     _sprintf:
  5954                           	callstack 22
  5955   00AC72  0E97               	movlw	low (?_sprintf+4)
  5956   00AC74  6E4F               	movwf	sprintf@ap^0,c
  5957   00AC76  C093  F050         	movff	sprintf@s,sprintf@f
  5958   00AC7A  C094  F051         	movff	sprintf@s+1,sprintf@f+1
  5959   00AC7E  0E00               	movlw	0
  5960   00AC80  6E54               	movwf	(sprintf@f+4)^0,c
  5961   00AC82  0E00               	movlw	0
  5962   00AC84  6E53               	movwf	(sprintf@f+3)^0,c
  5963   00AC86  0E00               	movlw	0
  5964   00AC88  6E5B               	movwf	(sprintf@f+11)^0,c
  5965   00AC8A  0E00               	movlw	0
  5966   00AC8C  6E5A               	movwf	(sprintf@f+10)^0,c
  5967   00AC8E  0E50               	movlw	low sprintf@f
  5968   00AC90  0100               	movlb	0	; () banked
  5969   00AC92  6F8F               	movwf	vfprintf@fp& (0+255),b
  5970   00AC94  C095  F090         	movff	sprintf@fmt,vfprintf@fmt
  5971   00AC98  C096  F091         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5972   00AC9C  0E4F               	movlw	low sprintf@ap
  5973   00AC9E  6F92               	movwf	vfprintf@ap& (0+255),b
  5974   00ACA0  ECC6  F056         	call	_vfprintf	;wreg free
  5975   00ACA4  5053               	movf	(sprintf@f+3)^0,w,c
  5976   00ACA6  0100               	movlb	0	; () banked
  5977   00ACA8  2593               	addwf	sprintf@s& (0+255),w,b
  5978   00ACAA  6ED9               	movwf	fsr2l,c
  5979   00ACAC  5054               	movf	(sprintf@f+4)^0,w,c
  5980   00ACAE  2194               	addwfc	(sprintf@s+1)& (0+255),w,b
  5981   00ACB0  6EDA               	movwf	fsr2h,c
  5982   00ACB2  6ADF               	clrf	indf2,c
  5983   00ACB4                     
  5984                           ; BSR set to: 0
  5985   00ACB4  0012               	return		;funcret
  5986   00ACB6                     __end_of_sprintf:
  5987                           	callstack 0
  5988                           
  5989 ;; *************** function _vfprintf *****************
  5990 ;; Defined at:
  5991 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  fp              1   47[BANK0 ] PTR struct _IO_FILE
  5994 ;;		 -> sprintf@f(12), 
  5995 ;;  fmt             2   48[BANK0 ] PTR const unsigned char 
  5996 ;;		 -> STR_17(50), STR_11(46), STR_10(46), STR_5(69), 
  5997 ;;		 -> STR_3(31), STR_1(50), 
  5998 ;;  ap              1   50[BANK0 ] PTR PTR void 
  5999 ;;		 -> sprintf@ap(1), 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  6002 ;;		 -> STR_17(50), STR_11(46), STR_10(46), STR_5(69), 
  6003 ;;		 -> STR_3(31), STR_1(50), 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2   47[BANK0 ] int 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6013 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;Total ram usage:        6 bytes
  6018 ;; Hardware stack levels used: 1
  6019 ;; Hardware stack levels required when called: 7
  6020 ;; This function calls:
  6021 ;;		_vfpfcnvrt
  6022 ;; This function is called by:
  6023 ;;		_sprintf
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text28
  6028   00AD8C                     __ptext28:
  6029                           	callstack 0
  6030   00AD8C                     _vfprintf:
  6031                           	callstack 22
  6032   00AD8C                     
  6033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6034   00AD8C  C090  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  6035   00AD90  C091  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6036                           
  6037                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6038   00AD94  EFD5  F056         	goto	l10159
  6039   00AD98                     l10157:
  6040                           
  6041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6042   00AD98  C08F  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6043   00AD9C  0E4D               	movlw	low vfprintf@cfmt
  6044   00AD9E  0100               	movlb	0	; () banked
  6045   00ADA0  6F8D               	movwf	vfpfcnvrt@fmt& (0+255),b
  6046   00ADA2  C092  F08E         	movff	vfprintf@ap,vfpfcnvrt@ap
  6047   00ADA6  ECB4  F072         	call	_vfpfcnvrt	;wreg free
  6048   00ADAA                     l10159:
  6049                           
  6050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6051   00ADAA  0060  F137  FFF6   	movff	vfprintf@cfmt,tblptrl
  6052   00ADB0  0060  F13B  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  6053   00ADB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6054   00ADB6  6AF8               	clrf	tblptru,c
  6055   00ADB8                     	endif
  6056   00ADB8                     	if	0	;tblptru may be non-zero
  6057   00ADB8                     	endif
  6058   00ADB8  0008               	tblrd		*
  6059   00ADBA  50F5               	movf	tablat,w,c
  6060   00ADBC  0900               	iorlw	0
  6061   00ADBE  A4D8               	btfss	status,2,c
  6062   00ADC0  EFE4  F056         	goto	u10481
  6063   00ADC4  EFE6  F056         	goto	u10480
  6064   00ADC8                     u10481:
  6065   00ADC8  EFCC  F056         	goto	l10157
  6066   00ADCC                     u10480:
  6067   00ADCC                     
  6068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6069   00ADCC  0E00               	movlw	0
  6070   00ADCE  0100               	movlb	0	; () banked
  6071   00ADD0  6F90               	movwf	(?_vfprintf+1)& (0+255),b
  6072   00ADD2  0E00               	movlw	0
  6073   00ADD4  6F8F               	movwf	?_vfprintf& (0+255),b
  6074   00ADD6                     
  6075                           ; BSR set to: 0
  6076   00ADD6  0012               	return		;funcret
  6077   00ADD8                     __end_of_vfprintf:
  6078                           	callstack 0
  6079                           
  6080 ;; *************** function _vfpfcnvrt *****************
  6081 ;; Defined at:
  6082 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  6085 ;;		 -> sprintf@f(12), 
  6086 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  6087 ;;		 -> vfprintf@cfmt(2), 
  6088 ;;  ap              1   46[BANK0 ] PTR PTR void 
  6089 ;;		 -> sprintf@ap(1), 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  convarg         4   69[COMRAM] struct .
  6092 ;;  cp              2   74[COMRAM] PTR unsigned char 
  6093 ;;		 -> STR_17(50), STR_11(46), STR_10(46), STR_5(69), 
  6094 ;;		 -> STR_3(31), STR_1(50), 
  6095 ;;  c               1   73[COMRAM] unsigned char 
  6096 ;;  done            1    0        _Bool 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6106 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Totals:         9       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;Total ram usage:       12 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 6
  6113 ;; This function calls:
  6114 ;;		_efgtoa
  6115 ;;		_fputc
  6116 ;;		_read_prec_or_width
  6117 ;;		_utoa
  6118 ;;		_xtoa
  6119 ;; This function is called by:
  6120 ;;		_vfprintf
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text29
  6125   00E568                     __ptext29:
  6126                           	callstack 0
  6127   00E568                     _vfpfcnvrt:
  6128                           	callstack 22
  6129   00E568                     
  6130                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6131   00E568  0100               	movlb	0	; () banked
  6132   00E56A  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6133   00E56C  6ED9               	movwf	fsr2l,c
  6134   00E56E  6ADA               	clrf	fsr2h,c
  6135   00E570  006F FF7B FFF6     	movff	postinc2,tblptrl
  6136   00E576  006F FF77 FFF7     	movff	postdec2,tblptrh
  6137   00E57C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6138   00E57C  6AF8               	clrf	tblptru,c
  6139   00E57E                     	endif
  6140   00E57E                     	if	0	;tblptru may be non-zero
  6141   00E57E                     	endif
  6142   00E57E  0008               	tblrd		*
  6143   00E580  50F5               	movf	tablat,w,c
  6144   00E582  0A25               	xorlw	37
  6145   00E584  A4D8               	btfss	status,2,c
  6146   00E586  EFC7  F072         	goto	u10281
  6147   00E58A  EFC9  F072         	goto	u10280
  6148   00E58E                     u10281:
  6149   00E58E  EFC7  F074         	goto	l10031
  6150   00E592                     u10280:
  6151   00E592                     
  6152                           ; BSR set to: 0
  6153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6154   00E592  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6155   00E594  6ED9               	movwf	fsr2l,c
  6156   00E596  6ADA               	clrf	fsr2h,c
  6157   00E598  2ADE               	incf	postinc2,f,c
  6158   00E59A  0E00               	movlw	0
  6159   00E59C  22DD               	addwfc	postdec2,f,c
  6160   00E59E                     
  6161                           ; BSR set to: 0
  6162                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6163   00E59E  0E00               	movlw	0
  6164   00E5A0  6FC2               	movwf	(_width+1)& (0+255),b
  6165   00E5A2  0E00               	movlw	0
  6166   00E5A4  6FC1               	movwf	_width& (0+255),b
  6167   00E5A6  C0C1  F0CA         	movff	_width,_flags
  6168   00E5AA                     
  6169                           ; BSR set to: 0
  6170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6171   00E5AA  69C3               	setf	_prec& (0+255),b
  6172   00E5AC  69C4               	setf	(_prec+1)& (0+255),b
  6173   00E5AE                     
  6174                           ; BSR set to: 0
  6175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  6176   00E5AE  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6177   00E5B0  6ED9               	movwf	fsr2l,c
  6178   00E5B2  6ADA               	clrf	fsr2h,c
  6179   00E5B4  006F FF7B FFF6     	movff	postinc2,tblptrl
  6180   00E5BA  006F FF77 FFF7     	movff	postdec2,tblptrh
  6181   00E5C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6182   00E5C0  6AF8               	clrf	tblptru,c
  6183   00E5C2                     	endif
  6184   00E5C2                     	if	0	;tblptru may be non-zero
  6185   00E5C2                     	endif
  6186   00E5C2  0008               	tblrd		*
  6187   00E5C4  50F5               	movf	tablat,w,c
  6188   00E5C6  0A2E               	xorlw	46
  6189   00E5C8  A4D8               	btfss	status,2,c
  6190   00E5CA  EFE9  F072         	goto	u10291
  6191   00E5CE  EFEB  F072         	goto	u10290
  6192   00E5D2                     u10291:
  6193   00E5D2  EFFB  F072         	goto	l9953
  6194   00E5D6                     u10290:
  6195   00E5D6                     
  6196                           ; BSR set to: 0
  6197                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  6198   00E5D6  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6199   00E5D8  6ED9               	movwf	fsr2l,c
  6200   00E5DA  6ADA               	clrf	fsr2h,c
  6201   00E5DC  2ADE               	incf	postinc2,f,c
  6202   00E5DE  0E00               	movlw	0
  6203   00E5E0  22DD               	addwfc	postdec2,f,c
  6204   00E5E2                     
  6205                           ; BSR set to: 0
  6206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  6207   00E5E2  C08D  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6208   00E5E6  C08E  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6209   00E5EA  EC3B  F05E         	call	_read_prec_or_width	;wreg free
  6210   00E5EE  C007  F0C3         	movff	?_read_prec_or_width,_prec
  6211   00E5F2  C008  F0C4         	movff	?_read_prec_or_width+1,_prec+1
  6212   00E5F6                     l9953:
  6213                           
  6214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6215   00E5F6  0100               	movlb	0	; () banked
  6216   00E5F8  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6217   00E5FA  6ED9               	movwf	fsr2l,c
  6218   00E5FC  6ADA               	clrf	fsr2h,c
  6219   00E5FE  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@cp
  6220   00E604  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@cp+1
  6221   00E60A                     
  6222                           ; BSR set to: 0
  6223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  6224   00E60A  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6225   00E610  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6226   00E616                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6227   00E616  6AF8               	clrf	tblptru,c
  6228   00E618                     	endif
  6229   00E618                     	if	0	;tblptru may be non-zero
  6230   00E618                     	endif
  6231   00E618  0008               	tblrd		*
  6232   00E61A  006F FFD4  F04A    	movff	tablat,vfpfcnvrt@c
  6233                           
  6234                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  6235   00E620  EF1E  F073         	goto	l9965
  6236   00E624                     l9957:
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  6240   00E624  4A4B               	infsnz	vfpfcnvrt@cp^0,f,c
  6241   00E626  2A4C               	incf	(vfpfcnvrt@cp+1)^0,f,c
  6242                           
  6243                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1316:     break;
  6244   00E628  EF37  F073         	goto	l9967
  6245   00E62C                     l9959:
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  6249   00E62C  0E69               	movlw	105
  6250   00E62E  6E4A               	movwf	vfpfcnvrt@c^0,c
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1351:     break;
  6253   00E630  EF37  F073         	goto	l9967
  6254   00E634                     l9961:
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  6258   00E634  0E00               	movlw	0
  6259   00E636  6E4A               	movwf	vfpfcnvrt@c^0,c
  6260                           
  6261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1354:     break;
  6262   00E638  EF37  F073         	goto	l9967
  6263   00E63C                     l9965:
  6264                           
  6265                           ; BSR set to: 0
  6266   00E63C  504A               	movf	vfpfcnvrt@c^0,w,c
  6267   00E63E  6E44               	movwf	??_vfpfcnvrt^0,c
  6268   00E640  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  6269                           
  6270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6271                           ; Switch size 1, requested type "simple"
  6272                           ; Number of cases is 1, Range of values is 0 to 0
  6273                           ; switch strategies available:
  6274                           ; Name         Instructions Cycles
  6275                           ; simple_byte            4     3 (average)
  6276                           ;	Chosen strategy is simple_byte
  6277   00E642  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  6278   00E644  0A00               	xorlw	0	; case 0
  6279   00E646  B4D8               	btfsc	status,2,c
  6280   00E648  EF28  F073         	goto	l11165
  6281   00E64C  EF1A  F073         	goto	l9961
  6282   00E650                     l11165:
  6283                           
  6284                           ; BSR set to: 0
  6285                           ; Switch size 1, requested type "simple"
  6286                           ; Number of cases is 3, Range of values is 88 to 117
  6287                           ; switch strategies available:
  6288                           ; Name         Instructions Cycles
  6289                           ; simple_byte           10     6 (average)
  6290                           ;	Chosen strategy is simple_byte
  6291   00E650  5044               	movf	??_vfpfcnvrt^0,w,c
  6292   00E652  0A58               	xorlw	88	; case 88
  6293   00E654  B4D8               	btfsc	status,2,c
  6294   00E656  EF16  F073         	goto	l9959
  6295   00E65A  0A34               	xorlw	52	; case 108
  6296   00E65C  B4D8               	btfsc	status,2,c
  6297   00E65E  EF12  F073         	goto	l9957
  6298   00E662  0A19               	xorlw	25	; case 117
  6299   00E664  B4D8               	btfsc	status,2,c
  6300   00E666  EF16  F073         	goto	l9959
  6301   00E66A  EF1A  F073         	goto	l9961
  6302   00E66E                     l9967:
  6303                           
  6304                           ; BSR set to: 0
  6305   00E66E  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6306   00E674  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6307   00E67A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6308   00E67A  6AF8               	clrf	tblptru,c
  6309   00E67C                     	endif
  6310   00E67C                     	if	0	;tblptru may be non-zero
  6311   00E67C                     	endif
  6312   00E67C  0008               	tblrd		*
  6313   00E67E  50F5               	movf	tablat,w,c
  6314   00E680  0A58               	xorlw	88
  6315   00E682  B4D8               	btfsc	status,2,c
  6316   00E684  EF46  F073         	goto	u10301
  6317   00E688  EF48  F073         	goto	u10300
  6318   00E68C                     u10301:
  6319   00E68C  EF87  F073         	goto	l9977
  6320   00E690                     u10300:
  6321   00E690                     
  6322                           ; BSR set to: 0
  6323   00E690  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6324   00E696  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6325   00E69C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6326   00E69C  6AF8               	clrf	tblptru,c
  6327   00E69E                     	endif
  6328   00E69E                     	if	0	;tblptru may be non-zero
  6329   00E69E                     	endif
  6330   00E69E  0008               	tblrd		*
  6331   00E6A0  50F5               	movf	tablat,w,c
  6332   00E6A2  0A75               	xorlw	117
  6333   00E6A4  A4D8               	btfss	status,2,c
  6334   00E6A6  EF57  F073         	goto	u10311
  6335   00E6AA  EF59  F073         	goto	u10310
  6336   00E6AE                     u10311:
  6337   00E6AE  EFE6  F073         	goto	l9993
  6338   00E6B2                     u10310:
  6339   00E6B2  EF87  F073         	goto	l9977
  6340   00E6B6                     l9971:
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  6344   00E6B6  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  6345   00E6B8  6ED9               	movwf	fsr2l,c
  6346   00E6BA  6ADA               	clrf	fsr2h,c
  6347   00E6BC  50DF               	movf	indf2,w,c
  6348   00E6BE  2ADF               	incf	indf2,f,c
  6349   00E6C0  2ADF               	incf	indf2,f,c
  6350   00E6C2  6ED9               	movwf	fsr2l,c
  6351   00E6C4  6ADA               	clrf	fsr2h,c
  6352   00E6C6  006F FF78  F044    	movff	postinc2,??_vfpfcnvrt
  6353   00E6CC  006F FF74  F045    	movff	postdec2,??_vfpfcnvrt+1
  6354   00E6D2  C044  F046         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
  6355   00E6D6  C045  F047         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
  6356   00E6DA  6A48               	clrf	(vfpfcnvrt@convarg+2)^0,c
  6357   00E6DC  6A49               	clrf	(vfpfcnvrt@convarg+3)^0,c
  6358                           
  6359                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1457:      break;
  6360   00E6DE  EF9C  F073         	goto	l9979
  6361   00E6E2                     l9973:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  6365   00E6E2  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  6366   00E6E4  6ED9               	movwf	fsr2l,c
  6367   00E6E6  6ADA               	clrf	fsr2h,c
  6368   00E6E8  0E04               	movlw	4
  6369   00E6EA  26DF               	addwf	indf2,f,c
  6370   00E6EC  5CDF               	subwf	indf2,w,c
  6371   00E6EE  6ED9               	movwf	fsr2l,c
  6372   00E6F0  6ADA               	clrf	fsr2h,c
  6373   00E6F2  006F FF78  F046    	movff	postinc2,vfpfcnvrt@convarg
  6374   00E6F8  006F FF78  F047    	movff	postinc2,vfpfcnvrt@convarg+1
  6375   00E6FE  006F FF78  F048    	movff	postinc2,vfpfcnvrt@convarg+2
  6376   00E704  006F FF78  F049    	movff	postinc2,vfpfcnvrt@convarg+3
  6377                           
  6378                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1471:      break;
  6379   00E70A  EF9C  F073         	goto	l9979
  6380   00E70E                     l9977:
  6381                           
  6382                           ; BSR set to: 0
  6383   00E70E  504A               	movf	vfpfcnvrt@c^0,w,c
  6384   00E710  6E44               	movwf	??_vfpfcnvrt^0,c
  6385   00E712  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  6386                           
  6387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6388                           ; Switch size 1, requested type "simple"
  6389                           ; Number of cases is 1, Range of values is 0 to 0
  6390                           ; switch strategies available:
  6391                           ; Name         Instructions Cycles
  6392                           ; simple_byte            4     3 (average)
  6393                           ;	Chosen strategy is simple_byte
  6394   00E714  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  6395   00E716  0A00               	xorlw	0	; case 0
  6396   00E718  B4D8               	btfsc	status,2,c
  6397   00E71A  EF91  F073         	goto	l11167
  6398   00E71E  EF9C  F073         	goto	l9979
  6399   00E722                     l11167:
  6400                           
  6401                           ; BSR set to: 0
  6402                           ; Switch size 1, requested type "simple"
  6403                           ; Number of cases is 2, Range of values is 105 to 108
  6404                           ; switch strategies available:
  6405                           ; Name         Instructions Cycles
  6406                           ; simple_byte            7     4 (average)
  6407                           ;	Chosen strategy is simple_byte
  6408   00E722  5044               	movf	??_vfpfcnvrt^0,w,c
  6409   00E724  0A69               	xorlw	105	; case 105
  6410   00E726  B4D8               	btfsc	status,2,c
  6411   00E728  EF5B  F073         	goto	l9971
  6412   00E72C  0A05               	xorlw	5	; case 108
  6413   00E72E  B4D8               	btfsc	status,2,c
  6414   00E730  EF71  F073         	goto	l9973
  6415   00E734  EF9C  F073         	goto	l9979
  6416   00E738                     l9979:
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  6420   00E738  0E01               	movlw	1
  6421   00E73A  244B               	addwf	vfpfcnvrt@cp^0,w,c
  6422   00E73C  6E44               	movwf	??_vfpfcnvrt^0,c
  6423   00E73E  0E00               	movlw	0
  6424   00E740  204C               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  6425   00E742  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  6426   00E744  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6427   00E746  6ED9               	movwf	fsr2l,c
  6428   00E748  6ADA               	clrf	fsr2h,c
  6429   00E74A  0060  F113  FFDE   	movff	??_vfpfcnvrt,postinc2
  6430   00E750  0060  F117  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  6431                           
  6432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  6433   00E756  EFC9  F073         	goto	l9991
  6434   00E75A                     l9981:
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  6438   00E75A  C08C  F019         	movff	vfpfcnvrt@fp,utoa@fp
  6439   00E75E  C046  F01A         	movff	vfpfcnvrt@convarg,utoa@d
  6440   00E762  C047  F01B         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  6441   00E766  C048  F01C         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  6442   00E76A  C049  F01D         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  6443   00E76E  EC6C  F061         	call	_utoa	;wreg free
  6444   00E772  EFDB  F074         	goto	l1794
  6445   00E776                     l9985:
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  6449   00E776  C08C  F019         	movff	vfpfcnvrt@fp,xtoa@fp
  6450   00E77A  C046  F01A         	movff	vfpfcnvrt@convarg,xtoa@d
  6451   00E77E  C047  F01B         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  6452   00E782  C048  F01C         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  6453   00E786  C049  F01D         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  6454   00E78A  EC8A  F062         	call	_xtoa	;wreg free
  6455   00E78E  EFDB  F074         	goto	l1794
  6456   00E792                     l9991:
  6457                           
  6458                           ; BSR set to: 0
  6459   00E792  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6460   00E798  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6461   00E79E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6462   00E79E  6AF8               	clrf	tblptru,c
  6463   00E7A0                     	endif
  6464   00E7A0                     	if	0	;tblptru may be non-zero
  6465   00E7A0                     	endif
  6466   00E7A0  0008               	tblrd		*
  6467   00E7A2  50F5               	movf	tablat,w,c
  6468   00E7A4  6E44               	movwf	??_vfpfcnvrt^0,c
  6469   00E7A6  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  6470                           
  6471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6472                           ; Switch size 1, requested type "simple"
  6473                           ; Number of cases is 1, Range of values is 0 to 0
  6474                           ; switch strategies available:
  6475                           ; Name         Instructions Cycles
  6476                           ; simple_byte            4     3 (average)
  6477                           ;	Chosen strategy is simple_byte
  6478   00E7A8  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  6479   00E7AA  0A00               	xorlw	0	; case 0
  6480   00E7AC  B4D8               	btfsc	status,2,c
  6481   00E7AE  EFDB  F073         	goto	l11169
  6482   00E7B2  EFE6  F073         	goto	l9993
  6483   00E7B6                     l11169:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ; Switch size 1, requested type "simple"
  6487                           ; Number of cases is 2, Range of values is 88 to 117
  6488                           ; switch strategies available:
  6489                           ; Name         Instructions Cycles
  6490                           ; simple_byte            7     4 (average)
  6491                           ;	Chosen strategy is simple_byte
  6492   00E7B6  5044               	movf	??_vfpfcnvrt^0,w,c
  6493   00E7B8  0A58               	xorlw	88	; case 88
  6494   00E7BA  B4D8               	btfsc	status,2,c
  6495   00E7BC  EFBB  F073         	goto	l9985
  6496   00E7C0  0A2D               	xorlw	45	; case 117
  6497   00E7C2  B4D8               	btfsc	status,2,c
  6498   00E7C4  EFAD  F073         	goto	l9981
  6499   00E7C8  EFE6  F073         	goto	l9993
  6500   00E7CC                     l9993:
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  6504   00E7CC  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6505   00E7CE  6ED9               	movwf	fsr2l,c
  6506   00E7D0  6ADA               	clrf	fsr2h,c
  6507   00E7D2  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@cp
  6508   00E7D8  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@cp+1
  6509   00E7DE                     
  6510                           ; BSR set to: 0
  6511                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  6512   00E7DE  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6513   00E7E4  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6514   00E7EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6515   00E7EA  6AF8               	clrf	tblptru,c
  6516   00E7EC                     	endif
  6517   00E7EC                     	if	0	;tblptru may be non-zero
  6518   00E7EC                     	endif
  6519   00E7EC  0008               	tblrd		*
  6520   00E7EE  006F FFD4  F04A    	movff	tablat,vfpfcnvrt@c
  6521                           
  6522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  6523   00E7F4  EF08  F074         	goto	l10005
  6524   00E7F8                     l9997:
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  6528   00E7F8  4A4B               	infsnz	vfpfcnvrt@cp^0,f,c
  6529   00E7FA  2A4C               	incf	(vfpfcnvrt@cp+1)^0,f,c
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  6532   00E7FC  EF21  F074         	goto	l10007
  6533   00E800                     l9999:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  6537   00E800  0E6C               	movlw	108
  6538   00E802  6E4A               	movwf	vfpfcnvrt@c^0,c
  6539                           
  6540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  6541   00E804  EF21  F074         	goto	l10007
  6542   00E808                     l10001:
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  6546   00E808  0E00               	movlw	0
  6547   00E80A  6E4A               	movwf	vfpfcnvrt@c^0,c
  6548                           
  6549                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  6550   00E80C  EF21  F074         	goto	l10007
  6551   00E810                     l10005:
  6552                           
  6553                           ; BSR set to: 0
  6554   00E810  504A               	movf	vfpfcnvrt@c^0,w,c
  6555   00E812  6E44               	movwf	??_vfpfcnvrt^0,c
  6556   00E814  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  6557                           
  6558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6559                           ; Switch size 1, requested type "simple"
  6560                           ; Number of cases is 1, Range of values is 0 to 0
  6561                           ; switch strategies available:
  6562                           ; Name         Instructions Cycles
  6563                           ; simple_byte            4     3 (average)
  6564                           ;	Chosen strategy is simple_byte
  6565   00E816  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  6566   00E818  0A00               	xorlw	0	; case 0
  6567   00E81A  B4D8               	btfsc	status,2,c
  6568   00E81C  EF12  F074         	goto	l11171
  6569   00E820  EF04  F074         	goto	l10001
  6570   00E824                     l11171:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ; Switch size 1, requested type "simple"
  6574                           ; Number of cases is 3, Range of values is 76 to 108
  6575                           ; switch strategies available:
  6576                           ; Name         Instructions Cycles
  6577                           ; simple_byte           10     6 (average)
  6578                           ;	Chosen strategy is simple_byte
  6579   00E824  5044               	movf	??_vfpfcnvrt^0,w,c
  6580   00E826  0A4C               	xorlw	76	; case 76
  6581   00E828  B4D8               	btfsc	status,2,c
  6582   00E82A  EFFC  F073         	goto	l9997
  6583   00E82E  0A2A               	xorlw	42	; case 102
  6584   00E830  B4D8               	btfsc	status,2,c
  6585   00E832  EF00  F074         	goto	l9999
  6586   00E836  0A0A               	xorlw	10	; case 108
  6587   00E838  B4D8               	btfsc	status,2,c
  6588   00E83A  EFFC  F073         	goto	l9997
  6589   00E83E  EF04  F074         	goto	l10001
  6590   00E842                     l10007:
  6591                           
  6592                           ; BSR set to: 0
  6593   00E842  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6594   00E848  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6595   00E84E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6596   00E84E  6AF8               	clrf	tblptru,c
  6597   00E850                     	endif
  6598   00E850                     	if	0	;tblptru may be non-zero
  6599   00E850                     	endif
  6600   00E850  0008               	tblrd		*
  6601   00E852  50F5               	movf	tablat,w,c
  6602   00E854  0A66               	xorlw	102
  6603   00E856  A4D8               	btfss	status,2,c
  6604   00E858  EF30  F074         	goto	u10321
  6605   00E85C  EF32  F074         	goto	u10320
  6606   00E860                     u10321:
  6607   00E860  EFBE  F074         	goto	l10027
  6608   00E864                     u10320:
  6609   00E864  EF66  F074         	goto	l10015
  6610   00E868                     l10009:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6614   00E868  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  6615   00E86A  6ED9               	movwf	fsr2l,c
  6616   00E86C  6ADA               	clrf	fsr2h,c
  6617   00E86E  006F FF7C  F044    	movff	indf2,??_vfpfcnvrt
  6618   00E874  0E04               	movlw	4
  6619   00E876  26DF               	addwf	indf2,f,c
  6620   00E878  5044               	movf	??_vfpfcnvrt^0,w,c
  6621   00E87A  6ED9               	movwf	fsr2l,c
  6622   00E87C  6ADA               	clrf	fsr2h,c
  6623   00E87E  006F FF78  F046    	movff	postinc2,vfpfcnvrt@convarg
  6624   00E884  006F FF78  F047    	movff	postinc2,vfpfcnvrt@convarg+1
  6625   00E88A  006F FF78  F048    	movff	postinc2,vfpfcnvrt@convarg+2
  6626   00E890  006F FF78  F049    	movff	postinc2,vfpfcnvrt@convarg+3
  6627                           
  6628                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  6629   00E896  EF7B  F074         	goto	l10017
  6630   00E89A                     l10011:
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6634   00E89A  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  6635   00E89C  6ED9               	movwf	fsr2l,c
  6636   00E89E  6ADA               	clrf	fsr2h,c
  6637   00E8A0  006F FF7C  F044    	movff	indf2,??_vfpfcnvrt
  6638   00E8A6  0E04               	movlw	4
  6639   00E8A8  26DF               	addwf	indf2,f,c
  6640   00E8AA  5044               	movf	??_vfpfcnvrt^0,w,c
  6641   00E8AC  6ED9               	movwf	fsr2l,c
  6642   00E8AE  6ADA               	clrf	fsr2h,c
  6643   00E8B0  006F FF78  F046    	movff	postinc2,vfpfcnvrt@convarg
  6644   00E8B6  006F FF78  F047    	movff	postinc2,vfpfcnvrt@convarg+1
  6645   00E8BC  006F FF78  F048    	movff	postinc2,vfpfcnvrt@convarg+2
  6646   00E8C2  006F FF78  F049    	movff	postinc2,vfpfcnvrt@convarg+3
  6647                           
  6648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  6649   00E8C8  EF7B  F074         	goto	l10017
  6650   00E8CC                     l10015:
  6651                           
  6652                           ; BSR set to: 0
  6653   00E8CC  504A               	movf	vfpfcnvrt@c^0,w,c
  6654   00E8CE  6E44               	movwf	??_vfpfcnvrt^0,c
  6655   00E8D0  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  6656                           
  6657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6658                           ; Switch size 1, requested type "simple"
  6659                           ; Number of cases is 1, Range of values is 0 to 0
  6660                           ; switch strategies available:
  6661                           ; Name         Instructions Cycles
  6662                           ; simple_byte            4     3 (average)
  6663                           ;	Chosen strategy is simple_byte
  6664   00E8D2  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  6665   00E8D4  0A00               	xorlw	0	; case 0
  6666   00E8D6  B4D8               	btfsc	status,2,c
  6667   00E8D8  EF70  F074         	goto	l11173
  6668   00E8DC  EF7B  F074         	goto	l10017
  6669   00E8E0                     l11173:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ; Switch size 1, requested type "simple"
  6673                           ; Number of cases is 2, Range of values is 76 to 108
  6674                           ; switch strategies available:
  6675                           ; Name         Instructions Cycles
  6676                           ; simple_byte            7     4 (average)
  6677                           ;	Chosen strategy is simple_byte
  6678   00E8E0  5044               	movf	??_vfpfcnvrt^0,w,c
  6679   00E8E2  0A4C               	xorlw	76	; case 76
  6680   00E8E4  B4D8               	btfsc	status,2,c
  6681   00E8E6  EF4D  F074         	goto	l10011
  6682   00E8EA  0A20               	xorlw	32	; case 108
  6683   00E8EC  B4D8               	btfsc	status,2,c
  6684   00E8EE  EF34  F074         	goto	l10009
  6685   00E8F2  EF7B  F074         	goto	l10017
  6686   00E8F6                     l10017:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  6690   00E8F6  0E01               	movlw	1
  6691   00E8F8  244B               	addwf	vfpfcnvrt@cp^0,w,c
  6692   00E8FA  6E44               	movwf	??_vfpfcnvrt^0,c
  6693   00E8FC  0E00               	movlw	0
  6694   00E8FE  204C               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  6695   00E900  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  6696   00E902  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6697   00E904  6ED9               	movwf	fsr2l,c
  6698   00E906  6ADA               	clrf	fsr2h,c
  6699   00E908  0060  F113  FFDE   	movff	??_vfpfcnvrt,postinc2
  6700   00E90E  0060  F117  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  6701                           
  6702                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  6703   00E914  EFA5  F074         	goto	l10025
  6704   00E918                     l10019:
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  6708   00E918  C08C  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  6709   00E91C  C046  F03D         	movff	vfpfcnvrt@convarg,efgtoa@f
  6710   00E920  C047  F03E         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  6711   00E924  C048  F03F         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  6712   00E928  C049  F040         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  6713   00E92C  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6714   00E932  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6715   00E938                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6716   00E938  6AF8               	clrf	tblptru,c
  6717   00E93A                     	endif
  6718   00E93A                     	if	0	;tblptru may be non-zero
  6719   00E93A                     	endif
  6720   00E93A  0008               	tblrd		*
  6721   00E93C  006F FFD4  F041    	movff	tablat,efgtoa@c
  6722   00E942  EC02  F07A         	call	_efgtoa	;wreg free
  6723   00E946  EFDB  F074         	goto	l1794
  6724   00E94A                     l10025:
  6725                           
  6726                           ; BSR set to: 0
  6727   00E94A  0060  F12F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6728   00E950  0060  F133  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6729   00E956                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6730   00E956  6AF8               	clrf	tblptru,c
  6731   00E958                     	endif
  6732   00E958                     	if	0	;tblptru may be non-zero
  6733   00E958                     	endif
  6734   00E958  0008               	tblrd		*
  6735   00E95A  50F5               	movf	tablat,w,c
  6736   00E95C  6E44               	movwf	??_vfpfcnvrt^0,c
  6737   00E95E  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  6738                           
  6739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6740                           ; Switch size 1, requested type "simple"
  6741                           ; Number of cases is 1, Range of values is 0 to 0
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte            4     3 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746   00E960  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  6747   00E962  0A00               	xorlw	0	; case 0
  6748   00E964  B4D8               	btfsc	status,2,c
  6749   00E966  EFB7  F074         	goto	l11175
  6750   00E96A  EFBE  F074         	goto	l10027
  6751   00E96E                     l11175:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ; Switch size 1, requested type "simple"
  6755                           ; Number of cases is 1, Range of values is 102 to 102
  6756                           ; switch strategies available:
  6757                           ; Name         Instructions Cycles
  6758                           ; simple_byte            4     3 (average)
  6759                           ;	Chosen strategy is simple_byte
  6760   00E96E  5044               	movf	??_vfpfcnvrt^0,w,c
  6761   00E970  0A66               	xorlw	102	; case 102
  6762   00E972  B4D8               	btfsc	status,2,c
  6763   00E974  EF8C  F074         	goto	l10019
  6764   00E978  EFBE  F074         	goto	l10027
  6765   00E97C                     l10027:
  6766                           
  6767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6768   00E97C  0100               	movlb	0	; () banked
  6769   00E97E  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6770   00E980  6ED9               	movwf	fsr2l,c
  6771   00E982  6ADA               	clrf	fsr2h,c
  6772   00E984  2ADE               	incf	postinc2,f,c
  6773   00E986  0E00               	movlw	0
  6774   00E988  22DD               	addwfc	postdec2,f,c
  6775   00E98A  EFDB  F074         	goto	l1794
  6776   00E98E                     l10031:
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6780   00E98E  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6781   00E990  6ED9               	movwf	fsr2l,c
  6782   00E992  6ADA               	clrf	fsr2h,c
  6783   00E994  006F FF7B FFF6     	movff	postinc2,tblptrl
  6784   00E99A  006F FF77 FFF7     	movff	postdec2,tblptrh
  6785   00E9A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6786   00E9A0  6AF8               	clrf	tblptru,c
  6787   00E9A2                     	endif
  6788   00E9A2                     	if	0	;tblptru may be non-zero
  6789   00E9A2                     	endif
  6790   00E9A2  0008               	tblrd		*
  6791   00E9A4  50F5               	movf	tablat,w,c
  6792   00E9A6  6E03               	movwf	fputc@c^0,c
  6793   00E9A8  6A04               	clrf	(fputc@c+1)^0,c
  6794   00E9AA  C08C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  6795   00E9AE  EC9A  F05E         	call	_fputc	;wreg free
  6796   00E9B2  EFBE  F074         	goto	l10027
  6797   00E9B6                     l1794:
  6798   00E9B6  0012               	return		;funcret
  6799   00E9B8                     __end_of_vfpfcnvrt:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function _xtoa *****************
  6803 ;; Defined at:
  6804 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  6807 ;;		 -> sprintf@f(12), 
  6808 ;;  d               4   25[COMRAM] unsigned long 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  i               2   38[COMRAM] int 
  6811 ;;  p               2   35[COMRAM] int 
  6812 ;;  w               2   33[COMRAM] int 
  6813 ;;  c               1   37[COMRAM] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1    wreg      void 
  6816 ;; Registers used:
  6817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6823 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;Total ram usage:       16 bytes
  6828 ;; Hardware stack levels used: 1
  6829 ;; Hardware stack levels required when called: 5
  6830 ;; This function calls:
  6831 ;;		_pad
  6832 ;; This function is called by:
  6833 ;;		_vfpfcnvrt
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text30
  6838   00C514                     __ptext30:
  6839                           	callstack 0
  6840   00C514                     _xtoa:
  6841                           	callstack 22
  6842   00C514                     
  6843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c
      +                          : 1065:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 10
      +                          80:     p = (0 <= prec) ? prec : 1;
  6844   00C514  0100               	movlb	0	; () banked
  6845   00C516  BFC4               	btfsc	(_prec+1)& (0+255),7,b
  6846   00C518  EF92  F062         	goto	u9720
  6847   00C51C  EF90  F062         	goto	u9721
  6848   00C520                     u9721:
  6849   00C520  EF98  F062         	goto	l1756
  6850   00C524                     u9720:
  6851   00C524                     
  6852                           ; BSR set to: 0
  6853   00C524  0E00               	movlw	0
  6854   00C526  6E25               	movwf	(xtoa@p+1)^0,c
  6855   00C528  0E01               	movlw	1
  6856   00C52A  6E24               	movwf	xtoa@p^0,c
  6857   00C52C  EF9C  F062         	goto	l1758
  6858   00C530                     l1756:
  6859                           
  6860                           ; BSR set to: 0
  6861   00C530  C0C3  F024         	movff	_prec,xtoa@p
  6862   00C534  C0C4  F025         	movff	_prec+1,xtoa@p+1
  6863   00C538                     l1758:
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  6867   00C538  C0C1  F022         	movff	_width,xtoa@w
  6868   00C53C  C0C2  F023         	movff	_width+1,xtoa@w+1
  6869   00C540                     
  6870                           ; BSR set to: 0
  6871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  6872   00C540  0E00               	movlw	0
  6873   00C542  6E28               	movwf	(xtoa@i+1)^0,c
  6874   00C544  0E4F               	movlw	79
  6875   00C546  6E27               	movwf	xtoa@i^0,c
  6876   00C548                     
  6877                           ; BSR set to: 0
  6878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  6879   00C548  0E00               	movlw	0
  6880   00C54A  0103               	movlb	3	; () banked
  6881   00C54C  6F73               	movwf	(_dbuf+79)& (0+255),b
  6882                           
  6883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  6884   00C54E  EFE7  F062         	goto	l9735
  6885   00C552                     l9717:
  6886                           
  6887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1107:         --i;
  6888   00C552  0627               	decf	xtoa@i^0,f,c
  6889   00C554  A0D8               	btfss	status,0,c
  6890   00C556  0628               	decf	(xtoa@i+1)^0,f,c
  6891   00C558                     
  6892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  6893   00C558  501A               	movf	xtoa@d^0,w,c
  6894   00C55A  0B0F               	andlw	15
  6895   00C55C  6E26               	movwf	xtoa@c^0,c
  6896   00C55E                     
  6897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  6898   00C55E  0E0A               	movlw	10
  6899   00C560  6026               	cpfslt	xtoa@c^0,c
  6900   00C562  EFB5  F062         	goto	u9731
  6901   00C566  EFB7  F062         	goto	u9730
  6902   00C56A                     u9731:
  6903   00C56A  EFBB  F062         	goto	l9725
  6904   00C56E                     u9730:
  6905   00C56E                     
  6906                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  6907   00C56E  0E30               	movlw	48
  6908   00C570  2626               	addwf	xtoa@c^0,f,c
  6909                           
  6910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1111:   }
  6911   00C572  EFBD  F062         	goto	l9727
  6912   00C576                     l9725:
  6913                           
  6914                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1118:    c += 'A'
      +                           - 10;
  6915   00C576  0E37               	movlw	55
  6916   00C578  2626               	addwf	xtoa@c^0,f,c
  6917   00C57A                     l9727:
  6918                           
  6919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  6920   00C57A  0E24               	movlw	low _dbuf
  6921   00C57C  2427               	addwf	xtoa@i^0,w,c
  6922   00C57E  6ED9               	movwf	fsr2l,c
  6923   00C580  0E03               	movlw	high _dbuf
  6924   00C582  2028               	addwfc	(xtoa@i+1)^0,w,c
  6925   00C584  6EDA               	movwf	fsr2h,c
  6926   00C586  0060  F09B  FFDF   	movff	xtoa@c,indf2
  6927   00C58C                     
  6928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
  6929   00C58C  0624               	decf	xtoa@p^0,f,c
  6930   00C58E  A0D8               	btfss	status,0,c
  6931   00C590  0625               	decf	(xtoa@p+1)^0,f,c
  6932   00C592                     
  6933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  6934   00C592  0622               	decf	xtoa@w^0,f,c
  6935   00C594  A0D8               	btfss	status,0,c
  6936   00C596  0623               	decf	(xtoa@w+1)^0,f,c
  6937   00C598                     
  6938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  6939   00C598  C01A  F01E         	movff	xtoa@d,??_xtoa
  6940   00C59C  C01B  F01F         	movff	xtoa@d+1,??_xtoa+1
  6941   00C5A0  C01C  F020         	movff	xtoa@d+2,??_xtoa+2
  6942   00C5A4  C01D  F021         	movff	xtoa@d+3,??_xtoa+3
  6943   00C5A8  0E05               	movlw	5
  6944   00C5AA  EFDC  F062         	goto	u9740
  6945   00C5AE                     u9745:
  6946   00C5AE  90D8               	bcf	status,0,c
  6947   00C5B0  3221               	rrcf	(??_xtoa+3)^0,f,c
  6948   00C5B2  3220               	rrcf	(??_xtoa+2)^0,f,c
  6949   00C5B4  321F               	rrcf	(??_xtoa+1)^0,f,c
  6950   00C5B6  321E               	rrcf	??_xtoa^0,f,c
  6951   00C5B8                     u9740:
  6952   00C5B8  2EE8               	decfsz	wreg,f,c
  6953   00C5BA  EFD7  F062         	goto	u9745
  6954   00C5BE  C01E  F01A         	movff	??_xtoa,xtoa@d
  6955   00C5C2  C01F  F01B         	movff	??_xtoa+1,xtoa@d+1
  6956   00C5C6  C020  F01C         	movff	??_xtoa+2,xtoa@d+2
  6957   00C5CA  C021  F01D         	movff	??_xtoa+3,xtoa@d+3
  6958   00C5CE                     l9735:
  6959                           
  6960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  6961   00C5CE  BE28               	btfsc	(xtoa@i+1)^0,7,c
  6962   00C5D0  EFF3  F062         	goto	u9751
  6963   00C5D4  5028               	movf	(xtoa@i+1)^0,w,c
  6964   00C5D6  E109               	bnz	u9750
  6965   00C5D8  0E02               	movlw	2
  6966   00C5DA  5C27               	subwf	xtoa@i^0,w,c
  6967   00C5DC  A0D8               	btfss	status,0,c
  6968   00C5DE  EFF3  F062         	goto	u9751
  6969   00C5E2  EFF5  F062         	goto	u9750
  6970   00C5E6                     u9751:
  6971   00C5E6  EF0D  F063         	goto	l9741
  6972   00C5EA                     u9750:
  6973   00C5EA  501A               	movf	xtoa@d^0,w,c
  6974   00C5EC  101B               	iorwf	(xtoa@d+1)^0,w,c
  6975   00C5EE  101C               	iorwf	(xtoa@d+2)^0,w,c
  6976   00C5F0  101D               	iorwf	(xtoa@d+3)^0,w,c
  6977   00C5F2  A4D8               	btfss	status,2,c
  6978   00C5F4  EFFE  F062         	goto	u9761
  6979   00C5F8  EF00  F063         	goto	u9760
  6980   00C5FC                     u9761:
  6981   00C5FC  EFA9  F062         	goto	l9717
  6982   00C600                     u9760:
  6983   00C600  BE25               	btfsc	(xtoa@p+1)^0,7,c
  6984   00C602  EF0D  F063         	goto	u9770
  6985   00C606  5025               	movf	(xtoa@p+1)^0,w,c
  6986   00C608  E106               	bnz	u9771
  6987   00C60A  0424               	decf	xtoa@p^0,w,c
  6988   00C60C  B0D8               	btfsc	status,0,c
  6989   00C60E  EF0B  F063         	goto	u9771
  6990   00C612  EF0D  F063         	goto	u9770
  6991   00C616                     u9771:
  6992   00C616  EFA9  F062         	goto	l9717
  6993   00C61A                     u9770:
  6994   00C61A                     l9741:
  6995                           
  6996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  6997   00C61A  C019  F011         	movff	xtoa@fp,pad@fp
  6998   00C61E  0E24               	movlw	low _dbuf
  6999   00C620  2427               	addwf	xtoa@i^0,w,c
  7000   00C622  6E12               	movwf	pad@buf^0,c
  7001   00C624  0E03               	movlw	high _dbuf
  7002   00C626  2028               	addwfc	(xtoa@i+1)^0,w,c
  7003   00C628  6E13               	movwf	(pad@buf+1)^0,c
  7004   00C62A  C022  F014         	movff	xtoa@w,pad@p
  7005   00C62E  C023  F015         	movff	xtoa@w+1,pad@p+1
  7006   00C632  ECF0  F057         	call	_pad	;wreg free
  7007   00C636  0012               	return		;funcret
  7008   00C638                     __end_of_xtoa:
  7009                           	callstack 0
  7010                           
  7011 ;; *************** function _utoa *****************
  7012 ;; Defined at:
  7013 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  7016 ;;		 -> sprintf@f(12), 
  7017 ;;  d               4   25[COMRAM] unsigned long 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  i               2   33[COMRAM] int 
  7020 ;;  p               2   31[COMRAM] int 
  7021 ;;  w               2   29[COMRAM] int 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      void 
  7024 ;; Registers used:
  7025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7031 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;Total ram usage:       11 bytes
  7036 ;; Hardware stack levels used: 1
  7037 ;; Hardware stack levels required when called: 5
  7038 ;; This function calls:
  7039 ;;		___lldiv
  7040 ;;		___llmod
  7041 ;;		_pad
  7042 ;; This function is called by:
  7043 ;;		_vfpfcnvrt
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text31
  7048   00C2D8                     __ptext31:
  7049                           	callstack 0
  7050   00C2D8                     _utoa:
  7051                           	callstack 22
  7052   00C2D8                     
  7053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
  7054   00C2D8  0100               	movlb	0	; () banked
  7055   00C2DA  BFC4               	btfsc	(_prec+1)& (0+255),7,b
  7056   00C2DC  EF74  F061         	goto	u9680
  7057   00C2E0  EF72  F061         	goto	u9681
  7058   00C2E4                     u9681:
  7059   00C2E4  EF7A  F061         	goto	l1744
  7060   00C2E8                     u9680:
  7061   00C2E8                     
  7062                           ; BSR set to: 0
  7063   00C2E8  0E00               	movlw	0
  7064   00C2EA  6E21               	movwf	(utoa@p+1)^0,c
  7065   00C2EC  0E01               	movlw	1
  7066   00C2EE  6E20               	movwf	utoa@p^0,c
  7067   00C2F0  EF7E  F061         	goto	l1746
  7068   00C2F4                     l1744:
  7069                           
  7070                           ; BSR set to: 0
  7071   00C2F4  C0C3  F020         	movff	_prec,utoa@p
  7072   00C2F8  C0C4  F021         	movff	_prec+1,utoa@p+1
  7073   00C2FC                     l1746:
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  7077   00C2FC  C0C1  F01E         	movff	_width,utoa@w
  7078   00C300  C0C2  F01F         	movff	_width+1,utoa@w+1
  7079   00C304                     
  7080                           ; BSR set to: 0
  7081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  7082   00C304  0E00               	movlw	0
  7083   00C306  6E23               	movwf	(utoa@i+1)^0,c
  7084   00C308  0E4F               	movlw	79
  7085   00C30A  6E22               	movwf	utoa@i^0,c
  7086   00C30C                     
  7087                           ; BSR set to: 0
  7088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  7089   00C30C  0E00               	movlw	0
  7090   00C30E  0103               	movlb	3	; () banked
  7091   00C310  6F73               	movwf	(_dbuf+79)& (0+255),b
  7092                           
  7093                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  7094   00C312  EFC9  F061         	goto	l9699
  7095   00C316                     l9689:
  7096                           
  7097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1034:         --i;
  7098   00C316  0622               	decf	utoa@i^0,f,c
  7099   00C318  A0D8               	btfss	status,0,c
  7100   00C31A  0623               	decf	(utoa@i+1)^0,f,c
  7101   00C31C                     
  7102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  7103   00C31C  0E24               	movlw	low _dbuf
  7104   00C31E  2422               	addwf	utoa@i^0,w,c
  7105   00C320  6ED9               	movwf	fsr2l,c
  7106   00C322  0E03               	movlw	high _dbuf
  7107   00C324  2023               	addwfc	(utoa@i+1)^0,w,c
  7108   00C326  6EDA               	movwf	fsr2h,c
  7109   00C328  C01A  F001         	movff	utoa@d,___llmod@dividend
  7110   00C32C  C01B  F002         	movff	utoa@d+1,___llmod@dividend+1
  7111   00C330  C01C  F003         	movff	utoa@d+2,___llmod@dividend+2
  7112   00C334  C01D  F004         	movff	utoa@d+3,___llmod@dividend+3
  7113   00C338  0E0A               	movlw	10
  7114   00C33A  6E05               	movwf	___llmod@divisor^0,c
  7115   00C33C  0E00               	movlw	0
  7116   00C33E  6E06               	movwf	(___llmod@divisor+1)^0,c
  7117   00C340  0E00               	movlw	0
  7118   00C342  6E07               	movwf	(___llmod@divisor+2)^0,c
  7119   00C344  0E00               	movlw	0
  7120   00C346  6E08               	movwf	(___llmod@divisor+3)^0,c
  7121   00C348  ECC9  F05A         	call	___llmod	;wreg free
  7122   00C34C  5001               	movf	?___llmod^0,w,c
  7123   00C34E  0F30               	addlw	48
  7124   00C350  6EDF               	movwf	indf2,c
  7125   00C352                     
  7126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  7127   00C352  0620               	decf	utoa@p^0,f,c
  7128   00C354  A0D8               	btfss	status,0,c
  7129   00C356  0621               	decf	(utoa@p+1)^0,f,c
  7130   00C358                     
  7131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  7132   00C358  061E               	decf	utoa@w^0,f,c
  7133   00C35A  A0D8               	btfss	status,0,c
  7134   00C35C  061F               	decf	(utoa@w+1)^0,f,c
  7135   00C35E                     
  7136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  7137   00C35E  C01A  F001         	movff	utoa@d,___lldiv@dividend
  7138   00C362  C01B  F002         	movff	utoa@d+1,___lldiv@dividend+1
  7139   00C366  C01C  F003         	movff	utoa@d+2,___lldiv@dividend+2
  7140   00C36A  C01D  F004         	movff	utoa@d+3,___lldiv@dividend+3
  7141   00C36E  0E0A               	movlw	10
  7142   00C370  6E05               	movwf	___lldiv@divisor^0,c
  7143   00C372  0E00               	movlw	0
  7144   00C374  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7145   00C376  0E00               	movlw	0
  7146   00C378  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7147   00C37A  0E00               	movlw	0
  7148   00C37C  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7149   00C37E  EC95  F05C         	call	___lldiv	;wreg free
  7150   00C382  C001  F01A         	movff	?___lldiv,utoa@d
  7151   00C386  C002  F01B         	movff	?___lldiv+1,utoa@d+1
  7152   00C38A  C003  F01C         	movff	?___lldiv+2,utoa@d+2
  7153   00C38E  C004  F01D         	movff	?___lldiv+3,utoa@d+3
  7154   00C392                     l9699:
  7155                           
  7156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  7157   00C392  5022               	movf	utoa@i^0,w,c
  7158   00C394  1023               	iorwf	(utoa@i+1)^0,w,c
  7159   00C396  B4D8               	btfsc	status,2,c
  7160   00C398  EFD0  F061         	goto	u9691
  7161   00C39C  EFD2  F061         	goto	u9690
  7162   00C3A0                     u9691:
  7163   00C3A0  EFEA  F061         	goto	l9705
  7164   00C3A4                     u9690:
  7165   00C3A4  501A               	movf	utoa@d^0,w,c
  7166   00C3A6  101B               	iorwf	(utoa@d+1)^0,w,c
  7167   00C3A8  101C               	iorwf	(utoa@d+2)^0,w,c
  7168   00C3AA  101D               	iorwf	(utoa@d+3)^0,w,c
  7169   00C3AC  A4D8               	btfss	status,2,c
  7170   00C3AE  EFDB  F061         	goto	u9701
  7171   00C3B2  EFDD  F061         	goto	u9700
  7172   00C3B6                     u9701:
  7173   00C3B6  EF8B  F061         	goto	l9689
  7174   00C3BA                     u9700:
  7175   00C3BA  BE21               	btfsc	(utoa@p+1)^0,7,c
  7176   00C3BC  EFEA  F061         	goto	u9710
  7177   00C3C0  5021               	movf	(utoa@p+1)^0,w,c
  7178   00C3C2  E106               	bnz	u9711
  7179   00C3C4  0420               	decf	utoa@p^0,w,c
  7180   00C3C6  B0D8               	btfsc	status,0,c
  7181   00C3C8  EFE8  F061         	goto	u9711
  7182   00C3CC  EFEA  F061         	goto	u9710
  7183   00C3D0                     u9711:
  7184   00C3D0  EF8B  F061         	goto	l9689
  7185   00C3D4                     u9710:
  7186   00C3D4                     l9705:
  7187                           
  7188                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7189   00C3D4  C019  F011         	movff	utoa@fp,pad@fp
  7190   00C3D8  0E24               	movlw	low _dbuf
  7191   00C3DA  2422               	addwf	utoa@i^0,w,c
  7192   00C3DC  6E12               	movwf	pad@buf^0,c
  7193   00C3DE  0E03               	movlw	high _dbuf
  7194   00C3E0  2023               	addwfc	(utoa@i+1)^0,w,c
  7195   00C3E2  6E13               	movwf	(pad@buf+1)^0,c
  7196   00C3E4  C01E  F014         	movff	utoa@w,pad@p
  7197   00C3E8  C01F  F015         	movff	utoa@w+1,pad@p+1
  7198   00C3EC  ECF0  F057         	call	_pad	;wreg free
  7199   00C3F0  0012               	return		;funcret
  7200   00C3F2                     __end_of_utoa:
  7201                           	callstack 0
  7202                           
  7203 ;; *************** function ___llmod *****************
  7204 ;; Defined at:
  7205 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  dividend        4    0[COMRAM] unsigned long 
  7208 ;;  divisor         4    4[COMRAM] unsigned long 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  counter         1    8[COMRAM] unsigned char 
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  4    0[COMRAM] unsigned long 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7220 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;Total ram usage:        9 bytes
  7225 ;; Hardware stack levels used: 1
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_utoa
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text32
  7234   00B592                     __ptext32:
  7235                           	callstack 0
  7236   00B592                     ___llmod:
  7237                           	callstack 26
  7238   00B592  5005               	movf	___llmod@divisor^0,w,c
  7239   00B594  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  7240   00B596  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  7241   00B598  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  7242   00B59A  B4D8               	btfsc	status,2,c
  7243   00B59C  EFD2  F05A         	goto	u9021
  7244   00B5A0  EFD4  F05A         	goto	u9020
  7245   00B5A4                     u9021:
  7246   00B5A4  EF04  F05B         	goto	l1387
  7247   00B5A8                     u9020:
  7248   00B5A8  0E01               	movlw	1
  7249   00B5AA  6E09               	movwf	___llmod@counter^0,c
  7250   00B5AC  EFDE  F05A         	goto	l9259
  7251   00B5B0                     l9257:
  7252   00B5B0  90D8               	bcf	status,0,c
  7253   00B5B2  3605               	rlcf	___llmod@divisor^0,f,c
  7254   00B5B4  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  7255   00B5B6  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  7256   00B5B8  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  7257   00B5BA  2A09               	incf	___llmod@counter^0,f,c
  7258   00B5BC                     l9259:
  7259   00B5BC  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  7260   00B5BE  EFE3  F05A         	goto	u9031
  7261   00B5C2  EFE5  F05A         	goto	u9030
  7262   00B5C6                     u9031:
  7263   00B5C6  EFD8  F05A         	goto	l9257
  7264   00B5CA                     u9030:
  7265   00B5CA                     l9261:
  7266   00B5CA  5005               	movf	___llmod@divisor^0,w,c
  7267   00B5CC  5C01               	subwf	___llmod@dividend^0,w,c
  7268   00B5CE  5006               	movf	(___llmod@divisor+1)^0,w,c
  7269   00B5D0  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  7270   00B5D2  5007               	movf	(___llmod@divisor+2)^0,w,c
  7271   00B5D4  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  7272   00B5D6  5008               	movf	(___llmod@divisor+3)^0,w,c
  7273   00B5D8  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  7274   00B5DA  A0D8               	btfss	status,0,c
  7275   00B5DC  EFF2  F05A         	goto	u9041
  7276   00B5E0  EFF4  F05A         	goto	u9040
  7277   00B5E4                     u9041:
  7278   00B5E4  EFFC  F05A         	goto	l9265
  7279   00B5E8                     u9040:
  7280   00B5E8  5005               	movf	___llmod@divisor^0,w,c
  7281   00B5EA  5E01               	subwf	___llmod@dividend^0,f,c
  7282   00B5EC  5006               	movf	(___llmod@divisor+1)^0,w,c
  7283   00B5EE  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  7284   00B5F0  5007               	movf	(___llmod@divisor+2)^0,w,c
  7285   00B5F2  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  7286   00B5F4  5008               	movf	(___llmod@divisor+3)^0,w,c
  7287   00B5F6  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  7288   00B5F8                     l9265:
  7289   00B5F8  90D8               	bcf	status,0,c
  7290   00B5FA  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  7291   00B5FC  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  7292   00B5FE  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  7293   00B600  3205               	rrcf	___llmod@divisor^0,f,c
  7294   00B602  2E09               	decfsz	___llmod@counter^0,f,c
  7295   00B604  EFE5  F05A         	goto	l9261
  7296   00B608                     l1387:
  7297   00B608  C001  F001         	movff	___llmod@dividend,?___llmod
  7298   00B60C  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  7299   00B610  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  7300   00B614  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  7301   00B618  0012               	return		;funcret
  7302   00B61A                     __end_of___llmod:
  7303                           	callstack 0
  7304                           
  7305 ;; *************** function ___lldiv *****************
  7306 ;; Defined at:
  7307 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  dividend        4    0[COMRAM] unsigned long 
  7310 ;;  divisor         4    4[COMRAM] unsigned long 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  quotient        4    8[COMRAM] unsigned long 
  7313 ;;  counter         1   12[COMRAM] unsigned char 
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  4    0[COMRAM] unsigned long 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;Total ram usage:       13 bytes
  7328 ;; Hardware stack levels used: 1
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_utoa
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text33
  7337   00B92A                     __ptext33:
  7338                           	callstack 0
  7339   00B92A                     ___lldiv:
  7340                           	callstack 26
  7341   00B92A  0E00               	movlw	0
  7342   00B92C  6E09               	movwf	___lldiv@quotient^0,c
  7343   00B92E  0E00               	movlw	0
  7344   00B930  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7345   00B932  0E00               	movlw	0
  7346   00B934  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7347   00B936  0E00               	movlw	0
  7348   00B938  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7349   00B93A  5005               	movf	___lldiv@divisor^0,w,c
  7350   00B93C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7351   00B93E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7352   00B940  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7353   00B942  B4D8               	btfsc	status,2,c
  7354   00B944  EFA6  F05C         	goto	u8411
  7355   00B948  EFA8  F05C         	goto	u8410
  7356   00B94C                     u8411:
  7357   00B94C  EFDE  F05C         	goto	l994
  7358   00B950                     u8410:
  7359   00B950  0E01               	movlw	1
  7360   00B952  6E0D               	movwf	___lldiv@counter^0,c
  7361   00B954  EFB2  F05C         	goto	l8875
  7362   00B958                     l8873:
  7363   00B958  90D8               	bcf	status,0,c
  7364   00B95A  3605               	rlcf	___lldiv@divisor^0,f,c
  7365   00B95C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7366   00B95E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7367   00B960  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7368   00B962  2A0D               	incf	___lldiv@counter^0,f,c
  7369   00B964                     l8875:
  7370   00B964  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7371   00B966  EFB7  F05C         	goto	u8421
  7372   00B96A  EFB9  F05C         	goto	u8420
  7373   00B96E                     u8421:
  7374   00B96E  EFAC  F05C         	goto	l8873
  7375   00B972                     u8420:
  7376   00B972                     l8877:
  7377   00B972  90D8               	bcf	status,0,c
  7378   00B974  3609               	rlcf	___lldiv@quotient^0,f,c
  7379   00B976  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7380   00B978  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  7381   00B97A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  7382   00B97C  5005               	movf	___lldiv@divisor^0,w,c
  7383   00B97E  5C01               	subwf	___lldiv@dividend^0,w,c
  7384   00B980  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7385   00B982  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  7386   00B984  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7387   00B986  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  7388   00B988  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7389   00B98A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7390   00B98C  A0D8               	btfss	status,0,c
  7391   00B98E  EFCB  F05C         	goto	u8431
  7392   00B992  EFCD  F05C         	goto	u8430
  7393   00B996                     u8431:
  7394   00B996  EFD6  F05C         	goto	l8885
  7395   00B99A                     u8430:
  7396   00B99A  5005               	movf	___lldiv@divisor^0,w,c
  7397   00B99C  5E01               	subwf	___lldiv@dividend^0,f,c
  7398   00B99E  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7399   00B9A0  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7400   00B9A2  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7401   00B9A4  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7402   00B9A6  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7403   00B9A8  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7404   00B9AA  8009               	bsf	___lldiv@quotient^0,0,c
  7405   00B9AC                     l8885:
  7406   00B9AC  90D8               	bcf	status,0,c
  7407   00B9AE  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7408   00B9B0  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7409   00B9B2  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7410   00B9B4  3205               	rrcf	___lldiv@divisor^0,f,c
  7411   00B9B6  2E0D               	decfsz	___lldiv@counter^0,f,c
  7412   00B9B8  EFB9  F05C         	goto	l8877
  7413   00B9BC                     l994:
  7414   00B9BC  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7415   00B9C0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7416   00B9C4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7417   00B9C8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7418   00B9CC  0012               	return		;funcret
  7419   00B9CE                     __end_of___lldiv:
  7420                           	callstack 0
  7421                           
  7422 ;; *************** function _read_prec_or_width *****************
  7423 ;; Defined at:
  7424 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  7427 ;;		 -> vfprintf@cfmt(2), 
  7428 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  7429 ;;		 -> sprintf@ap(1), 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;  c               1    8[COMRAM] unsigned char 
  7432 ;;  n               2    9[COMRAM] int 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  2    6[COMRAM] int 
  7435 ;; Registers used:
  7436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;Total ram usage:        5 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 1
  7449 ;; This function calls:
  7450 ;;		___wmul
  7451 ;; This function is called by:
  7452 ;;		_vfpfcnvrt
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text34
  7457   00BC76                     __ptext34:
  7458                           	callstack 0
  7459   00BC76                     _read_prec_or_width:
  7460                           	callstack 26
  7461   00BC76                     
  7462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  7463   00BC76  0E00               	movlw	0
  7464   00BC78  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7465   00BC7A  0E00               	movlw	0
  7466   00BC7C  6E0A               	movwf	read_prec_or_width@n^0,c
  7467   00BC7E                     
  7468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  7469   00BC7E  5007               	movf	read_prec_or_width@fmt^0,w,c
  7470   00BC80  6ED9               	movwf	fsr2l,c
  7471   00BC82  6ADA               	clrf	fsr2h,c
  7472   00BC84  006F FF7B FFF6     	movff	postinc2,tblptrl
  7473   00BC8A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7474   00BC90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7475   00BC90  6AF8               	clrf	tblptru,c
  7476   00BC92                     	endif
  7477   00BC92                     	if	0	;tblptru may be non-zero
  7478   00BC92                     	endif
  7479   00BC92  0008               	tblrd		*
  7480   00BC94  50F5               	movf	tablat,w,c
  7481   00BC96  0A2A               	xorlw	42
  7482   00BC98  A4D8               	btfss	status,2,c
  7483   00BC9A  EF51  F05E         	goto	u9781
  7484   00BC9E  EF53  F05E         	goto	u9780
  7485   00BCA2                     u9781:
  7486   00BCA2  EF7F  F05E         	goto	l9757
  7487   00BCA6                     u9780:
  7488   00BCA6                     
  7489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  7490   00BCA6  5007               	movf	read_prec_or_width@fmt^0,w,c
  7491   00BCA8  6ED9               	movwf	fsr2l,c
  7492   00BCAA  6ADA               	clrf	fsr2h,c
  7493   00BCAC  2ADE               	incf	postinc2,f,c
  7494   00BCAE  0E00               	movlw	0
  7495   00BCB0  22DD               	addwfc	postdec2,f,c
  7496   00BCB2                     
  7497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7498   00BCB2  5008               	movf	read_prec_or_width@ap^0,w,c
  7499   00BCB4  6ED9               	movwf	fsr2l,c
  7500   00BCB6  6ADA               	clrf	fsr2h,c
  7501   00BCB8  0E02               	movlw	2
  7502   00BCBA  26DF               	addwf	indf2,f,c
  7503   00BCBC  5CDF               	subwf	indf2,w,c
  7504   00BCBE  6ED9               	movwf	fsr2l,c
  7505   00BCC0  6ADA               	clrf	fsr2h,c
  7506   00BCC2  006F FF78  F00A    	movff	postinc2,read_prec_or_width@n
  7507   00BCC8  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n+1
  7508                           
  7509                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  7510   00BCCE  EF95  F05E         	goto	l1770
  7511   00BCD2                     l9753:
  7512                           
  7513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  7514   00BCD2  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  7515   00BCD6  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7516   00BCDA  0E00               	movlw	0
  7517   00BCDC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7518   00BCDE  0E0A               	movlw	10
  7519   00BCE0  6E03               	movwf	___wmul@multiplicand^0,c
  7520   00BCE2  EC23  F054         	call	___wmul	;wreg free
  7521   00BCE6  5009               	movf	read_prec_or_width@c^0,w,c
  7522   00BCE8  2401               	addwf	?___wmul^0,w,c
  7523   00BCEA  6E0A               	movwf	read_prec_or_width@n^0,c
  7524   00BCEC  0E00               	movlw	0
  7525   00BCEE  2002               	addwfc	(?___wmul+1)^0,w,c
  7526   00BCF0  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7527   00BCF2                     
  7528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  7529   00BCF2  5007               	movf	read_prec_or_width@fmt^0,w,c
  7530   00BCF4  6ED9               	movwf	fsr2l,c
  7531   00BCF6  6ADA               	clrf	fsr2h,c
  7532   00BCF8  2ADE               	incf	postinc2,f,c
  7533   00BCFA  0E00               	movlw	0
  7534   00BCFC  22DD               	addwfc	postdec2,f,c
  7535   00BCFE                     l9757:
  7536                           
  7537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7538   00BCFE  5007               	movf	read_prec_or_width@fmt^0,w,c
  7539   00BD00  6ED9               	movwf	fsr2l,c
  7540   00BD02  6ADA               	clrf	fsr2h,c
  7541   00BD04  006F FF7B FFF6     	movff	postinc2,tblptrl
  7542   00BD0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7543   00BD10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7544   00BD10  6AF8               	clrf	tblptru,c
  7545   00BD12                     	endif
  7546   00BD12                     	if	0	;tblptru may be non-zero
  7547   00BD12                     	endif
  7548   00BD12  0008               	tblrd		*
  7549   00BD14  50F5               	movf	tablat,w,c
  7550   00BD16  0FD0               	addlw	208
  7551   00BD18  6E09               	movwf	read_prec_or_width@c^0,c
  7552   00BD1A  0E09               	movlw	9
  7553   00BD1C  6409               	cpfsgt	read_prec_or_width@c^0,c
  7554   00BD1E  EF93  F05E         	goto	u9791
  7555   00BD22  EF95  F05E         	goto	u9790
  7556   00BD26                     u9791:
  7557   00BD26  EF69  F05E         	goto	l9753
  7558   00BD2A                     u9790:
  7559   00BD2A                     l1770:
  7560                           
  7561                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  7562   00BD2A  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  7563   00BD2E  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7564   00BD32  0012               	return		;funcret
  7565   00BD34                     __end_of_read_prec_or_width:
  7566                           	callstack 0
  7567                           
  7568 ;; *************** function ___wmul *****************
  7569 ;; Defined at:
  7570 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  multiplier      2    0[COMRAM] unsigned int 
  7573 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  product         2    4[COMRAM] unsigned int 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  2    0[COMRAM] unsigned int 
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0, prodl, prodh
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;Total ram usage:        6 bytes
  7590 ;; Hardware stack levels used: 1
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_read_prec_or_width
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text35
  7599   00A846                     __ptext35:
  7600                           	callstack 0
  7601   00A846                     ___wmul:
  7602                           	callstack 26
  7603   00A846  5001               	movf	___wmul@multiplier^0,w,c
  7604   00A848  0203               	mulwf	___wmul@multiplicand^0,c
  7605   00A84A  006F FFCC  F005    	movff	prodl,___wmul@product
  7606   00A850  006F FFD0  F006    	movff	prodh,___wmul@product+1
  7607   00A856  5001               	movf	___wmul@multiplier^0,w,c
  7608   00A858  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7609   00A85A  50F3               	movf	243,w,c
  7610   00A85C  2606               	addwf	(___wmul@product+1)^0,f,c
  7611   00A85E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7612   00A860  0203               	mulwf	___wmul@multiplicand^0,c
  7613   00A862  50F3               	movf	243,w,c
  7614   00A864  2606               	addwf	(___wmul@product+1)^0,f,c
  7615   00A866  C005  F001         	movff	___wmul@product,?___wmul
  7616   00A86A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7617   00A86E  0012               	return		;funcret
  7618   00A870                     __end_of___wmul:
  7619                           	callstack 0
  7620                           
  7621 ;; *************** function _efgtoa *****************
  7622 ;; Defined at:
  7623 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  fp              1   59[COMRAM] PTR struct _IO_FILE
  7626 ;;		 -> sprintf@f(12), 
  7627 ;;  f               4   60[COMRAM] PTR struct _IO_FILE
  7628 ;;  c               1   64[COMRAM] unsigned char 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  u               4   40[BANK0 ] struct flui
  7631 ;;  g               4   34[BANK0 ] struct flui
  7632 ;;  l               4   29[BANK0 ] struct flui
  7633 ;;  h               4   25[BANK0 ] struct flui
  7634 ;;  ou              4   19[BANK0 ] struct flui
  7635 ;;  n               2   38[BANK0 ] int 
  7636 ;;  i               2   23[BANK0 ] int 
  7637 ;;  w               2   17[BANK0 ] int 
  7638 ;;  e               2   15[BANK0 ] int 
  7639 ;;  m               2   13[BANK0 ] int 
  7640 ;;  d               2   11[BANK0 ] int 
  7641 ;;  t               2    4[BANK0 ] int 
  7642 ;;  p               2    2[BANK0 ] int 
  7643 ;;  ne              2    0[BANK0 ] int 
  7644 ;;  sign            1   33[BANK0 ] unsigned char 
  7645 ;;  nmode           1   10[BANK0 ] unsigned char 
  7646 ;;  mode            1    9[BANK0 ] unsigned char 
  7647 ;;  pp              1    8[BANK0 ] unsigned char 
  7648 ;;  esign           1    0        unsigned char 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7658 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;Total ram usage:       52 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; Hardware stack levels required when called: 5
  7665 ;; This function calls:
  7666 ;;		___fladd
  7667 ;;		___fldiv
  7668 ;;		___fleq
  7669 ;;		___flge
  7670 ;;		___flmul
  7671 ;;		___flneg
  7672 ;;		___flsub
  7673 ;;		___fltol
  7674 ;;		___fpclassifyf
  7675 ;;		_floorf
  7676 ;;		_labs
  7677 ;;		_memcpy
  7678 ;;		_pad
  7679 ;;		_strcpy
  7680 ;; This function is called by:
  7681 ;;		_vfpfcnvrt
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text36
  7686   00F404                     __ptext36:
  7687                           	callstack 0
  7688   00F404                     _efgtoa:
  7689                           	callstack 22
  7690   00F404                     
  7691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  7692   00F404  0E00               	movlw	0
  7693   00F406  0100               	movlb	0	; () banked
  7694   00F408  6F81               	movwf	efgtoa@sign& (0+255),b
  7695   00F40A                     
  7696                           ; BSR set to: 0
  7697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  7698   00F40A  C03D  F082         	movff	efgtoa@f,efgtoa@g
  7699   00F40E  C03E  F083         	movff	efgtoa@f+1,efgtoa@g+1
  7700   00F412  C03F  F084         	movff	efgtoa@f+2,efgtoa@g+2
  7701   00F416  C040  F085         	movff	efgtoa@f+3,efgtoa@g+3
  7702   00F41A                     
  7703                           ; BSR set to: 0
  7704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  7705   00F41A  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7706   00F41C  EF14  F07A         	goto	u9360
  7707   00F420  EF12  F07A         	goto	u9361
  7708   00F424                     u9361:
  7709   00F424  EF28  F07A         	goto	l9469
  7710   00F428                     u9360:
  7711   00F428                     
  7712                           ; BSR set to: 0
  7713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  7714   00F428  0E01               	movlw	1
  7715   00F42A  6F81               	movwf	efgtoa@sign& (0+255),b
  7716   00F42C                     
  7717                           ; BSR set to: 0
  7718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  7719   00F42C  C082  F001         	movff	efgtoa@g,___flneg@f1
  7720   00F430  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7721   00F434  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7722   00F438  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7723   00F43C  EC1D  F055         	call	___flneg	;wreg free
  7724   00F440  C001  F082         	movff	?___flneg,efgtoa@g
  7725   00F444  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  7726   00F448  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  7727   00F44C  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  7728   00F450                     l9469:
  7729                           
  7730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  7731   00F450  0E00               	movlw	0
  7732   00F452  0100               	movlb	0	; () banked
  7733   00F454  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  7734   00F456  0E00               	movlw	0
  7735   00F458  6F86               	movwf	efgtoa@n& (0+255),b
  7736   00F45A                     
  7737                           ; BSR set to: 0
  7738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  7739   00F45A  C0C1  F071         	movff	_width,efgtoa@w
  7740   00F45E  C0C2  F072         	movff	_width+1,efgtoa@w+1
  7741   00F462                     
  7742                           ; BSR set to: 0
  7743                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  7744   00F462  5181               	movf	efgtoa@sign& (0+255),w,b
  7745   00F464  B4D8               	btfsc	status,2,c
  7746   00F466  EF37  F07A         	goto	u9371
  7747   00F46A  EF39  F07A         	goto	u9370
  7748   00F46E                     u9371:
  7749   00F46E  EF4D  F07A         	goto	l9483
  7750   00F472                     u9370:
  7751   00F472                     
  7752                           ; BSR set to: 0
  7753                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  7754   00F472  5181               	movf	efgtoa@sign& (0+255),w,b
  7755   00F474  A4D8               	btfss	status,2,c
  7756   00F476  EF3F  F07A         	goto	u9381
  7757   00F47A  EF41  F07A         	goto	u9380
  7758   00F47E                     u9381:
  7759   00F47E  EF47  F07A         	goto	l9479
  7760   00F482                     u9380:
  7761   00F482                     
  7762                           ; BSR set to: 0
  7763   00F482  0E00               	movlw	0
  7764   00F484  6F67               	movwf	(_efgtoa$2088+1)& (0+255),b
  7765   00F486  0E2B               	movlw	43
  7766   00F488  6F66               	movwf	_efgtoa$2088& (0+255),b
  7767   00F48A  EF4B  F07A         	goto	l9481
  7768   00F48E                     l9479:
  7769                           
  7770                           ; BSR set to: 0
  7771   00F48E  0E00               	movlw	0
  7772   00F490  6F67               	movwf	(_efgtoa$2088+1)& (0+255),b
  7773   00F492  0E2D               	movlw	45
  7774   00F494  6F66               	movwf	_efgtoa$2088& (0+255),b
  7775   00F496                     l9481:
  7776                           
  7777                           ; BSR set to: 0
  7778   00F496  C066  F081         	movff	_efgtoa$2088,efgtoa@sign
  7779   00F49A                     l9483:
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  7783   00F49A  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  7784   00F49E  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7785   00F4A2  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7786   00F4A6  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7787   00F4AA  EC60  F05F         	call	___fpclassifyf	;wreg free
  7788   00F4AE  0401               	decf	?___fpclassifyf^0,w,c
  7789   00F4B0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7790   00F4B2  A4D8               	btfss	status,2,c
  7791   00F4B4  EF5E  F07A         	goto	u9391
  7792   00F4B8  EF60  F07A         	goto	u9390
  7793   00F4BC                     u9391:
  7794   00F4BC  EF91  F07A         	goto	l9501
  7795   00F4C0                     u9390:
  7796   00F4C0                     
  7797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  7798   00F4C0  0100               	movlb	0	; () banked
  7799   00F4C2  5181               	movf	efgtoa@sign& (0+255),w,b
  7800   00F4C4  B4D8               	btfsc	status,2,c
  7801   00F4C6  EF67  F07A         	goto	u9401
  7802   00F4CA  EF69  F07A         	goto	u9400
  7803   00F4CE                     u9401:
  7804   00F4CE  EF72  F07A         	goto	l9493
  7805   00F4D2                     u9400:
  7806   00F4D2                     
  7807                           ; BSR set to: 0
  7808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  7809   00F4D2  C081  F324         	movff	efgtoa@sign,_dbuf
  7810   00F4D6                     
  7811                           ; BSR set to: 0
  7812                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  7813   00F4D6  0771               	decf	efgtoa@w& (0+255),f,b
  7814   00F4D8  A0D8               	btfss	status,0,c
  7815   00F4DA  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  7816   00F4DC                     
  7817                           ; BSR set to: 0
  7818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7819   00F4DC  0E00               	movlw	0
  7820   00F4DE  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  7821   00F4E0  0E01               	movlw	1
  7822   00F4E2  6F86               	movwf	efgtoa@n& (0+255),b
  7823   00F4E4                     l9493:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  7827   00F4E4  0E24               	movlw	low _dbuf
  7828   00F4E6  2586               	addwf	efgtoa@n& (0+255),w,b
  7829   00F4E8  6E01               	movwf	strcpy@dest^0,c
  7830   00F4EA  0E03               	movlw	high _dbuf
  7831   00F4EC  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7832   00F4EE  6E02               	movwf	(strcpy@dest+1)^0,c
  7833   00F4F0  0EEF               	movlw	low STR_19
  7834   00F4F2  6E03               	movwf	strcpy@src^0,c
  7835   00F4F4  0EFF               	movlw	high STR_19
  7836   00F4F6  6E04               	movwf	(strcpy@src+1)^0,c
  7837   00F4F8  EC17  F056         	call	_strcpy	;wreg free
  7838   00F4FC                     l9495:
  7839                           
  7840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  7841   00F4FC  0100               	movlb	0	; () banked
  7842   00F4FE  0EFD               	movlw	253
  7843   00F500  2771               	addwf	efgtoa@w& (0+255),f,b
  7844   00F502  0EFF               	movlw	255
  7845   00F504  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7846   00F506                     
  7847                           ; BSR set to: 0
  7848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  7849   00F506  C03C  F011         	movff	efgtoa@fp,pad@fp
  7850   00F50A  0E24               	movlw	low _dbuf
  7851   00F50C  6E12               	movwf	pad@buf^0,c
  7852   00F50E  0E03               	movlw	high _dbuf
  7853   00F510  6E13               	movwf	(pad@buf+1)^0,c
  7854   00F512  C071  F014         	movff	efgtoa@w,pad@p
  7855   00F516  C072  F015         	movff	efgtoa@w+1,pad@p+1
  7856   00F51A  ECF0  F057         	call	_pad	;wreg free
  7857   00F51E  EFFA  F07E         	goto	l1699
  7858   00F522                     l9501:
  7859                           
  7860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  7861   00F522  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  7862   00F526  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7863   00F52A  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7864   00F52E  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7865   00F532  EC60  F05F         	call	___fpclassifyf	;wreg free
  7866   00F536  5001               	movf	?___fpclassifyf^0,w,c
  7867   00F538  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7868   00F53A  A4D8               	btfss	status,2,c
  7869   00F53C  EFA2  F07A         	goto	u9411
  7870   00F540  EFA4  F07A         	goto	u9410
  7871   00F544                     u9411:
  7872   00F544  EFC4  F07A         	goto	l9519
  7873   00F548                     u9410:
  7874   00F548                     
  7875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  7876   00F548  0100               	movlb	0	; () banked
  7877   00F54A  5181               	movf	efgtoa@sign& (0+255),w,b
  7878   00F54C  B4D8               	btfsc	status,2,c
  7879   00F54E  EFAB  F07A         	goto	u9421
  7880   00F552  EFAD  F07A         	goto	u9420
  7881   00F556                     u9421:
  7882   00F556  EFB6  F07A         	goto	l9511
  7883   00F55A                     u9420:
  7884   00F55A                     
  7885                           ; BSR set to: 0
  7886                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  7887   00F55A  C081  F324         	movff	efgtoa@sign,_dbuf
  7888   00F55E                     
  7889                           ; BSR set to: 0
  7890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  7891   00F55E  0771               	decf	efgtoa@w& (0+255),f,b
  7892   00F560  A0D8               	btfss	status,0,c
  7893   00F562  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  7894   00F564                     
  7895                           ; BSR set to: 0
  7896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7897   00F564  0E00               	movlw	0
  7898   00F566  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  7899   00F568  0E01               	movlw	1
  7900   00F56A  6F86               	movwf	efgtoa@n& (0+255),b
  7901   00F56C                     l9511:
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  7905   00F56C  0E24               	movlw	low _dbuf
  7906   00F56E  2586               	addwf	efgtoa@n& (0+255),w,b
  7907   00F570  6E01               	movwf	strcpy@dest^0,c
  7908   00F572  0E03               	movlw	high _dbuf
  7909   00F574  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7910   00F576  6E02               	movwf	(strcpy@dest+1)^0,c
  7911   00F578  0EF3               	movlw	low STR_22
  7912   00F57A  6E03               	movwf	strcpy@src^0,c
  7913   00F57C  0EFF               	movlw	high STR_22
  7914   00F57E  6E04               	movwf	(strcpy@src+1)^0,c
  7915   00F580  EC17  F056         	call	_strcpy	;wreg free
  7916   00F584  EF7E  F07A         	goto	l9495
  7917   00F588                     l9519:
  7918                           
  7919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  7920   00F588  0E00               	movlw	0
  7921   00F58A  0100               	movlb	0	; () banked
  7922   00F58C  6F88               	movwf	efgtoa@u& (0+255),b
  7923   00F58E  0E00               	movlw	0
  7924   00F590  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  7925   00F592  0E80               	movlw	128
  7926   00F594  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  7927   00F596  0E3F               	movlw	63
  7928   00F598  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  7929                           
  7930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7931   00F59A  0E00               	movlw	0
  7932   00F59C  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  7933   00F59E  0E00               	movlw	0
  7934   00F5A0  6F6F               	movwf	efgtoa@e& (0+255),b
  7935   00F5A2                     
  7936                           ; BSR set to: 0
  7937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  7938   00F5A2  C082  F001         	movff	efgtoa@g,___fleq@ff1
  7939   00F5A6  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7940   00F5AA  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7941   00F5AE  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7942   00F5B2  0E00               	movlw	0
  7943   00F5B4  6E05               	movwf	___fleq@ff2^0,c
  7944   00F5B6  0E00               	movlw	0
  7945   00F5B8  6E06               	movwf	(___fleq@ff2+1)^0,c
  7946   00F5BA  0E00               	movlw	0
  7947   00F5BC  6E07               	movwf	(___fleq@ff2+2)^0,c
  7948   00F5BE  0E00               	movlw	0
  7949   00F5C0  6E08               	movwf	(___fleq@ff2+3)^0,c
  7950   00F5C2  EC39  F05D         	call	___fleq	;wreg free
  7951   00F5C6  B0D8               	btfsc	status,0,c
  7952   00F5C8  EFE8  F07A         	goto	u9431
  7953   00F5CC  EFEA  F07A         	goto	u9430
  7954   00F5D0                     u9431:
  7955   00F5D0  EFC9  F07B         	goto	l1702
  7956   00F5D4                     u9430:
  7957   00F5D4  EFF7  F07A         	goto	l9527
  7958   00F5D8                     l1704:
  7959                           
  7960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7961   00F5D8  C073  F088         	movff	efgtoa@ou,efgtoa@u
  7962   00F5DC  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  7963   00F5E0  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  7964   00F5E4  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  7965   00F5E8                     
  7966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7967   00F5E8  0100               	movlb	0	; () banked
  7968   00F5EA  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  7969   00F5EC  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  7970   00F5EE                     l9527:
  7971                           
  7972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7973   00F5EE  C088  F001         	movff	efgtoa@u,___flmul@b
  7974   00F5F2  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  7975   00F5F6  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  7976   00F5FA  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  7977   00F5FE  0E00               	movlw	0
  7978   00F600  6E05               	movwf	___flmul@a^0,c
  7979   00F602  0E00               	movlw	0
  7980   00F604  6E06               	movwf	(___flmul@a+1)^0,c
  7981   00F606  0E20               	movlw	32
  7982   00F608  6E07               	movwf	(___flmul@a+2)^0,c
  7983   00F60A  0E41               	movlw	65
  7984   00F60C  6E08               	movwf	(___flmul@a+3)^0,c
  7985   00F60E  EC8D  F070         	call	___flmul	;wreg free
  7986   00F612  C001  F073         	movff	?___flmul,efgtoa@ou
  7987   00F616  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  7988   00F61A  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  7989   00F61E  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  7990   00F622  0100               	movlb	0	; () banked
  7991   00F624  5173               	movf	efgtoa@ou& (0+255),w,b
  7992   00F626  5D82               	subwf	efgtoa@g& (0+255),w,b
  7993   00F628  6E01               	movwf	labs@a^0,c
  7994   00F62A  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  7995   00F62C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7996   00F62E  6E02               	movwf	(labs@a+1)^0,c
  7997   00F630  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  7998   00F632  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7999   00F634  6E03               	movwf	(labs@a+2)^0,c
  8000   00F636  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  8001   00F638  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8002   00F63A  6E04               	movwf	(labs@a+3)^0,c
  8003   00F63C  EC3E  F057         	call	_labs	;wreg free
  8004   00F640  BE04               	btfsc	(?_labs+3)^0,7,c
  8005   00F642  EF2E  F07B         	goto	u9441
  8006   00F646  5004               	movf	(?_labs+3)^0,w,c
  8007   00F648  1003               	iorwf	(?_labs+2)^0,w,c
  8008   00F64A  1002               	iorwf	(?_labs+1)^0,w,c
  8009   00F64C  E109               	bnz	u9440
  8010   00F64E  0E02               	movlw	2
  8011   00F650  5C01               	subwf	?_labs^0,w,c
  8012   00F652  A0D8               	btfss	status,0,c
  8013   00F654  EF2E  F07B         	goto	u9441
  8014   00F658  EF30  F07B         	goto	u9440
  8015   00F65C                     u9441:
  8016   00F65C  EFEC  F07A         	goto	l1704
  8017   00F660                     u9440:
  8018   00F660  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  8019   00F664  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  8020   00F668  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  8021   00F66C  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  8022   00F670  C082  F01E         	movff	efgtoa@g,___flge@ff2
  8023   00F674  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  8024   00F678  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  8025   00F67C  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  8026   00F680  ECDF  F05F         	call	___flge	;wreg free
  8027   00F684  A0D8               	btfss	status,0,c
  8028   00F686  EF47  F07B         	goto	u9451
  8029   00F68A  EF49  F07B         	goto	u9450
  8030   00F68E                     u9451:
  8031   00F68E  EFEC  F07A         	goto	l1704
  8032   00F692                     u9450:
  8033   00F692                     
  8034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  8035   00F692  0100               	movlb	0	; () banked
  8036   00F694  5188               	movf	efgtoa@u& (0+255),w,b
  8037   00F696  5D82               	subwf	efgtoa@g& (0+255),w,b
  8038   00F698  6E01               	movwf	labs@a^0,c
  8039   00F69A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  8040   00F69C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8041   00F69E  6E02               	movwf	(labs@a+1)^0,c
  8042   00F6A0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  8043   00F6A2  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8044   00F6A4  6E03               	movwf	(labs@a+2)^0,c
  8045   00F6A6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  8046   00F6A8  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8047   00F6AA  6E04               	movwf	(labs@a+3)^0,c
  8048   00F6AC  EC3E  F057         	call	_labs	;wreg free
  8049   00F6B0  BE04               	btfsc	(?_labs+3)^0,7,c
  8050   00F6B2  EF68  F07B         	goto	u9460
  8051   00F6B6  5004               	movf	(?_labs+3)^0,w,c
  8052   00F6B8  1003               	iorwf	(?_labs+2)^0,w,c
  8053   00F6BA  1002               	iorwf	(?_labs+1)^0,w,c
  8054   00F6BC  E107               	bnz	u9461
  8055   00F6BE  0E02               	movlw	2
  8056   00F6C0  5C01               	subwf	?_labs^0,w,c
  8057   00F6C2  B0D8               	btfsc	status,0,c
  8058   00F6C4  EF66  F07B         	goto	u9461
  8059   00F6C8  EF68  F07B         	goto	u9460
  8060   00F6CC                     u9461:
  8061   00F6CC  EFB0  F07B         	goto	l9545
  8062   00F6D0                     u9460:
  8063   00F6D0                     l9535:
  8064                           
  8065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  8066   00F6D0  C088  F082         	movff	efgtoa@u,efgtoa@g
  8067   00F6D4  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  8068   00F6D8  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  8069   00F6DC  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  8070                           
  8071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  8072   00F6E0  EFC9  F07B         	goto	l1702
  8073   00F6E4                     l9537:
  8074                           
  8075                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  8076   00F6E4  C088  F00F         	movff	efgtoa@u,___fldiv@b
  8077   00F6E8  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  8078   00F6EC  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  8079   00F6F0  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  8080   00F6F4  0E00               	movlw	0
  8081   00F6F6  6E13               	movwf	___fldiv@a^0,c
  8082   00F6F8  0E00               	movlw	0
  8083   00F6FA  6E14               	movwf	(___fldiv@a+1)^0,c
  8084   00F6FC  0E20               	movlw	32
  8085   00F6FE  6E15               	movwf	(___fldiv@a+2)^0,c
  8086   00F700  0E41               	movlw	65
  8087   00F702  6E16               	movwf	(___fldiv@a+3)^0,c
  8088   00F704  ECD3  F06C         	call	___fldiv	;wreg free
  8089   00F708  C00F  F088         	movff	?___fldiv,efgtoa@u
  8090   00F70C  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  8091   00F710  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  8092   00F714  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  8093   00F718                     
  8094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  8095   00F718  0100               	movlb	0	; () banked
  8096   00F71A  076F               	decf	efgtoa@e& (0+255),f,b
  8097   00F71C  A0D8               	btfss	status,0,c
  8098   00F71E  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  8099   00F720                     
  8100                           ; BSR set to: 0
  8101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  8102   00F720  5188               	movf	efgtoa@u& (0+255),w,b
  8103   00F722  5D82               	subwf	efgtoa@g& (0+255),w,b
  8104   00F724  6E01               	movwf	labs@a^0,c
  8105   00F726  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  8106   00F728  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8107   00F72A  6E02               	movwf	(labs@a+1)^0,c
  8108   00F72C  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  8109   00F72E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8110   00F730  6E03               	movwf	(labs@a+2)^0,c
  8111   00F732  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  8112   00F734  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8113   00F736  6E04               	movwf	(labs@a+3)^0,c
  8114   00F738  EC3E  F057         	call	_labs	;wreg free
  8115   00F73C  BE04               	btfsc	(?_labs+3)^0,7,c
  8116   00F73E  EFAE  F07B         	goto	u9470
  8117   00F742  5004               	movf	(?_labs+3)^0,w,c
  8118   00F744  1003               	iorwf	(?_labs+2)^0,w,c
  8119   00F746  1002               	iorwf	(?_labs+1)^0,w,c
  8120   00F748  E107               	bnz	u9471
  8121   00F74A  0E02               	movlw	2
  8122   00F74C  5C01               	subwf	?_labs^0,w,c
  8123   00F74E  B0D8               	btfsc	status,0,c
  8124   00F750  EFAC  F07B         	goto	u9471
  8125   00F754  EFAE  F07B         	goto	u9470
  8126   00F758                     u9471:
  8127   00F758  EFB0  F07B         	goto	l9545
  8128   00F75C                     u9470:
  8129   00F75C  EF68  F07B         	goto	l9535
  8130   00F760                     l9545:
  8131                           
  8132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  8133   00F760  C082  F01A         	movff	efgtoa@g,___flge@ff1
  8134   00F764  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  8135   00F768  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  8136   00F76C  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  8137   00F770  C088  F01E         	movff	efgtoa@u,___flge@ff2
  8138   00F774  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  8139   00F778  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  8140   00F77C  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  8141   00F780  ECDF  F05F         	call	___flge	;wreg free
  8142   00F784  A0D8               	btfss	status,0,c
  8143   00F786  EFC7  F07B         	goto	u9481
  8144   00F78A  EFC9  F07B         	goto	u9480
  8145   00F78E                     u9481:
  8146   00F78E  EF72  F07B         	goto	l9537
  8147   00F792                     u9480:
  8148   00F792                     l1702:
  8149                           
  8150                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8151   00F792  C041  F069         	movff	efgtoa@c,efgtoa@mode
  8152                           
  8153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  8154   00F796  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  8155   00F79A                     
  8156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  8157   00F79A  0100               	movlb	0	; () banked
  8158   00F79C  BFC4               	btfsc	(_prec+1)& (0+255),7,b
  8159   00F79E  EFD3  F07B         	goto	u9491
  8160   00F7A2  EFD5  F07B         	goto	u9490
  8161   00F7A6                     u9491:
  8162   00F7A6  EFDB  F07B         	goto	l9551
  8163   00F7AA                     u9490:
  8164   00F7AA                     
  8165                           ; BSR set to: 0
  8166   00F7AA  C0C3  F062         	movff	_prec,efgtoa@p
  8167   00F7AE  C0C4  F063         	movff	_prec+1,efgtoa@p+1
  8168   00F7B2  EFDF  F07B         	goto	l9553
  8169   00F7B6                     l9551:
  8170                           
  8171                           ; BSR set to: 0
  8172   00F7B6  0E00               	movlw	0
  8173   00F7B8  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  8174   00F7BA  0E06               	movlw	6
  8175   00F7BC  6F62               	movwf	efgtoa@p& (0+255),b
  8176   00F7BE                     l9553:
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  8180   00F7BE  C062  F06D         	movff	efgtoa@p,efgtoa@m
  8181   00F7C2  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  8182   00F7C6                     
  8183                           ; BSR set to: 0
  8184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  8185   00F7C6  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  8186   00F7C8  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  8187   00F7CA                     
  8188                           ; BSR set to: 0
  8189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  8190   00F7CA  0E66               	movlw	102
  8191   00F7CC  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  8192   00F7CE  A4D8               	btfss	status,2,c
  8193   00F7D0  EFEC  F07B         	goto	u9501
  8194   00F7D4  EFEE  F07B         	goto	u9500
  8195   00F7D8                     u9501:
  8196   00F7D8  EF0E  F07C         	goto	l9567
  8197   00F7DC                     u9500:
  8198   00F7DC                     
  8199                           ; BSR set to: 0
  8200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  8201   00F7DC  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8202   00F7DE  EFF5  F07B         	goto	u9510
  8203   00F7E2  EFF3  F07B         	goto	u9511
  8204   00F7E6                     u9511:
  8205   00F7E6  EF01  F07C         	goto	l9563
  8206   00F7EA                     u9510:
  8207   00F7EA                     
  8208                           ; BSR set to: 0
  8209                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  8210   00F7EA  0E00               	movlw	0
  8211   00F7EC  6F88               	movwf	efgtoa@u& (0+255),b
  8212   00F7EE  0E00               	movlw	0
  8213   00F7F0  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  8214   00F7F2  0E80               	movlw	128
  8215   00F7F4  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  8216   00F7F6  0E3F               	movlw	63
  8217   00F7F8  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  8218                           
  8219                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  8220   00F7FA  0E00               	movlw	0
  8221   00F7FC  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  8222   00F7FE  0E00               	movlw	0
  8223   00F800  6F6F               	movwf	efgtoa@e& (0+255),b
  8224   00F802                     l9563:
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  8228   00F802  0E67               	movlw	103
  8229   00F804  1969               	xorwf	efgtoa@mode& (0+255),w,b
  8230   00F806  B4D8               	btfsc	status,2,c
  8231   00F808  EF08  F07C         	goto	u9521
  8232   00F80C  EF0A  F07C         	goto	u9520
  8233   00F810                     u9521:
  8234   00F810  EF0E  F07C         	goto	l9567
  8235   00F814                     u9520:
  8236   00F814                     
  8237                           ; BSR set to: 0
  8238                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  8239   00F814  516F               	movf	efgtoa@e& (0+255),w,b
  8240   00F816  276D               	addwf	efgtoa@m& (0+255),f,b
  8241   00F818  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  8242   00F81A  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8243   00F81C                     l9567:
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  8247   00F81C  0E00               	movlw	0
  8248   00F81E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  8249   00F820  0E00               	movlw	0
  8250   00F822  6F77               	movwf	efgtoa@i& (0+255),b
  8251   00F824                     
  8252                           ; BSR set to: 0
  8253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8254   00F824  C082  F079         	movff	efgtoa@g,efgtoa@h
  8255   00F828  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  8256   00F82C  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  8257   00F830  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  8258   00F834                     
  8259                           ; BSR set to: 0
  8260                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8261   00F834  C088  F073         	movff	efgtoa@u,efgtoa@ou
  8262   00F838  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  8263   00F83C  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  8264   00F840  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  8265                           
  8266                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8267   00F844  EF9F  F07C         	goto	l9581
  8268   00F848                     l9573:
  8269                           
  8270                           ; BSR set to: 0
  8271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  8272   00F848  C079  F00F         	movff	efgtoa@h,___fldiv@b
  8273   00F84C  C07A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  8274   00F850  C07B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  8275   00F854  C07C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  8276   00F858  C088  F013         	movff	efgtoa@u,___fldiv@a
  8277   00F85C  C089  F014         	movff	efgtoa@u+1,___fldiv@a+1
  8278   00F860  C08A  F015         	movff	efgtoa@u+2,___fldiv@a+2
  8279   00F864  C08B  F016         	movff	efgtoa@u+3,___fldiv@a+3
  8280   00F868  ECD3  F06C         	call	___fldiv	;wreg free
  8281   00F86C  C00F  F028         	movff	?___fldiv,floorf@x
  8282   00F870  C010  F029         	movff	?___fldiv+1,floorf@x+1
  8283   00F874  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  8284   00F878  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  8285   00F87C  EC8C  F066         	call	_floorf	;wreg free
  8286   00F880  C028  F07D         	movff	?_floorf,efgtoa@l
  8287   00F884  C029  F07E         	movff	?_floorf+1,efgtoa@l+1
  8288   00F888  C02A  F07F         	movff	?_floorf+2,efgtoa@l+2
  8289   00F88C  C02B  F080         	movff	?_floorf+3,efgtoa@l+3
  8290                           
  8291                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  8292   00F890  C07D  F001         	movff	efgtoa@l,___fltol@f1
  8293   00F894  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  8294   00F898  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  8295   00F89C  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  8296   00F8A0  EC61  F060         	call	___fltol	;wreg free
  8297   00F8A4  C001  F06B         	movff	?___fltol,efgtoa@d
  8298   00F8A8  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  8299   00F8AC                     
  8300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  8301   00F8AC  C079  F01A         	movff	efgtoa@h,___flsub@b
  8302   00F8B0  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  8303   00F8B4  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  8304   00F8B8  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  8305   00F8BC  C07D  F005         	movff	efgtoa@l,___flmul@a
  8306   00F8C0  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  8307   00F8C4  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  8308   00F8C8  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  8309   00F8CC  C088  F001         	movff	efgtoa@u,___flmul@b
  8310   00F8D0  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  8311   00F8D4  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  8312   00F8D8  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  8313   00F8DC  EC8D  F070         	call	___flmul	;wreg free
  8314   00F8E0  C001  F01E         	movff	?___flmul,___flsub@a
  8315   00F8E4  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  8316   00F8E8  C003  F020         	movff	?___flmul+2,___flsub@a+2
  8317   00F8EC  C004  F021         	movff	?___flmul+3,___flsub@a+3
  8318   00F8F0  EC7E  F056         	call	___flsub	;wreg free
  8319   00F8F4  C01A  F079         	movff	?___flsub,efgtoa@h
  8320   00F8F8  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  8321   00F8FC  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  8322   00F900  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  8323   00F904                     
  8324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  8325   00F904  C088  F00F         	movff	efgtoa@u,___fldiv@b
  8326   00F908  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  8327   00F90C  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  8328   00F910  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  8329   00F914  0E00               	movlw	0
  8330   00F916  6E13               	movwf	___fldiv@a^0,c
  8331   00F918  0E00               	movlw	0
  8332   00F91A  6E14               	movwf	(___fldiv@a+1)^0,c
  8333   00F91C  0E20               	movlw	32
  8334   00F91E  6E15               	movwf	(___fldiv@a+2)^0,c
  8335   00F920  0E41               	movlw	65
  8336   00F922  6E16               	movwf	(___fldiv@a+3)^0,c
  8337   00F924  ECD3  F06C         	call	___fldiv	;wreg free
  8338   00F928  C00F  F088         	movff	?___fldiv,efgtoa@u
  8339   00F92C  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  8340   00F930  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  8341   00F934  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  8342   00F938                     
  8343                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  8344   00F938  0100               	movlb	0	; () banked
  8345   00F93A  4B77               	infsnz	efgtoa@i& (0+255),f,b
  8346   00F93C  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  8347   00F93E                     l9581:
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8351   00F93E  516D               	movf	efgtoa@m& (0+255),w,b
  8352   00F940  5D77               	subwf	efgtoa@i& (0+255),w,b
  8353   00F942  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  8354   00F944  0A80               	xorlw	128
  8355   00F946  6E42               	movwf	??_efgtoa^0,c
  8356   00F948  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  8357   00F94A  0A80               	xorlw	128
  8358   00F94C  5842               	subwfb	??_efgtoa^0,w,c
  8359   00F94E  A0D8               	btfss	status,0,c
  8360   00F950  EFAC  F07C         	goto	u9531
  8361   00F954  EFAE  F07C         	goto	u9530
  8362   00F958                     u9531:
  8363   00F958  EF24  F07C         	goto	l9573
  8364   00F95C                     u9530:
  8365   00F95C                     
  8366                           ; BSR set to: 0
  8367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  8368   00F95C  C088  F001         	movff	efgtoa@u,___flmul@b
  8369   00F960  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  8370   00F964  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  8371   00F968  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  8372   00F96C  0E00               	movlw	0
  8373   00F96E  6E05               	movwf	___flmul@a^0,c
  8374   00F970  0E00               	movlw	0
  8375   00F972  6E06               	movwf	(___flmul@a+1)^0,c
  8376   00F974  0EA0               	movlw	160
  8377   00F976  6E07               	movwf	(___flmul@a+2)^0,c
  8378   00F978  0E40               	movlw	64
  8379   00F97A  6E08               	movwf	(___flmul@a+3)^0,c
  8380   00F97C  EC8D  F070         	call	___flmul	;wreg free
  8381   00F980  C001  F07D         	movff	?___flmul,efgtoa@l
  8382   00F984  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  8383   00F988  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  8384   00F98C  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  8385   00F990                     
  8386                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  8387   00F990  C079  F01A         	movff	efgtoa@h,___flge@ff1
  8388   00F994  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  8389   00F998  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  8390   00F99C  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  8391   00F9A0  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  8392   00F9A4  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  8393   00F9A8  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  8394   00F9AC  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  8395   00F9B0  ECDF  F05F         	call	___flge	;wreg free
  8396   00F9B4  B0D8               	btfsc	status,0,c
  8397   00F9B6  EFDF  F07C         	goto	u9541
  8398   00F9BA  EFE1  F07C         	goto	u9540
  8399   00F9BE                     u9541:
  8400   00F9BE  EFEC  F07C         	goto	l9589
  8401   00F9C2                     u9540:
  8402   00F9C2                     
  8403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  8404   00F9C2  0E00               	movlw	0
  8405   00F9C4  0100               	movlb	0	; () banked
  8406   00F9C6  6F7D               	movwf	efgtoa@l& (0+255),b
  8407   00F9C8  0E00               	movlw	0
  8408   00F9CA  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  8409   00F9CC  0E00               	movlw	0
  8410   00F9CE  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  8411   00F9D0  0E00               	movlw	0
  8412   00F9D2  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  8413                           
  8414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  8415   00F9D4  EF15  F07D         	goto	l9595
  8416   00F9D8                     l9589:
  8417                           
  8418                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  8419   00F9D8  C079  F001         	movff	efgtoa@h,___fleq@ff1
  8420   00F9DC  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8421   00F9E0  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8422   00F9E4  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8423   00F9E8  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  8424   00F9EC  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8425   00F9F0  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8426   00F9F4  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8427   00F9F8  EC39  F05D         	call	___fleq	;wreg free
  8428   00F9FC  A0D8               	btfss	status,0,c
  8429   00F9FE  EF03  F07D         	goto	u9551
  8430   00FA02  EF05  F07D         	goto	u9550
  8431   00FA06                     u9551:
  8432   00FA06  EF15  F07D         	goto	l9595
  8433   00FA0A                     u9550:
  8434   00FA0A  0100               	movlb	0	; () banked
  8435   00FA0C  B16B               	btfsc	efgtoa@d& (0+255),0,b
  8436   00FA0E  EF0B  F07D         	goto	u9561
  8437   00FA12  EF0D  F07D         	goto	u9560
  8438   00FA16                     u9561:
  8439   00FA16  EF15  F07D         	goto	l9595
  8440   00FA1A                     u9560:
  8441   00FA1A                     
  8442                           ; BSR set to: 0
  8443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  8444   00FA1A  0E00               	movlw	0
  8445   00FA1C  6F7D               	movwf	efgtoa@l& (0+255),b
  8446   00FA1E  0E00               	movlw	0
  8447   00FA20  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  8448   00FA22  0E00               	movlw	0
  8449   00FA24  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  8450   00FA26  0E00               	movlw	0
  8451   00FA28  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  8452   00FA2A                     l9595:
  8453                           
  8454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  8455   00FA2A  C082  F001         	movff	efgtoa@g,___fladd@b
  8456   00FA2E  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  8457   00FA32  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  8458   00FA36  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  8459   00FA3A  C07D  F005         	movff	efgtoa@l,___fladd@a
  8460   00FA3E  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  8461   00FA42  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  8462   00FA46  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  8463   00FA4A  ECDC  F074         	call	___fladd	;wreg free
  8464   00FA4E  C001  F079         	movff	?___fladd,efgtoa@h
  8465   00FA52  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  8466   00FA56  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  8467   00FA5A  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  8468   00FA5E                     
  8469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  8470   00FA5E  C079  F01A         	movff	efgtoa@h,___flge@ff1
  8471   00FA62  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  8472   00FA66  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  8473   00FA6A  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  8474   00FA6E  0E00               	movlw	0
  8475   00FA70  6E05               	movwf	___flmul@a^0,c
  8476   00FA72  0E00               	movlw	0
  8477   00FA74  6E06               	movwf	(___flmul@a+1)^0,c
  8478   00FA76  0E20               	movlw	32
  8479   00FA78  6E07               	movwf	(___flmul@a+2)^0,c
  8480   00FA7A  0E41               	movlw	65
  8481   00FA7C  6E08               	movwf	(___flmul@a+3)^0,c
  8482   00FA7E  C073  F001         	movff	efgtoa@ou,___flmul@b
  8483   00FA82  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  8484   00FA86  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  8485   00FA8A  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  8486   00FA8E  EC8D  F070         	call	___flmul	;wreg free
  8487   00FA92  C001  F01E         	movff	?___flmul,___flge@ff2
  8488   00FA96  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  8489   00FA9A  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  8490   00FA9E  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  8491   00FAA2  ECDF  F05F         	call	___flge	;wreg free
  8492   00FAA6  A0D8               	btfss	status,0,c
  8493   00FAA8  EF58  F07D         	goto	u9571
  8494   00FAAC  EF5A  F07D         	goto	u9570
  8495   00FAB0                     u9571:
  8496   00FAB0  EF83  F07D         	goto	l9607
  8497   00FAB4                     u9570:
  8498   00FAB4                     
  8499                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  8500   00FAB4  0100               	movlb	0	; () banked
  8501   00FAB6  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  8502   00FAB8  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  8503   00FABA                     
  8504                           ; BSR set to: 0
  8505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  8506   00FABA  C073  F001         	movff	efgtoa@ou,___flmul@b
  8507   00FABE  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  8508   00FAC2  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  8509   00FAC6  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  8510   00FACA  0E00               	movlw	0
  8511   00FACC  6E05               	movwf	___flmul@a^0,c
  8512   00FACE  0E00               	movlw	0
  8513   00FAD0  6E06               	movwf	(___flmul@a+1)^0,c
  8514   00FAD2  0E20               	movlw	32
  8515   00FAD4  6E07               	movwf	(___flmul@a+2)^0,c
  8516   00FAD6  0E41               	movlw	65
  8517   00FAD8  6E08               	movwf	(___flmul@a+3)^0,c
  8518   00FADA  EC8D  F070         	call	___flmul	;wreg free
  8519   00FADE  C001  F073         	movff	?___flmul,efgtoa@ou
  8520   00FAE2  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  8521   00FAE6  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  8522   00FAEA  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  8523   00FAEE                     
  8524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  8525   00FAEE  0E66               	movlw	102
  8526   00FAF0  0100               	movlb	0	; () banked
  8527   00FAF2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  8528   00FAF4  A4D8               	btfss	status,2,c
  8529   00FAF6  EF7F  F07D         	goto	u9581
  8530   00FAFA  EF81  F07D         	goto	u9580
  8531   00FAFE                     u9581:
  8532   00FAFE  EF83  F07D         	goto	l9607
  8533   00FB02                     u9580:
  8534   00FB02                     
  8535                           ; BSR set to: 0
  8536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  8537   00FB02  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  8538   00FB04  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  8539   00FB06                     l9607:
  8540                           
  8541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  8542   00FB06  C073  F088         	movff	efgtoa@ou,efgtoa@u
  8543   00FB0A  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  8544   00FB0E  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  8545   00FB12  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  8546   00FB16                     
  8547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  8548   00FB16  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  8549   00FB1A  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  8550   00FB1E                     
  8551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  8552   00FB1E  0E00               	movlw	0
  8553   00FB20  0100               	movlb	0	; () banked
  8554   00FB22  6F68               	movwf	efgtoa@pp& (0+255),b
  8555   00FB24                     
  8556                           ; BSR set to: 0
  8557                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  8558   00FB24  0E00               	movlw	0
  8559   00FB26  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  8560   00FB28  0E00               	movlw	0
  8561   00FB2A  6F64               	movwf	efgtoa@t& (0+255),b
  8562   00FB2C                     
  8563                           ; BSR set to: 0
  8564                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  8565   00FB2C  0E00               	movlw	0
  8566   00FB2E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  8567   00FB30  0E00               	movlw	0
  8568   00FB32  6F77               	movwf	efgtoa@i& (0+255),b
  8569                           
  8570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8571   00FB34  EF81  F07E         	goto	l9657
  8572   00FB38                     l9617:
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  8576   00FB38  C079  F00F         	movff	efgtoa@h,___fldiv@b
  8577   00FB3C  C07A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  8578   00FB40  C07B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  8579   00FB44  C07C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  8580   00FB48  C088  F013         	movff	efgtoa@u,___fldiv@a
  8581   00FB4C  C089  F014         	movff	efgtoa@u+1,___fldiv@a+1
  8582   00FB50  C08A  F015         	movff	efgtoa@u+2,___fldiv@a+2
  8583   00FB54  C08B  F016         	movff	efgtoa@u+3,___fldiv@a+3
  8584   00FB58  ECD3  F06C         	call	___fldiv	;wreg free
  8585   00FB5C  C00F  F028         	movff	?___fldiv,floorf@x
  8586   00FB60  C010  F029         	movff	?___fldiv+1,floorf@x+1
  8587   00FB64  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  8588   00FB68  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  8589   00FB6C  EC8C  F066         	call	_floorf	;wreg free
  8590   00FB70  C028  F07D         	movff	?_floorf,efgtoa@l
  8591   00FB74  C029  F07E         	movff	?_floorf+1,efgtoa@l+1
  8592   00FB78  C02A  F07F         	movff	?_floorf+2,efgtoa@l+2
  8593   00FB7C  C02B  F080         	movff	?_floorf+3,efgtoa@l+3
  8594                           
  8595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  8596   00FB80  C07D  F001         	movff	efgtoa@l,___fltol@f1
  8597   00FB84  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  8598   00FB88  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  8599   00FB8C  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  8600   00FB90  EC61  F060         	call	___fltol	;wreg free
  8601   00FB94  BE02               	btfsc	(?___fltol+1)^0,7,c
  8602   00FB96  EFD8  F07D         	goto	u9590
  8603   00FB9A  5002               	movf	(?___fltol+1)^0,w,c
  8604   00FB9C  E107               	bnz	u9591
  8605   00FB9E  0E0A               	movlw	10
  8606   00FBA0  5C01               	subwf	?___fltol^0,w,c
  8607   00FBA2  B0D8               	btfsc	status,0,c
  8608   00FBA4  EFD6  F07D         	goto	u9591
  8609   00FBA8  EFD8  F07D         	goto	u9590
  8610   00FBAC                     u9591:
  8611   00FBAC  EFE8  F07D         	goto	l9621
  8612   00FBB0                     u9590:
  8613   00FBB0  C07D  F001         	movff	efgtoa@l,___fltol@f1
  8614   00FBB4  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  8615   00FBB8  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  8616   00FBBC  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  8617   00FBC0  EC61  F060         	call	___fltol	;wreg free
  8618   00FBC4  C001  F06B         	movff	?___fltol,efgtoa@d
  8619   00FBC8  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  8620   00FBCC  EFED  F07D         	goto	l1732
  8621   00FBD0                     l9621:
  8622   00FBD0  0E00               	movlw	0
  8623   00FBD2  0100               	movlb	0	; () banked
  8624   00FBD4  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  8625   00FBD6  0E09               	movlw	9
  8626   00FBD8  6F6B               	movwf	efgtoa@d& (0+255),b
  8627   00FBDA                     l1732:
  8628                           
  8629                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  8630   00FBDA  0100               	movlb	0	; () banked
  8631   00FBDC  5168               	movf	efgtoa@pp& (0+255),w,b
  8632   00FBDE  A4D8               	btfss	status,2,c
  8633   00FBE0  EFF4  F07D         	goto	u9601
  8634   00FBE4  EFF6  F07D         	goto	u9600
  8635   00FBE8                     u9601:
  8636   00FBE8  EF1E  F07E         	goto	l9641
  8637   00FBEC                     u9600:
  8638   00FBEC                     
  8639                           ; BSR set to: 0
  8640   00FBEC  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8641   00FBEE  EFFD  F07D         	goto	u9610
  8642   00FBF2  EFFB  F07D         	goto	u9611
  8643   00FBF6                     u9611:
  8644   00FBF6  EF1E  F07E         	goto	l9641
  8645   00FBFA                     u9610:
  8646   00FBFA                     
  8647                           ; BSR set to: 0
  8648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  8649   00FBFA  0E24               	movlw	low _dbuf
  8650   00FBFC  2586               	addwf	efgtoa@n& (0+255),w,b
  8651   00FBFE  6ED9               	movwf	fsr2l,c
  8652   00FC00  0E03               	movlw	high _dbuf
  8653   00FC02  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8654   00FC04  6EDA               	movwf	fsr2h,c
  8655   00FC06  0E2E               	movlw	46
  8656   00FC08  6EDF               	movwf	indf2,c
  8657   00FC0A                     
  8658                           ; BSR set to: 0
  8659   00FC0A  4B86               	infsnz	efgtoa@n& (0+255),f,b
  8660   00FC0C  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  8661   00FC0E                     
  8662                           ; BSR set to: 0
  8663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  8664   00FC0E  0771               	decf	efgtoa@w& (0+255),f,b
  8665   00FC10  A0D8               	btfss	status,0,c
  8666   00FC12  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  8667   00FC14                     
  8668                           ; BSR set to: 0
  8669                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  8670   00FC14  0E01               	movlw	1
  8671   00FC16  6F68               	movwf	efgtoa@pp& (0+255),b
  8672   00FC18  EF1E  F07E         	goto	l9641
  8673   00FC1C                     l9633:
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  8677   00FC1C  0E24               	movlw	low _dbuf
  8678   00FC1E  2586               	addwf	efgtoa@n& (0+255),w,b
  8679   00FC20  6ED9               	movwf	fsr2l,c
  8680   00FC22  0E03               	movlw	high _dbuf
  8681   00FC24  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8682   00FC26  6EDA               	movwf	fsr2h,c
  8683   00FC28  0E30               	movlw	48
  8684   00FC2A  6EDF               	movwf	indf2,c
  8685   00FC2C                     
  8686                           ; BSR set to: 0
  8687   00FC2C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  8688   00FC2E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  8689   00FC30                     
  8690                           ; BSR set to: 0
  8691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  8692   00FC30  0771               	decf	efgtoa@w& (0+255),f,b
  8693   00FC32  A0D8               	btfss	status,0,c
  8694   00FC34  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  8695   00FC36                     
  8696                           ; BSR set to: 0
  8697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  8698   00FC36  0764               	decf	efgtoa@t& (0+255),f,b
  8699   00FC38  A0D8               	btfss	status,0,c
  8700   00FC3A  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  8701   00FC3C                     l9641:
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  8705   00FC3C  5164               	movf	efgtoa@t& (0+255),w,b
  8706   00FC3E  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8707   00FC40  A4D8               	btfss	status,2,c
  8708   00FC42  EF25  F07E         	goto	u9621
  8709   00FC46  EF27  F07E         	goto	u9620
  8710   00FC4A                     u9621:
  8711   00FC4A  EF0E  F07E         	goto	l9633
  8712   00FC4E                     u9620:
  8713   00FC4E                     
  8714                           ; BSR set to: 0
  8715                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  8716   00FC4E  0E24               	movlw	low _dbuf
  8717   00FC50  2586               	addwf	efgtoa@n& (0+255),w,b
  8718   00FC52  6ED9               	movwf	fsr2l,c
  8719   00FC54  0E03               	movlw	high _dbuf
  8720   00FC56  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8721   00FC58  6EDA               	movwf	fsr2h,c
  8722   00FC5A  516B               	movf	efgtoa@d& (0+255),w,b
  8723   00FC5C  0F30               	addlw	48
  8724   00FC5E  6EDF               	movwf	indf2,c
  8725   00FC60                     
  8726                           ; BSR set to: 0
  8727   00FC60  4B86               	infsnz	efgtoa@n& (0+255),f,b
  8728   00FC62  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  8729   00FC64                     
  8730                           ; BSR set to: 0
  8731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  8732   00FC64  0771               	decf	efgtoa@w& (0+255),f,b
  8733   00FC66  A0D8               	btfss	status,0,c
  8734   00FC68  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  8735   00FC6A                     
  8736                           ; BSR set to: 0
  8737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  8738   00FC6A  C079  F01A         	movff	efgtoa@h,___flsub@b
  8739   00FC6E  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  8740   00FC72  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  8741   00FC76  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  8742   00FC7A  C07D  F005         	movff	efgtoa@l,___flmul@a
  8743   00FC7E  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  8744   00FC82  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  8745   00FC86  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  8746   00FC8A  C088  F001         	movff	efgtoa@u,___flmul@b
  8747   00FC8E  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  8748   00FC92  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  8749   00FC96  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  8750   00FC9A  EC8D  F070         	call	___flmul	;wreg free
  8751   00FC9E  C001  F01E         	movff	?___flmul,___flsub@a
  8752   00FCA2  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  8753   00FCA6  C003  F020         	movff	?___flmul+2,___flsub@a+2
  8754   00FCAA  C004  F021         	movff	?___flmul+3,___flsub@a+3
  8755   00FCAE  EC7E  F056         	call	___flsub	;wreg free
  8756   00FCB2  C01A  F079         	movff	?___flsub,efgtoa@h
  8757   00FCB6  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  8758   00FCBA  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  8759   00FCBE  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  8760   00FCC2                     
  8761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  8762   00FCC2  C088  F00F         	movff	efgtoa@u,___fldiv@b
  8763   00FCC6  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  8764   00FCCA  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  8765   00FCCE  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  8766   00FCD2  0E00               	movlw	0
  8767   00FCD4  6E13               	movwf	___fldiv@a^0,c
  8768   00FCD6  0E00               	movlw	0
  8769   00FCD8  6E14               	movwf	(___fldiv@a+1)^0,c
  8770   00FCDA  0E20               	movlw	32
  8771   00FCDC  6E15               	movwf	(___fldiv@a+2)^0,c
  8772   00FCDE  0E41               	movlw	65
  8773   00FCE0  6E16               	movwf	(___fldiv@a+3)^0,c
  8774   00FCE2  ECD3  F06C         	call	___fldiv	;wreg free
  8775   00FCE6  C00F  F088         	movff	?___fldiv,efgtoa@u
  8776   00FCEA  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  8777   00FCEE  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  8778   00FCF2  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  8779   00FCF6                     
  8780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  8781   00FCF6  0100               	movlb	0	; () banked
  8782   00FCF8  0760               	decf	efgtoa@ne& (0+255),f,b
  8783   00FCFA  A0D8               	btfss	status,0,c
  8784   00FCFC  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  8785   00FCFE                     
  8786                           ; BSR set to: 0
  8787                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  8788   00FCFE  4B77               	infsnz	efgtoa@i& (0+255),f,b
  8789   00FD00  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  8790   00FD02                     l9657:
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8794   00FD02  516D               	movf	efgtoa@m& (0+255),w,b
  8795   00FD04  5D77               	subwf	efgtoa@i& (0+255),w,b
  8796   00FD06  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  8797   00FD08  0A80               	xorlw	128
  8798   00FD0A  6E42               	movwf	??_efgtoa^0,c
  8799   00FD0C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  8800   00FD0E  0A80               	xorlw	128
  8801   00FD10  5842               	subwfb	??_efgtoa^0,w,c
  8802   00FD12  B0D8               	btfsc	status,0,c
  8803   00FD14  EF8E  F07E         	goto	u9631
  8804   00FD18  EF90  F07E         	goto	u9630
  8805   00FD1C                     u9631:
  8806   00FD1C  EF9E  F07E         	goto	l9661
  8807   00FD20                     u9630:
  8808   00FD20                     
  8809                           ; BSR set to: 0
  8810   00FD20  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8811   00FD22  EF9C  F07E         	goto	u9641
  8812   00FD26  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  8813   00FD28  E109               	bnz	u9640
  8814   00FD2A  0E4B               	movlw	75
  8815   00FD2C  5D86               	subwf	efgtoa@n& (0+255),w,b
  8816   00FD2E  A0D8               	btfss	status,0,c
  8817   00FD30  EF9C  F07E         	goto	u9641
  8818   00FD34  EF9E  F07E         	goto	u9640
  8819   00FD38                     u9641:
  8820   00FD38  EF9C  F07D         	goto	l9617
  8821   00FD3C                     u9640:
  8822   00FD3C                     l9661:
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  8826   00FD3C  0E00               	movlw	0
  8827   00FD3E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  8828   00FD40  0E4F               	movlw	79
  8829   00FD42  6F77               	movwf	efgtoa@i& (0+255),b
  8830   00FD44                     
  8831                           ; BSR set to: 0
  8832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  8833   00FD44  0E24               	movlw	low _dbuf
  8834   00FD46  2577               	addwf	efgtoa@i& (0+255),w,b
  8835   00FD48  6ED9               	movwf	fsr2l,c
  8836   00FD4A  0E03               	movlw	high _dbuf
  8837   00FD4C  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8838   00FD4E  6EDA               	movwf	fsr2h,c
  8839   00FD50  6ADF               	clrf	indf2,c
  8840   00FD52                     
  8841                           ; BSR set to: 0
  8842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  8843   00FD52  0E24               	movlw	low _dbuf
  8844   00FD54  6E42               	movwf	??_efgtoa^0,c
  8845   00FD56  0E03               	movlw	high _dbuf
  8846   00FD58  6E43               	movwf	(??_efgtoa+1)^0,c
  8847   00FD5A  5186               	movf	efgtoa@n& (0+255),w,b
  8848   00FD5C  5E42               	subwf	??_efgtoa^0,f,c
  8849   00FD5E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  8850   00FD60  5A43               	subwfb	(??_efgtoa+1)^0,f,c
  8851   00FD62  5177               	movf	efgtoa@i& (0+255),w,b
  8852   00FD64  2442               	addwf	??_efgtoa^0,w,c
  8853   00FD66  6E01               	movwf	memcpy@d1^0,c
  8854   00FD68  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  8855   00FD6A  2043               	addwfc	(??_efgtoa+1)^0,w,c
  8856   00FD6C  6E02               	movwf	(memcpy@d1+1)^0,c
  8857   00FD6E  0E24               	movlw	low _dbuf
  8858   00FD70  6E03               	movwf	memcpy@s1^0,c
  8859   00FD72  0E03               	movlw	high _dbuf
  8860   00FD74  6E04               	movwf	(memcpy@s1+1)^0,c
  8861   00FD76  C086  F005         	movff	efgtoa@n,memcpy@n
  8862   00FD7A  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  8863   00FD7E  EC95  F057         	call	_memcpy	;wreg free
  8864   00FD82                     
  8865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8866   00FD82  0100               	movlb	0	; () banked
  8867   00FD84  5186               	movf	efgtoa@n& (0+255),w,b
  8868   00FD86  5D77               	subwf	efgtoa@i& (0+255),w,b
  8869   00FD88  6F86               	movwf	efgtoa@n& (0+255),b
  8870   00FD8A  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  8871   00FD8C  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8872   00FD8E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  8873   00FD90                     
  8874                           ; BSR set to: 0
  8875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  8876   00FD90  5181               	movf	efgtoa@sign& (0+255),w,b
  8877   00FD92  A4D8               	btfss	status,2,c
  8878   00FD94  EFCE  F07E         	goto	u9651
  8879   00FD98  EFD1  F07E         	goto	u9650
  8880   00FD9C                     u9651:
  8881   00FD9C  0E01               	movlw	1
  8882   00FD9E  EFD2  F07E         	goto	u9660
  8883   00FDA2                     u9650:
  8884   00FDA2  0E00               	movlw	0
  8885   00FDA4                     u9660:
  8886   00FDA4  6F77               	movwf	efgtoa@i& (0+255),b
  8887   00FDA6  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  8888   00FDA8                     
  8889                           ; BSR set to: 0
  8890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8891   00FDA8  5181               	movf	efgtoa@sign& (0+255),w,b
  8892   00FDAA  B4D8               	btfsc	status,2,c
  8893   00FDAC  EFDA  F07E         	goto	u9671
  8894   00FDB0  EFDC  F07E         	goto	u9670
  8895   00FDB4                     u9671:
  8896   00FDB4  EFE8  F07E         	goto	l9675
  8897   00FDB8                     u9670:
  8898   00FDB8                     
  8899                           ; BSR set to: 0
  8900                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  8901   00FDB8  0786               	decf	efgtoa@n& (0+255),f,b
  8902   00FDBA  A0D8               	btfss	status,0,c
  8903   00FDBC  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  8904   00FDBE  0E24               	movlw	low _dbuf
  8905   00FDC0  2586               	addwf	efgtoa@n& (0+255),w,b
  8906   00FDC2  6ED9               	movwf	fsr2l,c
  8907   00FDC4  0E03               	movlw	high _dbuf
  8908   00FDC6  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8909   00FDC8  6EDA               	movwf	fsr2h,c
  8910   00FDCA  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  8911   00FDD0                     l9675:
  8912                           
  8913                           ; BSR set to: 0
  8914                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8915   00FDD0  5177               	movf	efgtoa@i& (0+255),w,b
  8916   00FDD2  5F71               	subwf	efgtoa@w& (0+255),f,b
  8917   00FDD4  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  8918   00FDD6  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8919   00FDD8                     
  8920                           ; BSR set to: 0
  8921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  8922   00FDD8  C03C  F011         	movff	efgtoa@fp,pad@fp
  8923   00FDDC  0E24               	movlw	low _dbuf
  8924   00FDDE  2586               	addwf	efgtoa@n& (0+255),w,b
  8925   00FDE0  6E12               	movwf	pad@buf^0,c
  8926   00FDE2  0E03               	movlw	high _dbuf
  8927   00FDE4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8928   00FDE6  6E13               	movwf	(pad@buf+1)^0,c
  8929   00FDE8  C071  F014         	movff	efgtoa@w,pad@p
  8930   00FDEC  C072  F015         	movff	efgtoa@w+1,pad@p+1
  8931   00FDF0  ECF0  F057         	call	_pad	;wreg free
  8932   00FDF4                     l1699:
  8933   00FDF4  0012               	return		;funcret
  8934   00FDF6                     __end_of_efgtoa:
  8935                           	callstack 0
  8936                           
  8937 ;; *************** function _strcpy *****************
  8938 ;; Defined at:
  8939 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8942 ;;		 -> dbuf(80), 
  8943 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8944 ;;		 -> STR_22(4), STR_19(4), 
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  d               2    4[COMRAM] PTR unsigned char 
  8947 ;;		 -> dbuf(80), 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  2    0[COMRAM] PTR unsigned char 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;Total ram usage:        6 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_efgtoa
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text37
  8971   00AC2E                     __ptext37:
  8972                           	callstack 0
  8973   00AC2E                     _strcpy:
  8974                           	callstack 26
  8975   00AC2E  C001  F005         	movff	strcpy@dest,strcpy@d
  8976   00AC32  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  8977   00AC36                     l9305:
  8978   00AC36  0060  F00F  FFF6   	movff	strcpy@src,tblptrl
  8979   00AC3C  0060  F013  FFF7   	movff	strcpy@src+1,tblptrh
  8980   00AC42  4A03               	infsnz	strcpy@src^0,f,c
  8981   00AC44  2A04               	incf	(strcpy@src+1)^0,f,c
  8982   00AC46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8983   00AC46  6AF8               	clrf	tblptru,c
  8984   00AC48                     	endif
  8985   00AC48                     	if	0	;tblptru may be non-zero
  8986   00AC48                     	endif
  8987   00AC48  0060  F017  FFD9   	movff	strcpy@d,fsr2l
  8988   00AC4E  0060  F01B  FFDA   	movff	strcpy@d+1,fsr2h
  8989   00AC54  4A05               	infsnz	strcpy@d^0,f,c
  8990   00AC56  2A06               	incf	(strcpy@d+1)^0,f,c
  8991   00AC58  0008               	tblrd		*
  8992   00AC5A  006F FFD7 FFDF     	movff	tablat,indf2
  8993   00AC60  50DF               	movf	indf2,w,c
  8994   00AC62  A4D8               	btfss	status,2,c
  8995   00AC64  EF36  F056         	goto	u9141
  8996   00AC68  EF38  F056         	goto	u9140
  8997   00AC6C                     u9141:
  8998   00AC6C  EF1B  F056         	goto	l9305
  8999   00AC70                     u9140:
  9000   00AC70  0012               	return		;funcret
  9001   00AC72                     __end_of_strcpy:
  9002                           	callstack 0
  9003                           
  9004 ;; *************** function _pad *****************
  9005 ;; Defined at:
  9006 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  9009 ;;		 -> sprintf@f(12), 
  9010 ;;  buf             2   17[COMRAM] PTR unsigned char 
  9011 ;;		 -> dbuf(80), 
  9012 ;;  p               2   19[COMRAM] int 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;  i               2   22[COMRAM] int 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      void 
  9017 ;; Registers used:
  9018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9024 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9028 ;;Total ram usage:        8 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; Hardware stack levels required when called: 4
  9031 ;; This function calls:
  9032 ;;		_fputc
  9033 ;;		_fputs
  9034 ;; This function is called by:
  9035 ;;		_efgtoa
  9036 ;;		_utoa
  9037 ;;		_xtoa
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text38
  9042   00AFE0                     __ptext38:
  9043                           	callstack 0
  9044   00AFE0                     _pad:
  9045                           	callstack 22
  9046   00AFE0                     
  9047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  9048   00AFE0  BE15               	btfsc	(pad@p+1)^0,7,c
  9049   00AFE2  EFF7  F057         	goto	u9050
  9050   00AFE6  EFF5  F057         	goto	u9051
  9051   00AFEA                     u9051:
  9052   00AFEA  EFFB  F057         	goto	l1684
  9053   00AFEE                     u9050:
  9054   00AFEE                     
  9055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9056   00AFEE  0E00               	movlw	0
  9057   00AFF0  6E15               	movwf	(pad@p+1)^0,c
  9058   00AFF2  0E00               	movlw	0
  9059   00AFF4  6E14               	movwf	pad@p^0,c
  9060   00AFF6                     l1684:
  9061                           
  9062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9063   00AFF6  0E00               	movlw	0
  9064   00AFF8  6E18               	movwf	(pad@i+1)^0,c
  9065   00AFFA  0E00               	movlw	0
  9066   00AFFC  6E17               	movwf	pad@i^0,c
  9067                           
  9068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9069   00AFFE  EF0B  F058         	goto	l9277
  9070   00B002                     l9273:
  9071                           
  9072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9073   00B002  0E00               	movlw	0
  9074   00B004  6E04               	movwf	(fputc@c+1)^0,c
  9075   00B006  0E20               	movlw	32
  9076   00B008  6E03               	movwf	fputc@c^0,c
  9077   00B00A  C011  F005         	movff	pad@fp,fputc@fp
  9078   00B00E  EC9A  F05E         	call	_fputc	;wreg free
  9079   00B012                     
  9080                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9081   00B012  4A17               	infsnz	pad@i^0,f,c
  9082   00B014  2A18               	incf	(pad@i+1)^0,f,c
  9083   00B016                     l9277:
  9084                           
  9085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9086   00B016  5014               	movf	pad@p^0,w,c
  9087   00B018  5C17               	subwf	pad@i^0,w,c
  9088   00B01A  5018               	movf	(pad@i+1)^0,w,c
  9089   00B01C  0A80               	xorlw	128
  9090   00B01E  6E16               	movwf	??_pad^0,c
  9091   00B020  5015               	movf	(pad@p+1)^0,w,c
  9092   00B022  0A80               	xorlw	128
  9093   00B024  5816               	subwfb	??_pad^0,w,c
  9094   00B026  A0D8               	btfss	status,0,c
  9095   00B028  EF18  F058         	goto	u9061
  9096   00B02C  EF1A  F058         	goto	u9060
  9097   00B030                     u9061:
  9098   00B030  EF01  F058         	goto	l9273
  9099   00B034                     u9060:
  9100   00B034                     
  9101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9102   00B034  C012  F00B         	movff	pad@buf,fputs@s
  9103   00B038  C013  F00C         	movff	pad@buf+1,fputs@s+1
  9104   00B03C  C011  F00D         	movff	pad@fp,fputs@fp
  9105   00B040  EC92  F055         	call	_fputs	;wreg free
  9106   00B044  0012               	return		;funcret
  9107   00B046                     __end_of_pad:
  9108                           	callstack 0
  9109                           
  9110 ;; *************** function _fputs *****************
  9111 ;; Defined at:
  9112 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9115 ;;		 -> dbuf(80), 
  9116 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  9117 ;;		 -> sprintf@f(12), 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  i               2   14[COMRAM] int 
  9120 ;;  c               1   13[COMRAM] unsigned char 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  2   10[COMRAM] int 
  9123 ;; Registers used:
  9124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9130 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9134 ;;Total ram usage:        6 bytes
  9135 ;; Hardware stack levels used: 1
  9136 ;; Hardware stack levels required when called: 3
  9137 ;; This function calls:
  9138 ;;		_fputc
  9139 ;; This function is called by:
  9140 ;;		_pad
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text39
  9145   00AB24                     __ptext39:
  9146                           	callstack 0
  9147   00AB24                     _fputs:
  9148                           	callstack 22
  9149   00AB24  0E00               	movlw	0
  9150   00AB26  6E10               	movwf	(fputs@i+1)^0,c
  9151   00AB28  0E00               	movlw	0
  9152   00AB2A  6E0F               	movwf	fputs@i^0,c
  9153   00AB2C  EFA1  F055         	goto	l8791
  9154   00AB30                     l8787:
  9155   00AB30  C00E  F003         	movff	fputs@c,fputc@c
  9156   00AB34  6A04               	clrf	(fputc@c+1)^0,c
  9157   00AB36  C00D  F005         	movff	fputs@fp,fputc@fp
  9158   00AB3A  EC9A  F05E         	call	_fputc	;wreg free
  9159   00AB3E  4A0F               	infsnz	fputs@i^0,f,c
  9160   00AB40  2A10               	incf	(fputs@i+1)^0,f,c
  9161   00AB42                     l8791:
  9162   00AB42  500F               	movf	fputs@i^0,w,c
  9163   00AB44  240B               	addwf	fputs@s^0,w,c
  9164   00AB46  6ED9               	movwf	fsr2l,c
  9165   00AB48  5010               	movf	(fputs@i+1)^0,w,c
  9166   00AB4A  200C               	addwfc	(fputs@s+1)^0,w,c
  9167   00AB4C  6EDA               	movwf	fsr2h,c
  9168   00AB4E  50DF               	movf	indf2,w,c
  9169   00AB50  6E0E               	movwf	fputs@c^0,c
  9170   00AB52  500E               	movf	fputs@c^0,w,c
  9171   00AB54  A4D8               	btfss	status,2,c
  9172   00AB56  EFAF  F055         	goto	u8331
  9173   00AB5A  EFB1  F055         	goto	u8330
  9174   00AB5E                     u8331:
  9175   00AB5E  EF98  F055         	goto	l8787
  9176   00AB62                     u8330:
  9177   00AB62  0012               	return		;funcret
  9178   00AB64                     __end_of_fputs:
  9179                           	callstack 0
  9180                           
  9181 ;; *************** function _fputc *****************
  9182 ;; Defined at:
  9183 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  9184 ;; Parameters:    Size  Location     Type
  9185 ;;  c               2    2[COMRAM] int 
  9186 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  9187 ;;		 -> sprintf@f(12), 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  2    2[COMRAM] int 
  9192 ;; Registers used:
  9193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9199 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9201 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;Total ram usage:        8 bytes
  9204 ;; Hardware stack levels used: 1
  9205 ;; Hardware stack levels required when called: 2
  9206 ;; This function calls:
  9207 ;;		_putch
  9208 ;; This function is called by:
  9209 ;;		_pad
  9210 ;;		_vfpfcnvrt
  9211 ;;		_fputs
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           	psect	text40
  9216   00BD34                     __ptext40:
  9217                           	callstack 0
  9218   00BD34                     _fputc:
  9219                           	callstack 22
  9220   00BD34  5005               	movf	fputc@fp^0,w,c
  9221   00BD36  B4D8               	btfsc	status,2,c
  9222   00BD38  EFA0  F05E         	goto	u7891
  9223   00BD3C  EFA2  F05E         	goto	u7890
  9224   00BD40                     u7891:
  9225   00BD40  EFAA  F05E         	goto	l8565
  9226   00BD44                     u7890:
  9227   00BD44  5005               	movf	fputc@fp^0,w,c
  9228   00BD46  A4D8               	btfss	status,2,c
  9229   00BD48  EFA8  F05E         	goto	u7901
  9230   00BD4C  EFAA  F05E         	goto	u7900
  9231   00BD50                     u7901:
  9232   00BD50  EFAF  F05E         	goto	l8567
  9233   00BD54                     u7900:
  9234   00BD54                     l8565:
  9235   00BD54  5003               	movf	fputc@c^0,w,c
  9236   00BD56  ECDB  F052         	call	_putch
  9237   00BD5A  EFFB  F05E         	goto	l1861
  9238   00BD5E                     l8567:
  9239   00BD5E  5005               	movf	fputc@fp^0,w,c
  9240   00BD60  6ED9               	movwf	fsr2l,c
  9241   00BD62  6ADA               	clrf	fsr2h,c
  9242   00BD64  0E0A               	movlw	10
  9243   00BD66  26D9               	addwf	fsr2l,f,c
  9244   00BD68  50DE               	movf	postinc2,w,c
  9245   00BD6A  10DE               	iorwf	postinc2,w,c
  9246   00BD6C  B4D8               	btfsc	status,2,c
  9247   00BD6E  EFBB  F05E         	goto	u7911
  9248   00BD72  EFBD  F05E         	goto	u7910
  9249   00BD76                     u7911:
  9250   00BD76  EFD6  F05E         	goto	l8571
  9251   00BD7A                     u7910:
  9252   00BD7A  5005               	movf	fputc@fp^0,w,c
  9253   00BD7C  6ED9               	movwf	fsr2l,c
  9254   00BD7E  6ADA               	clrf	fsr2h,c
  9255   00BD80  0E0A               	movlw	10
  9256   00BD82  26D9               	addwf	fsr2l,f,c
  9257   00BD84  5005               	movf	fputc@fp^0,w,c
  9258   00BD86  6EE1               	movwf	fsr1l,c
  9259   00BD88  6AE2               	clrf	fsr1h,c
  9260   00BD8A  0E03               	movlw	3
  9261   00BD8C  26E1               	addwf	fsr1l,f,c
  9262   00BD8E  50DE               	movf	postinc2,w,c
  9263   00BD90  5CE6               	subwf	postinc1,w,c
  9264   00BD92  50E6               	movf	postinc1,w,c
  9265   00BD94  0A80               	xorlw	128
  9266   00BD96  6E0A               	movwf	(??_fputc+4)^0,c
  9267   00BD98  50DE               	movf	postinc2,w,c
  9268   00BD9A  0A80               	xorlw	128
  9269   00BD9C  580A               	subwfb	(??_fputc+4)^0,w,c
  9270   00BD9E  B0D8               	btfsc	status,0,c
  9271   00BDA0  EFD4  F05E         	goto	u7921
  9272   00BDA4  EFD6  F05E         	goto	u7920
  9273   00BDA8                     u7921:
  9274   00BDA8  EFFB  F05E         	goto	l1861
  9275   00BDAC                     u7920:
  9276   00BDAC                     l8571:
  9277   00BDAC  5005               	movf	fputc@fp^0,w,c
  9278   00BDAE  6ED9               	movwf	fsr2l,c
  9279   00BDB0  6ADA               	clrf	fsr2h,c
  9280   00BDB2  0E03               	movlw	3
  9281   00BDB4  26D9               	addwf	fsr2l,f,c
  9282   00BDB6  006F FF78  F006    	movff	postinc2,??_fputc
  9283   00BDBC  006F FF74  F007    	movff	postdec2,??_fputc+1
  9284   00BDC2  5005               	movf	fputc@fp^0,w,c
  9285   00BDC4  6ED9               	movwf	fsr2l,c
  9286   00BDC6  6ADA               	clrf	fsr2h,c
  9287   00BDC8  006F FF78  F008    	movff	postinc2,??_fputc+2
  9288   00BDCE  006F FF74  F009    	movff	postdec2,??_fputc+3
  9289   00BDD4  5006               	movf	??_fputc^0,w,c
  9290   00BDD6  2408               	addwf	(??_fputc+2)^0,w,c
  9291   00BDD8  6ED9               	movwf	fsr2l,c
  9292   00BDDA  5007               	movf	(??_fputc+1)^0,w,c
  9293   00BDDC  2009               	addwfc	(??_fputc+3)^0,w,c
  9294   00BDDE  6EDA               	movwf	fsr2h,c
  9295   00BDE0  0060  F00F  FFDF   	movff	fputc@c,indf2
  9296   00BDE6  5005               	movf	fputc@fp^0,w,c
  9297   00BDE8  6ED9               	movwf	fsr2l,c
  9298   00BDEA  6ADA               	clrf	fsr2h,c
  9299   00BDEC  0E03               	movlw	3
  9300   00BDEE  26D9               	addwf	fsr2l,f,c
  9301   00BDF0  2ADE               	incf	postinc2,f,c
  9302   00BDF2  0E00               	movlw	0
  9303   00BDF4  22DD               	addwfc	postdec2,f,c
  9304   00BDF6                     l1861:
  9305   00BDF6  0012               	return		;funcret
  9306   00BDF8                     __end_of_fputc:
  9307                           	callstack 0
  9308                           
  9309 ;; *************** function _putch *****************
  9310 ;; Defined at:
  9311 ;;		line 184 in file "mcc_generated_files/uart1.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  txData          1    wreg     unsigned char 
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;  txData          1    1[COMRAM] unsigned char 
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, status,2, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9329 ;;Total ram usage:        1 bytes
  9330 ;; Hardware stack levels used: 1
  9331 ;; Hardware stack levels required when called: 1
  9332 ;; This function calls:
  9333 ;;		_UART1_Write
  9334 ;; This function is called by:
  9335 ;;		_fputc
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text41
  9340   00A5B6                     __ptext41:
  9341                           	callstack 0
  9342   00A5B6                     _putch:
  9343                           	callstack 22
  9344                           
  9345                           ;incstack = 0
  9346                           ;putch@txData stored from wreg
  9347   00A5B6  6E02               	movwf	putch@txData^0,c
  9348   00A5B8                     
  9349                           ;mcc_generated_files/uart1.c: 184: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          185: {;mcc_generated_files/uart1.c: 186:     UART1_Write(txData);
  9350   00A5B8  5002               	movf	putch@txData^0,w,c
  9351   00A5BA  EC9D  F053         	call	_UART1_Write
  9352   00A5BE  0012               	return		;funcret
  9353   00A5C0                     __end_of_putch:
  9354                           	callstack 0
  9355                           
  9356 ;; *************** function _memcpy *****************
  9357 ;; Defined at:
  9358 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;  d1              2    0[COMRAM] PTR void 
  9361 ;;		 -> dbuf(80), eepromBuffer(24), ReadAndSendEEPROMData@gz_read(4), ReadAndSendEEPROMData@gy_read(4), 
  9362 ;;		 -> ReadAndSendEEPROMData@gx_read(4), ReadAndSendEEPROMData@az_read(4), ReadAndSendEEPROMData@ay_read(4), ReadAndSen
      +dEEPROMData@ax_read(4), 
  9363 ;;		 -> ReadAndSendEEPROMDataCSV@gz_read(4), ReadAndSendEEPROMDataCSV@gy_read(4), ReadAndSendEEPROMDataCSV@gx_read(4), R
      +eadAndSendEEPROMDataCSV@az_read(4), 
  9364 ;;		 -> ReadAndSendEEPROMDataCSV@ay_read(4), ReadAndSendEEPROMDataCSV@ax_read(4), 
  9365 ;;  s1              2    2[COMRAM] PTR const void 
  9366 ;;		 -> dbuf(80), gz(4), gy(4), gx(4), 
  9367 ;;		 -> az(4), ay(4), ax(4), ReadAndSendEEPROMData@eepromReadBuffer(24), 
  9368 ;;		 -> ReadAndSendEEPROMDataCSV@eepromReadBuffer(24), 
  9369 ;;  n               2    4[COMRAM] unsigned int 
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9372 ;;		 -> dbuf(80), gz(4), gy(4), gx(4), 
  9373 ;;		 -> az(4), ay(4), ax(4), ReadAndSendEEPROMData@eepromReadBuffer(24), 
  9374 ;;		 -> ReadAndSendEEPROMDataCSV@eepromReadBuffer(24), 
  9375 ;;  d               2    7[COMRAM] PTR unsigned char 
  9376 ;;		 -> dbuf(80), eepromBuffer(24), ReadAndSendEEPROMData@gz_read(4), ReadAndSendEEPROMData@gy_read(4), 
  9377 ;;		 -> ReadAndSendEEPROMData@gx_read(4), ReadAndSendEEPROMData@az_read(4), ReadAndSendEEPROMData@ay_read(4), ReadAndSen
      +dEEPROMData@ax_read(4), 
  9378 ;;		 -> ReadAndSendEEPROMDataCSV@gz_read(4), ReadAndSendEEPROMDataCSV@gy_read(4), ReadAndSendEEPROMDataCSV@gx_read(4), R
      +eadAndSendEEPROMDataCSV@az_read(4), 
  9379 ;;		 -> ReadAndSendEEPROMDataCSV@ay_read(4), ReadAndSendEEPROMDataCSV@ax_read(4), 
  9380 ;;  tmp             1    6[COMRAM] unsigned char 
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  2    0[COMRAM] PTR void 
  9383 ;; Registers used:
  9384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9390 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;Total ram usage:       11 bytes
  9395 ;; Hardware stack levels used: 1
  9396 ;; This function calls:
  9397 ;;		Nothing
  9398 ;; This function is called by:
  9399 ;;		_ReadAndSendEEPROMDataCSV
  9400 ;;		_ReadAndSendEEPROMData
  9401 ;;		_StartLogging
  9402 ;;		_efgtoa
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text42
  9407   00AF2A                     __ptext42:
  9408                           	callstack 0
  9409   00AF2A                     _memcpy:
  9410                           	callstack 26
  9411   00AF2A  C003  F00A         	movff	memcpy@s1,memcpy@s
  9412   00AF2E  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  9413   00AF32  C001  F008         	movff	memcpy@d1,memcpy@d
  9414   00AF36  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  9415   00AF3A  EFB4  F057         	goto	l8849
  9416   00AF3E                     l8841:
  9417   00AF3E  0060  F02B  FFD9   	movff	memcpy@s,fsr2l
  9418   00AF44  0060  F02F  FFDA   	movff	memcpy@s+1,fsr2h
  9419   00AF4A  50DF               	movf	indf2,w,c
  9420   00AF4C  6E07               	movwf	memcpy@tmp^0,c
  9421   00AF4E  4A0A               	infsnz	memcpy@s^0,f,c
  9422   00AF50  2A0B               	incf	(memcpy@s+1)^0,f,c
  9423   00AF52  0060  F023  FFD9   	movff	memcpy@d,fsr2l
  9424   00AF58  0060  F027  FFDA   	movff	memcpy@d+1,fsr2h
  9425   00AF5E  0060  F01F  FFDF   	movff	memcpy@tmp,indf2
  9426   00AF64  4A08               	infsnz	memcpy@d^0,f,c
  9427   00AF66  2A09               	incf	(memcpy@d+1)^0,f,c
  9428   00AF68                     l8849:
  9429   00AF68  0605               	decf	memcpy@n^0,f,c
  9430   00AF6A  A0D8               	btfss	status,0,c
  9431   00AF6C  0606               	decf	(memcpy@n+1)^0,f,c
  9432   00AF6E  2805               	incf	memcpy@n^0,w,c
  9433   00AF70  E106               	bnz	u8371
  9434   00AF72  2806               	incf	(memcpy@n+1)^0,w,c
  9435   00AF74  A4D8               	btfss	status,2,c
  9436   00AF76  EFBF  F057         	goto	u8371
  9437   00AF7A  EFC1  F057         	goto	u8370
  9438   00AF7E                     u8371:
  9439   00AF7E  EF9F  F057         	goto	l8841
  9440   00AF82                     u8370:
  9441   00AF82  0012               	return		;funcret
  9442   00AF84                     __end_of_memcpy:
  9443                           	callstack 0
  9444                           
  9445 ;; *************** function _labs *****************
  9446 ;; Defined at:
  9447 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  a               4    0[COMRAM] long 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  4    0[COMRAM] long 
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;Total ram usage:        8 bytes
  9466 ;; Hardware stack levels used: 1
  9467 ;; This function calls:
  9468 ;;		Nothing
  9469 ;; This function is called by:
  9470 ;;		_efgtoa
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text43
  9475   00AE7C                     __ptext43:
  9476                           	callstack 0
  9477   00AE7C                     _labs:
  9478                           	callstack 26
  9479   00AE7C  BE04               	btfsc	(labs@a+3)^0,7,c
  9480   00AE7E  EF43  F057         	goto	u9151
  9481   00AE82  EF45  F057         	goto	u9150
  9482   00AE86                     u9151:
  9483   00AE86  EF4F  F057         	goto	l9311
  9484   00AE8A                     u9150:
  9485   00AE8A  C001  F001         	movff	labs@a,?_labs
  9486   00AE8E  C002  F002         	movff	labs@a+1,?_labs+1
  9487   00AE92  C003  F003         	movff	labs@a+2,?_labs+2
  9488   00AE96  C004  F004         	movff	labs@a+3,?_labs+3
  9489   00AE9A  EF68  F057         	goto	l1849
  9490   00AE9E                     l9311:
  9491   00AE9E  C001  F005         	movff	labs@a,??_labs
  9492   00AEA2  C002  F006         	movff	labs@a+1,??_labs+1
  9493   00AEA6  C003  F007         	movff	labs@a+2,??_labs+2
  9494   00AEAA  C004  F008         	movff	labs@a+3,??_labs+3
  9495   00AEAE  1E05               	comf	??_labs^0,f,c
  9496   00AEB0  1E06               	comf	(??_labs+1)^0,f,c
  9497   00AEB2  1E07               	comf	(??_labs+2)^0,f,c
  9498   00AEB4  1E08               	comf	(??_labs+3)^0,f,c
  9499   00AEB6  2A05               	incf	??_labs^0,f,c
  9500   00AEB8  0E00               	movlw	0
  9501   00AEBA  2206               	addwfc	(??_labs+1)^0,f,c
  9502   00AEBC  2207               	addwfc	(??_labs+2)^0,f,c
  9503   00AEBE  2208               	addwfc	(??_labs+3)^0,f,c
  9504   00AEC0  C005  F001         	movff	??_labs,?_labs
  9505   00AEC4  C006  F002         	movff	??_labs+1,?_labs+1
  9506   00AEC8  C007  F003         	movff	??_labs+2,?_labs+2
  9507   00AECC  C008  F004         	movff	??_labs+3,?_labs+3
  9508   00AED0                     l1849:
  9509   00AED0  0012               	return		;funcret
  9510   00AED2                     __end_of_labs:
  9511                           	callstack 0
  9512                           
  9513 ;; *************** function _floorf *****************
  9514 ;; Defined at:
  9515 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  x               4   39[COMRAM] float 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  u               4   55[COMRAM] struct .
  9520 ;;  m               4   49[COMRAM] unsigned long 
  9521 ;;  e               2   53[COMRAM] int 
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  4   39[COMRAM] float 
  9524 ;; Registers used:
  9525 ;;		wreg, status,2, status,0
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9533 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9534 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9535 ;;Total ram usage:       20 bytes
  9536 ;; Hardware stack levels used: 1
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_efgtoa
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           	psect	text44
  9545   00CD18                     __ptext44:
  9546                           	callstack 0
  9547   00CD18                     _floorf:
  9548                           	callstack 26
  9549   00CD18  C214  F038         	movff	floorf@F521,floorf@u
  9550   00CD1C  C215  F039         	movff	floorf@F521+1,floorf@u+1
  9551   00CD20  C216  F03A         	movff	floorf@F521+2,floorf@u+2
  9552   00CD24  C217  F03B         	movff	floorf@F521+3,floorf@u+3
  9553   00CD28  C028  F038         	movff	floorf@x,floorf@u
  9554   00CD2C  C029  F039         	movff	floorf@x+1,floorf@u+1
  9555   00CD30  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  9556   00CD34  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  9557   00CD38  0E81               	movlw	129
  9558   00CD3A  6E2C               	movwf	??_floorf^0,c
  9559   00CD3C  0EFF               	movlw	255
  9560   00CD3E  6E2D               	movwf	(??_floorf+1)^0,c
  9561   00CD40  C038  F02E         	movff	floorf@u,??_floorf+2
  9562   00CD44  C039  F02F         	movff	floorf@u+1,??_floorf+3
  9563   00CD48  C03A  F030         	movff	floorf@u+2,??_floorf+4
  9564   00CD4C  C03B  F031         	movff	floorf@u+3,??_floorf+5
  9565   00CD50  0E18               	movlw	24
  9566   00CD52  EFB0  F066         	goto	u9160
  9567   00CD56                     u9165:
  9568   00CD56  90D8               	bcf	status,0,c
  9569   00CD58  3231               	rrcf	(??_floorf+5)^0,f,c
  9570   00CD5A  3230               	rrcf	(??_floorf+4)^0,f,c
  9571   00CD5C  322F               	rrcf	(??_floorf+3)^0,f,c
  9572   00CD5E  322E               	rrcf	(??_floorf+2)^0,f,c
  9573   00CD60                     u9160:
  9574   00CD60  2EE8               	decfsz	wreg,f,c
  9575   00CD62  EFAB  F066         	goto	u9165
  9576   00CD66  502E               	movf	(??_floorf+2)^0,w,c
  9577   00CD68  242C               	addwf	??_floorf^0,w,c
  9578   00CD6A  6E36               	movwf	floorf@e^0,c
  9579   00CD6C  0E00               	movlw	0
  9580   00CD6E  202D               	addwfc	(??_floorf+1)^0,w,c
  9581   00CD70  6E37               	movwf	(floorf@e+1)^0,c
  9582   00CD72  BE37               	btfsc	(floorf@e+1)^0,7,c
  9583   00CD74  EFC5  F066         	goto	u9171
  9584   00CD78  5037               	movf	(floorf@e+1)^0,w,c
  9585   00CD7A  E109               	bnz	u9170
  9586   00CD7C  0E17               	movlw	23
  9587   00CD7E  5C36               	subwf	floorf@e^0,w,c
  9588   00CD80  A0D8               	btfss	status,0,c
  9589   00CD82  EFC5  F066         	goto	u9171
  9590   00CD86  EFC7  F066         	goto	u9170
  9591   00CD8A                     u9171:
  9592   00CD8A  EFD1  F066         	goto	l9321
  9593   00CD8E                     u9170:
  9594   00CD8E                     l9319:
  9595   00CD8E  C028  F028         	movff	floorf@x,?_floorf
  9596   00CD92  C029  F029         	movff	floorf@x+1,?_floorf+1
  9597   00CD96  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  9598   00CD9A  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  9599   00CD9E  EF94  F067         	goto	l1835
  9600   00CDA2                     l9321:
  9601   00CDA2  BE37               	btfsc	(floorf@e+1)^0,7,c
  9602   00CDA4  EFD6  F066         	goto	u9181
  9603   00CDA8  EFD8  F066         	goto	u9180
  9604   00CDAC                     u9181:
  9605   00CDAC  EF48  F067         	goto	l9331
  9606   00CDB0                     u9180:
  9607   00CDB0  C036  F02C         	movff	floorf@e,??_floorf
  9608   00CDB4  0EFF               	movlw	255
  9609   00CDB6  6E2D               	movwf	(??_floorf+1)^0,c
  9610   00CDB8  0EFF               	movlw	255
  9611   00CDBA  6E2E               	movwf	(??_floorf+2)^0,c
  9612   00CDBC  0E7F               	movlw	127
  9613   00CDBE  6E2F               	movwf	(??_floorf+3)^0,c
  9614   00CDC0  0E00               	movlw	0
  9615   00CDC2  6E30               	movwf	(??_floorf+4)^0,c
  9616   00CDC4                     u9195:
  9617   00CDC4  662C               	tstfsz	??_floorf^0,c
  9618   00CDC6  EFE7  F066         	goto	u9196
  9619   00CDCA  EFEF  F066         	goto	u9197
  9620   00CDCE                     u9196:
  9621   00CDCE  3430               	rlcf	(??_floorf+4)^0,w,c
  9622   00CDD0  3230               	rrcf	(??_floorf+4)^0,f,c
  9623   00CDD2  322F               	rrcf	(??_floorf+3)^0,f,c
  9624   00CDD4  322E               	rrcf	(??_floorf+2)^0,f,c
  9625   00CDD6  322D               	rrcf	(??_floorf+1)^0,f,c
  9626   00CDD8  2E2C               	decfsz	??_floorf^0,f,c
  9627   00CDDA  EFE2  F066         	goto	u9195
  9628   00CDDE                     u9197:
  9629   00CDDE  C02D  F032         	movff	??_floorf+1,floorf@m
  9630   00CDE2  C02E  F033         	movff	??_floorf+2,floorf@m+1
  9631   00CDE6  C02F  F034         	movff	??_floorf+3,floorf@m+2
  9632   00CDEA  C030  F035         	movff	??_floorf+4,floorf@m+3
  9633   00CDEE  5032               	movf	floorf@m^0,w,c
  9634   00CDF0  1438               	andwf	floorf@u^0,w,c
  9635   00CDF2  6E2C               	movwf	??_floorf^0,c
  9636   00CDF4  5033               	movf	(floorf@m+1)^0,w,c
  9637   00CDF6  1439               	andwf	(floorf@u+1)^0,w,c
  9638   00CDF8  6E2D               	movwf	(??_floorf+1)^0,c
  9639   00CDFA  5034               	movf	(floorf@m+2)^0,w,c
  9640   00CDFC  143A               	andwf	(floorf@u+2)^0,w,c
  9641   00CDFE  6E2E               	movwf	(??_floorf+2)^0,c
  9642   00CE00  5035               	movf	(floorf@m+3)^0,w,c
  9643   00CE02  143B               	andwf	(floorf@u+3)^0,w,c
  9644   00CE04  6E2F               	movwf	(??_floorf+3)^0,c
  9645   00CE06  502C               	movf	??_floorf^0,w,c
  9646   00CE08  102D               	iorwf	(??_floorf+1)^0,w,c
  9647   00CE0A  102E               	iorwf	(??_floorf+2)^0,w,c
  9648   00CE0C  102F               	iorwf	(??_floorf+3)^0,w,c
  9649   00CE0E  A4D8               	btfss	status,2,c
  9650   00CE10  EF0C  F067         	goto	u9201
  9651   00CE14  EF0E  F067         	goto	u9200
  9652   00CE18                     u9201:
  9653   00CE18  EF10  F067         	goto	l9327
  9654   00CE1C                     u9200:
  9655   00CE1C  EFC7  F066         	goto	l9319
  9656   00CE20                     l9327:
  9657   00CE20  C038  F02C         	movff	floorf@u,??_floorf
  9658   00CE24  C039  F02D         	movff	floorf@u+1,??_floorf+1
  9659   00CE28  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  9660   00CE2C  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  9661   00CE30  0E20               	movlw	32
  9662   00CE32  EF20  F067         	goto	u9210
  9663   00CE36                     u9215:
  9664   00CE36  90D8               	bcf	status,0,c
  9665   00CE38  322F               	rrcf	(??_floorf+3)^0,f,c
  9666   00CE3A  322E               	rrcf	(??_floorf+2)^0,f,c
  9667   00CE3C  322D               	rrcf	(??_floorf+1)^0,f,c
  9668   00CE3E  322C               	rrcf	??_floorf^0,f,c
  9669   00CE40                     u9210:
  9670   00CE40  2EE8               	decfsz	wreg,f,c
  9671   00CE42  EF1B  F067         	goto	u9215
  9672   00CE46  502C               	movf	??_floorf^0,w,c
  9673   00CE48  102D               	iorwf	(??_floorf+1)^0,w,c
  9674   00CE4A  102E               	iorwf	(??_floorf+2)^0,w,c
  9675   00CE4C  102F               	iorwf	(??_floorf+3)^0,w,c
  9676   00CE4E  B4D8               	btfsc	status,2,c
  9677   00CE50  EF2C  F067         	goto	u9221
  9678   00CE54  EF2E  F067         	goto	u9220
  9679   00CE58                     u9221:
  9680   00CE58  EF36  F067         	goto	l1838
  9681   00CE5C                     u9220:
  9682   00CE5C  5032               	movf	floorf@m^0,w,c
  9683   00CE5E  2638               	addwf	floorf@u^0,f,c
  9684   00CE60  5033               	movf	(floorf@m+1)^0,w,c
  9685   00CE62  2239               	addwfc	(floorf@u+1)^0,f,c
  9686   00CE64  5034               	movf	(floorf@m+2)^0,w,c
  9687   00CE66  223A               	addwfc	(floorf@u+2)^0,f,c
  9688   00CE68  5035               	movf	(floorf@m+3)^0,w,c
  9689   00CE6A  223B               	addwfc	(floorf@u+3)^0,f,c
  9690   00CE6C                     l1838:
  9691   00CE6C  1C32               	comf	floorf@m^0,w,c
  9692   00CE6E  6E2C               	movwf	??_floorf^0,c
  9693   00CE70  1C33               	comf	(floorf@m+1)^0,w,c
  9694   00CE72  6E2D               	movwf	(??_floorf+1)^0,c
  9695   00CE74  1C34               	comf	(floorf@m+2)^0,w,c
  9696   00CE76  6E2E               	movwf	(??_floorf+2)^0,c
  9697   00CE78  1C35               	comf	(floorf@m+3)^0,w,c
  9698   00CE7A  6E2F               	movwf	(??_floorf+3)^0,c
  9699   00CE7C  502C               	movf	??_floorf^0,w,c
  9700   00CE7E  1638               	andwf	floorf@u^0,f,c
  9701   00CE80  502D               	movf	(??_floorf+1)^0,w,c
  9702   00CE82  1639               	andwf	(floorf@u+1)^0,f,c
  9703   00CE84  502E               	movf	(??_floorf+2)^0,w,c
  9704   00CE86  163A               	andwf	(floorf@u+2)^0,f,c
  9705   00CE88  502F               	movf	(??_floorf+3)^0,w,c
  9706   00CE8A  163B               	andwf	(floorf@u+3)^0,f,c
  9707   00CE8C  EF8C  F067         	goto	l9339
  9708   00CE90                     l9331:
  9709   00CE90  C038  F02C         	movff	floorf@u,??_floorf
  9710   00CE94  C039  F02D         	movff	floorf@u+1,??_floorf+1
  9711   00CE98  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  9712   00CE9C  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  9713   00CEA0  0E20               	movlw	32
  9714   00CEA2  EF58  F067         	goto	u9230
  9715   00CEA6                     u9235:
  9716   00CEA6  90D8               	bcf	status,0,c
  9717   00CEA8  322F               	rrcf	(??_floorf+3)^0,f,c
  9718   00CEAA  322E               	rrcf	(??_floorf+2)^0,f,c
  9719   00CEAC  322D               	rrcf	(??_floorf+1)^0,f,c
  9720   00CEAE  322C               	rrcf	??_floorf^0,f,c
  9721   00CEB0                     u9230:
  9722   00CEB0  2EE8               	decfsz	wreg,f,c
  9723   00CEB2  EF53  F067         	goto	u9235
  9724   00CEB6  502C               	movf	??_floorf^0,w,c
  9725   00CEB8  102D               	iorwf	(??_floorf+1)^0,w,c
  9726   00CEBA  102E               	iorwf	(??_floorf+2)^0,w,c
  9727   00CEBC  102F               	iorwf	(??_floorf+3)^0,w,c
  9728   00CEBE  A4D8               	btfss	status,2,c
  9729   00CEC0  EF64  F067         	goto	u9241
  9730   00CEC4  EF66  F067         	goto	u9240
  9731   00CEC8                     u9241:
  9732   00CEC8  EF70  F067         	goto	l9335
  9733   00CECC                     u9240:
  9734   00CECC  0E00               	movlw	0
  9735   00CECE  6E38               	movwf	floorf@u^0,c
  9736   00CED0  0E00               	movlw	0
  9737   00CED2  6E39               	movwf	(floorf@u+1)^0,c
  9738   00CED4  0E00               	movlw	0
  9739   00CED6  6E3A               	movwf	(floorf@u+2)^0,c
  9740   00CED8  0E00               	movlw	0
  9741   00CEDA  6E3B               	movwf	(floorf@u+3)^0,c
  9742   00CEDC  EF8C  F067         	goto	l9339
  9743   00CEE0                     l9335:
  9744   00CEE0  90D8               	bcf	status,0,c
  9745   00CEE2  3438               	rlcf	floorf@u^0,w,c
  9746   00CEE4  6E2C               	movwf	??_floorf^0,c
  9747   00CEE6  3439               	rlcf	(floorf@u+1)^0,w,c
  9748   00CEE8  6E2D               	movwf	(??_floorf+1)^0,c
  9749   00CEEA  343A               	rlcf	(floorf@u+2)^0,w,c
  9750   00CEEC  6E2E               	movwf	(??_floorf+2)^0,c
  9751   00CEEE  343B               	rlcf	(floorf@u+3)^0,w,c
  9752   00CEF0  6E2F               	movwf	(??_floorf+3)^0,c
  9753   00CEF2  502C               	movf	??_floorf^0,w,c
  9754   00CEF4  102D               	iorwf	(??_floorf+1)^0,w,c
  9755   00CEF6  102E               	iorwf	(??_floorf+2)^0,w,c
  9756   00CEF8  102F               	iorwf	(??_floorf+3)^0,w,c
  9757   00CEFA  B4D8               	btfsc	status,2,c
  9758   00CEFC  EF82  F067         	goto	u9251
  9759   00CF00  EF84  F067         	goto	u9250
  9760   00CF04                     u9251:
  9761   00CF04  EF8C  F067         	goto	l9339
  9762   00CF08                     u9250:
  9763   00CF08  0E00               	movlw	0
  9764   00CF0A  6E38               	movwf	floorf@u^0,c
  9765   00CF0C  0E00               	movlw	0
  9766   00CF0E  6E39               	movwf	(floorf@u+1)^0,c
  9767   00CF10  0E80               	movlw	128
  9768   00CF12  6E3A               	movwf	(floorf@u+2)^0,c
  9769   00CF14  0EBF               	movlw	191
  9770   00CF16  6E3B               	movwf	(floorf@u+3)^0,c
  9771   00CF18                     l9339:
  9772   00CF18  C038  F028         	movff	floorf@u,?_floorf
  9773   00CF1C  C039  F029         	movff	floorf@u+1,?_floorf+1
  9774   00CF20  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  9775   00CF24  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  9776   00CF28                     l1835:
  9777   00CF28  0012               	return		;funcret
  9778   00CF2A                     __end_of_floorf:
  9779                           	callstack 0
  9780                           
  9781 ;; *************** function ___fpclassifyf *****************
  9782 ;; Defined at:
  9783 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  x               4    0[COMRAM] float 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;  u               4   10[COMRAM] struct .
  9788 ;;  e               2    8[COMRAM] int 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  2    0[COMRAM] int 
  9791 ;; Registers used:
  9792 ;;		wreg, status,2, status,0
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;Total ram usage:       14 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; This function calls:
  9805 ;;		Nothing
  9806 ;; This function is called by:
  9807 ;;		_efgtoa
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text45
  9812   00BEC0                     __ptext45:
  9813                           	callstack 0
  9814   00BEC0                     ___fpclassifyf:
  9815                           	callstack 26
  9816   00BEC0  C218  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9817   00BEC4  C219  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9818   00BEC8  C21A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9819   00BECC  C21B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9820   00BED0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9821   00BED4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9822   00BED8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9823   00BEDC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9824   00BEE0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9825   00BEE4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9826   00BEE8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9827   00BEEC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9828   00BEF0  0E18               	movlw	24
  9829   00BEF2  EF80  F05F         	goto	u9070
  9830   00BEF6                     u9075:
  9831   00BEF6  90D8               	bcf	status,0,c
  9832   00BEF8  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9833   00BEFA  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9834   00BEFC  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9835   00BEFE  3205               	rrcf	??___fpclassifyf^0,f,c
  9836   00BF00                     u9070:
  9837   00BF00  2EE8               	decfsz	wreg,f,c
  9838   00BF02  EF7B  F05F         	goto	u9075
  9839   00BF06  5005               	movf	??___fpclassifyf^0,w,c
  9840   00BF08  6E09               	movwf	___fpclassifyf@e^0,c
  9841   00BF0A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9842   00BF0C  5009               	movf	___fpclassifyf@e^0,w,c
  9843   00BF0E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9844   00BF10  A4D8               	btfss	status,2,c
  9845   00BF12  EF8D  F05F         	goto	u9081
  9846   00BF16  EF8F  F05F         	goto	u9080
  9847   00BF1A                     u9081:
  9848   00BF1A  EFAF  F05F         	goto	l9293
  9849   00BF1E                     u9080:
  9850   00BF1E  90D8               	bcf	status,0,c
  9851   00BF20  340B               	rlcf	___fpclassifyf@u^0,w,c
  9852   00BF22  6E05               	movwf	??___fpclassifyf^0,c
  9853   00BF24  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9854   00BF26  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9855   00BF28  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9856   00BF2A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9857   00BF2C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9858   00BF2E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9859   00BF30  5005               	movf	??___fpclassifyf^0,w,c
  9860   00BF32  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9861   00BF34  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9862   00BF36  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9863   00BF38  A4D8               	btfss	status,2,c
  9864   00BF3A  EFA1  F05F         	goto	u9091
  9865   00BF3E  EFA3  F05F         	goto	u9090
  9866   00BF42                     u9091:
  9867   00BF42  EFA9  F05F         	goto	l9289
  9868   00BF46                     u9090:
  9869   00BF46  0E00               	movlw	0
  9870   00BF48  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9871   00BF4A  0E02               	movlw	2
  9872   00BF4C  6E01               	movwf	?___fpclassifyf^0,c
  9873   00BF4E  EFDE  F05F         	goto	l1828
  9874   00BF52                     l9289:
  9875   00BF52  0E00               	movlw	0
  9876   00BF54  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9877   00BF56  0E03               	movlw	3
  9878   00BF58  6E01               	movwf	?___fpclassifyf^0,c
  9879   00BF5A  EFDE  F05F         	goto	l1828
  9880   00BF5E                     l9293:
  9881   00BF5E  2809               	incf	___fpclassifyf@e^0,w,c
  9882   00BF60  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9883   00BF62  A4D8               	btfss	status,2,c
  9884   00BF64  EFB6  F05F         	goto	u9101
  9885   00BF68  EFB8  F05F         	goto	u9100
  9886   00BF6C                     u9101:
  9887   00BF6C  EFDA  F05F         	goto	l9299
  9888   00BF70                     u9100:
  9889   00BF70  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9890   00BF74  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9891   00BF78  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9892   00BF7C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9893   00BF80  0E09               	movlw	9
  9894   00BF82                     u9115:
  9895   00BF82  90D8               	bcf	status,0,c
  9896   00BF84  3605               	rlcf	??___fpclassifyf^0,f,c
  9897   00BF86  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9898   00BF88  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9899   00BF8A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9900   00BF8C  2EE8               	decfsz	wreg,f,c
  9901   00BF8E  EFC1  F05F         	goto	u9115
  9902   00BF92  5005               	movf	??___fpclassifyf^0,w,c
  9903   00BF94  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9904   00BF96  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9905   00BF98  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9906   00BF9A  B4D8               	btfsc	status,2,c
  9907   00BF9C  EFD2  F05F         	goto	u9121
  9908   00BFA0  EFD5  F05F         	goto	u9120
  9909   00BFA4                     u9121:
  9910   00BFA4  0E01               	movlw	1
  9911   00BFA6  EFD6  F05F         	goto	u9130
  9912   00BFAA                     u9120:
  9913   00BFAA  0E00               	movlw	0
  9914   00BFAC                     u9130:
  9915   00BFAC  6E01               	movwf	?___fpclassifyf^0,c
  9916   00BFAE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9917   00BFB0  EFDE  F05F         	goto	l1828
  9918   00BFB4                     l9299:
  9919   00BFB4  0E00               	movlw	0
  9920   00BFB6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9921   00BFB8  0E04               	movlw	4
  9922   00BFBA  6E01               	movwf	?___fpclassifyf^0,c
  9923   00BFBC                     l1828:
  9924   00BFBC  0012               	return		;funcret
  9925   00BFBE                     __end_of___fpclassifyf:
  9926                           	callstack 0
  9927                           
  9928 ;; *************** function ___fltol *****************
  9929 ;; Defined at:
  9930 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  f1              4    0[COMRAM] int 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;  exp1            1    9[COMRAM] unsigned char 
  9935 ;;  sign1           1    8[COMRAM] unsigned char 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  4    0[COMRAM] long 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2, status,0
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;Total ram usage:       10 bytes
  9950 ;; Hardware stack levels used: 1
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_efgtoa
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text46
  9959   00C0C2                     __ptext46:
  9960                           	callstack 0
  9961   00C0C2                     ___fltol:
  9962                           	callstack 26
  9963   00C0C2  3403               	rlcf	(___fltol@f1+2)^0,w,c
  9964   00C0C4  3404               	rlcf	(___fltol@f1+3)^0,w,c
  9965   00C0C6  6E0A               	movwf	___fltol@exp1^0,c
  9966   00C0C8  500A               	movf	___fltol@exp1^0,w,c
  9967   00C0CA  A4D8               	btfss	status,2,c
  9968   00C0CC  EF6A  F060         	goto	u8951
  9969   00C0D0  EF6C  F060         	goto	u8950
  9970   00C0D4                     u8951:
  9971   00C0D4  EF76  F060         	goto	l9215
  9972   00C0D8                     u8950:
  9973   00C0D8                     l9211:
  9974   00C0D8  0E00               	movlw	0
  9975   00C0DA  6E01               	movwf	?___fltol^0,c
  9976   00C0DC  0E00               	movlw	0
  9977   00C0DE  6E02               	movwf	(?___fltol+1)^0,c
  9978   00C0E0  0E00               	movlw	0
  9979   00C0E2  6E03               	movwf	(?___fltol+2)^0,c
  9980   00C0E4  0E00               	movlw	0
  9981   00C0E6  6E04               	movwf	(?___fltol+3)^0,c
  9982   00C0E8  EFE3  F060         	goto	l1264
  9983   00C0EC                     l9215:
  9984   00C0EC  C001  F005         	movff	___fltol@f1,??___fltol
  9985   00C0F0  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  9986   00C0F4  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  9987   00C0F8  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  9988   00C0FC  0E20               	movlw	32
  9989   00C0FE  EF86  F060         	goto	u8960
  9990   00C102                     u8965:
  9991   00C102  90D8               	bcf	status,0,c
  9992   00C104  3208               	rrcf	(??___fltol+3)^0,f,c
  9993   00C106  3207               	rrcf	(??___fltol+2)^0,f,c
  9994   00C108  3206               	rrcf	(??___fltol+1)^0,f,c
  9995   00C10A  3205               	rrcf	??___fltol^0,f,c
  9996   00C10C                     u8960:
  9997   00C10C  2EE8               	decfsz	wreg,f,c
  9998   00C10E  EF81  F060         	goto	u8965
  9999   00C112  5005               	movf	??___fltol^0,w,c
 10000   00C114  6E09               	movwf	___fltol@sign1^0,c
 10001   00C116  8E03               	bsf	(___fltol@f1+2)^0,7,c
 10002   00C118  0EFF               	movlw	255
 10003   00C11A  1601               	andwf	___fltol@f1^0,f,c
 10004   00C11C  0EFF               	movlw	255
 10005   00C11E  1602               	andwf	(___fltol@f1+1)^0,f,c
 10006   00C120  0EFF               	movlw	255
 10007   00C122  1603               	andwf	(___fltol@f1+2)^0,f,c
 10008   00C124  0E00               	movlw	0
 10009   00C126  1604               	andwf	(___fltol@f1+3)^0,f,c
 10010   00C128  0E96               	movlw	150
 10011   00C12A  5E0A               	subwf	___fltol@exp1^0,f,c
 10012   00C12C  BE0A               	btfsc	___fltol@exp1^0,7,c
 10013   00C12E  EF9D  F060         	goto	u8970
 10014   00C132  EF9B  F060         	goto	u8971
 10015   00C136                     u8971:
 10016   00C136  EFB3  F060         	goto	l9235
 10017   00C13A                     u8970:
 10018   00C13A  500A               	movf	___fltol@exp1^0,w,c
 10019   00C13C  0A80               	xorlw	128
 10020   00C13E  0F97               	addlw	151
 10021   00C140  B0D8               	btfsc	status,0,c
 10022   00C142  EFA5  F060         	goto	u8981
 10023   00C146  EFA7  F060         	goto	u8980
 10024   00C14A                     u8981:
 10025   00C14A  EFA9  F060         	goto	l9231
 10026   00C14E                     u8980:
 10027   00C14E  EF6C  F060         	goto	l9211
 10028   00C152                     l9231:
 10029   00C152  90D8               	bcf	status,0,c
 10030   00C154  3204               	rrcf	(___fltol@f1+3)^0,f,c
 10031   00C156  3203               	rrcf	(___fltol@f1+2)^0,f,c
 10032   00C158  3202               	rrcf	(___fltol@f1+1)^0,f,c
 10033   00C15A  3201               	rrcf	___fltol@f1^0,f,c
 10034   00C15C  3E0A               	incfsz	___fltol@exp1^0,f,c
 10035   00C15E  EFA9  F060         	goto	l9231
 10036   00C162  EFCB  F060         	goto	l9245
 10037   00C166                     l9235:
 10038   00C166  0E1F               	movlw	31
 10039   00C168  640A               	cpfsgt	___fltol@exp1^0,c
 10040   00C16A  EFB9  F060         	goto	u8991
 10041   00C16E  EFBB  F060         	goto	u8990
 10042   00C172                     u8991:
 10043   00C172  EFC3  F060         	goto	l9243
 10044   00C176                     u8990:
 10045   00C176  EF6C  F060         	goto	l9211
 10046   00C17A                     l9241:
 10047   00C17A  90D8               	bcf	status,0,c
 10048   00C17C  3601               	rlcf	___fltol@f1^0,f,c
 10049   00C17E  3602               	rlcf	(___fltol@f1+1)^0,f,c
 10050   00C180  3603               	rlcf	(___fltol@f1+2)^0,f,c
 10051   00C182  3604               	rlcf	(___fltol@f1+3)^0,f,c
 10052   00C184  060A               	decf	___fltol@exp1^0,f,c
 10053   00C186                     l9243:
 10054   00C186  500A               	movf	___fltol@exp1^0,w,c
 10055   00C188  A4D8               	btfss	status,2,c
 10056   00C18A  EFC9  F060         	goto	u9001
 10057   00C18E  EFCB  F060         	goto	u9000
 10058   00C192                     u9001:
 10059   00C192  EFBD  F060         	goto	l9241
 10060   00C196                     u9000:
 10061   00C196                     l9245:
 10062   00C196  5009               	movf	___fltol@sign1^0,w,c
 10063   00C198  B4D8               	btfsc	status,2,c
 10064   00C19A  EFD1  F060         	goto	u9011
 10065   00C19E  EFD3  F060         	goto	u9010
 10066   00C1A2                     u9011:
 10067   00C1A2  EFDB  F060         	goto	l9249
 10068   00C1A6                     u9010:
 10069   00C1A6  1E04               	comf	(___fltol@f1+3)^0,f,c
 10070   00C1A8  1E03               	comf	(___fltol@f1+2)^0,f,c
 10071   00C1AA  1E02               	comf	(___fltol@f1+1)^0,f,c
 10072   00C1AC  6C01               	negf	___fltol@f1^0,c
 10073   00C1AE  0E00               	movlw	0
 10074   00C1B0  2202               	addwfc	(___fltol@f1+1)^0,f,c
 10075   00C1B2  2203               	addwfc	(___fltol@f1+2)^0,f,c
 10076   00C1B4  2204               	addwfc	(___fltol@f1+3)^0,f,c
 10077   00C1B6                     l9249:
 10078   00C1B6  C001  F001         	movff	___fltol@f1,?___fltol
 10079   00C1BA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 10080   00C1BE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 10081   00C1C2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 10082   00C1C6                     l1264:
 10083   00C1C6  0012               	return		;funcret
 10084   00C1C8                     __end_of___fltol:
 10085                           	callstack 0
 10086                           
 10087 ;; *************** function ___flsub *****************
 10088 ;; Defined at:
 10089 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  b               4   25[COMRAM] long 
 10092 ;;  a               4   29[COMRAM] long 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;		None
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  4   25[COMRAM] long 
 10097 ;; Registers used:
 10098 ;;		wreg, status,2, status,0, cstack
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10104 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10108 ;;Total ram usage:        8 bytes
 10109 ;; Hardware stack levels used: 1
 10110 ;; Hardware stack levels required when called: 1
 10111 ;; This function calls:
 10112 ;;		___fladd
 10113 ;; This function is called by:
 10114 ;;		_efgtoa
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text47
 10119   00ACFC                     __ptext47:
 10120                           	callstack 0
 10121   00ACFC                     ___flsub:
 10122                           	callstack 25
 10123   00ACFC  0E00               	movlw	0
 10124   00ACFE  1A1E               	xorwf	___flsub@a^0,f,c
 10125   00AD00  0E00               	movlw	0
 10126   00AD02  1A1F               	xorwf	(___flsub@a+1)^0,f,c
 10127   00AD04  0E00               	movlw	0
 10128   00AD06  1A20               	xorwf	(___flsub@a+2)^0,f,c
 10129   00AD08  0E80               	movlw	128
 10130   00AD0A  1A21               	xorwf	(___flsub@a+3)^0,f,c
 10131   00AD0C  C01A  F001         	movff	___flsub@b,___fladd@b
 10132   00AD10  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
 10133   00AD14  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
 10134   00AD18  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
 10135   00AD1C  C01E  F005         	movff	___flsub@a,___fladd@a
 10136   00AD20  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
 10137   00AD24  C020  F007         	movff	___flsub@a+2,___fladd@a+2
 10138   00AD28  C021  F008         	movff	___flsub@a+3,___fladd@a+3
 10139   00AD2C  ECDC  F074         	call	___fladd	;wreg free
 10140   00AD30  C001  F01A         	movff	?___fladd,?___flsub
 10141   00AD34  C002  F01B         	movff	?___fladd+1,?___flsub+1
 10142   00AD38  C003  F01C         	movff	?___fladd+2,?___flsub+2
 10143   00AD3C  C004  F01D         	movff	?___fladd+3,?___flsub+3
 10144   00AD40  0012               	return		;funcret
 10145   00AD42                     __end_of___flsub:
 10146                           	callstack 0
 10147                           
 10148 ;; *************** function ___fladd *****************
 10149 ;; Defined at:
 10150 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  b               4    0[COMRAM] long 
 10153 ;;  a               4    4[COMRAM] long 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  grs             1   15[COMRAM] unsigned char 
 10156 ;;  bexp            1   14[COMRAM] unsigned char 
 10157 ;;  aexp            1   13[COMRAM] unsigned char 
 10158 ;;  signs           1   12[COMRAM] unsigned char 
 10159 ;; Return value:  Size  Location     Type
 10160 ;;                  4    0[COMRAM] unsigned char 
 10161 ;; Registers used:
 10162 ;;		wreg, status,2, status,0
 10163 ;; Tracked objects:
 10164 ;;		On entry : 0/0
 10165 ;;		On exit  : 0/0
 10166 ;;		Unchanged: 0/0
 10167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10168 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10169 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10171 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10172 ;;Total ram usage:       16 bytes
 10173 ;; Hardware stack levels used: 1
 10174 ;; This function calls:
 10175 ;;		Nothing
 10176 ;; This function is called by:
 10177 ;;		___flsub
 10178 ;;		_efgtoa
 10179 ;; This function uses a non-reentrant model
 10180 ;;
 10181                           
 10182                           	psect	text48
 10183   00E9B8                     __ptext48:
 10184                           	callstack 0
 10185   00E9B8                     ___fladd:
 10186                           	callstack 25
 10187   00E9B8  5004               	movf	(___fladd@b+3)^0,w,c
 10188   00E9BA  0B80               	andlw	128
 10189   00E9BC  6E0D               	movwf	___fladd@signs^0,c
 10190   00E9BE  5004               	movf	(___fladd@b+3)^0,w,c
 10191   00E9C0  2404               	addwf	(___fladd@b+3)^0,w,c
 10192   00E9C2  6E0F               	movwf	___fladd@bexp^0,c
 10193   00E9C4  AE03               	btfss	(___fladd@b+2)^0,7,c
 10194   00E9C6  EFE7  F074         	goto	u7941
 10195   00E9CA  EFE9  F074         	goto	u7940
 10196   00E9CE                     u7941:
 10197   00E9CE  EFEA  F074         	goto	l8589
 10198   00E9D2                     u7940:
 10199   00E9D2  800F               	bsf	___fladd@bexp^0,0,c
 10200   00E9D4                     l8589:
 10201   00E9D4  500F               	movf	___fladd@bexp^0,w,c
 10202   00E9D6  B4D8               	btfsc	status,2,c
 10203   00E9D8  EFF0  F074         	goto	u7951
 10204   00E9DC  EFF2  F074         	goto	u7950
 10205   00E9E0                     u7951:
 10206   00E9E0  EF07  F075         	goto	l8599
 10207   00E9E4                     u7950:
 10208   00E9E4  280F               	incf	___fladd@bexp^0,w,c
 10209   00E9E6  A4D8               	btfss	status,2,c
 10210   00E9E8  EFF8  F074         	goto	u7961
 10211   00E9EC  EFFA  F074         	goto	u7960
 10212   00E9F0                     u7961:
 10213   00E9F0  EF02  F075         	goto	l8595
 10214   00E9F4                     u7960:
 10215   00E9F4  0E00               	movlw	0
 10216   00E9F6  6E01               	movwf	___fladd@b^0,c
 10217   00E9F8  0E00               	movlw	0
 10218   00E9FA  6E02               	movwf	(___fladd@b+1)^0,c
 10219   00E9FC  0E00               	movlw	0
 10220   00E9FE  6E03               	movwf	(___fladd@b+2)^0,c
 10221   00EA00  0E00               	movlw	0
 10222   00EA02  6E04               	movwf	(___fladd@b+3)^0,c
 10223   00EA04                     l8595:
 10224   00EA04  8E03               	bsf	(___fladd@b+2)^0,7,c
 10225   00EA06  0E00               	movlw	0
 10226   00EA08  6E04               	movwf	(___fladd@b+3)^0,c
 10227   00EA0A  EF0F  F075         	goto	l8601
 10228   00EA0E                     l8599:
 10229   00EA0E  0E00               	movlw	0
 10230   00EA10  6E01               	movwf	___fladd@b^0,c
 10231   00EA12  0E00               	movlw	0
 10232   00EA14  6E02               	movwf	(___fladd@b+1)^0,c
 10233   00EA16  0E00               	movlw	0
 10234   00EA18  6E03               	movwf	(___fladd@b+2)^0,c
 10235   00EA1A  0E00               	movlw	0
 10236   00EA1C  6E04               	movwf	(___fladd@b+3)^0,c
 10237   00EA1E                     l8601:
 10238   00EA1E  5008               	movf	(___fladd@a+3)^0,w,c
 10239   00EA20  0B80               	andlw	128
 10240   00EA22  6E0E               	movwf	___fladd@aexp^0,c
 10241   00EA24  500D               	movf	___fladd@signs^0,w,c
 10242   00EA26  180E               	xorwf	___fladd@aexp^0,w,c
 10243   00EA28  B4D8               	btfsc	status,2,c
 10244   00EA2A  EF19  F075         	goto	u7971
 10245   00EA2E  EF1B  F075         	goto	u7970
 10246   00EA32                     u7971:
 10247   00EA32  EF1C  F075         	goto	l8607
 10248   00EA36                     u7970:
 10249   00EA36  8C0D               	bsf	___fladd@signs^0,6,c
 10250   00EA38                     l8607:
 10251   00EA38  5008               	movf	(___fladd@a+3)^0,w,c
 10252   00EA3A  2408               	addwf	(___fladd@a+3)^0,w,c
 10253   00EA3C  6E0E               	movwf	___fladd@aexp^0,c
 10254   00EA3E  AE07               	btfss	(___fladd@a+2)^0,7,c
 10255   00EA40  EF24  F075         	goto	u7981
 10256   00EA44  EF26  F075         	goto	u7980
 10257   00EA48                     u7981:
 10258   00EA48  EF27  F075         	goto	l8613
 10259   00EA4C                     u7980:
 10260   00EA4C  800E               	bsf	___fladd@aexp^0,0,c
 10261   00EA4E                     l8613:
 10262   00EA4E  500E               	movf	___fladd@aexp^0,w,c
 10263   00EA50  B4D8               	btfsc	status,2,c
 10264   00EA52  EF2D  F075         	goto	u7991
 10265   00EA56  EF2F  F075         	goto	u7990
 10266   00EA5A                     u7991:
 10267   00EA5A  EF44  F075         	goto	l8623
 10268   00EA5E                     u7990:
 10269   00EA5E  280E               	incf	___fladd@aexp^0,w,c
 10270   00EA60  A4D8               	btfss	status,2,c
 10271   00EA62  EF35  F075         	goto	u8001
 10272   00EA66  EF37  F075         	goto	u8000
 10273   00EA6A                     u8001:
 10274   00EA6A  EF3F  F075         	goto	l8619
 10275   00EA6E                     u8000:
 10276   00EA6E  0E00               	movlw	0
 10277   00EA70  6E05               	movwf	___fladd@a^0,c
 10278   00EA72  0E00               	movlw	0
 10279   00EA74  6E06               	movwf	(___fladd@a+1)^0,c
 10280   00EA76  0E00               	movlw	0
 10281   00EA78  6E07               	movwf	(___fladd@a+2)^0,c
 10282   00EA7A  0E00               	movlw	0
 10283   00EA7C  6E08               	movwf	(___fladd@a+3)^0,c
 10284   00EA7E                     l8619:
 10285   00EA7E  8E07               	bsf	(___fladd@a+2)^0,7,c
 10286   00EA80  0E00               	movlw	0
 10287   00EA82  6E08               	movwf	(___fladd@a+3)^0,c
 10288   00EA84  EF4C  F075         	goto	l8625
 10289   00EA88                     l8623:
 10290   00EA88  0E00               	movlw	0
 10291   00EA8A  6E05               	movwf	___fladd@a^0,c
 10292   00EA8C  0E00               	movlw	0
 10293   00EA8E  6E06               	movwf	(___fladd@a+1)^0,c
 10294   00EA90  0E00               	movlw	0
 10295   00EA92  6E07               	movwf	(___fladd@a+2)^0,c
 10296   00EA94  0E00               	movlw	0
 10297   00EA96  6E08               	movwf	(___fladd@a+3)^0,c
 10298   00EA98                     l8625:
 10299   00EA98  500F               	movf	___fladd@bexp^0,w,c
 10300   00EA9A  5C0E               	subwf	___fladd@aexp^0,w,c
 10301   00EA9C  B0D8               	btfsc	status,0,c
 10302   00EA9E  EF53  F075         	goto	u8011
 10303   00EAA2  EF55  F075         	goto	u8010
 10304   00EAA6                     u8011:
 10305   00EAA6  EF7C  F075         	goto	l8661
 10306   00EAAA                     u8010:
 10307   00EAAA  AC0D               	btfss	___fladd@signs^0,6,c
 10308   00EAAC  EF5A  F075         	goto	u8021
 10309   00EAB0  EF5C  F075         	goto	u8020
 10310   00EAB4                     u8021:
 10311   00EAB4  EF5E  F075         	goto	l8631
 10312   00EAB8                     u8020:
 10313   00EAB8  0E80               	movlw	128
 10314   00EABA  1A0D               	xorwf	___fladd@signs^0,f,c
 10315   00EABC                     l8631:
 10316   00EABC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10317   00EAC0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10318   00EAC4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10319   00EAC8  C001  F010         	movff	___fladd@b,___fladd@grs
 10320   00EACC  C005  F001         	movff	___fladd@a,___fladd@b
 10321   00EAD0  C010  F005         	movff	___fladd@grs,___fladd@a
 10322   00EAD4  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10323   00EAD8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10324   00EADC  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10325   00EAE0  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10326   00EAE4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10327   00EAE8  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10328   00EAEC  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10329   00EAF0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10330   00EAF4  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10331   00EAF8                     l8661:
 10332   00EAF8  0E00               	movlw	0
 10333   00EAFA  6E10               	movwf	___fladd@grs^0,c
 10334   00EAFC  500F               	movf	___fladd@bexp^0,w,c
 10335   00EAFE  C00E  F009         	movff	___fladd@aexp,??___fladd
 10336   00EB02  6A0A               	clrf	(??___fladd+1)^0,c
 10337   00EB04  5E09               	subwf	??___fladd^0,f,c
 10338   00EB06  0E00               	movlw	0
 10339   00EB08  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10340   00EB0A  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10341   00EB0C  EF91  F075         	goto	u8031
 10342   00EB10  500A               	movf	(??___fladd+1)^0,w,c
 10343   00EB12  E109               	bnz	u8030
 10344   00EB14  0E1A               	movlw	26
 10345   00EB16  5C09               	subwf	??___fladd^0,w,c
 10346   00EB18  A0D8               	btfss	status,0,c
 10347   00EB1A  EF91  F075         	goto	u8031
 10348   00EB1E  EF93  F075         	goto	u8030
 10349   00EB22                     u8031:
 10350   00EB22  EFCA  F075         	goto	l1496
 10351   00EB26                     u8030:
 10352   00EB26  5001               	movf	___fladd@b^0,w,c
 10353   00EB28  1002               	iorwf	(___fladd@b+1)^0,w,c
 10354   00EB2A  1003               	iorwf	(___fladd@b+2)^0,w,c
 10355   00EB2C  1004               	iorwf	(___fladd@b+3)^0,w,c
 10356   00EB2E  A4D8               	btfss	status,2,c
 10357   00EB30  EF9C  F075         	goto	u8041
 10358   00EB34  EF9F  F075         	goto	u8040
 10359   00EB38                     u8041:
 10360   00EB38  0E01               	movlw	1
 10361   00EB3A  EFA0  F075         	goto	u8050
 10362   00EB3E                     u8040:
 10363   00EB3E  0E00               	movlw	0
 10364   00EB40                     u8050:
 10365   00EB40  6E10               	movwf	___fladd@grs^0,c
 10366   00EB42  0E00               	movlw	0
 10367   00EB44  6E01               	movwf	___fladd@b^0,c
 10368   00EB46  0E00               	movlw	0
 10369   00EB48  6E02               	movwf	(___fladd@b+1)^0,c
 10370   00EB4A  0E00               	movlw	0
 10371   00EB4C  6E03               	movwf	(___fladd@b+2)^0,c
 10372   00EB4E  0E00               	movlw	0
 10373   00EB50  6E04               	movwf	(___fladd@b+3)^0,c
 10374   00EB52  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10375   00EB56  EFD3  F075         	goto	l1495
 10376   00EB5A                     l1497:
 10377   00EB5A  A010               	btfss	___fladd@grs^0,0,c
 10378   00EB5C  EFB2  F075         	goto	u8061
 10379   00EB60  EFB4  F075         	goto	u8060
 10380   00EB64                     u8061:
 10381   00EB64  EFBA  F075         	goto	l8673
 10382   00EB68                     u8060:
 10383   00EB68  90D8               	bcf	status,0,c
 10384   00EB6A  3010               	rrcf	___fladd@grs^0,w,c
 10385   00EB6C  0901               	iorlw	1
 10386   00EB6E  6E10               	movwf	___fladd@grs^0,c
 10387   00EB70  EFBC  F075         	goto	l8675
 10388   00EB74                     l8673:
 10389   00EB74  90D8               	bcf	status,0,c
 10390   00EB76  3210               	rrcf	___fladd@grs^0,f,c
 10391   00EB78                     l8675:
 10392   00EB78  A001               	btfss	___fladd@b^0,0,c
 10393   00EB7A  EFC1  F075         	goto	u8071
 10394   00EB7E  EFC3  F075         	goto	u8070
 10395   00EB82                     u8071:
 10396   00EB82  EFC4  F075         	goto	l8679
 10397   00EB86                     u8070:
 10398   00EB86  8E10               	bsf	___fladd@grs^0,7,c
 10399   00EB88                     l8679:
 10400   00EB88  3404               	rlcf	(___fladd@b+3)^0,w,c
 10401   00EB8A  3204               	rrcf	(___fladd@b+3)^0,f,c
 10402   00EB8C  3203               	rrcf	(___fladd@b+2)^0,f,c
 10403   00EB8E  3202               	rrcf	(___fladd@b+1)^0,f,c
 10404   00EB90  3201               	rrcf	___fladd@b^0,f,c
 10405   00EB92  2A0F               	incf	___fladd@bexp^0,f,c
 10406   00EB94                     l1496:
 10407   00EB94  500E               	movf	___fladd@aexp^0,w,c
 10408   00EB96  5C0F               	subwf	___fladd@bexp^0,w,c
 10409   00EB98  A0D8               	btfss	status,0,c
 10410   00EB9A  EFD1  F075         	goto	u8081
 10411   00EB9E  EFD3  F075         	goto	u8080
 10412   00EBA2                     u8081:
 10413   00EBA2  EFAD  F075         	goto	l1497
 10414   00EBA6                     u8080:
 10415   00EBA6                     l1495:
 10416   00EBA6  BC0D               	btfsc	___fladd@signs^0,6,c
 10417   00EBA8  EFD8  F075         	goto	u8091
 10418   00EBAC  EFDA  F075         	goto	u8090
 10419   00EBB0                     u8091:
 10420   00EBB0  EF1A  F076         	goto	l8707
 10421   00EBB4                     u8090:
 10422   00EBB4  500F               	movf	___fladd@bexp^0,w,c
 10423   00EBB6  A4D8               	btfss	status,2,c
 10424   00EBB8  EFE0  F075         	goto	u8101
 10425   00EBBC  EFE2  F075         	goto	u8100
 10426   00EBC0                     u8101:
 10427   00EBC0  EFEC  F075         	goto	l8689
 10428   00EBC4                     u8100:
 10429   00EBC4  0E00               	movlw	0
 10430   00EBC6  6E01               	movwf	?___fladd^0,c
 10431   00EBC8  0E00               	movlw	0
 10432   00EBCA  6E02               	movwf	(?___fladd+1)^0,c
 10433   00EBCC  0E00               	movlw	0
 10434   00EBCE  6E03               	movwf	(?___fladd+2)^0,c
 10435   00EBD0  0E00               	movlw	0
 10436   00EBD2  6E04               	movwf	(?___fladd+3)^0,c
 10437   00EBD4  EF3B  F077         	goto	l1504
 10438   00EBD8                     l8689:
 10439   00EBD8  5005               	movf	___fladd@a^0,w,c
 10440   00EBDA  2601               	addwf	___fladd@b^0,f,c
 10441   00EBDC  5006               	movf	(___fladd@a+1)^0,w,c
 10442   00EBDE  2202               	addwfc	(___fladd@b+1)^0,f,c
 10443   00EBE0  5007               	movf	(___fladd@a+2)^0,w,c
 10444   00EBE2  2203               	addwfc	(___fladd@b+2)^0,f,c
 10445   00EBE4  5008               	movf	(___fladd@a+3)^0,w,c
 10446   00EBE6  2204               	addwfc	(___fladd@b+3)^0,f,c
 10447   00EBE8  A004               	btfss	(___fladd@b+3)^0,0,c
 10448   00EBEA  EFF9  F075         	goto	u8111
 10449   00EBEE  EFFB  F075         	goto	u8110
 10450   00EBF2                     u8111:
 10451   00EBF2  EFA7  F076         	goto	l8743
 10452   00EBF6                     u8110:
 10453   00EBF6  A010               	btfss	___fladd@grs^0,0,c
 10454   00EBF8  EF00  F076         	goto	u8121
 10455   00EBFC  EF02  F076         	goto	u8120
 10456   00EC00                     u8121:
 10457   00EC00  EF08  F076         	goto	l8697
 10458   00EC04                     u8120:
 10459   00EC04  90D8               	bcf	status,0,c
 10460   00EC06  3010               	rrcf	___fladd@grs^0,w,c
 10461   00EC08  0901               	iorlw	1
 10462   00EC0A  6E10               	movwf	___fladd@grs^0,c
 10463   00EC0C  EF0A  F076         	goto	l8699
 10464   00EC10                     l8697:
 10465   00EC10  90D8               	bcf	status,0,c
 10466   00EC12  3210               	rrcf	___fladd@grs^0,f,c
 10467   00EC14                     l8699:
 10468   00EC14  A001               	btfss	___fladd@b^0,0,c
 10469   00EC16  EF0F  F076         	goto	u8131
 10470   00EC1A  EF11  F076         	goto	u8130
 10471   00EC1E                     u8131:
 10472   00EC1E  EF12  F076         	goto	l8703
 10473   00EC22                     u8130:
 10474   00EC22  8E10               	bsf	___fladd@grs^0,7,c
 10475   00EC24                     l8703:
 10476   00EC24  3404               	rlcf	(___fladd@b+3)^0,w,c
 10477   00EC26  3204               	rrcf	(___fladd@b+3)^0,f,c
 10478   00EC28  3203               	rrcf	(___fladd@b+2)^0,f,c
 10479   00EC2A  3202               	rrcf	(___fladd@b+1)^0,f,c
 10480   00EC2C  3201               	rrcf	___fladd@b^0,f,c
 10481   00EC2E  2A0F               	incf	___fladd@bexp^0,f,c
 10482   00EC30  EFA7  F076         	goto	l8743
 10483   00EC34                     l8707:
 10484   00EC34  5005               	movf	___fladd@a^0,w,c
 10485   00EC36  5C01               	subwf	___fladd@b^0,w,c
 10486   00EC38  5006               	movf	(___fladd@a+1)^0,w,c
 10487   00EC3A  5802               	subwfb	(___fladd@b+1)^0,w,c
 10488   00EC3C  5007               	movf	(___fladd@a+2)^0,w,c
 10489   00EC3E  5803               	subwfb	(___fladd@b+2)^0,w,c
 10490   00EC40  5004               	movf	(___fladd@b+3)^0,w,c
 10491   00EC42  0A80               	xorlw	128
 10492   00EC44  6E09               	movwf	??___fladd^0,c
 10493   00EC46  5008               	movf	(___fladd@a+3)^0,w,c
 10494   00EC48  0A80               	xorlw	128
 10495   00EC4A  5809               	subwfb	??___fladd^0,w,c
 10496   00EC4C  B0D8               	btfsc	status,0,c
 10497   00EC4E  EF2B  F076         	goto	u8141
 10498   00EC52  EF2D  F076         	goto	u8140
 10499   00EC56                     u8141:
 10500   00EC56  EF58  F076         	goto	l8717
 10501   00EC5A                     u8140:
 10502   00EC5A  5001               	movf	___fladd@b^0,w,c
 10503   00EC5C  5C05               	subwf	___fladd@a^0,w,c
 10504   00EC5E  6E09               	movwf	??___fladd^0,c
 10505   00EC60  5002               	movf	(___fladd@b+1)^0,w,c
 10506   00EC62  5806               	subwfb	(___fladd@a+1)^0,w,c
 10507   00EC64  6E0A               	movwf	(??___fladd+1)^0,c
 10508   00EC66  5003               	movf	(___fladd@b+2)^0,w,c
 10509   00EC68  5807               	subwfb	(___fladd@a+2)^0,w,c
 10510   00EC6A  6E0B               	movwf	(??___fladd+2)^0,c
 10511   00EC6C  5004               	movf	(___fladd@b+3)^0,w,c
 10512   00EC6E  5808               	subwfb	(___fladd@a+3)^0,w,c
 10513   00EC70  6E0C               	movwf	(??___fladd+3)^0,c
 10514   00EC72  0EFF               	movlw	255
 10515   00EC74  2409               	addwf	??___fladd^0,w,c
 10516   00EC76  6E01               	movwf	___fladd@b^0,c
 10517   00EC78  0EFF               	movlw	255
 10518   00EC7A  200A               	addwfc	(??___fladd+1)^0,w,c
 10519   00EC7C  6E02               	movwf	(___fladd@b+1)^0,c
 10520   00EC7E  0EFF               	movlw	255
 10521   00EC80  200B               	addwfc	(??___fladd+2)^0,w,c
 10522   00EC82  6E03               	movwf	(___fladd@b+2)^0,c
 10523   00EC84  0EFF               	movlw	255
 10524   00EC86  200C               	addwfc	(??___fladd+3)^0,w,c
 10525   00EC88  6E04               	movwf	(___fladd@b+3)^0,c
 10526   00EC8A  0E80               	movlw	128
 10527   00EC8C  1A0D               	xorwf	___fladd@signs^0,f,c
 10528   00EC8E  6C10               	negf	___fladd@grs^0,c
 10529   00EC90  5010               	movf	___fladd@grs^0,w,c
 10530   00EC92  A4D8               	btfss	status,2,c
 10531   00EC94  EF4E  F076         	goto	u8151
 10532   00EC98  EF50  F076         	goto	u8150
 10533   00EC9C                     u8151:
 10534   00EC9C  EF60  F076         	goto	l1512
 10535   00ECA0                     u8150:
 10536   00ECA0  0E01               	movlw	1
 10537   00ECA2  2601               	addwf	___fladd@b^0,f,c
 10538   00ECA4  0E00               	movlw	0
 10539   00ECA6  2202               	addwfc	(___fladd@b+1)^0,f,c
 10540   00ECA8  2203               	addwfc	(___fladd@b+2)^0,f,c
 10541   00ECAA  2204               	addwfc	(___fladd@b+3)^0,f,c
 10542   00ECAC  EF60  F076         	goto	l1512
 10543   00ECB0                     l8717:
 10544   00ECB0  5005               	movf	___fladd@a^0,w,c
 10545   00ECB2  5E01               	subwf	___fladd@b^0,f,c
 10546   00ECB4  5006               	movf	(___fladd@a+1)^0,w,c
 10547   00ECB6  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10548   00ECB8  5007               	movf	(___fladd@a+2)^0,w,c
 10549   00ECBA  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10550   00ECBC  5008               	movf	(___fladd@a+3)^0,w,c
 10551   00ECBE  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10552   00ECC0                     l1512:
 10553   00ECC0  5001               	movf	___fladd@b^0,w,c
 10554   00ECC2  1002               	iorwf	(___fladd@b+1)^0,w,c
 10555   00ECC4  1003               	iorwf	(___fladd@b+2)^0,w,c
 10556   00ECC6  1004               	iorwf	(___fladd@b+3)^0,w,c
 10557   00ECC8  A4D8               	btfss	status,2,c
 10558   00ECCA  EF69  F076         	goto	u8161
 10559   00ECCE  EF6B  F076         	goto	u8160
 10560   00ECD2                     u8161:
 10561   00ECD2  EFA0  F076         	goto	l8741
 10562   00ECD6                     u8160:
 10563   00ECD6  5010               	movf	___fladd@grs^0,w,c
 10564   00ECD8  A4D8               	btfss	status,2,c
 10565   00ECDA  EF71  F076         	goto	u8171
 10566   00ECDE  EF73  F076         	goto	u8170
 10567   00ECE2                     u8171:
 10568   00ECE2  EFA0  F076         	goto	l8741
 10569   00ECE6                     u8170:
 10570   00ECE6  0E00               	movlw	0
 10571   00ECE8  6E01               	movwf	?___fladd^0,c
 10572   00ECEA  0E00               	movlw	0
 10573   00ECEC  6E02               	movwf	(?___fladd+1)^0,c
 10574   00ECEE  0E00               	movlw	0
 10575   00ECF0  6E03               	movwf	(?___fladd+2)^0,c
 10576   00ECF2  0E00               	movlw	0
 10577   00ECF4  6E04               	movwf	(?___fladd+3)^0,c
 10578   00ECF6  EF3B  F077         	goto	l1504
 10579   00ECFA                     l8725:
 10580   00ECFA  90D8               	bcf	status,0,c
 10581   00ECFC  3601               	rlcf	___fladd@b^0,f,c
 10582   00ECFE  3602               	rlcf	(___fladd@b+1)^0,f,c
 10583   00ED00  3603               	rlcf	(___fladd@b+2)^0,f,c
 10584   00ED02  3604               	rlcf	(___fladd@b+3)^0,f,c
 10585   00ED04  AE10               	btfss	___fladd@grs^0,7,c
 10586   00ED06  EF87  F076         	goto	u8181
 10587   00ED0A  EF89  F076         	goto	u8180
 10588   00ED0E                     u8181:
 10589   00ED0E  EF8A  F076         	goto	l8731
 10590   00ED12                     u8180:
 10591   00ED12  8001               	bsf	___fladd@b^0,0,c
 10592   00ED14                     l8731:
 10593   00ED14  A010               	btfss	___fladd@grs^0,0,c
 10594   00ED16  EF8F  F076         	goto	u8191
 10595   00ED1A  EF91  F076         	goto	u8190
 10596   00ED1E                     u8191:
 10597   00ED1E  EF95  F076         	goto	l8735
 10598   00ED22                     u8190:
 10599   00ED22  80D8               	bsf	status,0,c
 10600   00ED24  3610               	rlcf	___fladd@grs^0,f,c
 10601   00ED26  EF97  F076         	goto	l8737
 10602   00ED2A                     l8735:
 10603   00ED2A  90D8               	bcf	status,0,c
 10604   00ED2C  3610               	rlcf	___fladd@grs^0,f,c
 10605   00ED2E                     l8737:
 10606   00ED2E  500F               	movf	___fladd@bexp^0,w,c
 10607   00ED30  B4D8               	btfsc	status,2,c
 10608   00ED32  EF9D  F076         	goto	u8201
 10609   00ED36  EF9F  F076         	goto	u8200
 10610   00ED3A                     u8201:
 10611   00ED3A  EFA0  F076         	goto	l8741
 10612   00ED3E                     u8200:
 10613   00ED3E  060F               	decf	___fladd@bexp^0,f,c
 10614   00ED40                     l8741:
 10615   00ED40  AE03               	btfss	(___fladd@b+2)^0,7,c
 10616   00ED42  EFA5  F076         	goto	u8211
 10617   00ED46  EFA7  F076         	goto	u8210
 10618   00ED4A                     u8211:
 10619   00ED4A  EF7D  F076         	goto	l8725
 10620   00ED4E                     u8210:
 10621   00ED4E                     l8743:
 10622   00ED4E  0E00               	movlw	0
 10623   00ED50  6E0E               	movwf	___fladd@aexp^0,c
 10624   00ED52  AE10               	btfss	___fladd@grs^0,7,c
 10625   00ED54  EFAE  F076         	goto	u8221
 10626   00ED58  EFB0  F076         	goto	u8220
 10627   00ED5C                     u8221:
 10628   00ED5C  EFC8  F076         	goto	l1521
 10629   00ED60                     u8220:
 10630   00ED60  C010  F009         	movff	___fladd@grs,??___fladd
 10631   00ED64  0E7F               	movlw	127
 10632   00ED66  1609               	andwf	??___fladd^0,f,c
 10633   00ED68  B4D8               	btfsc	status,2,c
 10634   00ED6A  EFB9  F076         	goto	u8231
 10635   00ED6E  EFBB  F076         	goto	u8230
 10636   00ED72                     u8231:
 10637   00ED72  EFBF  F076         	goto	l1522
 10638   00ED76                     u8230:
 10639   00ED76                     l8749:
 10640   00ED76  0E01               	movlw	1
 10641   00ED78  6E0E               	movwf	___fladd@aexp^0,c
 10642   00ED7A  EFC8  F076         	goto	l1521
 10643   00ED7E                     l1522:
 10644   00ED7E  A001               	btfss	___fladd@b^0,0,c
 10645   00ED80  EFC4  F076         	goto	u8241
 10646   00ED84  EFC6  F076         	goto	u8240
 10647   00ED88                     u8241:
 10648   00ED88  EFC8  F076         	goto	l1521
 10649   00ED8C                     u8240:
 10650   00ED8C  EFBB  F076         	goto	l8749
 10651   00ED90                     l1521:
 10652   00ED90  500E               	movf	___fladd@aexp^0,w,c
 10653   00ED92  B4D8               	btfsc	status,2,c
 10654   00ED94  EFCE  F076         	goto	u8251
 10655   00ED98  EFD0  F076         	goto	u8250
 10656   00ED9C                     u8251:
 10657   00ED9C  EFFB  F076         	goto	l8761
 10658   00EDA0                     u8250:
 10659   00EDA0  0E01               	movlw	1
 10660   00EDA2  2601               	addwf	___fladd@b^0,f,c
 10661   00EDA4  0E00               	movlw	0
 10662   00EDA6  2202               	addwfc	(___fladd@b+1)^0,f,c
 10663   00EDA8  2203               	addwfc	(___fladd@b+2)^0,f,c
 10664   00EDAA  2204               	addwfc	(___fladd@b+3)^0,f,c
 10665   00EDAC  A004               	btfss	(___fladd@b+3)^0,0,c
 10666   00EDAE  EFDB  F076         	goto	u8261
 10667   00EDB2  EFDD  F076         	goto	u8260
 10668   00EDB6                     u8261:
 10669   00EDB6  EFFB  F076         	goto	l8761
 10670   00EDBA                     u8260:
 10671   00EDBA  C001  F009         	movff	___fladd@b,??___fladd
 10672   00EDBE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10673   00EDC2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10674   00EDC6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10675   00EDCA  340C               	rlcf	(??___fladd+3)^0,w,c
 10676   00EDCC  320C               	rrcf	(??___fladd+3)^0,f,c
 10677   00EDCE  320B               	rrcf	(??___fladd+2)^0,f,c
 10678   00EDD0  320A               	rrcf	(??___fladd+1)^0,f,c
 10679   00EDD2  3209               	rrcf	??___fladd^0,f,c
 10680   00EDD4  C009  F001         	movff	??___fladd,___fladd@b
 10681   00EDD8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10682   00EDDC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10683   00EDE0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10684   00EDE4  280F               	incf	___fladd@bexp^0,w,c
 10685   00EDE6  B4D8               	btfsc	status,2,c
 10686   00EDE8  EFF8  F076         	goto	u8271
 10687   00EDEC  EFFA  F076         	goto	u8270
 10688   00EDF0                     u8271:
 10689   00EDF0  EFFB  F076         	goto	l8761
 10690   00EDF4                     u8270:
 10691   00EDF4  2A0F               	incf	___fladd@bexp^0,f,c
 10692   00EDF6                     l8761:
 10693   00EDF6  280F               	incf	___fladd@bexp^0,w,c
 10694   00EDF8  B4D8               	btfsc	status,2,c
 10695   00EDFA  EF01  F077         	goto	u8281
 10696   00EDFE  EF03  F077         	goto	u8280
 10697   00EE02                     u8281:
 10698   00EE02  EF0B  F077         	goto	l8765
 10699   00EE06                     u8280:
 10700   00EE06  500F               	movf	___fladd@bexp^0,w,c
 10701   00EE08  A4D8               	btfss	status,2,c
 10702   00EE0A  EF09  F077         	goto	u8291
 10703   00EE0E  EF0B  F077         	goto	u8290
 10704   00EE12                     u8291:
 10705   00EE12  EF1D  F077         	goto	l8769
 10706   00EE16                     u8290:
 10707   00EE16                     l8765:
 10708   00EE16  0E00               	movlw	0
 10709   00EE18  6E01               	movwf	___fladd@b^0,c
 10710   00EE1A  0E00               	movlw	0
 10711   00EE1C  6E02               	movwf	(___fladd@b+1)^0,c
 10712   00EE1E  0E00               	movlw	0
 10713   00EE20  6E03               	movwf	(___fladd@b+2)^0,c
 10714   00EE22  0E00               	movlw	0
 10715   00EE24  6E04               	movwf	(___fladd@b+3)^0,c
 10716   00EE26  500F               	movf	___fladd@bexp^0,w,c
 10717   00EE28  A4D8               	btfss	status,2,c
 10718   00EE2A  EF19  F077         	goto	u8301
 10719   00EE2E  EF1B  F077         	goto	u8300
 10720   00EE32                     u8301:
 10721   00EE32  EF1D  F077         	goto	l8769
 10722   00EE36                     u8300:
 10723   00EE36  0E00               	movlw	0
 10724   00EE38  6E0D               	movwf	___fladd@signs^0,c
 10725   00EE3A                     l8769:
 10726   00EE3A  A00F               	btfss	___fladd@bexp^0,0,c
 10727   00EE3C  EF22  F077         	goto	u8311
 10728   00EE40  EF24  F077         	goto	u8310
 10729   00EE44                     u8311:
 10730   00EE44  EF27  F077         	goto	l8773
 10731   00EE48                     u8310:
 10732   00EE48  8E03               	bsf	(___fladd@b+2)^0,7,c
 10733   00EE4A  EF28  F077         	goto	l8775
 10734   00EE4E                     l8773:
 10735   00EE4E  9E03               	bcf	(___fladd@b+2)^0,7,c
 10736   00EE50                     l8775:
 10737   00EE50  90D8               	bcf	status,0,c
 10738   00EE52  300F               	rrcf	___fladd@bexp^0,w,c
 10739   00EE54  6E04               	movwf	(___fladd@b+3)^0,c
 10740   00EE56  AE0D               	btfss	___fladd@signs^0,7,c
 10741   00EE58  EF30  F077         	goto	u8321
 10742   00EE5C  EF32  F077         	goto	u8320
 10743   00EE60                     u8321:
 10744   00EE60  EF33  F077         	goto	l8781
 10745   00EE64                     u8320:
 10746   00EE64  8E04               	bsf	(___fladd@b+3)^0,7,c
 10747   00EE66                     l8781:
 10748   00EE66  C001  F001         	movff	___fladd@b,?___fladd
 10749   00EE6A  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10750   00EE6E  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10751   00EE72  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10752   00EE76                     l1504:
 10753   00EE76  0012               	return		;funcret
 10754   00EE78                     __end_of___fladd:
 10755                           	callstack 0
 10756                           
 10757 ;; *************** function ___flneg *****************
 10758 ;; Defined at:
 10759 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  f1              4    0[COMRAM] unsigned char 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;		None
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  4    0[COMRAM] unsigned char 
 10766 ;; Registers used:
 10767 ;;		wreg, status,2, status,0
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;Total ram usage:        4 bytes
 10778 ;; Hardware stack levels used: 1
 10779 ;; This function calls:
 10780 ;;		Nothing
 10781 ;; This function is called by:
 10782 ;;		_efgtoa
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786                           	psect	text49
 10787   00AA3A                     __ptext49:
 10788                           	callstack 0
 10789   00AA3A                     ___flneg:
 10790                           	callstack 26
 10791   00AA3A  5001               	movf	___flneg@f1^0,w,c
 10792   00AA3C  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10793   00AA3E  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10794   00AA40  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10795   00AA42  B4D8               	btfsc	status,2,c
 10796   00AA44  EF26  F055         	goto	u8941
 10797   00AA48  EF28  F055         	goto	u8940
 10798   00AA4C                     u8941:
 10799   00AA4C  EF30  F055         	goto	l9205
 10800   00AA50                     u8940:
 10801   00AA50  0E00               	movlw	0
 10802   00AA52  1A01               	xorwf	___flneg@f1^0,f,c
 10803   00AA54  0E00               	movlw	0
 10804   00AA56  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10805   00AA58  0E00               	movlw	0
 10806   00AA5A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10807   00AA5C  0E80               	movlw	128
 10808   00AA5E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10809   00AA60                     l9205:
 10810   00AA60  C001  F001         	movff	___flneg@f1,?___flneg
 10811   00AA64  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10812   00AA68  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10813   00AA6C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10814   00AA70  0012               	return		;funcret
 10815   00AA72                     __end_of___flneg:
 10816                           	callstack 0
 10817                           
 10818 ;; *************** function ___flmul *****************
 10819 ;; Defined at:
 10820 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  b               4    0[COMRAM] unsigned char 
 10823 ;;  a               4    4[COMRAM] unsigned char 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  prod            4   19[COMRAM] struct .
 10826 ;;  grs             4   14[COMRAM] unsigned long 
 10827 ;;  temp            2   23[COMRAM] struct .
 10828 ;;  bexp            1   18[COMRAM] unsigned char 
 10829 ;;  aexp            1   13[COMRAM] unsigned char 
 10830 ;;  sign            1   12[COMRAM] unsigned char 
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  4    0[COMRAM] unsigned char 
 10833 ;; Registers used:
 10834 ;;		wreg, status,2, status,0, prodl, prodh
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10840 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;Total ram usage:       25 bytes
 10845 ;; Hardware stack levels used: 1
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_efgtoa
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text50
 10854   00E11A                     __ptext50:
 10855                           	callstack 0
 10856   00E11A                     ___flmul:
 10857                           	callstack 26
 10858   00E11A  5004               	movf	(___flmul@b+3)^0,w,c
 10859   00E11C  0B80               	andlw	128
 10860   00E11E  6E0D               	movwf	___flmul@sign^0,c
 10861   00E120  5004               	movf	(___flmul@b+3)^0,w,c
 10862   00E122  2404               	addwf	(___flmul@b+3)^0,w,c
 10863   00E124  6E13               	movwf	___flmul@bexp^0,c
 10864   00E126  AE03               	btfss	(___flmul@b+2)^0,7,c
 10865   00E128  EF98  F070         	goto	u8671
 10866   00E12C  EF9A  F070         	goto	u8670
 10867   00E130                     u8671:
 10868   00E130  EF9B  F070         	goto	l9033
 10869   00E134                     u8670:
 10870   00E134  8013               	bsf	___flmul@bexp^0,0,c
 10871   00E136                     l9033:
 10872   00E136  5013               	movf	___flmul@bexp^0,w,c
 10873   00E138  B4D8               	btfsc	status,2,c
 10874   00E13A  EFA1  F070         	goto	u8681
 10875   00E13E  EFA3  F070         	goto	u8680
 10876   00E142                     u8681:
 10877   00E142  EFB6  F070         	goto	l9041
 10878   00E146                     u8680:
 10879   00E146  2813               	incf	___flmul@bexp^0,w,c
 10880   00E148  A4D8               	btfss	status,2,c
 10881   00E14A  EFA9  F070         	goto	u8691
 10882   00E14E  EFAB  F070         	goto	u8690
 10883   00E152                     u8691:
 10884   00E152  EFB3  F070         	goto	l9039
 10885   00E156                     u8690:
 10886   00E156  0E00               	movlw	0
 10887   00E158  6E01               	movwf	___flmul@b^0,c
 10888   00E15A  0E00               	movlw	0
 10889   00E15C  6E02               	movwf	(___flmul@b+1)^0,c
 10890   00E15E  0E00               	movlw	0
 10891   00E160  6E03               	movwf	(___flmul@b+2)^0,c
 10892   00E162  0E00               	movlw	0
 10893   00E164  6E04               	movwf	(___flmul@b+3)^0,c
 10894   00E166                     l9039:
 10895   00E166  8E03               	bsf	(___flmul@b+2)^0,7,c
 10896   00E168  EFBE  F070         	goto	l9043
 10897   00E16C                     l9041:
 10898   00E16C  0E00               	movlw	0
 10899   00E16E  6E01               	movwf	___flmul@b^0,c
 10900   00E170  0E00               	movlw	0
 10901   00E172  6E02               	movwf	(___flmul@b+1)^0,c
 10902   00E174  0E00               	movlw	0
 10903   00E176  6E03               	movwf	(___flmul@b+2)^0,c
 10904   00E178  0E00               	movlw	0
 10905   00E17A  6E04               	movwf	(___flmul@b+3)^0,c
 10906   00E17C                     l9043:
 10907   00E17C  5008               	movf	(___flmul@a+3)^0,w,c
 10908   00E17E  0B80               	andlw	128
 10909   00E180  1A0D               	xorwf	___flmul@sign^0,f,c
 10910   00E182  5008               	movf	(___flmul@a+3)^0,w,c
 10911   00E184  2408               	addwf	(___flmul@a+3)^0,w,c
 10912   00E186  6E0E               	movwf	___flmul@aexp^0,c
 10913   00E188  AE07               	btfss	(___flmul@a+2)^0,7,c
 10914   00E18A  EFC9  F070         	goto	u8701
 10915   00E18E  EFCB  F070         	goto	u8700
 10916   00E192                     u8701:
 10917   00E192  EFCC  F070         	goto	l9051
 10918   00E196                     u8700:
 10919   00E196  800E               	bsf	___flmul@aexp^0,0,c
 10920   00E198                     l9051:
 10921   00E198  500E               	movf	___flmul@aexp^0,w,c
 10922   00E19A  B4D8               	btfsc	status,2,c
 10923   00E19C  EFD2  F070         	goto	u8711
 10924   00E1A0  EFD4  F070         	goto	u8710
 10925   00E1A4                     u8711:
 10926   00E1A4  EFE7  F070         	goto	l9059
 10927   00E1A8                     u8710:
 10928   00E1A8  280E               	incf	___flmul@aexp^0,w,c
 10929   00E1AA  A4D8               	btfss	status,2,c
 10930   00E1AC  EFDA  F070         	goto	u8721
 10931   00E1B0  EFDC  F070         	goto	u8720
 10932   00E1B4                     u8721:
 10933   00E1B4  EFE4  F070         	goto	l9057
 10934   00E1B8                     u8720:
 10935   00E1B8  0E00               	movlw	0
 10936   00E1BA  6E05               	movwf	___flmul@a^0,c
 10937   00E1BC  0E00               	movlw	0
 10938   00E1BE  6E06               	movwf	(___flmul@a+1)^0,c
 10939   00E1C0  0E00               	movlw	0
 10940   00E1C2  6E07               	movwf	(___flmul@a+2)^0,c
 10941   00E1C4  0E00               	movlw	0
 10942   00E1C6  6E08               	movwf	(___flmul@a+3)^0,c
 10943   00E1C8                     l9057:
 10944   00E1C8  8E07               	bsf	(___flmul@a+2)^0,7,c
 10945   00E1CA  EFEF  F070         	goto	l1581
 10946   00E1CE                     l9059:
 10947   00E1CE  0E00               	movlw	0
 10948   00E1D0  6E05               	movwf	___flmul@a^0,c
 10949   00E1D2  0E00               	movlw	0
 10950   00E1D4  6E06               	movwf	(___flmul@a+1)^0,c
 10951   00E1D6  0E00               	movlw	0
 10952   00E1D8  6E07               	movwf	(___flmul@a+2)^0,c
 10953   00E1DA  0E00               	movlw	0
 10954   00E1DC  6E08               	movwf	(___flmul@a+3)^0,c
 10955   00E1DE                     l1581:
 10956   00E1DE  500E               	movf	___flmul@aexp^0,w,c
 10957   00E1E0  B4D8               	btfsc	status,2,c
 10958   00E1E2  EFF5  F070         	goto	u8731
 10959   00E1E6  EFF7  F070         	goto	u8730
 10960   00E1EA                     u8731:
 10961   00E1EA  EFFF  F070         	goto	l9063
 10962   00E1EE                     u8730:
 10963   00E1EE  5013               	movf	___flmul@bexp^0,w,c
 10964   00E1F0  A4D8               	btfss	status,2,c
 10965   00E1F2  EFFD  F070         	goto	u8741
 10966   00E1F6  EFFF  F070         	goto	u8740
 10967   00E1FA                     u8741:
 10968   00E1FA  EF09  F071         	goto	l9067
 10969   00E1FE                     u8740:
 10970   00E1FE                     l9063:
 10971   00E1FE  0E00               	movlw	0
 10972   00E200  6E01               	movwf	?___flmul^0,c
 10973   00E202  0E00               	movlw	0
 10974   00E204  6E02               	movwf	(?___flmul+1)^0,c
 10975   00E206  0E00               	movlw	0
 10976   00E208  6E03               	movwf	(?___flmul+2)^0,c
 10977   00E20A  0E00               	movlw	0
 10978   00E20C  6E04               	movwf	(?___flmul+3)^0,c
 10979   00E20E  EFB3  F072         	goto	l1585
 10980   00E212                     l9067:
 10981   00E212  5007               	movf	(___flmul@a+2)^0,w,c
 10982   00E214  0201               	mulwf	___flmul@b^0,c
 10983   00E216  006F FFCC  F018    	movff	prodl,___flmul@temp
 10984   00E21C  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 10985   00E222  5018               	movf	___flmul@temp^0,w,c
 10986   00E224  6E0F               	movwf	___flmul@grs^0,c
 10987   00E226  6A10               	clrf	(___flmul@grs+1)^0,c
 10988   00E228  6A11               	clrf	(___flmul@grs+2)^0,c
 10989   00E22A  6A12               	clrf	(___flmul@grs+3)^0,c
 10990   00E22C  5019               	movf	(___flmul@temp+1)^0,w,c
 10991   00E22E  6E14               	movwf	___flmul@prod^0,c
 10992   00E230  6A15               	clrf	(___flmul@prod+1)^0,c
 10993   00E232  6A16               	clrf	(___flmul@prod+2)^0,c
 10994   00E234  6A17               	clrf	(___flmul@prod+3)^0,c
 10995   00E236  5006               	movf	(___flmul@a+1)^0,w,c
 10996   00E238  0202               	mulwf	(___flmul@b+1)^0,c
 10997   00E23A  006F FFCC  F018    	movff	prodl,___flmul@temp
 10998   00E240  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 10999   00E246  5018               	movf	___flmul@temp^0,w,c
 11000   00E248  260F               	addwf	___flmul@grs^0,f,c
 11001   00E24A  0E00               	movlw	0
 11002   00E24C  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11003   00E24E  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11004   00E250  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11005   00E252  5019               	movf	(___flmul@temp+1)^0,w,c
 11006   00E254  2614               	addwf	___flmul@prod^0,f,c
 11007   00E256  0E00               	movlw	0
 11008   00E258  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11009   00E25A  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11010   00E25C  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11011   00E25E  5005               	movf	___flmul@a^0,w,c
 11012   00E260  0203               	mulwf	(___flmul@b+2)^0,c
 11013   00E262  006F FFCC  F018    	movff	prodl,___flmul@temp
 11014   00E268  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11015   00E26E  5018               	movf	___flmul@temp^0,w,c
 11016   00E270  260F               	addwf	___flmul@grs^0,f,c
 11017   00E272  0E00               	movlw	0
 11018   00E274  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11019   00E276  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11020   00E278  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11021   00E27A  5019               	movf	(___flmul@temp+1)^0,w,c
 11022   00E27C  2614               	addwf	___flmul@prod^0,f,c
 11023   00E27E  0E00               	movlw	0
 11024   00E280  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11025   00E282  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11026   00E284  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11027   00E286  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 11028   00E28A  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 11029   00E28E  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 11030   00E292  6A0F               	clrf	___flmul@grs^0,c
 11031   00E294  5005               	movf	___flmul@a^0,w,c
 11032   00E296  0202               	mulwf	(___flmul@b+1)^0,c
 11033   00E298  006F FFCC  F018    	movff	prodl,___flmul@temp
 11034   00E29E  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11035   00E2A4  5018               	movf	___flmul@temp^0,w,c
 11036   00E2A6  260F               	addwf	___flmul@grs^0,f,c
 11037   00E2A8  5019               	movf	(___flmul@temp+1)^0,w,c
 11038   00E2AA  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11039   00E2AC  0E00               	movlw	0
 11040   00E2AE  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11041   00E2B0  0E00               	movlw	0
 11042   00E2B2  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11043   00E2B4  5006               	movf	(___flmul@a+1)^0,w,c
 11044   00E2B6  0201               	mulwf	___flmul@b^0,c
 11045   00E2B8  006F FFCC  F018    	movff	prodl,___flmul@temp
 11046   00E2BE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11047   00E2C4  5018               	movf	___flmul@temp^0,w,c
 11048   00E2C6  260F               	addwf	___flmul@grs^0,f,c
 11049   00E2C8  5019               	movf	(___flmul@temp+1)^0,w,c
 11050   00E2CA  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11051   00E2CC  0E00               	movlw	0
 11052   00E2CE  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11053   00E2D0  0E00               	movlw	0
 11054   00E2D2  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11055   00E2D4  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 11056   00E2D8  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 11057   00E2DC  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 11058   00E2E0  6A0F               	clrf	___flmul@grs^0,c
 11059   00E2E2  5005               	movf	___flmul@a^0,w,c
 11060   00E2E4  0201               	mulwf	___flmul@b^0,c
 11061   00E2E6  006F FFCC  F018    	movff	prodl,___flmul@temp
 11062   00E2EC  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11063   00E2F2  5018               	movf	___flmul@temp^0,w,c
 11064   00E2F4  260F               	addwf	___flmul@grs^0,f,c
 11065   00E2F6  5019               	movf	(___flmul@temp+1)^0,w,c
 11066   00E2F8  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11067   00E2FA  0E00               	movlw	0
 11068   00E2FC  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11069   00E2FE  0E00               	movlw	0
 11070   00E300  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11071   00E302  5007               	movf	(___flmul@a+2)^0,w,c
 11072   00E304  0202               	mulwf	(___flmul@b+1)^0,c
 11073   00E306  006F FFCC  F018    	movff	prodl,___flmul@temp
 11074   00E30C  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11075   00E312  5018               	movf	___flmul@temp^0,w,c
 11076   00E314  2614               	addwf	___flmul@prod^0,f,c
 11077   00E316  5019               	movf	(___flmul@temp+1)^0,w,c
 11078   00E318  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11079   00E31A  0E00               	movlw	0
 11080   00E31C  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11081   00E31E  0E00               	movlw	0
 11082   00E320  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11083   00E322  5006               	movf	(___flmul@a+1)^0,w,c
 11084   00E324  0203               	mulwf	(___flmul@b+2)^0,c
 11085   00E326  006F FFCC  F018    	movff	prodl,___flmul@temp
 11086   00E32C  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11087   00E332  5018               	movf	___flmul@temp^0,w,c
 11088   00E334  2614               	addwf	___flmul@prod^0,f,c
 11089   00E336  5019               	movf	(___flmul@temp+1)^0,w,c
 11090   00E338  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11091   00E33A  0E00               	movlw	0
 11092   00E33C  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11093   00E33E  0E00               	movlw	0
 11094   00E340  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11095   00E342  5007               	movf	(___flmul@a+2)^0,w,c
 11096   00E344  0203               	mulwf	(___flmul@b+2)^0,c
 11097   00E346  006F FFCC  F018    	movff	prodl,___flmul@temp
 11098   00E34C  006F FFD0  F019    	movff	prodh,___flmul@temp+1
 11099   00E352  5018               	movf	___flmul@temp^0,w,c
 11100   00E354  6E09               	movwf	??___flmul^0,c
 11101   00E356  5019               	movf	(___flmul@temp+1)^0,w,c
 11102   00E358  6E0A               	movwf	(??___flmul+1)^0,c
 11103   00E35A  6A0B               	clrf	(??___flmul+2)^0,c
 11104   00E35C  6A0C               	clrf	(??___flmul+3)^0,c
 11105   00E35E  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 11106   00E362  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 11107   00E366  C009  F00A         	movff	??___flmul,??___flmul+1
 11108   00E36A  6A09               	clrf	??___flmul^0,c
 11109   00E36C  5009               	movf	??___flmul^0,w,c
 11110   00E36E  2614               	addwf	___flmul@prod^0,f,c
 11111   00E370  500A               	movf	(??___flmul+1)^0,w,c
 11112   00E372  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11113   00E374  500B               	movf	(??___flmul+2)^0,w,c
 11114   00E376  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11115   00E378  500C               	movf	(??___flmul+3)^0,w,c
 11116   00E37A  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11117   00E37C  C00F  F009         	movff	___flmul@grs,??___flmul
 11118   00E380  C010  F00A         	movff	___flmul@grs+1,??___flmul+1
 11119   00E384  C011  F00B         	movff	___flmul@grs+2,??___flmul+2
 11120   00E388  C012  F00C         	movff	___flmul@grs+3,??___flmul+3
 11121   00E38C  0E19               	movlw	25
 11122   00E38E  EFCE  F071         	goto	u8750
 11123   00E392                     u8755:
 11124   00E392  90D8               	bcf	status,0,c
 11125   00E394  320C               	rrcf	(??___flmul+3)^0,f,c
 11126   00E396  320B               	rrcf	(??___flmul+2)^0,f,c
 11127   00E398  320A               	rrcf	(??___flmul+1)^0,f,c
 11128   00E39A  3209               	rrcf	??___flmul^0,f,c
 11129   00E39C                     u8750:
 11130   00E39C  2EE8               	decfsz	wreg,f,c
 11131   00E39E  EFC9  F071         	goto	u8755
 11132   00E3A2  5009               	movf	??___flmul^0,w,c
 11133   00E3A4  2614               	addwf	___flmul@prod^0,f,c
 11134   00E3A6  500A               	movf	(??___flmul+1)^0,w,c
 11135   00E3A8  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11136   00E3AA  500B               	movf	(??___flmul+2)^0,w,c
 11137   00E3AC  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11138   00E3AE  500C               	movf	(??___flmul+3)^0,w,c
 11139   00E3B0  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11140   00E3B2  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 11141   00E3B6  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 11142   00E3BA  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 11143   00E3BE  6A0F               	clrf	___flmul@grs^0,c
 11144   00E3C0  500E               	movf	___flmul@aexp^0,w,c
 11145   00E3C2  C013  F009         	movff	___flmul@bexp,??___flmul
 11146   00E3C6  6A0A               	clrf	(??___flmul+1)^0,c
 11147   00E3C8  2609               	addwf	??___flmul^0,f,c
 11148   00E3CA  0E00               	movlw	0
 11149   00E3CC  220A               	addwfc	(??___flmul+1)^0,f,c
 11150   00E3CE  0E82               	movlw	130
 11151   00E3D0  2409               	addwf	??___flmul^0,w,c
 11152   00E3D2  6E18               	movwf	___flmul@temp^0,c
 11153   00E3D4  0EFF               	movlw	255
 11154   00E3D6  200A               	addwfc	(??___flmul+1)^0,w,c
 11155   00E3D8  6E19               	movwf	(___flmul@temp+1)^0,c
 11156   00E3DA  EF04  F072         	goto	l9115
 11157   00E3DE                     l9109:
 11158   00E3DE  90D8               	bcf	status,0,c
 11159   00E3E0  3614               	rlcf	___flmul@prod^0,f,c
 11160   00E3E2  3615               	rlcf	(___flmul@prod+1)^0,f,c
 11161   00E3E4  3616               	rlcf	(___flmul@prod+2)^0,f,c
 11162   00E3E6  3617               	rlcf	(___flmul@prod+3)^0,f,c
 11163   00E3E8  AE12               	btfss	(___flmul@grs+3)^0,7,c
 11164   00E3EA  EFF9  F071         	goto	u8761
 11165   00E3EE  EFFB  F071         	goto	u8760
 11166   00E3F2                     u8761:
 11167   00E3F2  EFFC  F071         	goto	l1588
 11168   00E3F6                     u8760:
 11169   00E3F6  8014               	bsf	___flmul@prod^0,0,c
 11170   00E3F8                     l1588:
 11171   00E3F8  90D8               	bcf	status,0,c
 11172   00E3FA  360F               	rlcf	___flmul@grs^0,f,c
 11173   00E3FC  3610               	rlcf	(___flmul@grs+1)^0,f,c
 11174   00E3FE  3611               	rlcf	(___flmul@grs+2)^0,f,c
 11175   00E400  3612               	rlcf	(___flmul@grs+3)^0,f,c
 11176   00E402  0618               	decf	___flmul@temp^0,f,c
 11177   00E404  A0D8               	btfss	status,0,c
 11178   00E406  0619               	decf	(___flmul@temp+1)^0,f,c
 11179   00E408                     l9115:
 11180   00E408  AE16               	btfss	(___flmul@prod+2)^0,7,c
 11181   00E40A  EF09  F072         	goto	u8771
 11182   00E40E  EF0B  F072         	goto	u8770
 11183   00E412                     u8771:
 11184   00E412  EFEF  F071         	goto	l9109
 11185   00E416                     u8770:
 11186   00E416  0E00               	movlw	0
 11187   00E418  6E0E               	movwf	___flmul@aexp^0,c
 11188   00E41A  AE12               	btfss	(___flmul@grs+3)^0,7,c
 11189   00E41C  EF12  F072         	goto	u8781
 11190   00E420  EF14  F072         	goto	u8780
 11191   00E424                     u8781:
 11192   00E424  EF38  F072         	goto	l1590
 11193   00E428                     u8780:
 11194   00E428  0EFF               	movlw	255
 11195   00E42A  140F               	andwf	___flmul@grs^0,w,c
 11196   00E42C  6E09               	movwf	??___flmul^0,c
 11197   00E42E  0EFF               	movlw	255
 11198   00E430  1410               	andwf	(___flmul@grs+1)^0,w,c
 11199   00E432  6E0A               	movwf	(??___flmul+1)^0,c
 11200   00E434  0EFF               	movlw	255
 11201   00E436  1411               	andwf	(___flmul@grs+2)^0,w,c
 11202   00E438  6E0B               	movwf	(??___flmul+2)^0,c
 11203   00E43A  0E7F               	movlw	127
 11204   00E43C  1412               	andwf	(___flmul@grs+3)^0,w,c
 11205   00E43E  6E0C               	movwf	(??___flmul+3)^0,c
 11206   00E440  5009               	movf	??___flmul^0,w,c
 11207   00E442  100A               	iorwf	(??___flmul+1)^0,w,c
 11208   00E444  100B               	iorwf	(??___flmul+2)^0,w,c
 11209   00E446  100C               	iorwf	(??___flmul+3)^0,w,c
 11210   00E448  B4D8               	btfsc	status,2,c
 11211   00E44A  EF29  F072         	goto	u8791
 11212   00E44E  EF2B  F072         	goto	u8790
 11213   00E452                     u8791:
 11214   00E452  EF2F  F072         	goto	l1591
 11215   00E456                     u8790:
 11216   00E456                     l9123:
 11217   00E456  0E01               	movlw	1
 11218   00E458  6E0E               	movwf	___flmul@aexp^0,c
 11219   00E45A  EF38  F072         	goto	l1590
 11220   00E45E                     l1591:
 11221   00E45E  A014               	btfss	___flmul@prod^0,0,c
 11222   00E460  EF34  F072         	goto	u8801
 11223   00E464  EF36  F072         	goto	u8800
 11224   00E468                     u8801:
 11225   00E468  EF38  F072         	goto	l1590
 11226   00E46C                     u8800:
 11227   00E46C  EF2B  F072         	goto	l9123
 11228   00E470                     l1590:
 11229   00E470  500E               	movf	___flmul@aexp^0,w,c
 11230   00E472  B4D8               	btfsc	status,2,c
 11231   00E474  EF3E  F072         	goto	u8811
 11232   00E478  EF40  F072         	goto	u8810
 11233   00E47C                     u8811:
 11234   00E47C  EF64  F072         	goto	l9135
 11235   00E480                     u8810:
 11236   00E480  0E01               	movlw	1
 11237   00E482  2614               	addwf	___flmul@prod^0,f,c
 11238   00E484  0E00               	movlw	0
 11239   00E486  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11240   00E488  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11241   00E48A  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11242   00E48C  A017               	btfss	(___flmul@prod+3)^0,0,c
 11243   00E48E  EF4B  F072         	goto	u8821
 11244   00E492  EF4D  F072         	goto	u8820
 11245   00E496                     u8821:
 11246   00E496  EF64  F072         	goto	l9135
 11247   00E49A                     u8820:
 11248   00E49A  C014  F009         	movff	___flmul@prod,??___flmul
 11249   00E49E  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 11250   00E4A2  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 11251   00E4A6  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 11252   00E4AA  340C               	rlcf	(??___flmul+3)^0,w,c
 11253   00E4AC  320C               	rrcf	(??___flmul+3)^0,f,c
 11254   00E4AE  320B               	rrcf	(??___flmul+2)^0,f,c
 11255   00E4B0  320A               	rrcf	(??___flmul+1)^0,f,c
 11256   00E4B2  3209               	rrcf	??___flmul^0,f,c
 11257   00E4B4  C009  F014         	movff	??___flmul,___flmul@prod
 11258   00E4B8  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 11259   00E4BC  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 11260   00E4C0  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 11261   00E4C4  4A18               	infsnz	___flmul@temp^0,f,c
 11262   00E4C6  2A19               	incf	(___flmul@temp+1)^0,f,c
 11263   00E4C8                     l9135:
 11264   00E4C8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 11265   00E4CA  EF6F  F072         	goto	u8831
 11266   00E4CE  5019               	movf	(___flmul@temp+1)^0,w,c
 11267   00E4D0  E108               	bnz	u8830
 11268   00E4D2  2818               	incf	___flmul@temp^0,w,c
 11269   00E4D4  A0D8               	btfss	status,0,c
 11270   00E4D6  EF6F  F072         	goto	u8831
 11271   00E4DA  EF71  F072         	goto	u8830
 11272   00E4DE                     u8831:
 11273   00E4DE  EF7B  F072         	goto	l9139
 11274   00E4E2                     u8830:
 11275   00E4E2  0E00               	movlw	0
 11276   00E4E4  6E14               	movwf	___flmul@prod^0,c
 11277   00E4E6  0E00               	movlw	0
 11278   00E4E8  6E15               	movwf	(___flmul@prod+1)^0,c
 11279   00E4EA  0E80               	movlw	128
 11280   00E4EC  6E16               	movwf	(___flmul@prod+2)^0,c
 11281   00E4EE  0E7F               	movlw	127
 11282   00E4F0  6E17               	movwf	(___flmul@prod+3)^0,c
 11283   00E4F2  EFA9  F072         	goto	l9151
 11284   00E4F6                     l9139:
 11285   00E4F6  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 11286   00E4F8  EF88  F072         	goto	u8840
 11287   00E4FC  5019               	movf	(___flmul@temp+1)^0,w,c
 11288   00E4FE  E106               	bnz	u8841
 11289   00E500  0418               	decf	___flmul@temp^0,w,c
 11290   00E502  B0D8               	btfsc	status,0,c
 11291   00E504  EF86  F072         	goto	u8841
 11292   00E508  EF88  F072         	goto	u8840
 11293   00E50C                     u8841:
 11294   00E50C  EF94  F072         	goto	l1598
 11295   00E510                     u8840:
 11296   00E510  0E00               	movlw	0
 11297   00E512  6E14               	movwf	___flmul@prod^0,c
 11298   00E514  0E00               	movlw	0
 11299   00E516  6E15               	movwf	(___flmul@prod+1)^0,c
 11300   00E518  0E00               	movlw	0
 11301   00E51A  6E16               	movwf	(___flmul@prod+2)^0,c
 11302   00E51C  0E00               	movlw	0
 11303   00E51E  6E17               	movwf	(___flmul@prod+3)^0,c
 11304   00E520  0E00               	movlw	0
 11305   00E522  6E0D               	movwf	___flmul@sign^0,c
 11306   00E524  EFA9  F072         	goto	l9151
 11307   00E528                     l1598:
 11308   00E528  C018  F013         	movff	___flmul@temp,___flmul@bexp
 11309   00E52C  0EFF               	movlw	255
 11310   00E52E  1614               	andwf	___flmul@prod^0,f,c
 11311   00E530  0EFF               	movlw	255
 11312   00E532  1615               	andwf	(___flmul@prod+1)^0,f,c
 11313   00E534  0E7F               	movlw	127
 11314   00E536  1616               	andwf	(___flmul@prod+2)^0,f,c
 11315   00E538  0E00               	movlw	0
 11316   00E53A  1617               	andwf	(___flmul@prod+3)^0,f,c
 11317   00E53C  A013               	btfss	___flmul@bexp^0,0,c
 11318   00E53E  EFA3  F072         	goto	u8851
 11319   00E542  EFA5  F072         	goto	u8850
 11320   00E546                     u8851:
 11321   00E546  EFA6  F072         	goto	l9149
 11322   00E54A                     u8850:
 11323   00E54A  8E16               	bsf	(___flmul@prod+2)^0,7,c
 11324   00E54C                     l9149:
 11325   00E54C  90D8               	bcf	status,0,c
 11326   00E54E  3013               	rrcf	___flmul@bexp^0,w,c
 11327   00E550  6E17               	movwf	(___flmul@prod+3)^0,c
 11328   00E552                     l9151:
 11329   00E552  500D               	movf	___flmul@sign^0,w,c
 11330   00E554  1217               	iorwf	(___flmul@prod+3)^0,f,c
 11331   00E556  C014  F001         	movff	___flmul@prod,?___flmul
 11332   00E55A  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 11333   00E55E  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 11334   00E562  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 11335   00E566                     l1585:
 11336   00E566  0012               	return		;funcret
 11337   00E568                     __end_of___flmul:
 11338                           	callstack 0
 11339                           
 11340 ;; *************** function ___flge *****************
 11341 ;; Defined at:
 11342 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 11343 ;; Parameters:    Size  Location     Type
 11344 ;;  ff1             4   25[COMRAM] unsigned char 
 11345 ;;  ff2             4   29[COMRAM] unsigned char 
 11346 ;; Auto vars:     Size  Location     Type
 11347 ;;		None
 11348 ;; Return value:  Size  Location     Type
 11349 ;;		None               void
 11350 ;; Registers used:
 11351 ;;		wreg, status,2, status,0
 11352 ;; Tracked objects:
 11353 ;;		On entry : 0/0
 11354 ;;		On exit  : 0/0
 11355 ;;		Unchanged: 0/0
 11356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11357 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11360 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11361 ;;Total ram usage:       12 bytes
 11362 ;; Hardware stack levels used: 1
 11363 ;; This function calls:
 11364 ;;		Nothing
 11365 ;; This function is called by:
 11366 ;;		_efgtoa
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370                           	psect	text51
 11371   00BFBE                     __ptext51:
 11372                           	callstack 0
 11373   00BFBE                     ___flge:
 11374                           	callstack 26
 11375   00BFBE  0E00               	movlw	0
 11376   00BFC0  141A               	andwf	___flge@ff1^0,w,c
 11377   00BFC2  6E22               	movwf	??___flge^0,c
 11378   00BFC4  0E00               	movlw	0
 11379   00BFC6  141B               	andwf	(___flge@ff1+1)^0,w,c
 11380   00BFC8  6E23               	movwf	(??___flge+1)^0,c
 11381   00BFCA  0E80               	movlw	128
 11382   00BFCC  141C               	andwf	(___flge@ff1+2)^0,w,c
 11383   00BFCE  6E24               	movwf	(??___flge+2)^0,c
 11384   00BFD0  0E7F               	movlw	127
 11385   00BFD2  141D               	andwf	(___flge@ff1+3)^0,w,c
 11386   00BFD4  6E25               	movwf	(??___flge+3)^0,c
 11387   00BFD6  5022               	movf	??___flge^0,w,c
 11388   00BFD8  1023               	iorwf	(??___flge+1)^0,w,c
 11389   00BFDA  1024               	iorwf	(??___flge+2)^0,w,c
 11390   00BFDC  1025               	iorwf	(??___flge+3)^0,w,c
 11391   00BFDE  A4D8               	btfss	status,2,c
 11392   00BFE0  EFF4  F05F         	goto	u8891
 11393   00BFE4  EFF6  F05F         	goto	u8890
 11394   00BFE8                     u8891:
 11395   00BFE8  EFFE  F05F         	goto	l9183
 11396   00BFEC                     u8890:
 11397   00BFEC  0E00               	movlw	0
 11398   00BFEE  6E1A               	movwf	___flge@ff1^0,c
 11399   00BFF0  0E00               	movlw	0
 11400   00BFF2  6E1B               	movwf	(___flge@ff1+1)^0,c
 11401   00BFF4  0E00               	movlw	0
 11402   00BFF6  6E1C               	movwf	(___flge@ff1+2)^0,c
 11403   00BFF8  0E00               	movlw	0
 11404   00BFFA  6E1D               	movwf	(___flge@ff1+3)^0,c
 11405   00BFFC                     l9183:
 11406   00BFFC  0E00               	movlw	0
 11407   00BFFE  141E               	andwf	___flge@ff2^0,w,c
 11408   00C000  6E22               	movwf	??___flge^0,c
 11409   00C002  0E00               	movlw	0
 11410   00C004  141F               	andwf	(___flge@ff2+1)^0,w,c
 11411   00C006  6E23               	movwf	(??___flge+1)^0,c
 11412   00C008  0E80               	movlw	128
 11413   00C00A  1420               	andwf	(___flge@ff2+2)^0,w,c
 11414   00C00C  6E24               	movwf	(??___flge+2)^0,c
 11415   00C00E  0E7F               	movlw	127
 11416   00C010  1421               	andwf	(___flge@ff2+3)^0,w,c
 11417   00C012  6E25               	movwf	(??___flge+3)^0,c
 11418   00C014  5022               	movf	??___flge^0,w,c
 11419   00C016  1023               	iorwf	(??___flge+1)^0,w,c
 11420   00C018  1024               	iorwf	(??___flge+2)^0,w,c
 11421   00C01A  1025               	iorwf	(??___flge+3)^0,w,c
 11422   00C01C  A4D8               	btfss	status,2,c
 11423   00C01E  EF13  F060         	goto	u8901
 11424   00C022  EF15  F060         	goto	u8900
 11425   00C026                     u8901:
 11426   00C026  EF1D  F060         	goto	l9187
 11427   00C02A                     u8900:
 11428   00C02A  0E00               	movlw	0
 11429   00C02C  6E1E               	movwf	___flge@ff2^0,c
 11430   00C02E  0E00               	movlw	0
 11431   00C030  6E1F               	movwf	(___flge@ff2+1)^0,c
 11432   00C032  0E00               	movlw	0
 11433   00C034  6E20               	movwf	(___flge@ff2+2)^0,c
 11434   00C036  0E00               	movlw	0
 11435   00C038  6E21               	movwf	(___flge@ff2+3)^0,c
 11436   00C03A                     l9187:
 11437   00C03A  AE1D               	btfss	(___flge@ff1+3)^0,7,c
 11438   00C03C  EF22  F060         	goto	u8911
 11439   00C040  EF24  F060         	goto	u8910
 11440   00C044                     u8911:
 11441   00C044  EF2D  F060         	goto	l9191
 11442   00C048                     u8910:
 11443   00C048  6C1A               	negf	___flge@ff1^0,c
 11444   00C04A  1E1B               	comf	(___flge@ff1+1)^0,f,c
 11445   00C04C  B0D8               	btfsc	status,0,c
 11446   00C04E  2A1B               	incf	(___flge@ff1+1)^0,f,c
 11447   00C050  1E1C               	comf	(___flge@ff1+2)^0,f,c
 11448   00C052  B0D8               	btfsc	status,0,c
 11449   00C054  2A1C               	incf	(___flge@ff1+2)^0,f,c
 11450   00C056  0E80               	movlw	128
 11451   00C058  561D               	subfwb	(___flge@ff1+3)^0,f,c
 11452   00C05A                     l9191:
 11453   00C05A  AE21               	btfss	(___flge@ff2+3)^0,7,c
 11454   00C05C  EF32  F060         	goto	u8921
 11455   00C060  EF34  F060         	goto	u8920
 11456   00C064                     u8921:
 11457   00C064  EF3D  F060         	goto	l1232
 11458   00C068                     u8920:
 11459   00C068  6C1E               	negf	___flge@ff2^0,c
 11460   00C06A  1E1F               	comf	(___flge@ff2+1)^0,f,c
 11461   00C06C  B0D8               	btfsc	status,0,c
 11462   00C06E  2A1F               	incf	(___flge@ff2+1)^0,f,c
 11463   00C070  1E20               	comf	(___flge@ff2+2)^0,f,c
 11464   00C072  B0D8               	btfsc	status,0,c
 11465   00C074  2A20               	incf	(___flge@ff2+2)^0,f,c
 11466   00C076  0E80               	movlw	128
 11467   00C078  5621               	subfwb	(___flge@ff2+3)^0,f,c
 11468   00C07A                     l1232:
 11469   00C07A  0E00               	movlw	0
 11470   00C07C  1A1A               	xorwf	___flge@ff1^0,f,c
 11471   00C07E  0E00               	movlw	0
 11472   00C080  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
 11473   00C082  0E00               	movlw	0
 11474   00C084  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
 11475   00C086  0E80               	movlw	128
 11476   00C088  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
 11477   00C08A  0E00               	movlw	0
 11478   00C08C  1A1E               	xorwf	___flge@ff2^0,f,c
 11479   00C08E  0E00               	movlw	0
 11480   00C090  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
 11481   00C092  0E00               	movlw	0
 11482   00C094  1A20               	xorwf	(___flge@ff2+2)^0,f,c
 11483   00C096  0E80               	movlw	128
 11484   00C098  1A21               	xorwf	(___flge@ff2+3)^0,f,c
 11485   00C09A  501E               	movf	___flge@ff2^0,w,c
 11486   00C09C  5C1A               	subwf	___flge@ff1^0,w,c
 11487   00C09E  501F               	movf	(___flge@ff2+1)^0,w,c
 11488   00C0A0  581B               	subwfb	(___flge@ff1+1)^0,w,c
 11489   00C0A2  5020               	movf	(___flge@ff2+2)^0,w,c
 11490   00C0A4  581C               	subwfb	(___flge@ff1+2)^0,w,c
 11491   00C0A6  5021               	movf	(___flge@ff2+3)^0,w,c
 11492   00C0A8  581D               	subwfb	(___flge@ff1+3)^0,w,c
 11493   00C0AA  B0D8               	btfsc	status,0,c
 11494   00C0AC  EF5A  F060         	goto	u8931
 11495   00C0B0  EF5C  F060         	goto	u8930
 11496   00C0B4                     u8931:
 11497   00C0B4  EF5F  F060         	goto	l9197
 11498   00C0B8                     u8930:
 11499   00C0B8  90D8               	bcf	status,0,c
 11500   00C0BA  EF60  F060         	goto	l1237
 11501   00C0BE                     l9197:
 11502   00C0BE  80D8               	bsf	status,0,c
 11503   00C0C0                     l1237:
 11504   00C0C0  0012               	return		;funcret
 11505   00C0C2                     __end_of___flge:
 11506                           	callstack 0
 11507                           
 11508 ;; *************** function ___fleq *****************
 11509 ;; Defined at:
 11510 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;  ff1             4    0[COMRAM] unsigned char 
 11513 ;;  ff2             4    4[COMRAM] unsigned char 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;		None               void
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11525 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;Total ram usage:       12 bytes
 11530 ;; Hardware stack levels used: 1
 11531 ;; This function calls:
 11532 ;;		Nothing
 11533 ;; This function is called by:
 11534 ;;		_efgtoa
 11535 ;; This function uses a non-reentrant model
 11536 ;;
 11537                           
 11538                           	psect	text52
 11539   00BA72                     __ptext52:
 11540                           	callstack 0
 11541   00BA72                     ___fleq:
 11542                           	callstack 26
 11543   00BA72  0E00               	movlw	0
 11544   00BA74  1401               	andwf	___fleq@ff1^0,w,c
 11545   00BA76  6E09               	movwf	??___fleq^0,c
 11546   00BA78  0E00               	movlw	0
 11547   00BA7A  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11548   00BA7C  6E0A               	movwf	(??___fleq+1)^0,c
 11549   00BA7E  0E80               	movlw	128
 11550   00BA80  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11551   00BA82  6E0B               	movwf	(??___fleq+2)^0,c
 11552   00BA84  0E7F               	movlw	127
 11553   00BA86  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11554   00BA88  6E0C               	movwf	(??___fleq+3)^0,c
 11555   00BA8A  5009               	movf	??___fleq^0,w,c
 11556   00BA8C  100A               	iorwf	(??___fleq+1)^0,w,c
 11557   00BA8E  100B               	iorwf	(??___fleq+2)^0,w,c
 11558   00BA90  100C               	iorwf	(??___fleq+3)^0,w,c
 11559   00BA92  A4D8               	btfss	status,2,c
 11560   00BA94  EF4E  F05D         	goto	u8861
 11561   00BA98  EF50  F05D         	goto	u8860
 11562   00BA9C                     u8861:
 11563   00BA9C  EF58  F05D         	goto	l9167
 11564   00BAA0                     u8860:
 11565   00BAA0  0E00               	movlw	0
 11566   00BAA2  6E01               	movwf	___fleq@ff1^0,c
 11567   00BAA4  0E00               	movlw	0
 11568   00BAA6  6E02               	movwf	(___fleq@ff1+1)^0,c
 11569   00BAA8  0E00               	movlw	0
 11570   00BAAA  6E03               	movwf	(___fleq@ff1+2)^0,c
 11571   00BAAC  0E00               	movlw	0
 11572   00BAAE  6E04               	movwf	(___fleq@ff1+3)^0,c
 11573   00BAB0                     l9167:
 11574   00BAB0  0E00               	movlw	0
 11575   00BAB2  1405               	andwf	___fleq@ff2^0,w,c
 11576   00BAB4  6E09               	movwf	??___fleq^0,c
 11577   00BAB6  0E00               	movlw	0
 11578   00BAB8  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11579   00BABA  6E0A               	movwf	(??___fleq+1)^0,c
 11580   00BABC  0E80               	movlw	128
 11581   00BABE  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11582   00BAC0  6E0B               	movwf	(??___fleq+2)^0,c
 11583   00BAC2  0E7F               	movlw	127
 11584   00BAC4  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11585   00BAC6  6E0C               	movwf	(??___fleq+3)^0,c
 11586   00BAC8  5009               	movf	??___fleq^0,w,c
 11587   00BACA  100A               	iorwf	(??___fleq+1)^0,w,c
 11588   00BACC  100B               	iorwf	(??___fleq+2)^0,w,c
 11589   00BACE  100C               	iorwf	(??___fleq+3)^0,w,c
 11590   00BAD0  A4D8               	btfss	status,2,c
 11591   00BAD2  EF6D  F05D         	goto	u8871
 11592   00BAD6  EF6F  F05D         	goto	u8870
 11593   00BADA                     u8871:
 11594   00BADA  EF77  F05D         	goto	l9171
 11595   00BADE                     u8870:
 11596   00BADE  0E00               	movlw	0
 11597   00BAE0  6E05               	movwf	___fleq@ff2^0,c
 11598   00BAE2  0E00               	movlw	0
 11599   00BAE4  6E06               	movwf	(___fleq@ff2+1)^0,c
 11600   00BAE6  0E00               	movlw	0
 11601   00BAE8  6E07               	movwf	(___fleq@ff2+2)^0,c
 11602   00BAEA  0E00               	movlw	0
 11603   00BAEC  6E08               	movwf	(___fleq@ff2+3)^0,c
 11604   00BAEE                     l9171:
 11605   00BAEE  5005               	movf	___fleq@ff2^0,w,c
 11606   00BAF0  1801               	xorwf	___fleq@ff1^0,w,c
 11607   00BAF2  E10F               	bnz	u8880
 11608   00BAF4  5006               	movf	(___fleq@ff2+1)^0,w,c
 11609   00BAF6  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11610   00BAF8  E10C               	bnz	u8880
 11611   00BAFA  5007               	movf	(___fleq@ff2+2)^0,w,c
 11612   00BAFC  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11613   00BAFE  E109               	bnz	u8880
 11614   00BB00  5008               	movf	(___fleq@ff2+3)^0,w,c
 11615   00BB02  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11616   00BB04  B4D8               	btfsc	status,2,c
 11617   00BB06  EF87  F05D         	goto	u8881
 11618   00BB0A  EF89  F05D         	goto	u8880
 11619   00BB0E                     u8881:
 11620   00BB0E  EF8C  F05D         	goto	l9175
 11621   00BB12                     u8880:
 11622   00BB12  90D8               	bcf	status,0,c
 11623   00BB14  EF8D  F05D         	goto	l1226
 11624   00BB18                     l9175:
 11625   00BB18  80D8               	bsf	status,0,c
 11626   00BB1A                     l1226:
 11627   00BB1A  0012               	return		;funcret
 11628   00BB1C                     __end_of___fleq:
 11629                           	callstack 0
 11630                           
 11631 ;; *************** function ___fldiv *****************
 11632 ;; Defined at:
 11633 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;  b               4   14[COMRAM] unsigned char 
 11636 ;;  a               4   18[COMRAM] unsigned char 
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;  grs             4   33[COMRAM] unsigned long 
 11639 ;;  rem             4   26[COMRAM] unsigned long 
 11640 ;;  new_exp         2   31[COMRAM] short 
 11641 ;;  aexp            1   38[COMRAM] unsigned char 
 11642 ;;  bexp            1   37[COMRAM] unsigned char 
 11643 ;;  sign            1   30[COMRAM] unsigned char 
 11644 ;; Return value:  Size  Location     Type
 11645 ;;                  4   14[COMRAM] unsigned char 
 11646 ;; Registers used:
 11647 ;;		wreg, status,2, status,0
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11656 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11657 ;;Total ram usage:       25 bytes
 11658 ;; Hardware stack levels used: 1
 11659 ;; This function calls:
 11660 ;;		Nothing
 11661 ;; This function is called by:
 11662 ;;		_MPU6050_ReadSensorData
 11663 ;;		_efgtoa
 11664 ;; This function uses a non-reentrant model
 11665 ;;
 11666                           
 11667                           	psect	text53
 11668   00D9A6                     __ptext53:
 11669                           	callstack 0
 11670   00D9A6                     ___fldiv:
 11671                           	callstack 26
 11672   00D9A6  5012               	movf	(___fldiv@b+3)^0,w,c
 11673   00D9A8  0B80               	andlw	128
 11674   00D9AA  6E1F               	movwf	___fldiv@sign^0,c
 11675   00D9AC  5012               	movf	(___fldiv@b+3)^0,w,c
 11676   00D9AE  2412               	addwf	(___fldiv@b+3)^0,w,c
 11677   00D9B0  6E26               	movwf	___fldiv@bexp^0,c
 11678   00D9B2  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11679   00D9B4  EFDE  F06C         	goto	u8441
 11680   00D9B8  EFE0  F06C         	goto	u8440
 11681   00D9BC                     u8441:
 11682   00D9BC  EFE1  F06C         	goto	l8895
 11683   00D9C0                     u8440:
 11684   00D9C0  8026               	bsf	___fldiv@bexp^0,0,c
 11685   00D9C2                     l8895:
 11686   00D9C2  5026               	movf	___fldiv@bexp^0,w,c
 11687   00D9C4  B4D8               	btfsc	status,2,c
 11688   00D9C6  EFE7  F06C         	goto	u8451
 11689   00D9CA  EFE9  F06C         	goto	u8450
 11690   00D9CE                     u8451:
 11691   00D9CE  EFFE  F06C         	goto	l8905
 11692   00D9D2                     u8450:
 11693   00D9D2  2826               	incf	___fldiv@bexp^0,w,c
 11694   00D9D4  A4D8               	btfss	status,2,c
 11695   00D9D6  EFEF  F06C         	goto	u8461
 11696   00D9DA  EFF1  F06C         	goto	u8460
 11697   00D9DE                     u8461:
 11698   00D9DE  EFF9  F06C         	goto	l8901
 11699   00D9E2                     u8460:
 11700   00D9E2  0E00               	movlw	0
 11701   00D9E4  6E0F               	movwf	___fldiv@b^0,c
 11702   00D9E6  0E00               	movlw	0
 11703   00D9E8  6E10               	movwf	(___fldiv@b+1)^0,c
 11704   00D9EA  0E00               	movlw	0
 11705   00D9EC  6E11               	movwf	(___fldiv@b+2)^0,c
 11706   00D9EE  0E00               	movlw	0
 11707   00D9F0  6E12               	movwf	(___fldiv@b+3)^0,c
 11708   00D9F2                     l8901:
 11709   00D9F2  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11710   00D9F4  0E00               	movlw	0
 11711   00D9F6  6E12               	movwf	(___fldiv@b+3)^0,c
 11712   00D9F8  EF06  F06D         	goto	l8907
 11713   00D9FC                     l8905:
 11714   00D9FC  0E00               	movlw	0
 11715   00D9FE  6E0F               	movwf	___fldiv@b^0,c
 11716   00DA00  0E00               	movlw	0
 11717   00DA02  6E10               	movwf	(___fldiv@b+1)^0,c
 11718   00DA04  0E00               	movlw	0
 11719   00DA06  6E11               	movwf	(___fldiv@b+2)^0,c
 11720   00DA08  0E00               	movlw	0
 11721   00DA0A  6E12               	movwf	(___fldiv@b+3)^0,c
 11722   00DA0C                     l8907:
 11723   00DA0C  5016               	movf	(___fldiv@a+3)^0,w,c
 11724   00DA0E  0B80               	andlw	128
 11725   00DA10  1A1F               	xorwf	___fldiv@sign^0,f,c
 11726   00DA12  5016               	movf	(___fldiv@a+3)^0,w,c
 11727   00DA14  2416               	addwf	(___fldiv@a+3)^0,w,c
 11728   00DA16  6E27               	movwf	___fldiv@aexp^0,c
 11729   00DA18  AE15               	btfss	(___fldiv@a+2)^0,7,c
 11730   00DA1A  EF11  F06D         	goto	u8471
 11731   00DA1E  EF13  F06D         	goto	u8470
 11732   00DA22                     u8471:
 11733   00DA22  EF14  F06D         	goto	l8915
 11734   00DA26                     u8470:
 11735   00DA26  8027               	bsf	___fldiv@aexp^0,0,c
 11736   00DA28                     l8915:
 11737   00DA28  5027               	movf	___fldiv@aexp^0,w,c
 11738   00DA2A  B4D8               	btfsc	status,2,c
 11739   00DA2C  EF1A  F06D         	goto	u8481
 11740   00DA30  EF1C  F06D         	goto	u8480
 11741   00DA34                     u8481:
 11742   00DA34  EF31  F06D         	goto	l8925
 11743   00DA38                     u8480:
 11744   00DA38  2827               	incf	___fldiv@aexp^0,w,c
 11745   00DA3A  A4D8               	btfss	status,2,c
 11746   00DA3C  EF22  F06D         	goto	u8491
 11747   00DA40  EF24  F06D         	goto	u8490
 11748   00DA44                     u8491:
 11749   00DA44  EF2C  F06D         	goto	l8921
 11750   00DA48                     u8490:
 11751   00DA48  0E00               	movlw	0
 11752   00DA4A  6E13               	movwf	___fldiv@a^0,c
 11753   00DA4C  0E00               	movlw	0
 11754   00DA4E  6E14               	movwf	(___fldiv@a+1)^0,c
 11755   00DA50  0E00               	movlw	0
 11756   00DA52  6E15               	movwf	(___fldiv@a+2)^0,c
 11757   00DA54  0E00               	movlw	0
 11758   00DA56  6E16               	movwf	(___fldiv@a+3)^0,c
 11759   00DA58                     l8921:
 11760   00DA58  8E15               	bsf	(___fldiv@a+2)^0,7,c
 11761   00DA5A  0E00               	movlw	0
 11762   00DA5C  6E16               	movwf	(___fldiv@a+3)^0,c
 11763   00DA5E  EF39  F06D         	goto	l8927
 11764   00DA62                     l8925:
 11765   00DA62  0E00               	movlw	0
 11766   00DA64  6E13               	movwf	___fldiv@a^0,c
 11767   00DA66  0E00               	movlw	0
 11768   00DA68  6E14               	movwf	(___fldiv@a+1)^0,c
 11769   00DA6A  0E00               	movlw	0
 11770   00DA6C  6E15               	movwf	(___fldiv@a+2)^0,c
 11771   00DA6E  0E00               	movlw	0
 11772   00DA70  6E16               	movwf	(___fldiv@a+3)^0,c
 11773   00DA72                     l8927:
 11774   00DA72  5013               	movf	___fldiv@a^0,w,c
 11775   00DA74  1014               	iorwf	(___fldiv@a+1)^0,w,c
 11776   00DA76  1015               	iorwf	(___fldiv@a+2)^0,w,c
 11777   00DA78  1016               	iorwf	(___fldiv@a+3)^0,w,c
 11778   00DA7A  A4D8               	btfss	status,2,c
 11779   00DA7C  EF42  F06D         	goto	u8501
 11780   00DA80  EF44  F06D         	goto	u8500
 11781   00DA84                     u8501:
 11782   00DA84  EF5C  F06D         	goto	l8939
 11783   00DA88                     u8500:
 11784   00DA88  0E00               	movlw	0
 11785   00DA8A  6E0F               	movwf	___fldiv@b^0,c
 11786   00DA8C  0E00               	movlw	0
 11787   00DA8E  6E10               	movwf	(___fldiv@b+1)^0,c
 11788   00DA90  0E00               	movlw	0
 11789   00DA92  6E11               	movwf	(___fldiv@b+2)^0,c
 11790   00DA94  0E00               	movlw	0
 11791   00DA96  6E12               	movwf	(___fldiv@b+3)^0,c
 11792   00DA98  0E80               	movlw	128
 11793   00DA9A  1211               	iorwf	(___fldiv@b+2)^0,f,c
 11794   00DA9C  0E7F               	movlw	127
 11795   00DA9E  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11796   00DAA0                     l8933:
 11797   00DAA0  501F               	movf	___fldiv@sign^0,w,c
 11798   00DAA2  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11799   00DAA4  C00F  F00F         	movff	___fldiv@b,?___fldiv
 11800   00DAA8  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 11801   00DAAC  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 11802   00DAB0  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 11803   00DAB4  EF9F  F06E         	goto	l1549
 11804   00DAB8                     l8939:
 11805   00DAB8  5026               	movf	___fldiv@bexp^0,w,c
 11806   00DABA  A4D8               	btfss	status,2,c
 11807   00DABC  EF62  F06D         	goto	u8511
 11808   00DAC0  EF64  F06D         	goto	u8510
 11809   00DAC4                     u8511:
 11810   00DAC4  EF6E  F06D         	goto	l8947
 11811   00DAC8                     u8510:
 11812   00DAC8  0E00               	movlw	0
 11813   00DACA  6E0F               	movwf	?___fldiv^0,c
 11814   00DACC  0E00               	movlw	0
 11815   00DACE  6E10               	movwf	(?___fldiv+1)^0,c
 11816   00DAD0  0E00               	movlw	0
 11817   00DAD2  6E11               	movwf	(?___fldiv+2)^0,c
 11818   00DAD4  0E00               	movlw	0
 11819   00DAD6  6E12               	movwf	(?___fldiv+3)^0,c
 11820   00DAD8  EF9F  F06E         	goto	l1549
 11821   00DADC                     l8947:
 11822   00DADC  5027               	movf	___fldiv@aexp^0,w,c
 11823   00DADE  C026  F017         	movff	___fldiv@bexp,??___fldiv
 11824   00DAE2  6A18               	clrf	(??___fldiv+1)^0,c
 11825   00DAE4  5E17               	subwf	??___fldiv^0,f,c
 11826   00DAE6  0E00               	movlw	0
 11827   00DAE8  5A18               	subwfb	(??___fldiv+1)^0,f,c
 11828   00DAEA  0E7F               	movlw	127
 11829   00DAEC  2417               	addwf	??___fldiv^0,w,c
 11830   00DAEE  6E20               	movwf	___fldiv@new_exp^0,c
 11831   00DAF0  0E00               	movlw	0
 11832   00DAF2  2018               	addwfc	(??___fldiv+1)^0,w,c
 11833   00DAF4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11834   00DAF6  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 11835   00DAFA  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 11836   00DAFE  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 11837   00DB02  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 11838   00DB06  0E00               	movlw	0
 11839   00DB08  6E0F               	movwf	___fldiv@b^0,c
 11840   00DB0A  0E00               	movlw	0
 11841   00DB0C  6E10               	movwf	(___fldiv@b+1)^0,c
 11842   00DB0E  0E00               	movlw	0
 11843   00DB10  6E11               	movwf	(___fldiv@b+2)^0,c
 11844   00DB12  0E00               	movlw	0
 11845   00DB14  6E12               	movwf	(___fldiv@b+3)^0,c
 11846   00DB16  0E00               	movlw	0
 11847   00DB18  6E22               	movwf	___fldiv@grs^0,c
 11848   00DB1A  0E00               	movlw	0
 11849   00DB1C  6E23               	movwf	(___fldiv@grs+1)^0,c
 11850   00DB1E  0E00               	movlw	0
 11851   00DB20  6E24               	movwf	(___fldiv@grs+2)^0,c
 11852   00DB22  0E00               	movlw	0
 11853   00DB24  6E25               	movwf	(___fldiv@grs+3)^0,c
 11854   00DB26  0E00               	movlw	0
 11855   00DB28  6E27               	movwf	___fldiv@aexp^0,c
 11856   00DB2A  EFCF  F06D         	goto	l1551
 11857   00DB2E                     l8957:
 11858   00DB2E  5027               	movf	___fldiv@aexp^0,w,c
 11859   00DB30  B4D8               	btfsc	status,2,c
 11860   00DB32  EF9D  F06D         	goto	u8521
 11861   00DB36  EF9F  F06D         	goto	u8520
 11862   00DB3A                     u8521:
 11863   00DB3A  EFB6  F06D         	goto	l8965
 11864   00DB3E                     u8520:
 11865   00DB3E  90D8               	bcf	status,0,c
 11866   00DB40  361B               	rlcf	___fldiv@rem^0,f,c
 11867   00DB42  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 11868   00DB44  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 11869   00DB46  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 11870   00DB48  90D8               	bcf	status,0,c
 11871   00DB4A  360F               	rlcf	___fldiv@b^0,f,c
 11872   00DB4C  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11873   00DB4E  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11874   00DB50  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11875   00DB52  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11876   00DB54  EFAE  F06D         	goto	u8531
 11877   00DB58  EFB0  F06D         	goto	u8530
 11878   00DB5C                     u8531:
 11879   00DB5C  EFB1  F06D         	goto	l1554
 11880   00DB60                     u8530:
 11881   00DB60  800F               	bsf	___fldiv@b^0,0,c
 11882   00DB62                     l1554:
 11883   00DB62  90D8               	bcf	status,0,c
 11884   00DB64  3622               	rlcf	___fldiv@grs^0,f,c
 11885   00DB66  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11886   00DB68  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11887   00DB6A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11888   00DB6C                     l8965:
 11889   00DB6C  5013               	movf	___fldiv@a^0,w,c
 11890   00DB6E  5C1B               	subwf	___fldiv@rem^0,w,c
 11891   00DB70  5014               	movf	(___fldiv@a+1)^0,w,c
 11892   00DB72  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 11893   00DB74  5015               	movf	(___fldiv@a+2)^0,w,c
 11894   00DB76  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 11895   00DB78  5016               	movf	(___fldiv@a+3)^0,w,c
 11896   00DB7A  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 11897   00DB7C  A0D8               	btfss	status,0,c
 11898   00DB7E  EFC3  F06D         	goto	u8541
 11899   00DB82  EFC5  F06D         	goto	u8540
 11900   00DB86                     u8541:
 11901   00DB86  EFCE  F06D         	goto	l8971
 11902   00DB8A                     u8540:
 11903   00DB8A  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 11904   00DB8C  5013               	movf	___fldiv@a^0,w,c
 11905   00DB8E  5E1B               	subwf	___fldiv@rem^0,f,c
 11906   00DB90  5014               	movf	(___fldiv@a+1)^0,w,c
 11907   00DB92  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 11908   00DB94  5015               	movf	(___fldiv@a+2)^0,w,c
 11909   00DB96  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 11910   00DB98  5016               	movf	(___fldiv@a+3)^0,w,c
 11911   00DB9A  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 11912   00DB9C                     l8971:
 11913   00DB9C  2A27               	incf	___fldiv@aexp^0,f,c
 11914   00DB9E                     l1551:
 11915   00DB9E  0E19               	movlw	25
 11916   00DBA0  6427               	cpfsgt	___fldiv@aexp^0,c
 11917   00DBA2  EFD5  F06D         	goto	u8551
 11918   00DBA6  EFD7  F06D         	goto	u8550
 11919   00DBAA                     u8551:
 11920   00DBAA  EF97  F06D         	goto	l8957
 11921   00DBAE                     u8550:
 11922   00DBAE  501B               	movf	___fldiv@rem^0,w,c
 11923   00DBB0  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 11924   00DBB2  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 11925   00DBB4  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 11926   00DBB6  B4D8               	btfsc	status,2,c
 11927   00DBB8  EFE0  F06D         	goto	u8561
 11928   00DBBC  EFE2  F06D         	goto	u8560
 11929   00DBC0                     u8561:
 11930   00DBC0  EFFA  F06D         	goto	l8983
 11931   00DBC4                     u8560:
 11932   00DBC4  8022               	bsf	___fldiv@grs^0,0,c
 11933   00DBC6  EFFA  F06D         	goto	l8983
 11934   00DBCA                     l8977:
 11935   00DBCA  90D8               	bcf	status,0,c
 11936   00DBCC  360F               	rlcf	___fldiv@b^0,f,c
 11937   00DBCE  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11938   00DBD0  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11939   00DBD2  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11940   00DBD4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11941   00DBD6  EFEF  F06D         	goto	u8571
 11942   00DBDA  EFF1  F06D         	goto	u8570
 11943   00DBDE                     u8571:
 11944   00DBDE  EFF2  F06D         	goto	l1560
 11945   00DBE2                     u8570:
 11946   00DBE2  800F               	bsf	___fldiv@b^0,0,c
 11947   00DBE4                     l1560:
 11948   00DBE4  90D8               	bcf	status,0,c
 11949   00DBE6  3622               	rlcf	___fldiv@grs^0,f,c
 11950   00DBE8  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11951   00DBEA  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11952   00DBEC  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11953   00DBEE  0620               	decf	___fldiv@new_exp^0,f,c
 11954   00DBF0  A0D8               	btfss	status,0,c
 11955   00DBF2  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 11956   00DBF4                     l8983:
 11957   00DBF4  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11958   00DBF6  EFFF  F06D         	goto	u8581
 11959   00DBFA  EF01  F06E         	goto	u8580
 11960   00DBFE                     u8581:
 11961   00DBFE  EFE5  F06D         	goto	l8977
 11962   00DC02                     u8580:
 11963   00DC02  0E00               	movlw	0
 11964   00DC04  6E27               	movwf	___fldiv@aexp^0,c
 11965   00DC06  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11966   00DC08  EF08  F06E         	goto	u8591
 11967   00DC0C  EF0A  F06E         	goto	u8590
 11968   00DC10                     u8591:
 11969   00DC10  EF2E  F06E         	goto	l1562
 11970   00DC14                     u8590:
 11971   00DC14  0EFF               	movlw	255
 11972   00DC16  1422               	andwf	___fldiv@grs^0,w,c
 11973   00DC18  6E17               	movwf	??___fldiv^0,c
 11974   00DC1A  0EFF               	movlw	255
 11975   00DC1C  1423               	andwf	(___fldiv@grs+1)^0,w,c
 11976   00DC1E  6E18               	movwf	(??___fldiv+1)^0,c
 11977   00DC20  0EFF               	movlw	255
 11978   00DC22  1424               	andwf	(___fldiv@grs+2)^0,w,c
 11979   00DC24  6E19               	movwf	(??___fldiv+2)^0,c
 11980   00DC26  0E7F               	movlw	127
 11981   00DC28  1425               	andwf	(___fldiv@grs+3)^0,w,c
 11982   00DC2A  6E1A               	movwf	(??___fldiv+3)^0,c
 11983   00DC2C  5017               	movf	??___fldiv^0,w,c
 11984   00DC2E  1018               	iorwf	(??___fldiv+1)^0,w,c
 11985   00DC30  1019               	iorwf	(??___fldiv+2)^0,w,c
 11986   00DC32  101A               	iorwf	(??___fldiv+3)^0,w,c
 11987   00DC34  B4D8               	btfsc	status,2,c
 11988   00DC36  EF1F  F06E         	goto	u8601
 11989   00DC3A  EF21  F06E         	goto	u8600
 11990   00DC3E                     u8601:
 11991   00DC3E  EF25  F06E         	goto	l1563
 11992   00DC42                     u8600:
 11993   00DC42                     l8991:
 11994   00DC42  0E01               	movlw	1
 11995   00DC44  6E27               	movwf	___fldiv@aexp^0,c
 11996   00DC46  EF2E  F06E         	goto	l1562
 11997   00DC4A                     l1563:
 11998   00DC4A  A00F               	btfss	___fldiv@b^0,0,c
 11999   00DC4C  EF2A  F06E         	goto	u8611
 12000   00DC50  EF2C  F06E         	goto	u8610
 12001   00DC54                     u8611:
 12002   00DC54  EF2E  F06E         	goto	l1562
 12003   00DC58                     u8610:
 12004   00DC58  EF21  F06E         	goto	l8991
 12005   00DC5C                     l1562:
 12006   00DC5C  5027               	movf	___fldiv@aexp^0,w,c
 12007   00DC5E  B4D8               	btfsc	status,2,c
 12008   00DC60  EF34  F06E         	goto	u8621
 12009   00DC64  EF36  F06E         	goto	u8620
 12010   00DC68                     u8621:
 12011   00DC68  EF5A  F06E         	goto	l9003
 12012   00DC6C                     u8620:
 12013   00DC6C  0E01               	movlw	1
 12014   00DC6E  260F               	addwf	___fldiv@b^0,f,c
 12015   00DC70  0E00               	movlw	0
 12016   00DC72  2210               	addwfc	(___fldiv@b+1)^0,f,c
 12017   00DC74  2211               	addwfc	(___fldiv@b+2)^0,f,c
 12018   00DC76  2212               	addwfc	(___fldiv@b+3)^0,f,c
 12019   00DC78  A012               	btfss	(___fldiv@b+3)^0,0,c
 12020   00DC7A  EF41  F06E         	goto	u8631
 12021   00DC7E  EF43  F06E         	goto	u8630
 12022   00DC82                     u8631:
 12023   00DC82  EF5A  F06E         	goto	l9003
 12024   00DC86                     u8630:
 12025   00DC86  C00F  F017         	movff	___fldiv@b,??___fldiv
 12026   00DC8A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 12027   00DC8E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 12028   00DC92  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 12029   00DC96  341A               	rlcf	(??___fldiv+3)^0,w,c
 12030   00DC98  321A               	rrcf	(??___fldiv+3)^0,f,c
 12031   00DC9A  3219               	rrcf	(??___fldiv+2)^0,f,c
 12032   00DC9C  3218               	rrcf	(??___fldiv+1)^0,f,c
 12033   00DC9E  3217               	rrcf	??___fldiv^0,f,c
 12034   00DCA0  C017  F00F         	movff	??___fldiv,___fldiv@b
 12035   00DCA4  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 12036   00DCA8  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 12037   00DCAC  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 12038   00DCB0  4A20               	infsnz	___fldiv@new_exp^0,f,c
 12039   00DCB2  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 12040   00DCB4                     l9003:
 12041   00DCB4  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12042   00DCB6  EF65  F06E         	goto	u8641
 12043   00DCBA  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 12044   00DCBC  E108               	bnz	u8640
 12045   00DCBE  2820               	incf	___fldiv@new_exp^0,w,c
 12046   00DCC0  A0D8               	btfss	status,0,c
 12047   00DCC2  EF65  F06E         	goto	u8641
 12048   00DCC6  EF67  F06E         	goto	u8640
 12049   00DCCA                     u8641:
 12050   00DCCA  EF72  F06E         	goto	l9007
 12051   00DCCE                     u8640:
 12052   00DCCE  0E00               	movlw	0
 12053   00DCD0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 12054   00DCD2  6820               	setf	___fldiv@new_exp^0,c
 12055   00DCD4  0E00               	movlw	0
 12056   00DCD6  6E0F               	movwf	___fldiv@b^0,c
 12057   00DCD8  0E00               	movlw	0
 12058   00DCDA  6E10               	movwf	(___fldiv@b+1)^0,c
 12059   00DCDC  0E00               	movlw	0
 12060   00DCDE  6E11               	movwf	(___fldiv@b+2)^0,c
 12061   00DCE0  0E00               	movlw	0
 12062   00DCE2  6E12               	movwf	(___fldiv@b+3)^0,c
 12063   00DCE4                     l9007:
 12064   00DCE4  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12065   00DCE6  EF7F  F06E         	goto	u8650
 12066   00DCEA  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 12067   00DCEC  E106               	bnz	u8651
 12068   00DCEE  0420               	decf	___fldiv@new_exp^0,w,c
 12069   00DCF0  B0D8               	btfsc	status,0,c
 12070   00DCF2  EF7D  F06E         	goto	u8651
 12071   00DCF6  EF7F  F06E         	goto	u8650
 12072   00DCFA                     u8651:
 12073   00DCFA  EF8D  F06E         	goto	l9011
 12074   00DCFE                     u8650:
 12075   00DCFE  0E00               	movlw	0
 12076   00DD00  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 12077   00DD02  0E00               	movlw	0
 12078   00DD04  6E20               	movwf	___fldiv@new_exp^0,c
 12079   00DD06  0E00               	movlw	0
 12080   00DD08  6E0F               	movwf	___fldiv@b^0,c
 12081   00DD0A  0E00               	movlw	0
 12082   00DD0C  6E10               	movwf	(___fldiv@b+1)^0,c
 12083   00DD0E  0E00               	movlw	0
 12084   00DD10  6E11               	movwf	(___fldiv@b+2)^0,c
 12085   00DD12  0E00               	movlw	0
 12086   00DD14  6E12               	movwf	(___fldiv@b+3)^0,c
 12087   00DD16  0E00               	movlw	0
 12088   00DD18  6E1F               	movwf	___fldiv@sign^0,c
 12089   00DD1A                     l9011:
 12090   00DD1A  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 12091   00DD1E  A026               	btfss	___fldiv@bexp^0,0,c
 12092   00DD20  EF94  F06E         	goto	u8661
 12093   00DD24  EF96  F06E         	goto	u8660
 12094   00DD28                     u8661:
 12095   00DD28  EF99  F06E         	goto	l9017
 12096   00DD2C                     u8660:
 12097   00DD2C  8E11               	bsf	(___fldiv@b+2)^0,7,c
 12098   00DD2E  EF9A  F06E         	goto	l9019
 12099   00DD32                     l9017:
 12100   00DD32  9E11               	bcf	(___fldiv@b+2)^0,7,c
 12101   00DD34                     l9019:
 12102   00DD34  90D8               	bcf	status,0,c
 12103   00DD36  3026               	rrcf	___fldiv@bexp^0,w,c
 12104   00DD38  6E12               	movwf	(___fldiv@b+3)^0,c
 12105   00DD3A  EF50  F06D         	goto	l8933
 12106   00DD3E                     l1549:
 12107   00DD3E  0012               	return		;funcret
 12108   00DD40                     __end_of___fldiv:
 12109                           	callstack 0
 12110                           
 12111 ;; *************** function _UART_SendString *****************
 12112 ;; Defined at:
 12113 ;;		line 80 in file "main.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;  str             2    1[COMRAM] PTR const unsigned char 
 12116 ;;		 -> STR_18(38), STR_14(2), STR_13(11), main@userInput(20), 
 12117 ;;		 -> STR_12(62), main@buffer(200), STR_7(9), STR_6(33), 
 12118 ;;		 -> ReadAndSendEEPROMData@buffer(200), STR_4(5), ReadAndSendEEPROMDataCSV@buffer(200), STR_2(19), 
 12119 ;;		 -> Handle_LOG_STAT@buffer(200), 
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;		None
 12122 ;; Return value:  Size  Location     Type
 12123 ;;                  1    wreg      void 
 12124 ;; Registers used:
 12125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12126 ;; Tracked objects:
 12127 ;;		On entry : 0/0
 12128 ;;		On exit  : 0/0
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;Total ram usage:        2 bytes
 12136 ;; Hardware stack levels used: 1
 12137 ;; Hardware stack levels required when called: 1
 12138 ;; This function calls:
 12139 ;;		_UART1_Write
 12140 ;; This function is called by:
 12141 ;;		_ReadAndSendEEPROMDataCSV
 12142 ;;		_ReadAndSendEEPROMData
 12143 ;;		_StartLogging
 12144 ;;		_main
 12145 ;;		_Handle_LOG_STAT
 12146 ;;		_Handle_LOG_READ
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           	psect	text54
 12151   00B336                     __ptext54:
 12152                           	callstack 0
 12153   00B336                     _UART_SendString:
 12154                           	callstack 29
 12155   00B336                     
 12156                           ;main.c: 81:     while (*str){
 12157   00B336  EFB6  F059         	goto	l10299
 12158   00B33A                     l10295:
 12159                           
 12160                           ;main.c: 82:         UART1_Write(*str);
 12161   00B33A  0060  F00B  FFF6   	movff	UART_SendString@str,tblptrl
 12162   00B340  0060  F00F  FFF7   	movff	UART_SendString@str+1,tblptrh
 12163   00B346  0E00               	movlw	low (__mediumconst shr (0+16))
 12164   00B348  6EF8               	movwf	tblptru,c
 12165   00B34A  0E0F               	movlw	(high __ramtop+-1)
 12166   00B34C  64F7               	cpfsgt	tblptrh,c
 12167   00B34E  D003               	bra	u10707
 12168   00B350  0008               	tblrd		*
 12169   00B352  50F5               	movf	tablat,w,c
 12170   00B354  D007               	bra	u10700
 12171   00B356                     u10707:
 12172   00B356  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12173   00B35C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12174   00B362  50EF               	movf	indf0,w,c
 12175   00B364                     u10700:
 12176   00B364  EC9D  F053         	call	_UART1_Write
 12177   00B368                     
 12178                           ;main.c: 83:         str++;
 12179   00B368  4A02               	infsnz	UART_SendString@str^0,f,c
 12180   00B36A  2A03               	incf	(UART_SendString@str+1)^0,f,c
 12181   00B36C                     l10299:
 12182                           
 12183                           ;main.c: 81:     while (*str){
 12184   00B36C  0060  F00B  FFF6   	movff	UART_SendString@str,tblptrl
 12185   00B372  0060  F00F  FFF7   	movff	UART_SendString@str+1,tblptrh
 12186   00B378  0E00               	movlw	low (__mediumconst shr (0+16))
 12187   00B37A  6EF8               	movwf	tblptru,c
 12188   00B37C  0E0F               	movlw	(high __ramtop+-1)
 12189   00B37E  64F7               	cpfsgt	tblptrh,c
 12190   00B380  D003               	bra	u10717
 12191   00B382  0008               	tblrd		*
 12192   00B384  50F5               	movf	tablat,w,c
 12193   00B386  D007               	bra	u10710
 12194   00B388                     u10717:
 12195   00B388  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12196   00B38E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12197   00B394  50EF               	movf	indf0,w,c
 12198   00B396                     u10710:
 12199   00B396  0900               	iorlw	0
 12200   00B398  A4D8               	btfss	status,2,c
 12201   00B39A  EFD1  F059         	goto	u10721
 12202   00B39E  EFD3  F059         	goto	u10720
 12203   00B3A2                     u10721:
 12204   00B3A2  EF9D  F059         	goto	l10295
 12205   00B3A6                     u10720:
 12206   00B3A6  0012               	return		;funcret
 12207   00B3A8                     __end_of_UART_SendString:
 12208                           	callstack 0
 12209                           
 12210 ;; *************** function _UART1_Write *****************
 12211 ;; Defined at:
 12212 ;;		line 170 in file "mcc_generated_files/uart1.c"
 12213 ;; Parameters:    Size  Location     Type
 12214 ;;  txData          1    wreg     unsigned char 
 12215 ;; Auto vars:     Size  Location     Type
 12216 ;;  txData          1    0[COMRAM] unsigned char 
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  1    wreg      void 
 12219 ;; Registers used:
 12220 ;;		wreg
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;Total ram usage:        1 bytes
 12231 ;; Hardware stack levels used: 1
 12232 ;; This function calls:
 12233 ;;		Nothing
 12234 ;; This function is called by:
 12235 ;;		_putch
 12236 ;;		_UART_SendString
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text55
 12241   00A73A                     __ptext55:
 12242                           	callstack 0
 12243   00A73A                     _UART1_Write:
 12244                           	callstack 22
 12245                           
 12246                           ;incstack = 0
 12247                           ;UART1_Write@txData stored from wreg
 12248   00A73A  6E01               	movwf	UART1_Write@txData^0,c
 12249   00A73C                     l191:
 12250                           
 12251                           ;mcc_generated_files/uart1.c: 172:     while(0 == PIR3bits.U1TXIF)
 12252   00A73C  0139               	movlb	57	; () banked
 12253   00A73E  A9A3               	btfss	163,4,b	;volatile
 12254   00A740  EFA4  F053         	goto	u7591
 12255   00A744  EFA6  F053         	goto	u7590
 12256   00A748                     u7591:
 12257   00A748  EF9E  F053         	goto	l191
 12258   00A74C                     u7590:
 12259   00A74C                     
 12260                           ; BSR set to: 57
 12261                           ;mcc_generated_files/uart1.c: 176:     U1TXB = txData;
 12262   00A74C  0060  F007  FDEA   	movff	UART1_Write@txData,15850	;volatile
 12263   00A752                     
 12264                           ; BSR set to: 57
 12265   00A752  0012               	return		;funcret
 12266   00A754                     __end_of_UART1_Write:
 12267                           	callstack 0
 12268                           
 12269 ;; *************** function _ParseUserInput *****************
 12270 ;; Defined at:
 12271 ;;		line 374 in file "main.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  input           2   46[BANK0 ] PTR const unsigned char 
 12274 ;;		 -> main@userInput(20), 
 12275 ;;  Tm              1   48[BANK0 ] PTR unsigned long 
 12276 ;;		 -> Tm(4), 
 12277 ;;  Ndat            1   49[BANK0 ] PTR unsigned long 
 12278 ;;		 -> Ndat(4), 
 12279 ;; Auto vars:     Size  Location     Type
 12280 ;;		None
 12281 ;; Return value:  Size  Location     Type
 12282 ;;                  1    wreg      _Bool 
 12283 ;; Registers used:
 12284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12285 ;; Tracked objects:
 12286 ;;		On entry : 0/0
 12287 ;;		On exit  : 0/0
 12288 ;;		Unchanged: 0/0
 12289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12290 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12293 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12294 ;;Total ram usage:        4 bytes
 12295 ;; Hardware stack levels used: 1
 12296 ;; Hardware stack levels required when called: 7
 12297 ;; This function calls:
 12298 ;;		_sscanf
 12299 ;; This function is called by:
 12300 ;;		_main
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           	psect	text56
 12305   00B2C6                     __ptext56:
 12306                           	callstack 0
 12307   00B2C6                     _ParseUserInput:
 12308                           	callstack 23
 12309   00B2C6                     
 12310                           ;main.c: 376:     if (sscanf(input, "LOG(%lu,%lu)\r\n", Tm, Ndat) == 2 || sscanf(input, 
      +                          "LOG(%lu,%lu)\n", Tm, Ndat) == 2) {
 12311   00B2C6  C08E  F079         	movff	ParseUserInput@input,sscanf@s
 12312   00B2CA  C08F  F07A         	movff	ParseUserInput@input+1,sscanf@s+1
 12313   00B2CE  0EA7               	movlw	low STR_8
 12314   00B2D0  0100               	movlb	0	; () banked
 12315   00B2D2  6F7B               	movwf	sscanf@fmt& (0+255),b
 12316   00B2D4  0EFF               	movlw	high STR_8
 12317   00B2D6  6F7C               	movwf	(sscanf@fmt+1)& (0+255),b
 12318   00B2D8  C090  F07D         	movff	ParseUserInput@Tm,?_sscanf+4
 12319   00B2DC  C091  F07E         	movff	ParseUserInput@Ndat,?_sscanf+5
 12320   00B2E0  ECF5  F055         	call	_sscanf	;wreg free
 12321   00B2E4  0E02               	movlw	2
 12322   00B2E6  0100               	movlb	0	; () banked
 12323   00B2E8  1979               	xorwf	?_sscanf& (0+255),w,b
 12324   00B2EA  117A               	iorwf	(?_sscanf+1)& (0+255),w,b
 12325   00B2EC  B4D8               	btfsc	status,2,c
 12326   00B2EE  EF7B  F059         	goto	u11121
 12327   00B2F2  EF7D  F059         	goto	u11120
 12328   00B2F6                     u11121:
 12329   00B2F6  EF96  F059         	goto	l10693
 12330   00B2FA                     u11120:
 12331   00B2FA                     
 12332                           ; BSR set to: 0
 12333   00B2FA  C08E  F079         	movff	ParseUserInput@input,sscanf@s
 12334   00B2FE  C08F  F07A         	movff	ParseUserInput@input+1,sscanf@s+1
 12335   00B302  0EB6               	movlw	low STR_9
 12336   00B304  6F7B               	movwf	sscanf@fmt& (0+255),b
 12337   00B306  0EFF               	movlw	high STR_9
 12338   00B308  6F7C               	movwf	(sscanf@fmt+1)& (0+255),b
 12339   00B30A  C090  F07D         	movff	ParseUserInput@Tm,?_sscanf+4
 12340   00B30E  C091  F07E         	movff	ParseUserInput@Ndat,?_sscanf+5
 12341   00B312  ECF5  F055         	call	_sscanf	;wreg free
 12342   00B316  0E02               	movlw	2
 12343   00B318  0100               	movlb	0	; () banked
 12344   00B31A  1979               	xorwf	?_sscanf& (0+255),w,b
 12345   00B31C  117A               	iorwf	(?_sscanf+1)& (0+255),w,b
 12346   00B31E  A4D8               	btfss	status,2,c
 12347   00B320  EF94  F059         	goto	u11131
 12348   00B324  EF96  F059         	goto	u11130
 12349   00B328                     u11131:
 12350   00B328  EF99  F059         	goto	l10697
 12351   00B32C                     u11130:
 12352   00B32C                     l10693:
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;main.c: 377:         return 1;
 12356   00B32C  0E01               	movlw	1
 12357   00B32E  EF9A  F059         	goto	l942
 12358   00B332                     l10697:
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;main.c: 379:     return 0;
 12362   00B332  0E00               	movlw	0
 12363   00B334                     l942:
 12364                           
 12365                           ; BSR set to: 0
 12366   00B334  0012               	return		;funcret
 12367   00B336                     __end_of_ParseUserInput:
 12368                           	callstack 0
 12369                           
 12370 ;; *************** function _sscanf *****************
 12371 ;; Defined at:
 12372 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sscanf.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  s               2   25[BANK0 ] PTR const unsigned char 
 12375 ;;		 -> main@userInput(20), 
 12376 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 12377 ;;		 -> STR_9(14), STR_8(15), 
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;  f              12   34[BANK0 ] struct _IO_FILE
 12380 ;;  ret             2   31[BANK0 ] int 
 12381 ;;  ap              1   33[BANK0 ] PTR void [1]
 12382 ;;		 -> ?_sscanf(2), 
 12383 ;; Return value:  Size  Location     Type
 12384 ;;                  2   25[BANK0 ] int 
 12385 ;; Registers used:
 12386 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12387 ;; Tracked objects:
 12388 ;;		On entry : 0/0
 12389 ;;		On exit  : 0/0
 12390 ;;		Unchanged: 0/0
 12391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12392 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12393 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12395 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12396 ;;Total ram usage:       21 bytes
 12397 ;; Hardware stack levels used: 1
 12398 ;; Hardware stack levels required when called: 6
 12399 ;; This function calls:
 12400 ;;		_vfscanf
 12401 ;; This function is called by:
 12402 ;;		_ParseUserInput
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text57
 12407   00ABEA                     __ptext57:
 12408                           	callstack 0
 12409   00ABEA                     _sscanf:
 12410                           	callstack 23
 12411   00ABEA  0E7D               	movlw	low (?_sscanf+4)
 12412   00ABEC  0100               	movlb	0	; () banked
 12413   00ABEE  6F81               	movwf	sscanf@ap& (0+255),b
 12414   00ABF0  C079  F082         	movff	sscanf@s,sscanf@f
 12415   00ABF4  C07A  F083         	movff	sscanf@s+1,sscanf@f+1
 12416   00ABF8                     
 12417                           ; BSR set to: 0
 12418   00ABF8  0E00               	movlw	0
 12419   00ABFA  6F86               	movwf	(sscanf@f+4)& (0+255),b
 12420   00ABFC  0E00               	movlw	0
 12421   00ABFE  6F85               	movwf	(sscanf@f+3)& (0+255),b
 12422   00AC00                     
 12423                           ; BSR set to: 0
 12424   00AC00  0E00               	movlw	0
 12425   00AC02  6F8B               	movwf	(sscanf@f+9)& (0+255),b
 12426   00AC04  0E00               	movlw	0
 12427   00AC06  6F8A               	movwf	(sscanf@f+8)& (0+255),b
 12428   00AC08                     
 12429                           ; BSR set to: 0
 12430   00AC08  0E82               	movlw	low sscanf@f
 12431   00AC0A  6F6F               	movwf	vfscanf@fp& (0+255),b
 12432   00AC0C  C07B  F070         	movff	sscanf@fmt,vfscanf@fmt
 12433   00AC10  C07C  F071         	movff	sscanf@fmt+1,vfscanf@fmt+1
 12434   00AC14  0E81               	movlw	low sscanf@ap
 12435   00AC16  6F72               	movwf	vfscanf@ap& (0+255),b
 12436   00AC18  ECFC  F05E         	call	_vfscanf	;wreg free
 12437   00AC1C  C06F  F07F         	movff	?_vfscanf,sscanf@ret
 12438   00AC20  C070  F080         	movff	?_vfscanf+1,sscanf@ret+1
 12439   00AC24  C07F  F079         	movff	sscanf@ret,?_sscanf
 12440   00AC28  C080  F07A         	movff	sscanf@ret+1,?_sscanf+1
 12441   00AC2C  0012               	return		;funcret
 12442   00AC2E                     __end_of_sscanf:
 12443                           	callstack 0
 12444                           
 12445 ;; *************** function _vfscanf *****************
 12446 ;; Defined at:
 12447 ;;		line 1502 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c"
 12448 ;; Parameters:    Size  Location     Type
 12449 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
 12450 ;;		 -> sscanf@f(12), 
 12451 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
 12452 ;;		 -> STR_9(14), STR_8(15), 
 12453 ;;  ap              1   18[BANK0 ] PTR PTR void 
 12454 ;;		 -> sscanf@ap(1), 
 12455 ;; Auto vars:     Size  Location     Type
 12456 ;;  cfmt            2   23[BANK0 ] PTR unsigned char 
 12457 ;;		 -> STR_9(14), STR_8(15), 
 12458 ;;  n               2   21[BANK0 ] int 
 12459 ;;  saved_errno     2   19[BANK0 ] int 
 12460 ;; Return value:  Size  Location     Type
 12461 ;;                  2   15[BANK0 ] int 
 12462 ;; Registers used:
 12463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12464 ;; Tracked objects:
 12465 ;;		On entry : 0/0
 12466 ;;		On exit  : 0/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12469 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12470 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12472 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12473 ;;Total ram usage:       10 bytes
 12474 ;; Hardware stack levels used: 1
 12475 ;; Hardware stack levels required when called: 5
 12476 ;; This function calls:
 12477 ;;		_vfsfcnvrt
 12478 ;; This function is called by:
 12479 ;;		_sscanf
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           	psect	text58
 12484   00BDF8                     __ptext58:
 12485                           	callstack 0
 12486   00BDF8                     _vfscanf:
 12487                           	callstack 23
 12488   00BDF8                     
 12489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1502: int vfscanf
      +                          (FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doscan.c: 1503: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doscan.c: 1504:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doscan.c: 1505:     int n, saved_errno;;C:\Program Files\Microchip\xc8\v2.45\pic\s
      +                          ources\c99\common\doscan.c: 1507:     cfmt = (char *)fmt;
 12490   00BDF8  C070  F077         	movff	vfscanf@fmt,vfscanf@cfmt
 12491   00BDFC  C071  F078         	movff	vfscanf@fmt+1,vfscanf@cfmt+1
 12492   00BE00                     
 12493                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1508:     ncnv = 
      +                          nmatch = 0;
 12494   00BE00  0E00               	movlw	0
 12495   00BE02  0100               	movlb	0	; () banked
 12496   00BE04  6FBA               	movwf	(_nmatch+1)& (0+255),b
 12497   00BE06  0E00               	movlw	0
 12498   00BE08  6FB9               	movwf	_nmatch& (0+255),b
 12499   00BE0A  C0B9  F0BB         	movff	_nmatch,_ncnv
 12500   00BE0E  C0BA  F0BC         	movff	_nmatch+1,_ncnv+1
 12501   00BE12                     
 12502                           ; BSR set to: 0
 12503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1509:  saved_errn
      +                          o = errno;
 12504   00BE12  C0BF  F073         	movff	_errno,vfscanf@saved_errno
 12505   00BE16  C0C0  F074         	movff	_errno+1,vfscanf@saved_errno+1
 12506                           
 12507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1510:     while (
      +                          *cfmt) {
 12508   00BE1A  EF2D  F05F         	goto	l10391
 12509   00BE1E                     l10381:
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1511:   errno = 0
      +                          ;
 12513   00BE1E  0E00               	movlw	0
 12514   00BE20  6FC0               	movwf	(_errno+1)& (0+255),b
 12515   00BE22  0E00               	movlw	0
 12516   00BE24  6FBF               	movwf	_errno& (0+255),b
 12517   00BE26                     
 12518                           ; BSR set to: 0
 12519                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1512:         n =
      +                           vfsfcnvrt(fp, &cfmt, ap);
 12520   00BE26  C06F  F05B         	movff	vfscanf@fp,vfsfcnvrt@fp
 12521   00BE2A  0E77               	movlw	low vfscanf@cfmt
 12522   00BE2C  6E5C               	movwf	vfsfcnvrt@fmt^0,c
 12523   00BE2E  C072  F05D         	movff	vfscanf@ap,vfsfcnvrt@ap
 12524   00BE32  ECA0  F06E         	call	_vfsfcnvrt	;wreg free
 12525   00BE36  C05B  F075         	movff	?_vfsfcnvrt,vfscanf@n
 12526   00BE3A  C05C  F076         	movff	?_vfsfcnvrt+1,vfscanf@n+1
 12527   00BE3E                     
 12528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1513:         if 
      +                          (n < 0) {
 12529   00BE3E  0100               	movlb	0	; () banked
 12530   00BE40  BF76               	btfsc	(vfscanf@n+1)& (0+255),7,b
 12531   00BE42  EF27  F05F         	goto	u10850
 12532   00BE46  EF25  F05F         	goto	u10851
 12533   00BE4A                     u10851:
 12534   00BE4A  EF29  F05F         	goto	l10389
 12535   00BE4E                     u10850:
 12536   00BE4E  EF3E  F05F         	goto	l1960
 12537   00BE52                     l10389:
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1516:         ncn
      +                          v += n;
 12541   00BE52  5175               	movf	vfscanf@n& (0+255),w,b
 12542   00BE54  27BB               	addwf	_ncnv& (0+255),f,b
 12543   00BE56  5176               	movf	(vfscanf@n+1)& (0+255),w,b
 12544   00BE58  23BC               	addwfc	(_ncnv+1)& (0+255),f,b
 12545   00BE5A                     l10391:
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1510:     while (
      +                          *cfmt) {
 12549   00BE5A  0060  F1DF  FFF6   	movff	vfscanf@cfmt,tblptrl
 12550   00BE60  0060  F1E3  FFF7   	movff	vfscanf@cfmt+1,tblptrh
 12551   00BE66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12552   00BE66  6AF8               	clrf	tblptru,c
 12553   00BE68                     	endif
 12554   00BE68                     	if	0	;tblptru may be non-zero
 12555   00BE68                     	endif
 12556   00BE68  0008               	tblrd		*
 12557   00BE6A  50F5               	movf	tablat,w,c
 12558   00BE6C  0900               	iorlw	0
 12559   00BE6E  A4D8               	btfss	status,2,c
 12560   00BE70  EF3C  F05F         	goto	u10861
 12561   00BE74  EF3E  F05F         	goto	u10860
 12562   00BE78                     u10861:
 12563   00BE78  EF0F  F05F         	goto	l10381
 12564   00BE7C                     u10860:
 12565   00BE7C                     l1960:
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1518:  errno = sa
      +                          ved_errno;
 12569   00BE7C  C073  F0BF         	movff	vfscanf@saved_errno,_errno
 12570   00BE80  C074  F0C0         	movff	vfscanf@saved_errno+1,_errno+1
 12571   00BE84                     
 12572                           ; BSR set to: 0
 12573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1519:     if (n =
      +                          = (-1) && ncnv == 0) {
 12574   00BE84  2975               	incf	vfscanf@n& (0+255),w,b
 12575   00BE86  E106               	bnz	u10871
 12576   00BE88  2976               	incf	(vfscanf@n+1)& (0+255),w,b
 12577   00BE8A  A4D8               	btfss	status,2,c
 12578   00BE8C  EF4A  F05F         	goto	u10871
 12579   00BE90  EF4C  F05F         	goto	u10870
 12580   00BE94                     u10871:
 12581   00BE94  EF5B  F05F         	goto	l1961
 12582   00BE98                     u10870:
 12583   00BE98                     
 12584                           ; BSR set to: 0
 12585   00BE98  51BB               	movf	_ncnv& (0+255),w,b
 12586   00BE9A  11BC               	iorwf	(_ncnv+1)& (0+255),w,b
 12587   00BE9C  A4D8               	btfss	status,2,c
 12588   00BE9E  EF53  F05F         	goto	u10881
 12589   00BEA2  EF55  F05F         	goto	u10880
 12590   00BEA6                     u10881:
 12591   00BEA6  EF5B  F05F         	goto	l1961
 12592   00BEAA                     u10880:
 12593   00BEAA                     
 12594                           ; BSR set to: 0
 12595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1520:         ret
      +                          urn n;
 12596   00BEAA  C075  F06F         	movff	vfscanf@n,?_vfscanf
 12597   00BEAE  C076  F070         	movff	vfscanf@n+1,?_vfscanf+1
 12598   00BEB2  EF5F  F05F         	goto	l1962
 12599   00BEB6                     l1961:
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1523:     return 
      +                          ncnv;
 12603   00BEB6  C0BB  F06F         	movff	_ncnv,?_vfscanf
 12604   00BEBA  C0BC  F070         	movff	_ncnv+1,?_vfscanf+1
 12605   00BEBE                     l1962:
 12606                           
 12607                           ; BSR set to: 0
 12608   00BEBE  0012               	return		;funcret
 12609   00BEC0                     __end_of_vfscanf:
 12610                           	callstack 0
 12611                           
 12612 ;; *************** function _vfsfcnvrt *****************
 12613 ;; Defined at:
 12614 ;;		line 672 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;  fp              1   90[COMRAM] PTR struct _IO_FILE
 12617 ;;		 -> sscanf@f(12), 
 12618 ;;  fmt             1   91[COMRAM] PTR PTR unsigned char 
 12619 ;;		 -> vfscanf@cfmt(2), 
 12620 ;;  ap              1   92[COMRAM] PTR PTR void 
 12621 ;;		 -> sscanf@ap(1), 
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;  llu             8    3[BANK0 ] unsigned long long 
 12624 ;;  ll              8    0        long long 
 12625 ;;  f               4    0        long long 
 12626 ;;  ct              3    0        unsigned char [3]
 12627 ;;  cp              3    0        PTR unsigned char 
 12628 ;;  c               2   13[BANK0 ] int 
 12629 ;;  i               2   11[BANK0 ] int 
 12630 ;;  vp              1    2[BANK0 ] PTR void 
 12631 ;;		 -> ?_sscanf(2), ?_sprintf(2), Tm(4), Ndat(4), 
 12632 ;; Return value:  Size  Location     Type
 12633 ;;                  2   90[COMRAM] int 
 12634 ;; Registers used:
 12635 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12636 ;; Tracked objects:
 12637 ;;		On entry : 0/0
 12638 ;;		On exit  : 0/0
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12641 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12642 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12644 ;;      Totals:         3      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12645 ;;Total ram usage:       18 bytes
 12646 ;; Hardware stack levels used: 1
 12647 ;; Hardware stack levels required when called: 4
 12648 ;; This function calls:
 12649 ;;		_atou
 12650 ;;		_fgetc
 12651 ;;		_skipws
 12652 ;;		_strncmp
 12653 ;;		_ungetc
 12654 ;; This function is called by:
 12655 ;;		_vfscanf
 12656 ;; This function uses a non-reentrant model
 12657 ;;
 12658                           
 12659                           	psect	text59
 12660   00DD40                     __ptext59:
 12661                           	callstack 0
 12662   00DD40                     _vfsfcnvrt:
 12663                           	callstack 23
 12664   00DD40                     
 12665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 672: static int v
      +                          fsfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sou
      +                          rces\c99\common\doscan.c: 673: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doscan.c: 674:     char *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doscan.c: 675:     int c, i;;C:\Program Files\Microchip\xc8\v2.45\pic\sourc
      +                          es\c99\common\doscan.c: 676:     long long ll;;C:\Program Files\Microchip\xc8\v2.45\pic\
      +                          sources\c99\common\doscan.c: 677:     unsigned long long llu;
 12666   00DD40  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12667   00DD42  6ED9               	movwf	fsr2l,c
 12668   00DD44  6ADA               	clrf	fsr2h,c
 12669   00DD46  006F FF7B FFF6     	movff	postinc2,tblptrl
 12670   00DD4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12671   00DD52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12672   00DD52  6AF8               	clrf	tblptru,c
 12673   00DD54                     	endif
 12674   00DD54                     	if	0	;tblptru may be non-zero
 12675   00DD54                     	endif
 12676   00DD54  0008               	tblrd		*
 12677   00DD56  50F5               	movf	tablat,w,c
 12678   00DD58  0A25               	xorlw	37
 12679   00DD5A  A4D8               	btfss	status,2,c
 12680   00DD5C  EFB2  F06E         	goto	u10491
 12681   00DD60  EFB4  F06E         	goto	u10490
 12682   00DD64                     u10491:
 12683   00DD64  EFC5  F06F         	goto	l10229
 12684   00DD68                     u10490:
 12685   00DD68                     
 12686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 683:         ++*f
      +                          mt;
 12687   00DD68  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12688   00DD6A  6ED9               	movwf	fsr2l,c
 12689   00DD6C  6ADA               	clrf	fsr2h,c
 12690   00DD6E  2ADE               	incf	postinc2,f,c
 12691   00DD70  0E00               	movlw	0
 12692   00DD72  22DD               	addwfc	postdec2,f,c
 12693   00DD74                     
 12694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 685:         asup
      +                           = width = 0;
 12695   00DD74  0E00               	movlw	0
 12696   00DD76  0100               	movlb	0	; () banked
 12697   00DD78  6FBE               	movwf	(_width@doscan$F2256+1)& (0+255),b
 12698   00DD7A  0E00               	movlw	0
 12699   00DD7C  6FBD               	movwf	_width@doscan$F2256& (0+255),b
 12700   00DD7E  51BD               	movf	_width@doscan$F2256& (0+255),w,b
 12701   00DD80  11BE               	iorwf	(_width@doscan$F2256+1)& (0+255),w,b
 12702   00DD82  A4D8               	btfss	status,2,c
 12703   00DD84  EFC6  F06E         	goto	u10501
 12704   00DD88  EFC9  F06E         	goto	u10500
 12705   00DD8C                     u10501:
 12706   00DD8C  0E01               	movlw	1
 12707   00DD8E  EFCA  F06E         	goto	u10510
 12708   00DD92                     u10500:
 12709   00DD92  0E00               	movlw	0
 12710   00DD94                     u10510:
 12711   00DD94  6FC9               	movwf	_asup& (0+255),b
 12712   00DD96                     
 12713                           ; BSR set to: 0
 12714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1244:         if 
      +                          (*fmt[0] == 'u') {
 12715   00DD96  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12716   00DD98  6ED9               	movwf	fsr2l,c
 12717   00DD9A  6ADA               	clrf	fsr2h,c
 12718   00DD9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12719   00DDA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12720   00DDA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12721   00DDA8  6AF8               	clrf	tblptru,c
 12722   00DDAA                     	endif
 12723   00DDAA                     	if	0	;tblptru may be non-zero
 12724   00DDAA                     	endif
 12725   00DDAA  0008               	tblrd		*
 12726   00DDAC  50F5               	movf	tablat,w,c
 12727   00DDAE  0A75               	xorlw	117
 12728   00DDB0  A4D8               	btfss	status,2,c
 12729   00DDB2  EFDD  F06E         	goto	u10521
 12730   00DDB6  EFDF  F06E         	goto	u10520
 12731   00DDBA                     u10521:
 12732   00DDBA  EF16  F06F         	goto	l10185
 12733   00DDBE                     u10520:
 12734   00DDBE                     
 12735                           ; BSR set to: 0
 12736                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1246:            
      +                           ++*fmt;
 12737   00DDBE  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12738   00DDC0  6ED9               	movwf	fsr2l,c
 12739   00DDC2  6ADA               	clrf	fsr2h,c
 12740   00DDC4  2ADE               	incf	postinc2,f,c
 12741   00DDC6  0E00               	movlw	0
 12742   00DDC8  22DD               	addwfc	postdec2,f,c
 12743   00DDCA                     
 12744                           ; BSR set to: 0
 12745                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1247:            
      +                           i = atou(fp, &llu);
 12746   00DDCA  C05B  F049         	movff	vfsfcnvrt@fp,atou@fp
 12747   00DDCE  0E63               	movlw	low vfsfcnvrt@llu
 12748   00DDD0  6E4A               	movwf	atou@pll^0,c
 12749   00DDD2  EC95  F067         	call	_atou	;wreg free
 12750   00DDD6  C049  F06B         	movff	?_atou,vfsfcnvrt@i
 12751   00DDDA  C04A  F06C         	movff	?_atou+1,vfsfcnvrt@i+1
 12752   00DDDE                     
 12753                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1248:            
      +                           if (!(i < 1)) {
 12754   00DDDE  0100               	movlb	0	; () banked
 12755   00DDE0  BF6C               	btfsc	(vfsfcnvrt@i+1)& (0+255),7,b
 12756   00DDE2  EFFB  F06E         	goto	u10531
 12757   00DDE6  516C               	movf	(vfsfcnvrt@i+1)& (0+255),w,b
 12758   00DDE8  E108               	bnz	u10530
 12759   00DDEA  056B               	decf	vfsfcnvrt@i& (0+255),w,b
 12760   00DDEC  A0D8               	btfss	status,0,c
 12761   00DDEE  EFFB  F06E         	goto	u10531
 12762   00DDF2  EFFD  F06E         	goto	u10530
 12763   00DDF6                     u10531:
 12764   00DDF6  EF10  F06F         	goto	l10181
 12765   00DDFA                     u10530:
 12766   00DDFA                     
 12767                           ; BSR set to: 0
 12768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1249:            
      +                               vp = (void *)(*(unsigned int * *)__va_arg(*(unsigned int * **)ap, (unsigned int *)0
      +                          ));
 12769   00DDFA  505D               	movf	vfsfcnvrt@ap^0,w,c
 12770   00DDFC  6ED9               	movwf	fsr2l,c
 12771   00DDFE  6ADA               	clrf	fsr2h,c
 12772   00DE00  2ADF               	incf	indf2,f,c
 12773   00DE02  04DF               	decf	indf2,w,c
 12774   00DE04  6ED9               	movwf	fsr2l,c
 12775   00DE06  6ADA               	clrf	fsr2h,c
 12776   00DE08  006F FF78  F062    	movff	postinc2,vfsfcnvrt@vp
 12777                           
 12778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1250:            
      +                               *(unsigned int *)vp = (unsigned int)llu;
 12779   00DE0E  5162               	movf	vfsfcnvrt@vp& (0+255),w,b
 12780   00DE10  6ED9               	movwf	fsr2l,c
 12781   00DE12  6ADA               	clrf	fsr2h,c
 12782   00DE14  0060  F18F  FFDE   	movff	vfsfcnvrt@llu,postinc2
 12783   00DE1A  0060  F193  FFDD   	movff	vfsfcnvrt@llu+1,postdec2
 12784   00DE20                     l10181:
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1252:            
      +                           return i;
 12788   00DE20  C06B  F05B         	movff	vfsfcnvrt@i,?_vfsfcnvrt
 12789   00DE24  C06C  F05C         	movff	vfsfcnvrt@i+1,?_vfsfcnvrt+1
 12790   00DE28  EF8C  F070         	goto	l1935
 12791   00DE2C                     l10185:
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1257:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12795   00DE2C  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12796   00DE2E  6ED9               	movwf	fsr2l,c
 12797   00DE30  6ADA               	clrf	fsr2h,c
 12798   00DE32  006F FF78  F001    	movff	postinc2,strncmp@l
 12799   00DE38  006F FF74  F002    	movff	postdec2,strncmp@l+1
 12800   00DE3E  0EF7               	movlw	low STR_25
 12801   00DE40  6E03               	movwf	strncmp@r^0,c
 12802   00DE42  0EFF               	movlw	high STR_25
 12803   00DE44  6E04               	movwf	(strncmp@r+1)^0,c
 12804   00DE46  0E00               	movlw	0
 12805   00DE48  6E06               	movwf	(strncmp@n+1)^0,c
 12806   00DE4A  0E02               	movlw	2
 12807   00DE4C  6E05               	movwf	strncmp@n^0,c
 12808   00DE4E  EC1C  F063         	call	_strncmp	;wreg free
 12809   00DE52  5001               	movf	?_strncmp^0,w,c
 12810   00DE54  1002               	iorwf	(?_strncmp+1)^0,w,c
 12811   00DE56  A4D8               	btfss	status,2,c
 12812   00DE58  EF30  F06F         	goto	u10541
 12813   00DE5C  EF32  F06F         	goto	u10540
 12814   00DE60                     u10541:
 12815   00DE60  EF6C  F06F         	goto	l10199
 12816   00DE64                     u10540:
 12817   00DE64                     
 12818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1259:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 12819   00DE64  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12820   00DE66  6ED9               	movwf	fsr2l,c
 12821   00DE68  6ADA               	clrf	fsr2h,c
 12822   00DE6A  0E02               	movlw	2
 12823   00DE6C  26DE               	addwf	postinc2,f,c
 12824   00DE6E  0E00               	movlw	0
 12825   00DE70  22DD               	addwfc	postdec2,f,c
 12826   00DE72                     
 12827                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1260:            
      +                           i = atou(fp, &llu);
 12828   00DE72  C05B  F049         	movff	vfsfcnvrt@fp,atou@fp
 12829   00DE76  0E63               	movlw	low vfsfcnvrt@llu
 12830   00DE78  6E4A               	movwf	atou@pll^0,c
 12831   00DE7A  EC95  F067         	call	_atou	;wreg free
 12832   00DE7E  C049  F06B         	movff	?_atou,vfsfcnvrt@i
 12833   00DE82  C04A  F06C         	movff	?_atou+1,vfsfcnvrt@i+1
 12834   00DE86                     
 12835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1261:            
      +                           if (!(i < 1)) {
 12836   00DE86  0100               	movlb	0	; () banked
 12837   00DE88  BF6C               	btfsc	(vfsfcnvrt@i+1)& (0+255),7,b
 12838   00DE8A  EF4F  F06F         	goto	u10551
 12839   00DE8E  516C               	movf	(vfsfcnvrt@i+1)& (0+255),w,b
 12840   00DE90  E108               	bnz	u10550
 12841   00DE92  056B               	decf	vfsfcnvrt@i& (0+255),w,b
 12842   00DE94  A0D8               	btfss	status,0,c
 12843   00DE96  EF4F  F06F         	goto	u10551
 12844   00DE9A  EF51  F06F         	goto	u10550
 12845   00DE9E                     u10551:
 12846   00DE9E  EF10  F06F         	goto	l10181
 12847   00DEA2                     u10550:
 12848   00DEA2                     
 12849                           ; BSR set to: 0
 12850                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1262:            
      +                               vp = (void *)(*(unsigned long * *)__va_arg(*(unsigned long * **)ap, (unsigned long 
      +                          *)0));
 12851   00DEA2  505D               	movf	vfsfcnvrt@ap^0,w,c
 12852   00DEA4  6ED9               	movwf	fsr2l,c
 12853   00DEA6  6ADA               	clrf	fsr2h,c
 12854   00DEA8  2ADF               	incf	indf2,f,c
 12855   00DEAA  04DF               	decf	indf2,w,c
 12856   00DEAC  6ED9               	movwf	fsr2l,c
 12857   00DEAE  6ADA               	clrf	fsr2h,c
 12858   00DEB0  006F FF78  F062    	movff	postinc2,vfsfcnvrt@vp
 12859                           
 12860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1263:            
      +                               *(unsigned long *)vp = (unsigned long)llu;
 12861   00DEB6  5162               	movf	vfsfcnvrt@vp& (0+255),w,b
 12862   00DEB8  6ED9               	movwf	fsr2l,c
 12863   00DEBA  6ADA               	clrf	fsr2h,c
 12864   00DEBC  0060  F18F  FFDE   	movff	vfsfcnvrt@llu,postinc2
 12865   00DEC2  0060  F193  FFDE   	movff	vfsfcnvrt@llu+1,postinc2
 12866   00DEC8  0060  F197  FFDE   	movff	vfsfcnvrt@llu+2,postinc2
 12867   00DECE  0060  F19B  FFDE   	movff	vfsfcnvrt@llu+3,postinc2
 12868   00DED4  EF10  F06F         	goto	l10181
 12869   00DED8                     l10199:
 12870                           
 12871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1453:         if 
      +                          ((*fmt)[0] == '%') {
 12872   00DED8  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12873   00DEDA  6ED9               	movwf	fsr2l,c
 12874   00DEDC  6ADA               	clrf	fsr2h,c
 12875   00DEDE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12876   00DEE4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12877   00DEEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12878   00DEEA  6AF8               	clrf	tblptru,c
 12879   00DEEC                     	endif
 12880   00DEEC                     	if	0	;tblptru may be non-zero
 12881   00DEEC                     	endif
 12882   00DEEC  0008               	tblrd		*
 12883   00DEEE  50F5               	movf	tablat,w,c
 12884   00DEF0  0A25               	xorlw	37
 12885   00DEF2  A4D8               	btfss	status,2,c
 12886   00DEF4  EF7E  F06F         	goto	u10561
 12887   00DEF8  EF80  F06F         	goto	u10560
 12888   00DEFC                     u10561:
 12889   00DEFC  EFBD  F06F         	goto	l10223
 12890   00DF00                     u10560:
 12891   00DF00                     
 12892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1454:    skipws(f
      +                          p);
 12893   00DF00  C05B  F00C         	movff	vfsfcnvrt@fp,skipws@fp
 12894   00DF04  EC8C  F058         	call	_skipws	;wreg free
 12895                           
 12896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1455:    c = fget
      +                          c(fp);
 12897   00DF08  C05B  F003         	movff	vfsfcnvrt@fp,fgetc@fp
 12898   00DF0C  ECE4  F060         	call	_fgetc	;wreg free
 12899   00DF10  C003  F06D         	movff	?_fgetc,vfsfcnvrt@c
 12900   00DF14  C004  F06E         	movff	?_fgetc+1,vfsfcnvrt@c+1
 12901   00DF18                     
 12902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1456:    if (c ==
      +                           '%') {
 12903   00DF18  0E25               	movlw	37
 12904   00DF1A  0100               	movlb	0	; () banked
 12905   00DF1C  196D               	xorwf	vfsfcnvrt@c& (0+255),w,b
 12906   00DF1E  116E               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
 12907   00DF20  A4D8               	btfss	status,2,c
 12908   00DF22  EF95  F06F         	goto	u10571
 12909   00DF26  EF97  F06F         	goto	u10570
 12910   00DF2A                     u10571:
 12911   00DF2A  EFA5  F06F         	goto	l10215
 12912   00DF2E                     u10570:
 12913   00DF2E                     l10205:
 12914                           
 12915                           ; BSR set to: 0
 12916                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1457:     ++*fmt;
 12917   00DF2E  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12918   00DF30  6ED9               	movwf	fsr2l,c
 12919   00DF32  6ADA               	clrf	fsr2h,c
 12920   00DF34  2ADE               	incf	postinc2,f,c
 12921   00DF36  0E00               	movlw	0
 12922   00DF38  22DD               	addwfc	postdec2,f,c
 12923   00DF3A                     
 12924                           ; BSR set to: 0
 12925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1458:     ++nmatc
      +                          h;
 12926   00DF3A  4BB9               	infsnz	_nmatch& (0+255),f,b
 12927   00DF3C  2BBA               	incf	(_nmatch+1)& (0+255),f,b
 12928   00DF3E                     l10209:
 12929                           
 12930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1459:     return 
      +                          0;
 12931   00DF3E  0E00               	movlw	0
 12932   00DF40  6E5C               	movwf	(?_vfsfcnvrt+1)^0,c
 12933   00DF42  0E00               	movlw	0
 12934   00DF44  6E5B               	movwf	?_vfsfcnvrt^0,c
 12935   00DF46  EF8C  F070         	goto	l1935
 12936   00DF4A                     l10215:
 12937                           
 12938                           ; BSR set to: 0
 12939   00DF4A  296D               	incf	vfsfcnvrt@c& (0+255),w,b
 12940   00DF4C  E108               	bnz	u10580
 12941   00DF4E  296E               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
 12942   00DF50  B4D8               	btfsc	status,2,c
 12943   00DF52  EFAD  F06F         	goto	u10581
 12944   00DF56  EFAF  F06F         	goto	u10580
 12945   00DF5A                     u10581:
 12946   00DF5A  EFB7  F06F         	goto	l10219
 12947   00DF5E                     u10580:
 12948   00DF5E                     l10217:
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1462:     ungetc(
      +                          c, fp);
 12952   00DF5E  C06D  F001         	movff	vfsfcnvrt@c,ungetc@c
 12953   00DF62  C06E  F002         	movff	vfsfcnvrt@c+1,ungetc@c+1
 12954   00DF66  C05B  F003         	movff	vfsfcnvrt@fp,ungetc@fp
 12955   00DF6A  EC44  F05C         	call	_ungetc	;wreg free
 12956   00DF6E                     l10219:
 12957                           
 12958                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1464:    return (
      +                          -1) - 1;
 12959   00DF6E  0EFF               	movlw	255
 12960   00DF70  6E5C               	movwf	(?_vfsfcnvrt+1)^0,c
 12961   00DF72  0EFE               	movlw	254
 12962   00DF74  6E5B               	movwf	?_vfsfcnvrt^0,c
 12963   00DF76  EF8C  F070         	goto	l1935
 12964   00DF7A                     l10223:
 12965                           
 12966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1468:         ++*
      +                          fmt;
 12967   00DF7A  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12968   00DF7C  6ED9               	movwf	fsr2l,c
 12969   00DF7E  6ADA               	clrf	fsr2h,c
 12970   00DF80  2ADE               	incf	postinc2,f,c
 12971   00DF82  0E00               	movlw	0
 12972   00DF84  22DD               	addwfc	postdec2,f,c
 12973   00DF86  EF9F  F06F         	goto	l10209
 12974   00DF8A                     l10229:
 12975                           
 12976                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1473:     c = fge
      +                          tc(fp);
 12977   00DF8A  C05B  F003         	movff	vfsfcnvrt@fp,fgetc@fp
 12978   00DF8E  ECE4  F060         	call	_fgetc	;wreg free
 12979   00DF92  C003  F06D         	movff	?_fgetc,vfsfcnvrt@c
 12980   00DF96  C004  F06E         	movff	?_fgetc+1,vfsfcnvrt@c+1
 12981   00DF9A                     
 12982                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1474:  if ((((*fm
      +                          t[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5)))) {
 12983   00DF9A  505C               	movf	vfsfcnvrt@fmt^0,w,c
 12984   00DF9C  6ED9               	movwf	fsr2l,c
 12985   00DF9E  6ADA               	clrf	fsr2h,c
 12986   00DFA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12987   00DFA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12988   00DFAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12989   00DFAC  6AF8               	clrf	tblptru,c
 12990   00DFAE                     	endif
 12991   00DFAE                     	if	0	;tblptru may be non-zero
 12992   00DFAE                     	endif
 12993   00DFAE  0008               	tblrd		*
 12994   00DFB0  50F5               	movf	tablat,w,c
 12995   00DFB2  0A20               	xorlw	32
 12996   00DFB4  B4D8               	btfsc	status,2,c
 12997   00DFB6  EFDF  F06F         	goto	u10591
 12998   00DFBA  EFE1  F06F         	goto	u10590
 12999   00DFBE                     u10591:
 13000   00DFBE  EFFA  F06F         	goto	l10235
 13001   00DFC2                     u10590:
 13002   00DFC2  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13003   00DFC4  6ED9               	movwf	fsr2l,c
 13004   00DFC6  6ADA               	clrf	fsr2h,c
 13005   00DFC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13006   00DFCE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13007   00DFD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13008   00DFD4  6AF8               	clrf	tblptru,c
 13009   00DFD6                     	endif
 13010   00DFD6                     	if	0	;tblptru may be non-zero
 13011   00DFD6                     	endif
 13012   00DFD6  0008               	tblrd		*
 13013   00DFD8  006F FFD4  F060    	movff	tablat,??_vfsfcnvrt
 13014   00DFDE  0EF7               	movlw	247
 13015   00DFE0  0100               	movlb	0	; () banked
 13016   00DFE2  2760               	addwf	??_vfsfcnvrt& (0+255),f,b
 13017   00DFE4  0E05               	movlw	5
 13018   00DFE6  6160               	cpfslt	??_vfsfcnvrt& (0+255),b
 13019   00DFE8  EFF8  F06F         	goto	u10601
 13020   00DFEC  EFFA  F06F         	goto	u10600
 13021   00DFF0                     u10601:
 13022   00DFF0  EF64  F070         	goto	l10253
 13023   00DFF4                     u10600:
 13024   00DFF4                     l10235:
 13025                           
 13026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1477:    ++*fmt;
 13027   00DFF4  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13028   00DFF6  6ED9               	movwf	fsr2l,c
 13029   00DFF8  6ADA               	clrf	fsr2h,c
 13030   00DFFA  2ADE               	incf	postinc2,f,c
 13031   00DFFC  0E00               	movlw	0
 13032   00DFFE  22DD               	addwfc	postdec2,f,c
 13033   00E000                     
 13034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1478:   } while((
      +                          ((*fmt[0] == ' ') || ((unsigned char)((*fmt[0])-'\t') < 5))));
 13035   00E000  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13036   00E002  6ED9               	movwf	fsr2l,c
 13037   00E004  6ADA               	clrf	fsr2h,c
 13038   00E006  006F FF7B FFF6     	movff	postinc2,tblptrl
 13039   00E00C  006F FF77 FFF7     	movff	postdec2,tblptrh
 13040   00E012                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13041   00E012  6AF8               	clrf	tblptru,c
 13042   00E014                     	endif
 13043   00E014                     	if	0	;tblptru may be non-zero
 13044   00E014                     	endif
 13045   00E014  0008               	tblrd		*
 13046   00E016  50F5               	movf	tablat,w,c
 13047   00E018  0A20               	xorlw	32
 13048   00E01A  B4D8               	btfsc	status,2,c
 13049   00E01C  EF12  F070         	goto	u10611
 13050   00E020  EF14  F070         	goto	u10610
 13051   00E024                     u10611:
 13052   00E024  EFFA  F06F         	goto	l10235
 13053   00E028                     u10610:
 13054   00E028  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13055   00E02A  6ED9               	movwf	fsr2l,c
 13056   00E02C  6ADA               	clrf	fsr2h,c
 13057   00E02E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13058   00E034  006F FF77 FFF7     	movff	postdec2,tblptrh
 13059   00E03A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13060   00E03A  6AF8               	clrf	tblptru,c
 13061   00E03C                     	endif
 13062   00E03C                     	if	0	;tblptru may be non-zero
 13063   00E03C                     	endif
 13064   00E03C  0008               	tblrd		*
 13065   00E03E  006F FFD4  F060    	movff	tablat,??_vfsfcnvrt
 13066   00E044  0EF7               	movlw	247
 13067   00E046  0100               	movlb	0	; () banked
 13068   00E048  2760               	addwf	??_vfsfcnvrt& (0+255),f,b
 13069   00E04A  0E04               	movlw	4
 13070   00E04C  6560               	cpfsgt	??_vfsfcnvrt& (0+255),b
 13071   00E04E  EF2B  F070         	goto	u10621
 13072   00E052  EF2D  F070         	goto	u10620
 13073   00E056                     u10621:
 13074   00E056  EFFA  F06F         	goto	l10235
 13075   00E05A                     u10620:
 13076   00E05A  EF39  F070         	goto	l10245
 13077   00E05E                     l10241:
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1481:    ++nmatch
      +                          ;
 13081   00E05E  4BB9               	infsnz	_nmatch& (0+255),f,b
 13082   00E060  2BBA               	incf	(_nmatch+1)& (0+255),f,b
 13083   00E062                     
 13084                           ; BSR set to: 0
 13085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1482:    c = fget
      +                          c(fp);
 13086   00E062  C05B  F003         	movff	vfsfcnvrt@fp,fgetc@fp
 13087   00E066  ECE4  F060         	call	_fgetc	;wreg free
 13088   00E06A  C003  F06D         	movff	?_fgetc,vfsfcnvrt@c
 13089   00E06E  C004  F06E         	movff	?_fgetc+1,vfsfcnvrt@c+1
 13090   00E072                     l10245:
 13091                           
 13092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1480:   while (((
      +                          (c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
 13093   00E072  0E20               	movlw	32
 13094   00E074  0100               	movlb	0	; () banked
 13095   00E076  196D               	xorwf	vfsfcnvrt@c& (0+255),w,b
 13096   00E078  116E               	iorwf	(vfsfcnvrt@c+1)& (0+255),w,b
 13097   00E07A  B4D8               	btfsc	status,2,c
 13098   00E07C  EF42  F070         	goto	u10631
 13099   00E080  EF44  F070         	goto	u10630
 13100   00E084                     u10631:
 13101   00E084  EF2F  F070         	goto	l10241
 13102   00E088                     u10630:
 13103   00E088                     
 13104                           ; BSR set to: 0
 13105   00E088  C06D  F060         	movff	vfsfcnvrt@c,??_vfsfcnvrt
 13106   00E08C  0EF7               	movlw	247
 13107   00E08E  2760               	addwf	??_vfsfcnvrt& (0+255),f,b
 13108   00E090  0E04               	movlw	4
 13109   00E092  6560               	cpfsgt	??_vfsfcnvrt& (0+255),b
 13110   00E094  EF4E  F070         	goto	u10641
 13111   00E098  EF50  F070         	goto	u10640
 13112   00E09C                     u10641:
 13113   00E09C  EF2F  F070         	goto	l10241
 13114   00E0A0                     u10640:
 13115   00E0A0                     
 13116                           ; BSR set to: 0
 13117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1484:   if (c != 
      +                          (-1)) {
 13118   00E0A0  296D               	incf	vfsfcnvrt@c& (0+255),w,b
 13119   00E0A2  E108               	bnz	u10650
 13120   00E0A4  296E               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
 13121   00E0A6  B4D8               	btfsc	status,2,c
 13122   00E0A8  EF58  F070         	goto	u10651
 13123   00E0AC  EF5A  F070         	goto	u10650
 13124   00E0B0                     u10651:
 13125   00E0B0  EF9F  F06F         	goto	l10209
 13126   00E0B4                     u10650:
 13127   00E0B4                     
 13128                           ; BSR set to: 0
 13129                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1485:    ungetc(c
      +                          , fp);
 13130   00E0B4  C06D  F001         	movff	vfsfcnvrt@c,ungetc@c
 13131   00E0B8  C06E  F002         	movff	vfsfcnvrt@c+1,ungetc@c+1
 13132   00E0BC  C05B  F003         	movff	vfsfcnvrt@fp,ungetc@fp
 13133   00E0C0  EC44  F05C         	call	_ungetc	;wreg free
 13134   00E0C4  EF9F  F06F         	goto	l10209
 13135   00E0C8                     l10253:
 13136                           
 13137                           ; BSR set to: 0
 13138   00E0C8  505C               	movf	vfsfcnvrt@fmt^0,w,c
 13139   00E0CA  6ED9               	movwf	fsr2l,c
 13140   00E0CC  6ADA               	clrf	fsr2h,c
 13141   00E0CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 13142   00E0D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 13143   00E0DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13144   00E0DA  6AF8               	clrf	tblptru,c
 13145   00E0DC                     	endif
 13146   00E0DC                     	if	0	;tblptru may be non-zero
 13147   00E0DC                     	endif
 13148   00E0DC  0008               	tblrd		*
 13149   00E0DE  50F5               	movf	tablat,w,c
 13150   00E0E0  6F60               	movwf	??_vfsfcnvrt& (0+255),b
 13151   00E0E2  6B61               	clrf	(??_vfsfcnvrt+1)& (0+255),b
 13152   00E0E4  516D               	movf	vfsfcnvrt@c& (0+255),w,b
 13153   00E0E6  1960               	xorwf	??_vfsfcnvrt& (0+255),w,b
 13154   00E0E8  E107               	bnz	u10661
 13155   00E0EA  516E               	movf	(vfsfcnvrt@c+1)& (0+255),w,b
 13156   00E0EC  1961               	xorwf	(??_vfsfcnvrt+1)& (0+255),w,b
 13157   00E0EE  A4D8               	btfss	status,2,c
 13158   00E0F0  EF7C  F070         	goto	u10661
 13159   00E0F4  EF7E  F070         	goto	u10660
 13160   00E0F8                     u10661:
 13161   00E0F8  EF80  F070         	goto	l10259
 13162   00E0FC                     u10660:
 13163   00E0FC  EF97  F06F         	goto	l10205
 13164   00E100                     l10259:
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1492:   if (c == 
      +                          (-1)) {
 13168   00E100  296D               	incf	vfsfcnvrt@c& (0+255),w,b
 13169   00E102  E106               	bnz	u10671
 13170   00E104  296E               	incf	(vfsfcnvrt@c+1)& (0+255),w,b
 13171   00E106  A4D8               	btfss	status,2,c
 13172   00E108  EF88  F070         	goto	u10671
 13173   00E10C  EF8A  F070         	goto	u10670
 13174   00E110                     u10671:
 13175   00E110  EFAF  F06F         	goto	l10217
 13176   00E114                     u10670:
 13177   00E114                     
 13178                           ; BSR set to: 0
 13179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 1493:    return (
      +                          -1);
 13180   00E114  685B               	setf	?_vfsfcnvrt^0,c
 13181   00E116  685C               	setf	(?_vfsfcnvrt+1)^0,c
 13182   00E118                     l1935:
 13183   00E118  0012               	return		;funcret
 13184   00E11A                     __end_of_vfsfcnvrt:
 13185                           	callstack 0
 13186                           
 13187 ;; *************** function _strncmp *****************
 13188 ;; Defined at:
 13189 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strncmp.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;  l               2    0[COMRAM] PTR const unsigned char 
 13192 ;;		 -> main@userInput(20), STR_9(14), STR_8(15), 
 13193 ;;  r               2    2[COMRAM] PTR const unsigned char 
 13194 ;;		 -> STR_27(3), STR_16(9), STR_15(9), 
 13195 ;;  n               2    4[COMRAM] unsigned int 
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;		None
 13198 ;; Return value:  Size  Location     Type
 13199 ;;                  2    0[COMRAM] int 
 13200 ;; Registers used:
 13201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13202 ;; Tracked objects:
 13203 ;;		On entry : 0/0
 13204 ;;		On exit  : 0/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13207 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13210 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13211 ;;Total ram usage:        7 bytes
 13212 ;; Hardware stack levels used: 1
 13213 ;; This function calls:
 13214 ;;		Nothing
 13215 ;; This function is called by:
 13216 ;;		_main
 13217 ;;		_vfsfcnvrt
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221                           	psect	text60
 13222   00C638                     __ptext60:
 13223                           	callstack 0
 13224   00C638                     _strncmp:
 13225                           	callstack 30
 13226   00C638  0605               	decf	strncmp@n^0,f,c
 13227   00C63A  A0D8               	btfss	status,0,c
 13228   00C63C  0606               	decf	(strncmp@n+1)^0,f,c
 13229   00C63E  2805               	incf	strncmp@n^0,w,c
 13230   00C640  E106               	bnz	u10211
 13231   00C642  2806               	incf	(strncmp@n+1)^0,w,c
 13232   00C644  A4D8               	btfss	status,2,c
 13233   00C646  EF27  F063         	goto	u10211
 13234   00C64A  EF29  F063         	goto	u10210
 13235   00C64E                     u10211:
 13236   00C64E  EF36  F063         	goto	l9927
 13237   00C652                     u10210:
 13238   00C652  0E00               	movlw	0
 13239   00C654  6E02               	movwf	(?_strncmp+1)^0,c
 13240   00C656  0E00               	movlw	0
 13241   00C658  6E01               	movwf	?_strncmp^0,c
 13242   00C65A  EFB9  F063         	goto	l2066
 13243   00C65E                     l9925:
 13244   00C65E  4A01               	infsnz	strncmp@l^0,f,c
 13245   00C660  2A02               	incf	(strncmp@l+1)^0,f,c
 13246   00C662  4A03               	infsnz	strncmp@r^0,f,c
 13247   00C664  2A04               	incf	(strncmp@r+1)^0,f,c
 13248   00C666  0605               	decf	strncmp@n^0,f,c
 13249   00C668  A0D8               	btfss	status,0,c
 13250   00C66A  0606               	decf	(strncmp@n+1)^0,f,c
 13251   00C66C                     l9927:
 13252   00C66C  0060  F007  FFF6   	movff	strncmp@l,tblptrl
 13253   00C672  0060  F00B  FFF7   	movff	strncmp@l+1,tblptrh
 13254   00C678  0E00               	movlw	low (__mediumconst shr (0+16))
 13255   00C67A  6EF8               	movwf	tblptru,c
 13256   00C67C  0E0F               	movlw	(high __ramtop+-1)
 13257   00C67E  64F7               	cpfsgt	tblptrh,c
 13258   00C680  D003               	bra	u10227
 13259   00C682  0008               	tblrd		*
 13260   00C684  50F5               	movf	tablat,w,c
 13261   00C686  D007               	bra	u10220
 13262   00C688                     u10227:
 13263   00C688  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13264   00C68E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13265   00C694  50EF               	movf	indf0,w,c
 13266   00C696                     u10220:
 13267   00C696  0900               	iorlw	0
 13268   00C698  B4D8               	btfsc	status,2,c
 13269   00C69A  EF51  F063         	goto	u10231
 13270   00C69E  EF53  F063         	goto	u10230
 13271   00C6A2                     u10231:
 13272   00C6A2  EF95  F063         	goto	l9935
 13273   00C6A6                     u10230:
 13274   00C6A6  0060  F00F  FFF6   	movff	strncmp@r,tblptrl
 13275   00C6AC  0060  F013  FFF7   	movff	strncmp@r+1,tblptrh
 13276   00C6B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13277   00C6B2  6AF8               	clrf	tblptru,c
 13278   00C6B4                     	endif
 13279   00C6B4                     	if	0	;tblptru may be non-zero
 13280   00C6B4                     	endif
 13281   00C6B4  0008               	tblrd		*
 13282   00C6B6  50F5               	movf	tablat,w,c
 13283   00C6B8  0900               	iorlw	0
 13284   00C6BA  B4D8               	btfsc	status,2,c
 13285   00C6BC  EF62  F063         	goto	u10241
 13286   00C6C0  EF64  F063         	goto	u10240
 13287   00C6C4                     u10241:
 13288   00C6C4  EF95  F063         	goto	l9935
 13289   00C6C8                     u10240:
 13290   00C6C8  5005               	movf	strncmp@n^0,w,c
 13291   00C6CA  1006               	iorwf	(strncmp@n+1)^0,w,c
 13292   00C6CC  B4D8               	btfsc	status,2,c
 13293   00C6CE  EF6B  F063         	goto	u10251
 13294   00C6D2  EF6D  F063         	goto	u10250
 13295   00C6D6                     u10251:
 13296   00C6D6  EF95  F063         	goto	l9935
 13297   00C6DA                     u10250:
 13298   00C6DA  0060  F00F  FFF6   	movff	strncmp@r,tblptrl
 13299   00C6E0  0060  F013  FFF7   	movff	strncmp@r+1,tblptrh
 13300   00C6E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13301   00C6E6  6AF8               	clrf	tblptru,c
 13302   00C6E8                     	endif
 13303   00C6E8                     	if	0	;tblptru may be non-zero
 13304   00C6E8                     	endif
 13305   00C6E8  0008               	tblrd		*
 13306   00C6EA  006F FFD4  F007    	movff	tablat,??_strncmp
 13307   00C6F0  0060  F007  FFF6   	movff	strncmp@l,tblptrl
 13308   00C6F6  0060  F00B  FFF7   	movff	strncmp@l+1,tblptrh
 13309   00C6FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13310   00C6FE  6EF8               	movwf	tblptru,c
 13311   00C700  0E0F               	movlw	(high __ramtop+-1)
 13312   00C702  64F7               	cpfsgt	tblptrh,c
 13313   00C704  D003               	bra	u10267
 13314   00C706  0008               	tblrd		*
 13315   00C708  50F5               	movf	tablat,w,c
 13316   00C70A  D007               	bra	u10265
 13317   00C70C                     u10267:
 13318   00C70C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13319   00C712  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13320   00C718  50EF               	movf	indf0,w,c
 13321   00C71A                     u10265:
 13322   00C71A  1807               	xorwf	??_strncmp^0,w,c
 13323   00C71C  B4D8               	btfsc	status,2,c
 13324   00C71E  EF93  F063         	goto	u10261
 13325   00C722  EF95  F063         	goto	u10260
 13326   00C726                     u10261:
 13327   00C726  EF2F  F063         	goto	l9925
 13328   00C72A                     u10260:
 13329   00C72A                     l9935:
 13330   00C72A  0060  F007  FFF6   	movff	strncmp@l,tblptrl
 13331   00C730  0060  F00B  FFF7   	movff	strncmp@l+1,tblptrh
 13332   00C736  0E00               	movlw	low (__mediumconst shr (0+16))
 13333   00C738  6EF8               	movwf	tblptru,c
 13334   00C73A  0E0F               	movlw	(high __ramtop+-1)
 13335   00C73C  64F7               	cpfsgt	tblptrh,c
 13336   00C73E  D003               	bra	u10277
 13337   00C740  0008               	tblrd		*
 13338   00C742  50F5               	movf	tablat,w,c
 13339   00C744  D007               	bra	u10270
 13340   00C746                     u10277:
 13341   00C746  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13342   00C74C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13343   00C752  50EF               	movf	indf0,w,c
 13344   00C754                     u10270:
 13345   00C754  6E07               	movwf	??_strncmp^0,c
 13346   00C756  0060  F00F  FFF6   	movff	strncmp@r,tblptrl
 13347   00C75C  0060  F013  FFF7   	movff	strncmp@r+1,tblptrh
 13348   00C762                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13349   00C762  6AF8               	clrf	tblptru,c
 13350   00C764                     	endif
 13351   00C764                     	if	0	;tblptru may be non-zero
 13352   00C764                     	endif
 13353   00C764  0008               	tblrd		*
 13354   00C766  50F5               	movf	tablat,w,c
 13355   00C768  5C07               	subwf	??_strncmp^0,w,c
 13356   00C76A  6E01               	movwf	?_strncmp^0,c
 13357   00C76C  6A02               	clrf	(?_strncmp+1)^0,c
 13358   00C76E  A0D8               	btfss	status,0,c
 13359   00C770  0602               	decf	(?_strncmp+1)^0,f,c
 13360   00C772                     l2066:
 13361   00C772  0012               	return		;funcret
 13362   00C774                     __end_of_strncmp:
 13363                           	callstack 0
 13364                           
 13365 ;; *************** function _atou *****************
 13366 ;; Defined at:
 13367 ;;		line 482 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;  fp              1   72[COMRAM] PTR struct _IO_FILE
 13370 ;;		 -> sscanf@f(12), 
 13371 ;;  pll             1   73[COMRAM] PTR unsigned long long 
 13372 ;;		 -> vfsfcnvrt@llu(8), 
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;  c               2   88[COMRAM] int 
 13375 ;;  i               2   86[COMRAM] int 
 13376 ;;  w               2   84[COMRAM] int 
 13377 ;;  ep              2   82[COMRAM] PTR unsigned char 
 13378 ;;		 -> dbuf@doscan$F2259(32), 
 13379 ;; Return value:  Size  Location     Type
 13380 ;;                  2   72[COMRAM] int 
 13381 ;; Registers used:
 13382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13383 ;; Tracked objects:
 13384 ;;		On entry : 0/0
 13385 ;;		On exit  : 0/0
 13386 ;;		Unchanged: 0/0
 13387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13389 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13390 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13391 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13392 ;;Total ram usage:       18 bytes
 13393 ;; Hardware stack levels used: 1
 13394 ;; Hardware stack levels required when called: 3
 13395 ;; This function calls:
 13396 ;;		___strtoxll
 13397 ;;		_fgetc
 13398 ;;		_skipws
 13399 ;;		_ungetc
 13400 ;; This function is called by:
 13401 ;;		_vfsfcnvrt
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405                           	psect	text61
 13406   00CF2A                     __ptext61:
 13407                           	callstack 0
 13408   00CF2A                     _atou:
 13409                           	callstack 23
 13410   00CF2A                     
 13411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 482: static int a
      +                          tou(FILE *fp, unsigned long long *pll);C:\Program Files\Microchip\xc8\v2.45\pic\sources\
      +                          c99\common\doscan.c: 483: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\
      +                          doscan.c: 484:     char *ep;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doscan.c: 485:     int c, i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doscan.c: 488:     skipws(fp);
 13412   00CF2A  C049  F00C         	movff	atou@fp,skipws@fp
 13413   00CF2E  EC8C  F058         	call	_skipws	;wreg free
 13414   00CF32                     
 13415                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 491:     w = widt
      +                          h ? width : sizeof(dbuf) - 1;
 13416   00CF32  0100               	movlb	0	; () banked
 13417   00CF34  51BD               	movf	_width@doscan$F2256& (0+255),w,b
 13418   00CF36  11BE               	iorwf	(_width@doscan$F2256+1)& (0+255),w,b
 13419   00CF38  A4D8               	btfss	status,2,c
 13420   00CF3A  EFA1  F067         	goto	u10331
 13421   00CF3E  EFA3  F067         	goto	u10330
 13422   00CF42                     u10331:
 13423   00CF42  EFA9  F067         	goto	l1909
 13424   00CF46                     u10330:
 13425   00CF46                     
 13426                           ; BSR set to: 0
 13427   00CF46  0E00               	movlw	0
 13428   00CF48  6E56               	movwf	(atou@w+1)^0,c
 13429   00CF4A  0E1F               	movlw	31
 13430   00CF4C  6E55               	movwf	atou@w^0,c
 13431   00CF4E  EFAD  F067         	goto	l10079
 13432   00CF52                     l1909:
 13433                           
 13434                           ; BSR set to: 0
 13435   00CF52  C0BD  F055         	movff	_width@doscan$F2256,atou@w
 13436   00CF56  C0BE  F056         	movff	_width@doscan$F2256+1,atou@w+1
 13437   00CF5A                     l10079:
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 492:     i = 0;
 13441   00CF5A  0E00               	movlw	0
 13442   00CF5C  6E58               	movwf	(atou@i+1)^0,c
 13443   00CF5E  0E00               	movlw	0
 13444   00CF60  6E57               	movwf	atou@i^0,c
 13445                           
 13446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 493:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
 13447   00CF62  EF2B  F068         	goto	l10113
 13448   00CF66                     l10081:
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 494:         c = 
      +                          fgetc(fp);
 13452   00CF66  C049  F003         	movff	atou@fp,fgetc@fp
 13453   00CF6A  ECE4  F060         	call	_fgetc	;wreg free
 13454   00CF6E  C003  F059         	movff	?_fgetc,atou@c
 13455   00CF72  C004  F05A         	movff	?_fgetc+1,atou@c+1
 13456   00CF76                     
 13457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 495:         if (
      +                          c == (-1) && (width || i==0)) {
 13458   00CF76  2859               	incf	atou@c^0,w,c
 13459   00CF78  E106               	bnz	u10341
 13460   00CF7A  285A               	incf	(atou@c+1)^0,w,c
 13461   00CF7C  A4D8               	btfss	status,2,c
 13462   00CF7E  EFC3  F067         	goto	u10341
 13463   00CF82  EFC5  F067         	goto	u10340
 13464   00CF86                     u10341:
 13465   00CF86  EFDE  F067         	goto	l10089
 13466   00CF8A                     u10340:
 13467   00CF8A  0100               	movlb	0	; () banked
 13468   00CF8C  51BD               	movf	_width@doscan$F2256& (0+255),w,b
 13469   00CF8E  11BE               	iorwf	(_width@doscan$F2256+1)& (0+255),w,b
 13470   00CF90  A4D8               	btfss	status,2,c
 13471   00CF92  EFCD  F067         	goto	u10351
 13472   00CF96  EFCF  F067         	goto	u10350
 13473   00CF9A                     u10351:
 13474   00CF9A  EFD8  F067         	goto	l1916
 13475   00CF9E                     u10350:
 13476   00CF9E                     
 13477                           ; BSR set to: 0
 13478   00CF9E  5057               	movf	atou@i^0,w,c
 13479   00CFA0  1058               	iorwf	(atou@i+1)^0,w,c
 13480   00CFA2  A4D8               	btfss	status,2,c
 13481   00CFA4  EFD6  F067         	goto	u10361
 13482   00CFA8  EFD8  F067         	goto	u10360
 13483   00CFAC                     u10361:
 13484   00CFAC  EFDE  F067         	goto	l10089
 13485   00CFB0                     u10360:
 13486   00CFB0                     l1916:
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 496:             
      +                          return c;
 13490   00CFB0  C059  F049         	movff	atou@c,?_atou
 13491   00CFB4  C05A  F04A         	movff	atou@c+1,?_atou+1
 13492   00CFB8  EFAA  F068         	goto	l1917
 13493   00CFBC                     l10089:
 13494                           
 13495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 498:         if (
      +                          !i && ((c == '+') || (c == '-'))) {
 13496   00CFBC  5057               	movf	atou@i^0,w,c
 13497   00CFBE  1058               	iorwf	(atou@i+1)^0,w,c
 13498   00CFC0  A4D8               	btfss	status,2,c
 13499   00CFC2  EFE5  F067         	goto	u10371
 13500   00CFC6  EFE7  F067         	goto	u10370
 13501   00CFCA                     u10371:
 13502   00CFCA  EF0B  F068         	goto	l10101
 13503   00CFCE                     u10370:
 13504   00CFCE  0E2B               	movlw	43
 13505   00CFD0  1859               	xorwf	atou@c^0,w,c
 13506   00CFD2  105A               	iorwf	(atou@c+1)^0,w,c
 13507   00CFD4  B4D8               	btfsc	status,2,c
 13508   00CFD6  EFEF  F067         	goto	u10381
 13509   00CFDA  EFF1  F067         	goto	u10380
 13510   00CFDE                     u10381:
 13511   00CFDE  EFFB  F067         	goto	l10095
 13512   00CFE2                     u10380:
 13513   00CFE2  0E2D               	movlw	45
 13514   00CFE4  1859               	xorwf	atou@c^0,w,c
 13515   00CFE6  105A               	iorwf	(atou@c+1)^0,w,c
 13516   00CFE8  A4D8               	btfss	status,2,c
 13517   00CFEA  EFF9  F067         	goto	u10391
 13518   00CFEE  EFFB  F067         	goto	u10390
 13519   00CFF2                     u10391:
 13520   00CFF2  EF0B  F068         	goto	l10101
 13521   00CFF6                     u10390:
 13522   00CFF6                     l10095:
 13523                           
 13524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 499:             
      +                          dbuf[i] = (char)c;
 13525   00CFF6  0E74               	movlw	low _dbuf@doscan$F2259
 13526   00CFF8  2457               	addwf	atou@i^0,w,c
 13527   00CFFA  6ED9               	movwf	fsr2l,c
 13528   00CFFC  0E03               	movlw	high _dbuf@doscan$F2259
 13529   00CFFE  2058               	addwfc	(atou@i+1)^0,w,c
 13530   00D000  6EDA               	movwf	fsr2h,c
 13531   00D002  0060  F167  FFDF   	movff	atou@c,indf2
 13532   00D008                     
 13533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 500:             
      +                          ++i;
 13534   00D008  4A57               	infsnz	atou@i^0,f,c
 13535   00D00A  2A58               	incf	(atou@i+1)^0,f,c
 13536   00D00C                     
 13537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 501:             
      +                          ++nmatch;
 13538   00D00C  0100               	movlb	0	; () banked
 13539   00D00E  4BB9               	infsnz	_nmatch& (0+255),f,b
 13540   00D010  2BBA               	incf	(_nmatch+1)& (0+255),f,b
 13541                           
 13542                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 502:             
      +                          continue;
 13543   00D012  EF2B  F068         	goto	l10113
 13544   00D016                     l10101:
 13545                           
 13546                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 504:         if (
      +                          !(((unsigned char)((c)-'0')) < 10)) {
 13547   00D016  C059  F04B         	movff	atou@c,??_atou
 13548   00D01A  0ED0               	movlw	208
 13549   00D01C  264B               	addwf	??_atou^0,f,c
 13550   00D01E  0E09               	movlw	9
 13551   00D020  644B               	cpfsgt	??_atou^0,c
 13552   00D022  EF15  F068         	goto	u10401
 13553   00D026  EF17  F068         	goto	u10400
 13554   00D02A                     u10401:
 13555   00D02A  EFFB  F067         	goto	l10095
 13556   00D02E                     u10400:
 13557   00D02E                     
 13558                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 505:    if (c != 
      +                          (-1)) {
 13559   00D02E  2859               	incf	atou@c^0,w,c
 13560   00D030  E108               	bnz	u10410
 13561   00D032  285A               	incf	(atou@c+1)^0,w,c
 13562   00D034  B4D8               	btfsc	status,2,c
 13563   00D036  EF1F  F068         	goto	u10411
 13564   00D03A  EF21  F068         	goto	u10410
 13565   00D03E                     u10411:
 13566   00D03E  EF45  F068         	goto	l10117
 13567   00D042                     u10410:
 13568   00D042                     
 13569                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 506:     ungetc(c
      +                          , fp);
 13570   00D042  C059  F001         	movff	atou@c,ungetc@c
 13571   00D046  C05A  F002         	movff	atou@c+1,ungetc@c+1
 13572   00D04A  C049  F003         	movff	atou@fp,ungetc@fp
 13573   00D04E  EC44  F05C         	call	_ungetc	;wreg free
 13574   00D052  EF45  F068         	goto	l10117
 13575   00D056                     l10113:
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 493:     while ((
      +                          i < w) && (i < (sizeof(dbuf) - 1))) {
 13579   00D056  5055               	movf	atou@w^0,w,c
 13580   00D058  5C57               	subwf	atou@i^0,w,c
 13581   00D05A  5058               	movf	(atou@i+1)^0,w,c
 13582   00D05C  0A80               	xorlw	128
 13583   00D05E  6E4B               	movwf	??_atou^0,c
 13584   00D060  5056               	movf	(atou@w+1)^0,w,c
 13585   00D062  0A80               	xorlw	128
 13586   00D064  584B               	subwfb	??_atou^0,w,c
 13587   00D066  B0D8               	btfsc	status,0,c
 13588   00D068  EF38  F068         	goto	u10421
 13589   00D06C  EF3A  F068         	goto	u10420
 13590   00D070                     u10421:
 13591   00D070  EF45  F068         	goto	l10117
 13592   00D074                     u10420:
 13593   00D074                     
 13594                           ; BSR set to: 0
 13595   00D074  5058               	movf	(atou@i+1)^0,w,c
 13596   00D076  E109               	bnz	u10430
 13597   00D078  0E1F               	movlw	31
 13598   00D07A  5C57               	subwf	atou@i^0,w,c
 13599   00D07C  A0D8               	btfss	status,0,c
 13600   00D07E  EF43  F068         	goto	u10431
 13601   00D082  EF45  F068         	goto	u10430
 13602   00D086                     u10431:
 13603   00D086  EFB3  F067         	goto	l10081
 13604   00D08A                     u10430:
 13605   00D08A                     l10117:
 13606                           
 13607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 514:     dbuf[i] 
      +                          = '\0';
 13608   00D08A  0E74               	movlw	low _dbuf@doscan$F2259
 13609   00D08C  2457               	addwf	atou@i^0,w,c
 13610   00D08E  6ED9               	movwf	fsr2l,c
 13611   00D090  0E03               	movlw	high _dbuf@doscan$F2259
 13612   00D092  2058               	addwfc	(atou@i+1)^0,w,c
 13613   00D094  6EDA               	movwf	fsr2h,c
 13614   00D096  6ADF               	clrf	indf2,c
 13615   00D098                     
 13616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 518:     *pll = _
      +                          _strtoxll(&dbuf[0],&ep,10,0);
 13617   00D098  0E74               	movlw	low _dbuf@doscan$F2259
 13618   00D09A  6E19               	movwf	___strtoxll@s^0,c
 13619   00D09C  0E03               	movlw	high _dbuf@doscan$F2259
 13620   00D09E  6E1A               	movwf	(___strtoxll@s+1)^0,c
 13621   00D0A0  0E53               	movlw	low atou@ep
 13622   00D0A2  6E1B               	movwf	___strtoxll@endptr^0,c
 13623   00D0A4  0E00               	movlw	0
 13624   00D0A6  6E1D               	movwf	(___strtoxll@base+1)^0,c
 13625   00D0A8  0E0A               	movlw	10
 13626   00D0AA  6E1C               	movwf	___strtoxll@base^0,c
 13627   00D0AC  0E00               	movlw	0
 13628   00D0AE  6E1E               	movwf	___strtoxll@is_signed^0,c
 13629   00D0B0  EC3C  F077         	call	___strtoxll	;wreg free
 13630   00D0B4  C019  F04B         	movff	?___strtoxll,??_atou
 13631   00D0B8  C01A  F04C         	movff	?___strtoxll+1,??_atou+1
 13632   00D0BC  C01B  F04D         	movff	?___strtoxll+2,??_atou+2
 13633   00D0C0  C01C  F04E         	movff	?___strtoxll+3,??_atou+3
 13634   00D0C4  C01D  F04F         	movff	?___strtoxll+4,??_atou+4
 13635   00D0C8  C01E  F050         	movff	?___strtoxll+5,??_atou+5
 13636   00D0CC  C01F  F051         	movff	?___strtoxll+6,??_atou+6
 13637   00D0D0  C020  F052         	movff	?___strtoxll+7,??_atou+7
 13638   00D0D4  504A               	movf	atou@pll^0,w,c
 13639   00D0D6  6ED9               	movwf	fsr2l,c
 13640   00D0D8  6ADA               	clrf	fsr2h,c
 13641   00D0DA  0060  F12F  FFDE   	movff	??_atou,postinc2
 13642   00D0E0  0060  F133  FFDE   	movff	??_atou+1,postinc2
 13643   00D0E6  0060  F137  FFDE   	movff	??_atou+2,postinc2
 13644   00D0EC  0060  F13B  FFDE   	movff	??_atou+3,postinc2
 13645   00D0F2  0060  F13F  FFDE   	movff	??_atou+4,postinc2
 13646   00D0F8  0060  F143  FFDE   	movff	??_atou+5,postinc2
 13647   00D0FE  0060  F147  FFDE   	movff	??_atou+6,postinc2
 13648   00D104  0060  F14B  FFDE   	movff	??_atou+7,postinc2
 13649   00D10A                     
 13650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 523:     return (
      +                          errno || !i) ? (-1) - 1 : !asup;
 13651   00D10A  0100               	movlb	0	; () banked
 13652   00D10C  51BF               	movf	_errno& (0+255),w,b
 13653   00D10E  11C0               	iorwf	(_errno+1)& (0+255),w,b
 13654   00D110  A4D8               	btfss	status,2,c
 13655   00D112  EF8D  F068         	goto	u10441
 13656   00D116  EF8F  F068         	goto	u10440
 13657   00D11A                     u10441:
 13658   00D11A  EFA6  F068         	goto	l10127
 13659   00D11E                     u10440:
 13660   00D11E                     
 13661                           ; BSR set to: 0
 13662   00D11E  5057               	movf	atou@i^0,w,c
 13663   00D120  1058               	iorwf	(atou@i+1)^0,w,c
 13664   00D122  B4D8               	btfsc	status,2,c
 13665   00D124  EF96  F068         	goto	u10451
 13666   00D128  EF98  F068         	goto	u10450
 13667   00D12C                     u10451:
 13668   00D12C  EFA6  F068         	goto	l10127
 13669   00D130                     u10450:
 13670   00D130                     
 13671                           ; BSR set to: 0
 13672   00D130  51C9               	movf	_asup& (0+255),w,b
 13673   00D132  B4D8               	btfsc	status,2,c
 13674   00D134  EF9E  F068         	goto	u10461
 13675   00D138  EFA1  F068         	goto	u10460
 13676   00D13C                     u10461:
 13677   00D13C  0E01               	movlw	1
 13678   00D13E  EFA2  F068         	goto	u10470
 13679   00D142                     u10460:
 13680   00D142  0E00               	movlw	0
 13681   00D144                     u10470:
 13682   00D144  6E49               	movwf	?_atou^0,c
 13683   00D146  6A4A               	clrf	(?_atou+1)^0,c
 13684   00D148  EFAA  F068         	goto	l1917
 13685   00D14C                     l10127:
 13686                           
 13687                           ; BSR set to: 0
 13688   00D14C  0EFF               	movlw	255
 13689   00D14E  6E4A               	movwf	(?_atou+1)^0,c
 13690   00D150  0EFE               	movlw	254
 13691   00D152  6E49               	movwf	?_atou^0,c
 13692   00D154                     l1917:
 13693                           
 13694                           ; BSR set to: 0
 13695   00D154  0012               	return		;funcret
 13696   00D156                     __end_of_atou:
 13697                           	callstack 0
 13698                           
 13699 ;; *************** function _skipws *****************
 13700 ;; Defined at:
 13701 ;;		line 74 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
 13704 ;;		 -> sscanf@f(12), 
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;  c               2   13[COMRAM] int 
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  1    wreg      void 
 13709 ;; Registers used:
 13710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13716 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13720 ;;Total ram usage:        4 bytes
 13721 ;; Hardware stack levels used: 1
 13722 ;; Hardware stack levels required when called: 2
 13723 ;; This function calls:
 13724 ;;		_fgetc
 13725 ;;		_ungetc
 13726 ;; This function is called by:
 13727 ;;		_atou
 13728 ;;		_vfsfcnvrt
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           	psect	text62
 13733   00B118                     __ptext62:
 13734                           	callstack 0
 13735   00B118                     _skipws:
 13736                           	callstack 24
 13737   00B118                     
 13738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 74: static void s
      +                          kipws(FILE *fp);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 75
      +                          : {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 76:     int c;
      +                          ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
 13739   00B118  EFAE  F058         	goto	l9767
 13740   00B11C                     l9761:
 13741                           
 13742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 79:         if (!
      +                          (((c == ' ') || ((unsigned char)((c)-'\t') < 5)))) {
 13743   00B11C  0E20               	movlw	32
 13744   00B11E  180E               	xorwf	skipws@c^0,w,c
 13745   00B120  100F               	iorwf	(skipws@c+1)^0,w,c
 13746   00B122  B4D8               	btfsc	status,2,c
 13747   00B124  EF96  F058         	goto	u9801
 13748   00B128  EF98  F058         	goto	u9800
 13749   00B12C                     u9801:
 13750   00B12C  EFAE  F058         	goto	l9767
 13751   00B130                     u9800:
 13752   00B130  C00E  F00D         	movff	skipws@c,??_skipws
 13753   00B134  0EF7               	movlw	247
 13754   00B136  260D               	addwf	??_skipws^0,f,c
 13755   00B138  0E04               	movlw	4
 13756   00B13A  640D               	cpfsgt	??_skipws^0,c
 13757   00B13C  EFA2  F058         	goto	u9811
 13758   00B140  EFA4  F058         	goto	u9810
 13759   00B144                     u9811:
 13760   00B144  EFAE  F058         	goto	l9767
 13761   00B148                     u9810:
 13762   00B148                     
 13763                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 80:             u
      +                          ngetc(c, fp);
 13764   00B148  C00E  F001         	movff	skipws@c,ungetc@c
 13765   00B14C  C00F  F002         	movff	skipws@c+1,ungetc@c+1
 13766   00B150  C00C  F003         	movff	skipws@fp,ungetc@fp
 13767   00B154  EC44  F05C         	call	_ungetc	;wreg free
 13768                           
 13769                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 81:             b
      +                          reak;
 13770   00B158  EFC0  F058         	goto	l1905
 13771   00B15C                     l9767:
 13772                           
 13773                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doscan.c: 78:     while ((c
      +                           = fgetc(fp)) != (-1)) {
 13774   00B15C  C00C  F003         	movff	skipws@fp,fgetc@fp
 13775   00B160  ECE4  F060         	call	_fgetc	;wreg free
 13776   00B164  C003  F00E         	movff	?_fgetc,skipws@c
 13777   00B168  C004  F00F         	movff	?_fgetc+1,skipws@c+1
 13778   00B16C  280E               	incf	skipws@c^0,w,c
 13779   00B16E  E106               	bnz	u9821
 13780   00B170  280F               	incf	(skipws@c+1)^0,w,c
 13781   00B172  A4D8               	btfss	status,2,c
 13782   00B174  EFBE  F058         	goto	u9821
 13783   00B178  EFC0  F058         	goto	u9820
 13784   00B17C                     u9821:
 13785   00B17C  EF8E  F058         	goto	l9761
 13786   00B180                     u9820:
 13787   00B180                     l1905:
 13788   00B180  0012               	return		;funcret
 13789   00B182                     __end_of_skipws:
 13790                           	callstack 0
 13791                           
 13792 ;; *************** function _ungetc *****************
 13793 ;; Defined at:
 13794 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_getc.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  c               2    0[COMRAM] int 
 13797 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 13798 ;;		 -> sscanf@f(12), 
 13799 ;; Auto vars:     Size  Location     Type
 13800 ;;		None
 13801 ;; Return value:  Size  Location     Type
 13802 ;;                  2    0[COMRAM] int 
 13803 ;; Registers used:
 13804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13805 ;; Tracked objects:
 13806 ;;		On entry : 0/0
 13807 ;;		On exit  : 0/0
 13808 ;;		Unchanged: 0/0
 13809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13810 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13813 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13814 ;;Total ram usage:        5 bytes
 13815 ;; Hardware stack levels used: 1
 13816 ;; This function calls:
 13817 ;;		Nothing
 13818 ;; This function is called by:
 13819 ;;		_skipws
 13820 ;;		_atou
 13821 ;;		_vfsfcnvrt
 13822 ;; This function uses a non-reentrant model
 13823 ;;
 13824                           
 13825                           	psect	text63
 13826   00B888                     __ptext63:
 13827                           	callstack 0
 13828   00B888                     _ungetc:
 13829                           	callstack 26
 13830   00B888  2801               	incf	ungetc@c^0,w,c
 13831   00B88A  E106               	bnz	u9261
 13832   00B88C  2802               	incf	(ungetc@c+1)^0,w,c
 13833   00B88E  A4D8               	btfss	status,2,c
 13834   00B890  EF4C  F05C         	goto	u9261
 13835   00B894  EF4E  F05C         	goto	u9260
 13836   00B898                     u9261:
 13837   00B898  EF50  F05C         	goto	l9347
 13838   00B89C                     u9260:
 13839   00B89C  EF94  F05C         	goto	l2047
 13840   00B8A0                     l9347:
 13841   00B8A0  5003               	movf	ungetc@fp^0,w,c
 13842   00B8A2  A4D8               	btfss	status,2,c
 13843   00B8A4  EF56  F05C         	goto	u9271
 13844   00B8A8  EF58  F05C         	goto	u9270
 13845   00B8AC                     u9271:
 13846   00B8AC  EF6D  F05C         	goto	l9355
 13847   00B8B0                     u9270:
 13848   00B8B0  0E03               	movlw	3
 13849   00B8B2  185E               	xorwf	___ungetcnt^0,w,c
 13850   00B8B4  B4D8               	btfsc	status,2,c
 13851   00B8B6  EF5F  F05C         	goto	u9281
 13852   00B8BA  EF61  F05C         	goto	u9280
 13853   00B8BE                     u9281:
 13854   00B8BE  EF94  F05C         	goto	l2047
 13855   00B8C2                     u9280:
 13856   00B8C2  0E1C               	movlw	low ___ungetbuf
 13857   00B8C4  245E               	addwf	___ungetcnt^0,w,c
 13858   00B8C6  6ED9               	movwf	fsr2l,c
 13859   00B8C8  6ADA               	clrf	fsr2h,c
 13860   00B8CA  0E02               	movlw	high ___ungetbuf
 13861   00B8CC  22DA               	addwfc	fsr2h,f,c
 13862   00B8CE  0060  F007  FFDF   	movff	ungetc@c,indf2
 13863   00B8D4  2A5E               	incf	___ungetcnt^0,f,c
 13864   00B8D6  EF94  F05C         	goto	l2047
 13865   00B8DA                     l9355:
 13866   00B8DA  5003               	movf	ungetc@fp^0,w,c
 13867   00B8DC  6ED9               	movwf	fsr2l,c
 13868   00B8DE  6ADA               	clrf	fsr2h,c
 13869   00B8E0  0E08               	movlw	8
 13870   00B8E2  26D9               	addwf	fsr2l,f,c
 13871   00B8E4  0E03               	movlw	3
 13872   00B8E6  18DE               	xorwf	postinc2,w,c
 13873   00B8E8  10DE               	iorwf	postinc2,w,c
 13874   00B8EA  B4D8               	btfsc	status,2,c
 13875   00B8EC  EF7A  F05C         	goto	u9291
 13876   00B8F0  EF7C  F05C         	goto	u9290
 13877   00B8F4                     u9291:
 13878   00B8F4  EF94  F05C         	goto	l2047
 13879   00B8F8                     u9290:
 13880   00B8F8  5003               	movf	ungetc@fp^0,w,c
 13881   00B8FA  6ED9               	movwf	fsr2l,c
 13882   00B8FC  6ADA               	clrf	fsr2h,c
 13883   00B8FE  0E08               	movlw	8
 13884   00B900  26D9               	addwf	fsr2l,f,c
 13885   00B902  50DF               	movf	indf2,w,c
 13886   00B904  6E04               	movwf	??_ungetc^0,c
 13887   00B906  5003               	movf	ungetc@fp^0,w,c
 13888   00B908  2404               	addwf	??_ungetc^0,w,c
 13889   00B90A  6ED9               	movwf	fsr2l,c
 13890   00B90C  6ADA               	clrf	fsr2h,c
 13891   00B90E  0E05               	movlw	5
 13892   00B910  26D9               	addwf	fsr2l,f,c
 13893   00B912  0060  F007  FFDF   	movff	ungetc@c,indf2
 13894   00B918  5003               	movf	ungetc@fp^0,w,c
 13895   00B91A  6ED9               	movwf	fsr2l,c
 13896   00B91C  6ADA               	clrf	fsr2h,c
 13897   00B91E  0E08               	movlw	8
 13898   00B920  26D9               	addwf	fsr2l,f,c
 13899   00B922  2ADE               	incf	postinc2,f,c
 13900   00B924  0E00               	movlw	0
 13901   00B926  22DD               	addwfc	postdec2,f,c
 13902   00B928                     l2047:
 13903   00B928  0012               	return		;funcret
 13904   00B92A                     __end_of_ungetc:
 13905                           	callstack 0
 13906                           
 13907 ;; *************** function _fgetc *****************
 13908 ;; Defined at:
 13909 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_getc.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
 13912 ;;		 -> sscanf@f(12), 
 13913 ;; Auto vars:     Size  Location     Type
 13914 ;;  c               2    9[COMRAM] int 
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  2    2[COMRAM] int 
 13917 ;; Registers used:
 13918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13919 ;; Tracked objects:
 13920 ;;		On entry : 0/0
 13921 ;;		On exit  : 0/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13926 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13927 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13928 ;;Total ram usage:        9 bytes
 13929 ;; Hardware stack levels used: 1
 13930 ;; Hardware stack levels required when called: 1
 13931 ;; This function calls:
 13932 ;;		_getch
 13933 ;; This function is called by:
 13934 ;;		_skipws
 13935 ;;		_atou
 13936 ;;		_vfsfcnvrt
 13937 ;; This function uses a non-reentrant model
 13938 ;;
 13939                           
 13940                           	psect	text64
 13941   00C1C8                     __ptext64:
 13942                           	callstack 0
 13943   00C1C8                     _fgetc:
 13944                           	callstack 24
 13945   00C1C8  5003               	movf	fgetc@fp^0,w,c
 13946   00C1CA  A4D8               	btfss	status,2,c
 13947   00C1CC  EFEA  F060         	goto	u9301
 13948   00C1D0  EFEC  F060         	goto	u9300
 13949   00C1D4                     u9301:
 13950   00C1D4  EF0A  F061         	goto	l9367
 13951   00C1D8                     u9300:
 13952   00C1D8  505E               	movf	___ungetcnt^0,w,c
 13953   00C1DA  A4D8               	btfss	status,2,c
 13954   00C1DC  EFF2  F060         	goto	u9311
 13955   00C1E0  EFF4  F060         	goto	u9310
 13956   00C1E4                     u9311:
 13957   00C1E4  EFFC  F060         	goto	l9365
 13958   00C1E8                     u9310:
 13959   00C1E8  ECB1  F052         	call	_getch	;wreg free
 13960   00C1EC  C001  F00A         	movff	?_getch,fgetc@c
 13961   00C1F0  C002  F00B         	movff	?_getch+1,fgetc@c+1
 13962   00C1F4  EF67  F061         	goto	l9379
 13963   00C1F8                     l9365:
 13964   00C1F8  065E               	decf	___ungetcnt^0,f,c
 13965   00C1FA  0E1C               	movlw	low ___ungetbuf
 13966   00C1FC  245E               	addwf	___ungetcnt^0,w,c
 13967   00C1FE  6ED9               	movwf	fsr2l,c
 13968   00C200  6ADA               	clrf	fsr2h,c
 13969   00C202  0E02               	movlw	high ___ungetbuf
 13970   00C204  22DA               	addwfc	fsr2h,f,c
 13971   00C206  50DF               	movf	indf2,w,c
 13972   00C208  6E05               	movwf	??_fgetc^0,c
 13973   00C20A  5005               	movf	??_fgetc^0,w,c
 13974   00C20C  6E0A               	movwf	fgetc@c^0,c
 13975   00C20E  6A0B               	clrf	(fgetc@c+1)^0,c
 13976   00C210  EF67  F061         	goto	l9379
 13977   00C214                     l9367:
 13978   00C214  5003               	movf	fgetc@fp^0,w,c
 13979   00C216  6ED9               	movwf	fsr2l,c
 13980   00C218  6ADA               	clrf	fsr2h,c
 13981   00C21A  0E08               	movlw	8
 13982   00C21C  26D9               	addwf	fsr2l,f,c
 13983   00C21E  50DE               	movf	postinc2,w,c
 13984   00C220  10DE               	iorwf	postinc2,w,c
 13985   00C222  B4D8               	btfsc	status,2,c
 13986   00C224  EF16  F061         	goto	u9321
 13987   00C228  EF18  F061         	goto	u9320
 13988   00C22C                     u9321:
 13989   00C22C  EF33  F061         	goto	l9371
 13990   00C230                     u9320:
 13991   00C230  5003               	movf	fgetc@fp^0,w,c
 13992   00C232  6ED9               	movwf	fsr2l,c
 13993   00C234  6ADA               	clrf	fsr2h,c
 13994   00C236  0E08               	movlw	8
 13995   00C238  26D9               	addwf	fsr2l,f,c
 13996   00C23A  06DE               	decf	postinc2,f,c
 13997   00C23C  0E00               	movlw	0
 13998   00C23E  5ADD               	subwfb	postdec2,f,c
 13999   00C240  006F FF78  F005    	movff	postinc2,??_fgetc
 14000   00C246  006F FF74  F006    	movff	postdec2,??_fgetc+1
 14001   00C24C  5003               	movf	fgetc@fp^0,w,c
 14002   00C24E  2405               	addwf	??_fgetc^0,w,c
 14003   00C250  6ED9               	movwf	fsr2l,c
 14004   00C252  6ADA               	clrf	fsr2h,c
 14005   00C254  0E05               	movlw	5
 14006   00C256  26D9               	addwf	fsr2l,f,c
 14007   00C258  50DF               	movf	indf2,w,c
 14008   00C25A  6E07               	movwf	(??_fgetc+2)^0,c
 14009   00C25C  5007               	movf	(??_fgetc+2)^0,w,c
 14010   00C25E  6E0A               	movwf	fgetc@c^0,c
 14011   00C260  6A0B               	clrf	(fgetc@c+1)^0,c
 14012   00C262  EF67  F061         	goto	l9379
 14013   00C266                     l9371:
 14014   00C266  5003               	movf	fgetc@fp^0,w,c
 14015   00C268  6ED9               	movwf	fsr2l,c
 14016   00C26A  6ADA               	clrf	fsr2h,c
 14017   00C26C  0E03               	movlw	3
 14018   00C26E  26D9               	addwf	fsr2l,f,c
 14019   00C270  006F FF78  F005    	movff	postinc2,??_fgetc
 14020   00C276  006F FF74  F006    	movff	postdec2,??_fgetc+1
 14021   00C27C  5003               	movf	fgetc@fp^0,w,c
 14022   00C27E  6ED9               	movwf	fsr2l,c
 14023   00C280  6ADA               	clrf	fsr2h,c
 14024   00C282  006F FF78  F007    	movff	postinc2,??_fgetc+2
 14025   00C288  006F FF74  F008    	movff	postdec2,??_fgetc+3
 14026   00C28E  5005               	movf	??_fgetc^0,w,c
 14027   00C290  2407               	addwf	(??_fgetc+2)^0,w,c
 14028   00C292  6ED9               	movwf	fsr2l,c
 14029   00C294  5006               	movf	(??_fgetc+1)^0,w,c
 14030   00C296  2008               	addwfc	(??_fgetc+3)^0,w,c
 14031   00C298  6EDA               	movwf	fsr2h,c
 14032   00C29A  50DF               	movf	indf2,w,c
 14033   00C29C  6E09               	movwf	(??_fgetc+4)^0,c
 14034   00C29E  5009               	movf	(??_fgetc+4)^0,w,c
 14035   00C2A0  6E0A               	movwf	fgetc@c^0,c
 14036   00C2A2  6A0B               	clrf	(fgetc@c+1)^0,c
 14037   00C2A4  500A               	movf	fgetc@c^0,w,c
 14038   00C2A6  100B               	iorwf	(fgetc@c+1)^0,w,c
 14039   00C2A8  A4D8               	btfss	status,2,c
 14040   00C2AA  EF59  F061         	goto	u9331
 14041   00C2AE  EF5B  F061         	goto	u9330
 14042   00C2B2                     u9331:
 14043   00C2B2  EF5F  F061         	goto	l9377
 14044   00C2B6                     u9330:
 14045   00C2B6  680A               	setf	fgetc@c^0,c
 14046   00C2B8  680B               	setf	(fgetc@c+1)^0,c
 14047   00C2BA  EF67  F061         	goto	l9379
 14048   00C2BE                     l9377:
 14049   00C2BE  5003               	movf	fgetc@fp^0,w,c
 14050   00C2C0  6ED9               	movwf	fsr2l,c
 14051   00C2C2  6ADA               	clrf	fsr2h,c
 14052   00C2C4  0E03               	movlw	3
 14053   00C2C6  26D9               	addwf	fsr2l,f,c
 14054   00C2C8  2ADE               	incf	postinc2,f,c
 14055   00C2CA  0E00               	movlw	0
 14056   00C2CC  22DD               	addwfc	postdec2,f,c
 14057   00C2CE                     l9379:
 14058   00C2CE  C00A  F003         	movff	fgetc@c,?_fgetc
 14059   00C2D2  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
 14060   00C2D6  0012               	return		;funcret
 14061   00C2D8                     __end_of_fgetc:
 14062                           	callstack 0
 14063                           
 14064 ;; *************** function _getch *****************
 14065 ;; Defined at:
 14066 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\getch.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;		None
 14069 ;; Auto vars:     Size  Location     Type
 14070 ;;		None
 14071 ;; Return value:  Size  Location     Type
 14072 ;;                  2    0[COMRAM] int 
 14073 ;; Registers used:
 14074 ;;		None
 14075 ;; Tracked objects:
 14076 ;;		On entry : 0/0
 14077 ;;		On exit  : 0/0
 14078 ;;		Unchanged: 0/0
 14079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14084 ;;Total ram usage:        2 bytes
 14085 ;; Hardware stack levels used: 1
 14086 ;; This function calls:
 14087 ;;		Nothing
 14088 ;; This function is called by:
 14089 ;;		_fgetc
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           	psect	text65
 14094   00A562                     __ptext65:
 14095                           	callstack 0
 14096   00A562                     _getch:
 14097                           	callstack 24
 14098   00A562  6801               	setf	?_getch^0,c
 14099   00A564  6802               	setf	(?_getch+1)^0,c
 14100   00A566  0012               	return		;funcret
 14101   00A568                     __end_of_getch:
 14102                           	callstack 0
 14103                           
 14104 ;; *************** function ___strtoxll *****************
 14105 ;; Defined at:
 14106 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__strtoxll.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  s               2   24[COMRAM] PTR const unsigned char 
 14109 ;;		 -> dbuf@doscan$F2259(32), 
 14110 ;;  endptr          1   26[COMRAM] PTR PTR unsigned char 
 14111 ;;		 -> atou@ep(2), 
 14112 ;;  base            2   27[COMRAM] int 
 14113 ;;  is_signed       1   29[COMRAM] unsigned char 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;  a               8   61[COMRAM] unsigned long long 
 14116 ;;  limit           8   52[COMRAM] unsigned long long 
 14117 ;;  prev_a          8   40[COMRAM] unsigned long long 
 14118 ;;  cp              2   69[COMRAM] PTR const unsigned char 
 14119 ;;		 -> dbuf@doscan$F2259(32), 
 14120 ;;  c               1   71[COMRAM] unsigned char 
 14121 ;;  flags           1   60[COMRAM] enum E246
 14122 ;; Return value:  Size  Location     Type
 14123 ;;                  8   24[COMRAM] unsigned long long 
 14124 ;; Registers used:
 14125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14126 ;; Tracked objects:
 14127 ;;		On entry : 0/0
 14128 ;;		On exit  : 0/0
 14129 ;;		Unchanged: 0/0
 14130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14131 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14133 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14134 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14135 ;;Total ram usage:       48 bytes
 14136 ;; Hardware stack levels used: 1
 14137 ;; Hardware stack levels required when called: 1
 14138 ;; This function calls:
 14139 ;;		___omul
 14140 ;; This function is called by:
 14141 ;;		_atou
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text66
 14146   00EE78                     __ptext66:
 14147                           	callstack 0
 14148   00EE78                     ___strtoxll:
 14149                           	callstack 24
 14150   00EE78  0E00               	movlw	0
 14151   00EE7A  6E3D               	movwf	___strtoxll@flags^0,c
 14152   00EE7C  EE20  F03E         	lfsr	2,___strtoxll@a
 14153   00EE80  0E07               	movlw	7
 14154   00EE82                     u9831:
 14155   00EE82  6ADE               	clrf	postinc2,c
 14156   00EE84  06E8               	decf	wreg,f,c
 14157   00EE86  E2FD               	bc	u9831
 14158   00EE88  C019  F046         	movff	___strtoxll@s,___strtoxll@cp
 14159   00EE8C  C01A  F047         	movff	___strtoxll@s+1,___strtoxll@cp+1
 14160   00EE90  BE1D               	btfsc	(___strtoxll@base+1)^0,7,c
 14161   00EE92  EF56  F077         	goto	u9840
 14162   00EE96  501D               	movf	(___strtoxll@base+1)^0,w,c
 14163   00EE98  E107               	bnz	u9841
 14164   00EE9A  0E25               	movlw	37
 14165   00EE9C  5C1C               	subwf	___strtoxll@base^0,w,c
 14166   00EE9E  B0D8               	btfsc	status,0,c
 14167   00EEA0  EF54  F077         	goto	u9841
 14168   00EEA4  EF56  F077         	goto	u9840
 14169   00EEA8                     u9841:
 14170   00EEA8  EF5F  F077         	goto	l9779
 14171   00EEAC                     u9840:
 14172   00EEAC  041C               	decf	___strtoxll@base^0,w,c
 14173   00EEAE  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14174   00EEB0  A4D8               	btfss	status,2,c
 14175   00EEB2  EF5D  F077         	goto	u9851
 14176   00EEB6  EF5F  F077         	goto	u9850
 14177   00EEBA                     u9851:
 14178   00EEBA  EF66  F077         	goto	l9781
 14179   00EEBE                     u9850:
 14180   00EEBE                     l9779:
 14181   00EEBE  0E00               	movlw	0
 14182   00EEC0  0100               	movlb	0	; () banked
 14183   00EEC2  6FC0               	movwf	(_errno+1)& (0+255),b
 14184   00EEC4  0E16               	movlw	22
 14185   00EEC6  6FBF               	movwf	_errno& (0+255),b
 14186   00EEC8  EFD5  F079         	goto	l9885
 14187   00EECC                     l9781:
 14188   00EECC  5046               	movf	___strtoxll@cp^0,w,c
 14189   00EECE  1047               	iorwf	(___strtoxll@cp+1)^0,w,c
 14190   00EED0  B4D8               	btfsc	status,2,c
 14191   00EED2  EF6D  F077         	goto	u9861
 14192   00EED6  EF6F  F077         	goto	u9860
 14193   00EEDA                     u9861:
 14194   00EEDA  EFD5  F079         	goto	l9885
 14195   00EEDE                     u9860:
 14196   00EEDE  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14197   00EEE4  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14198   00EEEA  50DF               	movf	indf2,w,c
 14199   00EEEC  A4D8               	btfss	status,2,c
 14200   00EEEE  EF7B  F077         	goto	u9871
 14201   00EEF2  EF7D  F077         	goto	u9870
 14202   00EEF6                     u9871:
 14203   00EEF6  EF7F  F077         	goto	l9785
 14204   00EEFA                     u9870:
 14205   00EEFA  EFD5  F079         	goto	l9885
 14206   00EEFE                     l9785:
 14207   00EEFE  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14208   00EF04  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14209   00EF0A  50DF               	movf	indf2,w,c
 14210   00EF0C  6E48               	movwf	___strtoxll@c^0,c
 14211   00EF0E  EF93  F077         	goto	l9789
 14212   00EF12                     l9787:
 14213   00EF12  4A46               	infsnz	___strtoxll@cp^0,f,c
 14214   00EF14  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14215   00EF16  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14216   00EF1C  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14217   00EF22  50DF               	movf	indf2,w,c
 14218   00EF24  6E48               	movwf	___strtoxll@c^0,c
 14219   00EF26                     l9789:
 14220   00EF26  0E20               	movlw	32
 14221   00EF28  1848               	xorwf	___strtoxll@c^0,w,c
 14222   00EF2A  B4D8               	btfsc	status,2,c
 14223   00EF2C  EF9A  F077         	goto	u9881
 14224   00EF30  EF9C  F077         	goto	u9880
 14225   00EF34                     u9881:
 14226   00EF34  EF89  F077         	goto	l9787
 14227   00EF38                     u9880:
 14228   00EF38  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14229   00EF3C  0EF7               	movlw	247
 14230   00EF3E  2621               	addwf	??___strtoxll^0,f,c
 14231   00EF40  0E04               	movlw	4
 14232   00EF42  6421               	cpfsgt	??___strtoxll^0,c
 14233   00EF44  EFA6  F077         	goto	u9891
 14234   00EF48  EFA8  F077         	goto	u9890
 14235   00EF4C                     u9891:
 14236   00EF4C  EF89  F077         	goto	l9787
 14237   00EF50                     u9890:
 14238   00EF50  0E2D               	movlw	45
 14239   00EF52  1848               	xorwf	___strtoxll@c^0,w,c
 14240   00EF54  A4D8               	btfss	status,2,c
 14241   00EF56  EFAF  F077         	goto	u9901
 14242   00EF5A  EFB1  F077         	goto	u9900
 14243   00EF5E                     u9901:
 14244   00EF5E  EFBE  F077         	goto	l9799
 14245   00EF62                     u9900:
 14246   00EF62  803D               	bsf	___strtoxll@flags^0,0,c
 14247   00EF64                     l9797:
 14248   00EF64  4A46               	infsnz	___strtoxll@cp^0,f,c
 14249   00EF66  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14250   00EF68  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14251   00EF6E  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14252   00EF74  50DF               	movf	indf2,w,c
 14253   00EF76  6E48               	movwf	___strtoxll@c^0,c
 14254   00EF78  EFC9  F077         	goto	l9803
 14255   00EF7C                     l9799:
 14256   00EF7C  0E2B               	movlw	43
 14257   00EF7E  1848               	xorwf	___strtoxll@c^0,w,c
 14258   00EF80  A4D8               	btfss	status,2,c
 14259   00EF82  EFC5  F077         	goto	u9911
 14260   00EF86  EFC7  F077         	goto	u9910
 14261   00EF8A                     u9911:
 14262   00EF8A  EFC9  F077         	goto	l9803
 14263   00EF8E                     u9910:
 14264   00EF8E  EFB2  F077         	goto	l9797
 14265   00EF92                     l9803:
 14266   00EF92  0E30               	movlw	48
 14267   00EF94  1848               	xorwf	___strtoxll@c^0,w,c
 14268   00EF96  A4D8               	btfss	status,2,c
 14269   00EF98  EFD0  F077         	goto	u9921
 14270   00EF9C  EFD2  F077         	goto	u9920
 14271   00EFA0                     u9921:
 14272   00EFA0  EF6F  F078         	goto	l9839
 14273   00EFA4                     u9920:
 14274   00EFA4  4A46               	infsnz	___strtoxll@cp^0,f,c
 14275   00EFA6  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14276   00EFA8  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14277   00EFAE  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14278   00EFB4  50DF               	movf	indf2,w,c
 14279   00EFB6  6E48               	movwf	___strtoxll@c^0,c
 14280   00EFB8  501C               	movf	___strtoxll@base^0,w,c
 14281   00EFBA  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14282   00EFBC  B4D8               	btfsc	status,2,c
 14283   00EFBE  EFE3  F077         	goto	u9931
 14284   00EFC2  EFE5  F077         	goto	u9930
 14285   00EFC6                     u9931:
 14286   00EFC6  EFEF  F077         	goto	l9811
 14287   00EFCA                     u9930:
 14288   00EFCA  0E10               	movlw	16
 14289   00EFCC  181C               	xorwf	___strtoxll@base^0,w,c
 14290   00EFCE  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14291   00EFD0  A4D8               	btfss	status,2,c
 14292   00EFD2  EFED  F077         	goto	u9941
 14293   00EFD6  EFEF  F077         	goto	u9940
 14294   00EFDA                     u9941:
 14295   00EFDA  EF61  F078         	goto	l9833
 14296   00EFDE                     u9940:
 14297   00EFDE                     l9811:
 14298   00EFDE  0E78               	movlw	120
 14299   00EFE0  1848               	xorwf	___strtoxll@c^0,w,c
 14300   00EFE2  B4D8               	btfsc	status,2,c
 14301   00EFE4  EFF6  F077         	goto	u9951
 14302   00EFE8  EFF8  F077         	goto	u9950
 14303   00EFEC                     u9951:
 14304   00EFEC  EF01  F078         	goto	l9815
 14305   00EFF0                     u9950:
 14306   00EFF0  0E58               	movlw	88
 14307   00EFF2  1848               	xorwf	___strtoxll@c^0,w,c
 14308   00EFF4  A4D8               	btfss	status,2,c
 14309   00EFF6  EFFF  F077         	goto	u9961
 14310   00EFFA  EF01  F078         	goto	u9960
 14311   00EFFE                     u9961:
 14312   00EFFE  EF61  F078         	goto	l9833
 14313   00F002                     u9960:
 14314   00F002                     l9815:
 14315   00F002  0E00               	movlw	0
 14316   00F004  6E1D               	movwf	(___strtoxll@base+1)^0,c
 14317   00F006  0E10               	movlw	16
 14318   00F008  6E1C               	movwf	___strtoxll@base^0,c
 14319   00F00A  4A46               	infsnz	___strtoxll@cp^0,f,c
 14320   00F00C  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14321   00F00E  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14322   00F014  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14323   00F01A  50DF               	movf	indf2,w,c
 14324   00F01C  6E48               	movwf	___strtoxll@c^0,c
 14325   00F01E  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14326   00F022  0E20               	movlw	32
 14327   00F024  1221               	iorwf	??___strtoxll^0,f,c
 14328   00F026  0E9F               	movlw	159
 14329   00F028  2621               	addwf	??___strtoxll^0,f,c
 14330   00F02A  0E1A               	movlw	26
 14331   00F02C  6021               	cpfslt	??___strtoxll^0,c
 14332   00F02E  EF1B  F078         	goto	u9971
 14333   00F032  EF1D  F078         	goto	u9970
 14334   00F036                     u9971:
 14335   00F036  EF41  F078         	goto	l9827
 14336   00F03A                     u9970:
 14337   00F03A  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14338   00F03E  0E9F               	movlw	159
 14339   00F040  2621               	addwf	??___strtoxll^0,f,c
 14340   00F042  0E19               	movlw	25
 14341   00F044  6421               	cpfsgt	??___strtoxll^0,c
 14342   00F046  EF27  F078         	goto	u9981
 14343   00F04A  EF29  F078         	goto	u9980
 14344   00F04E                     u9981:
 14345   00F04E  EF2E  F078         	goto	l9825
 14346   00F052                     u9980:
 14347   00F052  C048  F031         	movff	___strtoxll@c,___strtoxll$2313
 14348   00F056  6A32               	clrf	(___strtoxll$2313+1)^0,c
 14349   00F058  EF35  F078         	goto	l1994
 14350   00F05C                     l9825:
 14351   00F05C  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14352   00F060  0E5F               	movlw	95
 14353   00F062  1621               	andwf	??___strtoxll^0,f,c
 14354   00F064  5021               	movf	??___strtoxll^0,w,c
 14355   00F066  6E31               	movwf	___strtoxll$2313^0,c
 14356   00F068  6A32               	clrf	(___strtoxll$2313+1)^0,c
 14357   00F06A                     l1994:
 14358   00F06A  C031  F021         	movff	___strtoxll$2313,??___strtoxll
 14359   00F06E  0EC9               	movlw	201
 14360   00F070  2621               	addwf	??___strtoxll^0,f,c
 14361   00F072  0E10               	movlw	16
 14362   00F074  6021               	cpfslt	??___strtoxll^0,c
 14363   00F076  EF3F  F078         	goto	u9991
 14364   00F07A  EF41  F078         	goto	u9990
 14365   00F07E                     u9991:
 14366   00F07E  EF5B  F078         	goto	l9831
 14367   00F082                     u9990:
 14368   00F082                     l9827:
 14369   00F082  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14370   00F086  0E20               	movlw	32
 14371   00F088  1221               	iorwf	??___strtoxll^0,f,c
 14372   00F08A  0E9F               	movlw	159
 14373   00F08C  2621               	addwf	??___strtoxll^0,f,c
 14374   00F08E  0E19               	movlw	25
 14375   00F090  6421               	cpfsgt	??___strtoxll^0,c
 14376   00F092  EF4D  F078         	goto	u10001
 14377   00F096  EF4F  F078         	goto	u10000
 14378   00F09A                     u10001:
 14379   00F09A  EF6F  F078         	goto	l9839
 14380   00F09E                     u10000:
 14381   00F09E  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14382   00F0A2  0ED0               	movlw	208
 14383   00F0A4  2621               	addwf	??___strtoxll^0,f,c
 14384   00F0A6  0E09               	movlw	9
 14385   00F0A8  6421               	cpfsgt	??___strtoxll^0,c
 14386   00F0AA  EF59  F078         	goto	u10011
 14387   00F0AE  EF5B  F078         	goto	u10010
 14388   00F0B2                     u10011:
 14389   00F0B2  EF6F  F078         	goto	l9839
 14390   00F0B6                     u10010:
 14391   00F0B6                     l9831:
 14392   00F0B6  843D               	bsf	___strtoxll@flags^0,2,c
 14393   00F0B8  0646               	decf	___strtoxll@cp^0,f,c
 14394   00F0BA  A0D8               	btfss	status,0,c
 14395   00F0BC  0647               	decf	(___strtoxll@cp+1)^0,f,c
 14396   00F0BE  EFD5  F079         	goto	l9885
 14397   00F0C2                     l9833:
 14398   00F0C2  843D               	bsf	___strtoxll@flags^0,2,c
 14399   00F0C4  501C               	movf	___strtoxll@base^0,w,c
 14400   00F0C6  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14401   00F0C8  A4D8               	btfss	status,2,c
 14402   00F0CA  EF69  F078         	goto	u10021
 14403   00F0CE  EF6B  F078         	goto	u10020
 14404   00F0D2                     u10021:
 14405   00F0D2  EF6F  F078         	goto	l9839
 14406   00F0D6                     u10020:
 14407   00F0D6  0E00               	movlw	0
 14408   00F0D8  6E1D               	movwf	(___strtoxll@base+1)^0,c
 14409   00F0DA  0E08               	movlw	8
 14410   00F0DC  6E1C               	movwf	___strtoxll@base^0,c
 14411   00F0DE                     l9839:
 14412   00F0DE  501C               	movf	___strtoxll@base^0,w,c
 14413   00F0E0  101D               	iorwf	(___strtoxll@base+1)^0,w,c
 14414   00F0E2  A4D8               	btfss	status,2,c
 14415   00F0E4  EF76  F078         	goto	u10031
 14416   00F0E8  EF78  F078         	goto	u10030
 14417   00F0EC                     u10031:
 14418   00F0EC  EF7C  F078         	goto	l1997
 14419   00F0F0                     u10030:
 14420   00F0F0  0E00               	movlw	0
 14421   00F0F2  6E1D               	movwf	(___strtoxll@base+1)^0,c
 14422   00F0F4  0E0A               	movlw	10
 14423   00F0F6  6E1C               	movwf	___strtoxll@base^0,c
 14424   00F0F8                     l1997:
 14425   00F0F8  501E               	movf	___strtoxll@is_signed^0,w,c
 14426   00F0FA  B4D8               	btfsc	status,2,c
 14427   00F0FC  EF82  F078         	goto	u10041
 14428   00F100  EF84  F078         	goto	u10040
 14429   00F104                     u10041:
 14430   00F104  EFAF  F078         	goto	l1998
 14431   00F108                     u10040:
 14432   00F108  B03D               	btfsc	___strtoxll@flags^0,0,c
 14433   00F10A  EF89  F078         	goto	u10051
 14434   00F10E  EF8B  F078         	goto	u10050
 14435   00F112                     u10051:
 14436   00F112  EF9D  F078         	goto	l9847
 14437   00F116                     u10050:
 14438   00F116  0EFF               	movlw	255
 14439   00F118  6E35               	movwf	___strtoxll@limit^0,c
 14440   00F11A  0EFF               	movlw	255
 14441   00F11C  6E36               	movwf	(___strtoxll@limit+1)^0,c
 14442   00F11E  0EFF               	movlw	255
 14443   00F120  6E37               	movwf	(___strtoxll@limit+2)^0,c
 14444   00F122  0EFF               	movlw	255
 14445   00F124  6E38               	movwf	(___strtoxll@limit+3)^0,c
 14446   00F126  0EFF               	movlw	255
 14447   00F128  6E39               	movwf	(___strtoxll@limit+4)^0,c
 14448   00F12A  0EFF               	movlw	255
 14449   00F12C  6E3A               	movwf	(___strtoxll@limit+5)^0,c
 14450   00F12E  0EFF               	movlw	255
 14451   00F130  6E3B               	movwf	(___strtoxll@limit+6)^0,c
 14452   00F132  0E7F               	movlw	127
 14453   00F134  6E3C               	movwf	(___strtoxll@limit+7)^0,c
 14454   00F136  EFB7  F078         	goto	l2004
 14455   00F13A                     l9847:
 14456   00F13A  0E00               	movlw	0
 14457   00F13C  6E35               	movwf	___strtoxll@limit^0,c
 14458   00F13E  0E00               	movlw	0
 14459   00F140  6E36               	movwf	(___strtoxll@limit+1)^0,c
 14460   00F142  0E00               	movlw	0
 14461   00F144  6E37               	movwf	(___strtoxll@limit+2)^0,c
 14462   00F146  0E00               	movlw	0
 14463   00F148  6E38               	movwf	(___strtoxll@limit+3)^0,c
 14464   00F14A  0E00               	movlw	0
 14465   00F14C  6E39               	movwf	(___strtoxll@limit+4)^0,c
 14466   00F14E  0E00               	movlw	0
 14467   00F150  6E3A               	movwf	(___strtoxll@limit+5)^0,c
 14468   00F152  0E00               	movlw	0
 14469   00F154  6E3B               	movwf	(___strtoxll@limit+6)^0,c
 14470   00F156  0E80               	movlw	128
 14471   00F158  6E3C               	movwf	(___strtoxll@limit+7)^0,c
 14472   00F15A  EFB7  F078         	goto	l2004
 14473   00F15E                     l1998:
 14474   00F15E  6835               	setf	___strtoxll@limit^0,c
 14475   00F160  6836               	setf	(___strtoxll@limit+1)^0,c
 14476   00F162  6837               	setf	(___strtoxll@limit+2)^0,c
 14477   00F164  6838               	setf	(___strtoxll@limit+3)^0,c
 14478   00F166  6839               	setf	(___strtoxll@limit+4)^0,c
 14479   00F168  683A               	setf	(___strtoxll@limit+5)^0,c
 14480   00F16A  683B               	setf	(___strtoxll@limit+6)^0,c
 14481   00F16C  683C               	setf	(___strtoxll@limit+7)^0,c
 14482   00F16E                     l2004:
 14483   00F16E  C03E  F029         	movff	___strtoxll@a,___strtoxll@prev_a
 14484   00F172  C03F  F02A         	movff	___strtoxll@a+1,___strtoxll@prev_a+1
 14485   00F176  C040  F02B         	movff	___strtoxll@a+2,___strtoxll@prev_a+2
 14486   00F17A  C041  F02C         	movff	___strtoxll@a+3,___strtoxll@prev_a+3
 14487   00F17E  C042  F02D         	movff	___strtoxll@a+4,___strtoxll@prev_a+4
 14488   00F182  C043  F02E         	movff	___strtoxll@a+5,___strtoxll@prev_a+5
 14489   00F186  C044  F02F         	movff	___strtoxll@a+6,___strtoxll@prev_a+6
 14490   00F18A  C045  F030         	movff	___strtoxll@a+7,___strtoxll@prev_a+7
 14491   00F18E  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14492   00F192  0E20               	movlw	32
 14493   00F194  1221               	iorwf	??___strtoxll^0,f,c
 14494   00F196  0E9F               	movlw	159
 14495   00F198  2621               	addwf	??___strtoxll^0,f,c
 14496   00F19A  0E1A               	movlw	26
 14497   00F19C  6021               	cpfslt	??___strtoxll^0,c
 14498   00F19E  EFD3  F078         	goto	u10061
 14499   00F1A2  EFD5  F078         	goto	u10060
 14500   00F1A6                     u10061:
 14501   00F1A6  EFF2  F078         	goto	l9857
 14502   00F1AA                     u10060:
 14503   00F1AA  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14504   00F1AE  0E9F               	movlw	159
 14505   00F1B0  2621               	addwf	??___strtoxll^0,f,c
 14506   00F1B2  0E19               	movlw	25
 14507   00F1B4  6421               	cpfsgt	??___strtoxll^0,c
 14508   00F1B6  EFDF  F078         	goto	u10071
 14509   00F1BA  EFE1  F078         	goto	u10070
 14510   00F1BE                     u10071:
 14511   00F1BE  EFE6  F078         	goto	l9855
 14512   00F1C2                     u10070:
 14513   00F1C2  C048  F033         	movff	___strtoxll@c,___strtoxll$2314
 14514   00F1C6  6A34               	clrf	(___strtoxll$2314+1)^0,c
 14515   00F1C8  EFED  F078         	goto	l2009
 14516   00F1CC                     l9855:
 14517   00F1CC  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14518   00F1D0  0E5F               	movlw	95
 14519   00F1D2  1621               	andwf	??___strtoxll^0,f,c
 14520   00F1D4  5021               	movf	??___strtoxll^0,w,c
 14521   00F1D6  6E33               	movwf	___strtoxll$2314^0,c
 14522   00F1D8  6A34               	clrf	(___strtoxll$2314+1)^0,c
 14523   00F1DA                     l2009:
 14524   00F1DA  5033               	movf	___strtoxll$2314^0,w,c
 14525   00F1DC  0FC9               	addlw	201
 14526   00F1DE  6E48               	movwf	___strtoxll@c^0,c
 14527   00F1E0  EF00  F079         	goto	l9861
 14528   00F1E4                     l9857:
 14529   00F1E4  C048  F021         	movff	___strtoxll@c,??___strtoxll
 14530   00F1E8  0ED0               	movlw	208
 14531   00F1EA  2621               	addwf	??___strtoxll^0,f,c
 14532   00F1EC  0E0A               	movlw	10
 14533   00F1EE  6021               	cpfslt	??___strtoxll^0,c
 14534   00F1F0  EFFC  F078         	goto	u10081
 14535   00F1F4  EFFE  F078         	goto	u10080
 14536   00F1F8                     u10081:
 14537   00F1F8  EFBB  F079         	goto	l9881
 14538   00F1FC                     u10080:
 14539   00F1FC  0E30               	movlw	48
 14540   00F1FE  5E48               	subwf	___strtoxll@c^0,f,c
 14541   00F200                     l9861:
 14542   00F200  5048               	movf	___strtoxll@c^0,w,c
 14543   00F202  6E21               	movwf	??___strtoxll^0,c
 14544   00F204  6A22               	clrf	(??___strtoxll+1)^0,c
 14545   00F206  501C               	movf	___strtoxll@base^0,w,c
 14546   00F208  5C21               	subwf	??___strtoxll^0,w,c
 14547   00F20A  5022               	movf	(??___strtoxll+1)^0,w,c
 14548   00F20C  0A80               	xorlw	128
 14549   00F20E  6E23               	movwf	(??___strtoxll+2)^0,c
 14550   00F210  501D               	movf	(___strtoxll@base+1)^0,w,c
 14551   00F212  0A80               	xorlw	128
 14552   00F214  5823               	subwfb	(??___strtoxll+2)^0,w,c
 14553   00F216  A0D8               	btfss	status,0,c
 14554   00F218  EF10  F079         	goto	u10091
 14555   00F21C  EF12  F079         	goto	u10090
 14556   00F220                     u10091:
 14557   00F220  EF14  F079         	goto	l2014
 14558   00F224                     u10090:
 14559   00F224  EFBB  F079         	goto	l9881
 14560   00F228                     l2014:
 14561   00F228  B23D               	btfsc	___strtoxll@flags^0,1,c
 14562   00F22A  EF19  F079         	goto	u10101
 14563   00F22E  EF1B  F079         	goto	u10100
 14564   00F232                     u10101:
 14565   00F232  EFAE  F079         	goto	l9877
 14566   00F236                     u10100:
 14567   00F236  C01C  F001         	movff	___strtoxll@base,___omul@multiplier
 14568   00F23A  C01D  F002         	movff	___strtoxll@base+1,___omul@multiplier+1
 14569   00F23E  0E00               	movlw	0
 14570   00F240  BE02               	btfsc	(___omul@multiplier+1)^0,7,c
 14571   00F242  0EFF               	movlw	-1
 14572   00F244  6E03               	movwf	(___omul@multiplier+2)^0,c
 14573   00F246  6E04               	movwf	(___omul@multiplier+3)^0,c
 14574   00F248  6E05               	movwf	(___omul@multiplier+4)^0,c
 14575   00F24A  6E06               	movwf	(___omul@multiplier+5)^0,c
 14576   00F24C  6E07               	movwf	(___omul@multiplier+6)^0,c
 14577   00F24E  6E08               	movwf	(___omul@multiplier+7)^0,c
 14578   00F250  C03E  F009         	movff	___strtoxll@a,___omul@multiplicand
 14579   00F254  C03F  F00A         	movff	___strtoxll@a+1,___omul@multiplicand+1
 14580   00F258  C040  F00B         	movff	___strtoxll@a+2,___omul@multiplicand+2
 14581   00F25C  C041  F00C         	movff	___strtoxll@a+3,___omul@multiplicand+3
 14582   00F260  C042  F00D         	movff	___strtoxll@a+4,___omul@multiplicand+4
 14583   00F264  C043  F00E         	movff	___strtoxll@a+5,___omul@multiplicand+5
 14584   00F268  C044  F00F         	movff	___strtoxll@a+6,___omul@multiplicand+6
 14585   00F26C  C045  F010         	movff	___strtoxll@a+7,___omul@multiplicand+7
 14586   00F270  ECA4  F05B         	call	___omul	;wreg free
 14587   00F274  C001  F021         	movff	?___omul,??___strtoxll
 14588   00F278  C002  F022         	movff	?___omul+1,??___strtoxll+1
 14589   00F27C  C003  F023         	movff	?___omul+2,??___strtoxll+2
 14590   00F280  C004  F024         	movff	?___omul+3,??___strtoxll+3
 14591   00F284  C005  F025         	movff	?___omul+4,??___strtoxll+4
 14592   00F288  C006  F026         	movff	?___omul+5,??___strtoxll+5
 14593   00F28C  C007  F027         	movff	?___omul+6,??___strtoxll+6
 14594   00F290  C008  F028         	movff	?___omul+7,??___strtoxll+7
 14595   00F294  5048               	movf	___strtoxll@c^0,w,c
 14596   00F296  2421               	addwf	??___strtoxll^0,w,c
 14597   00F298  6E3E               	movwf	___strtoxll@a^0,c
 14598   00F29A  0E00               	movlw	0
 14599   00F29C  2022               	addwfc	(??___strtoxll+1)^0,w,c
 14600   00F29E  6E3F               	movwf	(___strtoxll@a+1)^0,c
 14601   00F2A0  0E00               	movlw	0
 14602   00F2A2  2023               	addwfc	(??___strtoxll+2)^0,w,c
 14603   00F2A4  6E40               	movwf	(___strtoxll@a+2)^0,c
 14604   00F2A6  0E00               	movlw	0
 14605   00F2A8  2024               	addwfc	(??___strtoxll+3)^0,w,c
 14606   00F2AA  6E41               	movwf	(___strtoxll@a+3)^0,c
 14607   00F2AC  0E00               	movlw	0
 14608   00F2AE  2025               	addwfc	(??___strtoxll+4)^0,w,c
 14609   00F2B0  6E42               	movwf	(___strtoxll@a+4)^0,c
 14610   00F2B2  0E00               	movlw	0
 14611   00F2B4  2026               	addwfc	(??___strtoxll+5)^0,w,c
 14612   00F2B6  6E43               	movwf	(___strtoxll@a+5)^0,c
 14613   00F2B8  0E00               	movlw	0
 14614   00F2BA  2027               	addwfc	(??___strtoxll+6)^0,w,c
 14615   00F2BC  6E44               	movwf	(___strtoxll@a+6)^0,c
 14616   00F2BE  0E00               	movlw	0
 14617   00F2C0  2028               	addwfc	(??___strtoxll+7)^0,w,c
 14618   00F2C2  6E45               	movwf	(___strtoxll@a+7)^0,c
 14619   00F2C4  5029               	movf	___strtoxll@prev_a^0,w,c
 14620   00F2C6  5C3E               	subwf	___strtoxll@a^0,w,c
 14621   00F2C8  502A               	movf	(___strtoxll@prev_a+1)^0,w,c
 14622   00F2CA  583F               	subwfb	(___strtoxll@a+1)^0,w,c
 14623   00F2CC  502B               	movf	(___strtoxll@prev_a+2)^0,w,c
 14624   00F2CE  5840               	subwfb	(___strtoxll@a+2)^0,w,c
 14625   00F2D0  502C               	movf	(___strtoxll@prev_a+3)^0,w,c
 14626   00F2D2  5841               	subwfb	(___strtoxll@a+3)^0,w,c
 14627   00F2D4  502D               	movf	(___strtoxll@prev_a+4)^0,w,c
 14628   00F2D6  5842               	subwfb	(___strtoxll@a+4)^0,w,c
 14629   00F2D8  502E               	movf	(___strtoxll@prev_a+5)^0,w,c
 14630   00F2DA  5843               	subwfb	(___strtoxll@a+5)^0,w,c
 14631   00F2DC  502F               	movf	(___strtoxll@prev_a+6)^0,w,c
 14632   00F2DE  5844               	subwfb	(___strtoxll@a+6)^0,w,c
 14633   00F2E0  5030               	movf	(___strtoxll@prev_a+7)^0,w,c
 14634   00F2E2  5845               	subwfb	(___strtoxll@a+7)^0,w,c
 14635   00F2E4  A0D8               	btfss	status,0,c
 14636   00F2E6  EF77  F079         	goto	u10111
 14637   00F2EA  EF79  F079         	goto	u10110
 14638   00F2EE                     u10111:
 14639   00F2EE  EF98  F079         	goto	l2018
 14640   00F2F2                     u10110:
 14641   00F2F2  501E               	movf	___strtoxll@is_signed^0,w,c
 14642   00F2F4  B4D8               	btfsc	status,2,c
 14643   00F2F6  EF7F  F079         	goto	u10121
 14644   00F2FA  EF81  F079         	goto	u10120
 14645   00F2FE                     u10121:
 14646   00F2FE  EFAE  F079         	goto	l9877
 14647   00F302                     u10120:
 14648   00F302  503E               	movf	___strtoxll@a^0,w,c
 14649   00F304  5C35               	subwf	___strtoxll@limit^0,w,c
 14650   00F306  503F               	movf	(___strtoxll@a+1)^0,w,c
 14651   00F308  5836               	subwfb	(___strtoxll@limit+1)^0,w,c
 14652   00F30A  5040               	movf	(___strtoxll@a+2)^0,w,c
 14653   00F30C  5837               	subwfb	(___strtoxll@limit+2)^0,w,c
 14654   00F30E  5041               	movf	(___strtoxll@a+3)^0,w,c
 14655   00F310  5838               	subwfb	(___strtoxll@limit+3)^0,w,c
 14656   00F312  5042               	movf	(___strtoxll@a+4)^0,w,c
 14657   00F314  5839               	subwfb	(___strtoxll@limit+4)^0,w,c
 14658   00F316  5043               	movf	(___strtoxll@a+5)^0,w,c
 14659   00F318  583A               	subwfb	(___strtoxll@limit+5)^0,w,c
 14660   00F31A  5044               	movf	(___strtoxll@a+6)^0,w,c
 14661   00F31C  583B               	subwfb	(___strtoxll@limit+6)^0,w,c
 14662   00F31E  5045               	movf	(___strtoxll@a+7)^0,w,c
 14663   00F320  583C               	subwfb	(___strtoxll@limit+7)^0,w,c
 14664   00F322  B0D8               	btfsc	status,0,c
 14665   00F324  EF96  F079         	goto	u10131
 14666   00F328  EF98  F079         	goto	u10130
 14667   00F32C                     u10131:
 14668   00F32C  EFAE  F079         	goto	l9877
 14669   00F330                     u10130:
 14670   00F330                     l2018:
 14671   00F330  C035  F03E         	movff	___strtoxll@limit,___strtoxll@a
 14672   00F334  C036  F03F         	movff	___strtoxll@limit+1,___strtoxll@a+1
 14673   00F338  C037  F040         	movff	___strtoxll@limit+2,___strtoxll@a+2
 14674   00F33C  C038  F041         	movff	___strtoxll@limit+3,___strtoxll@a+3
 14675   00F340  C039  F042         	movff	___strtoxll@limit+4,___strtoxll@a+4
 14676   00F344  C03A  F043         	movff	___strtoxll@limit+5,___strtoxll@a+5
 14677   00F348  C03B  F044         	movff	___strtoxll@limit+6,___strtoxll@a+6
 14678   00F34C  C03C  F045         	movff	___strtoxll@limit+7,___strtoxll@a+7
 14679   00F350  0E00               	movlw	0
 14680   00F352  0100               	movlb	0	; () banked
 14681   00F354  6FC0               	movwf	(_errno+1)& (0+255),b
 14682   00F356  0E22               	movlw	34
 14683   00F358  6FBF               	movwf	_errno& (0+255),b
 14684   00F35A                     
 14685                           ; BSR set to: 0
 14686   00F35A  823D               	bsf	___strtoxll@flags^0,1,c
 14687   00F35C                     l9877:
 14688   00F35C  4A46               	infsnz	___strtoxll@cp^0,f,c
 14689   00F35E  2A47               	incf	(___strtoxll@cp+1)^0,f,c
 14690   00F360  0060  F11B  FFD9   	movff	___strtoxll@cp,fsr2l
 14691   00F366  0060  F11F  FFDA   	movff	___strtoxll@cp+1,fsr2h
 14692   00F36C  50DF               	movf	indf2,w,c
 14693   00F36E  6E48               	movwf	___strtoxll@c^0,c
 14694   00F370  843D               	bsf	___strtoxll@flags^0,2,c
 14695   00F372  EFB7  F078         	goto	l2004
 14696   00F376                     l9881:
 14697   00F376  503D               	movf	___strtoxll@flags^0,w,c
 14698   00F378  0B03               	andlw	3
 14699   00F37A  06E8               	decf	wreg,f,c
 14700   00F37C  A4D8               	btfss	status,2,c
 14701   00F37E  EFC3  F079         	goto	u10141
 14702   00F382  EFC5  F079         	goto	u10140
 14703   00F386                     u10141:
 14704   00F386  EFD5  F079         	goto	l9885
 14705   00F38A                     u10140:
 14706   00F38A  1E45               	comf	(___strtoxll@a+7)^0,f,c
 14707   00F38C  1E44               	comf	(___strtoxll@a+6)^0,f,c
 14708   00F38E  1E43               	comf	(___strtoxll@a+5)^0,f,c
 14709   00F390  1E42               	comf	(___strtoxll@a+4)^0,f,c
 14710   00F392  1E41               	comf	(___strtoxll@a+3)^0,f,c
 14711   00F394  1E40               	comf	(___strtoxll@a+2)^0,f,c
 14712   00F396  1E3F               	comf	(___strtoxll@a+1)^0,f,c
 14713   00F398  6C3E               	negf	___strtoxll@a^0,c
 14714   00F39A  0E00               	movlw	0
 14715   00F39C  223F               	addwfc	(___strtoxll@a+1)^0,f,c
 14716   00F39E  2240               	addwfc	(___strtoxll@a+2)^0,f,c
 14717   00F3A0  2241               	addwfc	(___strtoxll@a+3)^0,f,c
 14718   00F3A2  2242               	addwfc	(___strtoxll@a+4)^0,f,c
 14719   00F3A4  2243               	addwfc	(___strtoxll@a+5)^0,f,c
 14720   00F3A6  2244               	addwfc	(___strtoxll@a+6)^0,f,c
 14721   00F3A8  2245               	addwfc	(___strtoxll@a+7)^0,f,c
 14722   00F3AA                     l9885:
 14723   00F3AA  501B               	movf	___strtoxll@endptr^0,w,c
 14724   00F3AC  B4D8               	btfsc	status,2,c
 14725   00F3AE  EFDB  F079         	goto	u10151
 14726   00F3B2  EFDD  F079         	goto	u10150
 14727   00F3B6                     u10151:
 14728   00F3B6  EFF1  F079         	goto	l9893
 14729   00F3BA                     u10150:
 14730   00F3BA  B43D               	btfsc	___strtoxll@flags^0,2,c
 14731   00F3BC  EFE2  F079         	goto	u10161
 14732   00F3C0  EFE4  F079         	goto	u10160
 14733   00F3C4                     u10161:
 14734   00F3C4  EFE8  F079         	goto	l9891
 14735   00F3C8                     u10160:
 14736   00F3C8  C019  F046         	movff	___strtoxll@s,___strtoxll@cp
 14737   00F3CC  C01A  F047         	movff	___strtoxll@s+1,___strtoxll@cp+1
 14738   00F3D0                     l9891:
 14739   00F3D0  501B               	movf	___strtoxll@endptr^0,w,c
 14740   00F3D2  6ED9               	movwf	fsr2l,c
 14741   00F3D4  6ADA               	clrf	fsr2h,c
 14742   00F3D6  0060  F11B  FFDE   	movff	___strtoxll@cp,postinc2
 14743   00F3DC  0060  F11F  FFDD   	movff	___strtoxll@cp+1,postdec2
 14744   00F3E2                     l9893:
 14745   00F3E2  C03E  F019         	movff	___strtoxll@a,?___strtoxll
 14746   00F3E6  C03F  F01A         	movff	___strtoxll@a+1,?___strtoxll+1
 14747   00F3EA  C040  F01B         	movff	___strtoxll@a+2,?___strtoxll+2
 14748   00F3EE  C041  F01C         	movff	___strtoxll@a+3,?___strtoxll+3
 14749   00F3F2  C042  F01D         	movff	___strtoxll@a+4,?___strtoxll+4
 14750   00F3F6  C043  F01E         	movff	___strtoxll@a+5,?___strtoxll+5
 14751   00F3FA  C044  F01F         	movff	___strtoxll@a+6,?___strtoxll+6
 14752   00F3FE  C045  F020         	movff	___strtoxll@a+7,?___strtoxll+7
 14753   00F402  0012               	return		;funcret
 14754   00F404                     __end_of___strtoxll:
 14755                           	callstack 0
 14756                           
 14757 ;; *************** function ___omul *****************
 14758 ;; Defined at:
 14759 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul64.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;  multiplier      8    0[COMRAM] unsigned long long 
 14762 ;;  multiplicand    8    8[COMRAM] unsigned long long 
 14763 ;; Auto vars:     Size  Location     Type
 14764 ;;  product         8   16[COMRAM] unsigned long long 
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  8    0[COMRAM] unsigned long long 
 14767 ;; Registers used:
 14768 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14774 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14775 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14777 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14778 ;;Total ram usage:       24 bytes
 14779 ;; Hardware stack levels used: 1
 14780 ;; This function calls:
 14781 ;;		Nothing
 14782 ;; This function is called by:
 14783 ;;		___strtoxll
 14784 ;; This function uses a non-reentrant model
 14785 ;;
 14786                           
 14787                           	psect	text67
 14788   00B748                     __ptext67:
 14789                           	callstack 0
 14790   00B748                     ___omul:
 14791                           	callstack 24
 14792   00B748  EE20  F011         	lfsr	2,___omul@product
 14793   00B74C  0E07               	movlw	7
 14794   00B74E                     u8381:
 14795   00B74E  6ADE               	clrf	postinc2,c
 14796   00B750  06E8               	decf	wreg,f,c
 14797   00B752  E2FD               	bc	u8381
 14798   00B754                     l8859:
 14799   00B754  A001               	btfss	___omul@multiplier^0,0,c
 14800   00B756  EFAF  F05B         	goto	u8391
 14801   00B75A  EFB1  F05B         	goto	u8390
 14802   00B75E                     u8391:
 14803   00B75E  EFC1  F05B         	goto	l8863
 14804   00B762                     u8390:
 14805   00B762  5009               	movf	___omul@multiplicand^0,w,c
 14806   00B764  2611               	addwf	___omul@product^0,f,c
 14807   00B766  500A               	movf	(___omul@multiplicand+1)^0,w,c
 14808   00B768  2212               	addwfc	(___omul@product+1)^0,f,c
 14809   00B76A  500B               	movf	(___omul@multiplicand+2)^0,w,c
 14810   00B76C  2213               	addwfc	(___omul@product+2)^0,f,c
 14811   00B76E  500C               	movf	(___omul@multiplicand+3)^0,w,c
 14812   00B770  2214               	addwfc	(___omul@product+3)^0,f,c
 14813   00B772  500D               	movf	(___omul@multiplicand+4)^0,w,c
 14814   00B774  2215               	addwfc	(___omul@product+4)^0,f,c
 14815   00B776  500E               	movf	(___omul@multiplicand+5)^0,w,c
 14816   00B778  2216               	addwfc	(___omul@product+5)^0,f,c
 14817   00B77A  500F               	movf	(___omul@multiplicand+6)^0,w,c
 14818   00B77C  2217               	addwfc	(___omul@product+6)^0,f,c
 14819   00B77E  5010               	movf	(___omul@multiplicand+7)^0,w,c
 14820   00B780  2218               	addwfc	(___omul@product+7)^0,f,c
 14821   00B782                     l8863:
 14822   00B782  90D8               	bcf	status,0,c
 14823   00B784  3609               	rlcf	___omul@multiplicand^0,f,c
 14824   00B786  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
 14825   00B788  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
 14826   00B78A  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
 14827   00B78C  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
 14828   00B78E  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
 14829   00B790  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
 14830   00B792  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
 14831   00B794  90D8               	bcf	status,0,c
 14832   00B796  3208               	rrcf	(___omul@multiplier+7)^0,f,c
 14833   00B798  3207               	rrcf	(___omul@multiplier+6)^0,f,c
 14834   00B79A  3206               	rrcf	(___omul@multiplier+5)^0,f,c
 14835   00B79C  3205               	rrcf	(___omul@multiplier+4)^0,f,c
 14836   00B79E  3204               	rrcf	(___omul@multiplier+3)^0,f,c
 14837   00B7A0  3203               	rrcf	(___omul@multiplier+2)^0,f,c
 14838   00B7A2  3202               	rrcf	(___omul@multiplier+1)^0,f,c
 14839   00B7A4  3201               	rrcf	___omul@multiplier^0,f,c
 14840   00B7A6  5001               	movf	___omul@multiplier^0,w,c
 14841   00B7A8  1002               	iorwf	(___omul@multiplier+1)^0,w,c
 14842   00B7AA  1003               	iorwf	(___omul@multiplier+2)^0,w,c
 14843   00B7AC  1004               	iorwf	(___omul@multiplier+3)^0,w,c
 14844   00B7AE  1005               	iorwf	(___omul@multiplier+4)^0,w,c
 14845   00B7B0  1006               	iorwf	(___omul@multiplier+5)^0,w,c
 14846   00B7B2  1007               	iorwf	(___omul@multiplier+6)^0,w,c
 14847   00B7B4  1008               	iorwf	(___omul@multiplier+7)^0,w,c
 14848   00B7B6  A4D8               	btfss	status,2,c
 14849   00B7B8  EFE0  F05B         	goto	u8401
 14850   00B7BC  EFE2  F05B         	goto	u8400
 14851   00B7C0                     u8401:
 14852   00B7C0  EFAA  F05B         	goto	l8859
 14853   00B7C4                     u8400:
 14854   00B7C4  C011  F001         	movff	___omul@product,?___omul
 14855   00B7C8  C012  F002         	movff	___omul@product+1,?___omul+1
 14856   00B7CC  C013  F003         	movff	___omul@product+2,?___omul+2
 14857   00B7D0  C014  F004         	movff	___omul@product+3,?___omul+3
 14858   00B7D4  C015  F005         	movff	___omul@product+4,?___omul+4
 14859   00B7D8  C016  F006         	movff	___omul@product+5,?___omul+5
 14860   00B7DC  C017  F007         	movff	___omul@product+6,?___omul+6
 14861   00B7E0  C018  F008         	movff	___omul@product+7,?___omul+7
 14862   00B7E4  0012               	return		;funcret
 14863   00B7E6                     __end_of___omul:
 14864                           	callstack 0
 14865                           
 14866 ;; *************** function _MPU6050_Init *****************
 14867 ;; Defined at:
 14868 ;;		line 88 in file "main.c"
 14869 ;; Parameters:    Size  Location     Type
 14870 ;;		None
 14871 ;; Auto vars:     Size  Location     Type
 14872 ;;  data            1    0        unsigned char 
 14873 ;; Return value:  Size  Location     Type
 14874 ;;                  1    wreg      void 
 14875 ;; Registers used:
 14876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14877 ;; Tracked objects:
 14878 ;;		On entry : 0/0
 14879 ;;		On exit  : 0/0
 14880 ;;		Unchanged: 0/0
 14881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14886 ;;Total ram usage:        0 bytes
 14887 ;; Hardware stack levels used: 1
 14888 ;; Hardware stack levels required when called: 12
 14889 ;; This function calls:
 14890 ;;		_I2C1_Write1ByteRegister
 14891 ;; This function is called by:
 14892 ;;		_main
 14893 ;; This function uses a non-reentrant model
 14894 ;;
 14895                           
 14896                           	psect	text68
 14897   00A632                     __ptext68:
 14898                           	callstack 0
 14899   00A632                     _MPU6050_Init:
 14900                           	callstack 18
 14901   00A632                     
 14902                           ;main.c: 90:     I2C1_Write1ByteRegister(0x68, 0x6B, data);
 14903   00A632  0E6B               	movlw	107
 14904   00A634  6E17               	movwf	I2C1_Write1ByteRegister@reg^0,c
 14905   00A636  0E00               	movlw	0
 14906   00A638  6E18               	movwf	I2C1_Write1ByteRegister@data^0,c
 14907   00A63A  0E68               	movlw	104
 14908   00A63C  EC57  F058         	call	_I2C1_Write1ByteRegister
 14909   00A640  0012               	return		;funcret
 14910   00A642                     __end_of_MPU6050_Init:
 14911                           	callstack 0
 14912                           
 14913 ;; *************** function _I2C1_Write1ByteRegister *****************
 14914 ;; Defined at:
 14915 ;;		line 91 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14916 ;; Parameters:    Size  Location     Type
 14917 ;;  address         1    wreg     unsigned char 
 14918 ;;  reg             1   22[COMRAM] unsigned char 
 14919 ;;  data            1   23[COMRAM] unsigned char 
 14920 ;; Auto vars:     Size  Location     Type
 14921 ;;  address         1   24[COMRAM] unsigned char 
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  1    wreg      void 
 14924 ;; Registers used:
 14925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14934 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14935 ;;Total ram usage:        3 bytes
 14936 ;; Hardware stack levels used: 1
 14937 ;; Hardware stack levels required when called: 11
 14938 ;; This function calls:
 14939 ;;		_I2C1_Close
 14940 ;;		_I2C1_MasterWrite
 14941 ;;		_I2C1_Open
 14942 ;;		_I2C1_SetAddressNackCallback
 14943 ;;		_I2C1_SetBuffer
 14944 ;;		_I2C1_SetDataCompleteCallback
 14945 ;; This function is called by:
 14946 ;;		_MPU6050_Init
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950                           	psect	text69
 14951   00B0AE                     __ptext69:
 14952                           	callstack 0
 14953   00B0AE                     _I2C1_Write1ByteRegister:
 14954                           	callstack 18
 14955                           
 14956                           ;incstack = 0
 14957                           ;I2C1_Write1ByteRegister@address stored from wreg
 14958   00B0AE  6E19               	movwf	I2C1_Write1ByteRegister@address^0,c
 14959   00B0B0                     l10401:
 14960   00B0B0  5019               	movf	I2C1_Write1ByteRegister@address^0,w,c
 14961   00B0B2  EC0D  F05B         	call	_I2C1_Open
 14962   00B0B6  0900               	iorlw	0
 14963   00B0B8  B4D8               	btfsc	status,2,c
 14964   00B0BA  EF61  F058         	goto	u10891
 14965   00B0BE  EF63  F058         	goto	u10890
 14966   00B0C2                     u10891:
 14967   00B0C2  EF58  F058         	goto	l10401
 14968   00B0C6                     u10890:
 14969   00B0C6                     
 14970                           ;mcc_generated_files/examples/i2c1_master_example.c: 94:     I2C1_SetDataCompleteCallbac
      +                          k(wr1RegCompleteHandler,&data);
 14971   00B0C6  0E20               	movlw	low _wr1RegCompleteHandler
 14972   00B0C8  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 14973   00B0CA  0EA9               	movlw	high _wr1RegCompleteHandler
 14974   00B0CC  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 14975   00B0CE  0E18               	movlw	low I2C1_Write1ByteRegister@data
 14976   00B0D0  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 14977   00B0D2  6A09               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 14978   00B0D4  EC79  F053         	call	_I2C1_SetDataCompleteCallback	;wreg free
 14979   00B0D8                     
 14980                           ;mcc_generated_files/examples/i2c1_master_example.c: 95:     I2C1_SetBuffer(&reg,1);
 14981   00B0D8  0E17               	movlw	low I2C1_Write1ByteRegister@reg
 14982   00B0DA  6E01               	movwf	I2C1_SetBuffer@buffer^0,c
 14983   00B0DC  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 14984   00B0DE  0E00               	movlw	0
 14985   00B0E0  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 14986   00B0E2  0E01               	movlw	1
 14987   00B0E4  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 14988   00B0E6  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
 14989   00B0EA                     
 14990                           ;mcc_generated_files/examples/i2c1_master_example.c: 96:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 14991   00B0EA  0E00               	movlw	0
 14992   00B0EC  6E06               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 14993   00B0EE  0E00               	movlw	0
 14994   00B0F0  6E07               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 14995   00B0F2  0E00               	movlw	0
 14996   00B0F4  6E08               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 14997   00B0F6  0E00               	movlw	0
 14998   00B0F8  6E09               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 14999   00B0FA  EC85  F053         	call	_I2C1_SetAddressNackCallback	;wreg free
 15000   00B0FE                     
 15001                           ;mcc_generated_files/examples/i2c1_master_example.c: 97:     I2C1_MasterWrite();
 15002   00B0FE  ECC8  F052         	call	_I2C1_MasterWrite	;wreg free
 15003   00B102                     l10411:
 15004   00B102  EC38  F054         	call	_I2C1_Close	;wreg free
 15005   00B106  06E8               	decf	wreg,f,c
 15006   00B108  B4D8               	btfsc	status,2,c
 15007   00B10A  EF89  F058         	goto	u10901
 15008   00B10E  EF8B  F058         	goto	u10900
 15009   00B112                     u10901:
 15010   00B112  EF81  F058         	goto	l10411
 15011   00B116                     u10900:
 15012   00B116  0012               	return		;funcret
 15013   00B118                     __end_of_I2C1_Write1ByteRegister:
 15014                           	callstack 0
 15015                           
 15016 ;; *************** function _LoadCurrentAddressEEPROM *****************
 15017 ;; Defined at:
 15018 ;;		line 282 in file "main.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;  addressBuffe    2   42[COMRAM] unsigned char [2]
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15035 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15036 ;;Total ram usage:        4 bytes
 15037 ;; Hardware stack levels used: 1
 15038 ;; Hardware stack levels required when called: 14
 15039 ;; This function calls:
 15040 ;;		_EEPROM_ReadBlock
 15041 ;; This function is called by:
 15042 ;;		_main
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text70
 15047   00AA72                     __ptext70:
 15048                           	callstack 0
 15049   00AA72                     _LoadCurrentAddressEEPROM:
 15050                           	callstack 16
 15051   00AA72                     
 15052                           ;main.c: 283:     uint8_t addressBuffer[2];;main.c: 285:     EEPROM_ReadBlock(0x50, 0x00
      +                          00, addressBuffer, 2);
 15053   00AA72  0E00               	movlw	0
 15054   00AA74  6E22               	movwf	(EEPROM_ReadBlock@memoryAddress+1)^0,c
 15055   00AA76  0E00               	movlw	0
 15056   00AA78  6E21               	movwf	EEPROM_ReadBlock@memoryAddress^0,c
 15057   00AA7A  0E2B               	movlw	low LoadCurrentAddressEEPROM@addressBuffer
 15058   00AA7C  6E23               	movwf	EEPROM_ReadBlock@data^0,c
 15059   00AA7E  6A24               	clrf	(EEPROM_ReadBlock@data+1)^0,c
 15060   00AA80  0E02               	movlw	2
 15061   00AA82  6E25               	movwf	EEPROM_ReadBlock@size^0,c
 15062   00AA84  0E50               	movlw	80
 15063   00AA86  EC5B  F056         	call	_EEPROM_ReadBlock
 15064   00AA8A                     
 15065                           ;main.c: 286:     currentBlockEEPROM1 = (addressBuffer[0] << 8) | addressBuffer[1];
 15066   00AA8A  502C               	movf	(LoadCurrentAddressEEPROM@addressBuffer+1)^0,w,c
 15067   00AA8C  C02B  F029         	movff	LoadCurrentAddressEEPROM@addressBuffer,??_LoadCurrentAddressEEPROM
 15068   00AA90  6A2A               	clrf	(??_LoadCurrentAddressEEPROM+1)^0,c
 15069   00AA92  C029  F02A         	movff	??_LoadCurrentAddressEEPROM,??_LoadCurrentAddressEEPROM+1
 15070   00AA96  6A29               	clrf	??_LoadCurrentAddressEEPROM^0,c
 15071   00AA98  1029               	iorwf	??_LoadCurrentAddressEEPROM^0,w,c
 15072   00AA9A  0100               	movlb	0	; () banked
 15073   00AA9C  6FC7               	movwf	_currentBlockEEPROM1& (0+255),b
 15074   00AA9E  502A               	movf	(??_LoadCurrentAddressEEPROM+1)^0,w,c
 15075   00AAA0  6FC8               	movwf	(_currentBlockEEPROM1+1)& (0+255),b
 15076   00AAA2                     
 15077                           ; BSR set to: 0
 15078                           ;main.c: 289:     currentBlockEEPROM2 = currentBlockEEPROM1;
 15079   00AAA2  C0C7  F0C5         	movff	_currentBlockEEPROM1,_currentBlockEEPROM2
 15080   00AAA6  C0C8  F0C6         	movff	_currentBlockEEPROM1+1,_currentBlockEEPROM2+1
 15081   00AAAA                     
 15082                           ; BSR set to: 0
 15083   00AAAA  0012               	return		;funcret
 15084   00AAAC                     __end_of_LoadCurrentAddressEEPROM:
 15085                           	callstack 0
 15086                           
 15087 ;; *************** function _EEPROM_ReadBlock *****************
 15088 ;; Defined at:
 15089 ;;		line 148 in file "main.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;  deviceAddres    1    wreg     unsigned char 
 15092 ;;  memoryAddres    2   32[COMRAM] unsigned short 
 15093 ;;  data            2   34[COMRAM] PTR unsigned char 
 15094 ;;		 -> LoadCurrentAddressEEPROM@addressBuffer(2), ReadAndSendEEPROMData@eepromReadBuffer(24), ReadAndSendEEPROMDataCSV@
      +eepromReadBuffer(24), 
 15095 ;;  size            1   36[COMRAM] unsigned char 
 15096 ;; Auto vars:     Size  Location     Type
 15097 ;;  deviceAddres    1   38[COMRAM] unsigned char 
 15098 ;;  i               1   39[COMRAM] unsigned char 
 15099 ;; Return value:  Size  Location     Type
 15100 ;;                  1    wreg      void 
 15101 ;; Registers used:
 15102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15103 ;; Tracked objects:
 15104 ;;		On entry : 0/0
 15105 ;;		On exit  : 0/0
 15106 ;;		Unchanged: 0/0
 15107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15108 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15111 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15112 ;;Total ram usage:        8 bytes
 15113 ;; Hardware stack levels used: 1
 15114 ;; Hardware stack levels required when called: 13
 15115 ;; This function calls:
 15116 ;;		_EEPROM_ReadByte
 15117 ;; This function is called by:
 15118 ;;		_ReadAndSendEEPROMDataCSV
 15119 ;;		_ReadAndSendEEPROMData
 15120 ;;		_LoadCurrentAddressEEPROM
 15121 ;; This function uses a non-reentrant model
 15122 ;;
 15123                           
 15124                           	psect	text71
 15125   00ACB6                     __ptext71:
 15126                           	callstack 0
 15127   00ACB6                     _EEPROM_ReadBlock:
 15128                           	callstack 15
 15129                           
 15130                           ; BSR set to: 0
 15131                           ;incstack = 0
 15132                           ;EEPROM_ReadBlock@deviceAddress stored from wreg
 15133   00ACB6  6E27               	movwf	EEPROM_ReadBlock@deviceAddress^0,c
 15134   00ACB8                     
 15135                           ;main.c: 149:     for (uint8_t i = 0; i < size; i++) {
 15136   00ACB8  0E00               	movlw	0
 15137   00ACBA  6E28               	movwf	EEPROM_ReadBlock@i^0,c
 15138   00ACBC  EF74  F056         	goto	l10315
 15139   00ACC0                     l10311:
 15140                           
 15141                           ;main.c: 150:         data[i] = EEPROM_ReadByte(deviceAddress, memoryAddress + i);
 15142   00ACC0  5028               	movf	EEPROM_ReadBlock@i^0,w,c
 15143   00ACC2  2421               	addwf	EEPROM_ReadBlock@memoryAddress^0,w,c
 15144   00ACC4  6E1B               	movwf	EEPROM_ReadByte@memoryAddress^0,c
 15145   00ACC6  0E00               	movlw	0
 15146   00ACC8  2022               	addwfc	(EEPROM_ReadBlock@memoryAddress+1)^0,w,c
 15147   00ACCA  6E1C               	movwf	(EEPROM_ReadByte@memoryAddress+1)^0,c
 15148   00ACCC  5027               	movf	EEPROM_ReadBlock@deviceAddress^0,w,c
 15149   00ACCE  EC02  F055         	call	_EEPROM_ReadByte
 15150   00ACD2  6E26               	movwf	??_EEPROM_ReadBlock^0,c
 15151   00ACD4  5028               	movf	EEPROM_ReadBlock@i^0,w,c
 15152   00ACD6  2423               	addwf	EEPROM_ReadBlock@data^0,w,c
 15153   00ACD8  6ED9               	movwf	fsr2l,c
 15154   00ACDA  0E00               	movlw	0
 15155   00ACDC  2024               	addwfc	(EEPROM_ReadBlock@data+1)^0,w,c
 15156   00ACDE  6EDA               	movwf	fsr2h,c
 15157   00ACE0  0060  F09B  FFDF   	movff	??_EEPROM_ReadBlock,indf2
 15158   00ACE6                     
 15159                           ;main.c: 151:     }
 15160   00ACE6  2A28               	incf	EEPROM_ReadBlock@i^0,f,c
 15161   00ACE8                     l10315:
 15162   00ACE8  5025               	movf	EEPROM_ReadBlock@size^0,w,c
 15163   00ACEA  5C28               	subwf	EEPROM_ReadBlock@i^0,w,c
 15164   00ACEC  A0D8               	btfss	status,0,c
 15165   00ACEE  EF7B  F056         	goto	u10741
 15166   00ACF2  EF7D  F056         	goto	u10740
 15167   00ACF6                     u10741:
 15168   00ACF6  EF60  F056         	goto	l10311
 15169   00ACFA                     u10740:
 15170   00ACFA  0012               	return		;funcret
 15171   00ACFC                     __end_of_EEPROM_ReadBlock:
 15172                           	callstack 0
 15173                           
 15174 ;; *************** function _EEPROM_ReadByte *****************
 15175 ;; Defined at:
 15176 ;;		line 126 in file "main.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;  deviceAddres    1    wreg     unsigned char 
 15179 ;;  memoryAddres    2   26[COMRAM] unsigned short 
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;  deviceAddres    1   30[COMRAM] unsigned char 
 15182 ;;  addressBuffe    2   28[COMRAM] unsigned char [2]
 15183 ;;  data            1   31[COMRAM] unsigned char 
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  1    wreg      unsigned char 
 15186 ;; Registers used:
 15187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15194 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15196 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15197 ;;Total ram usage:        6 bytes
 15198 ;; Hardware stack levels used: 1
 15199 ;; Hardware stack levels required when called: 12
 15200 ;; This function calls:
 15201 ;;		_I2C1_ReadNBytes
 15202 ;;		_I2C1_WriteNBytes
 15203 ;; This function is called by:
 15204 ;;		_EEPROM_ReadBlock
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text72
 15209   00AA04                     __ptext72:
 15210                           	callstack 0
 15211   00AA04                     _EEPROM_ReadByte:
 15212                           	callstack 15
 15213                           
 15214                           ;incstack = 0
 15215                           ;EEPROM_ReadByte@deviceAddress stored from wreg
 15216   00AA04  6E1F               	movwf	EEPROM_ReadByte@deviceAddress^0,c
 15217   00AA06                     
 15218                           ;main.c: 127:     uint8_t addressBuffer[2];;main.c: 128:     addressBuffer[0] = (memoryA
      +                          ddress >> 8) & 0xFF;
 15219   00AA06  501C               	movf	(EEPROM_ReadByte@memoryAddress+1)^0,w,c
 15220   00AA08  6E1D               	movwf	EEPROM_ReadByte@addressBuffer^0,c
 15221   00AA0A                     
 15222                           ;main.c: 129:     addressBuffer[1] = memoryAddress & 0xFF;
 15223   00AA0A  C01B  F01E         	movff	EEPROM_ReadByte@memoryAddress,EEPROM_ReadByte@addressBuffer+1
 15224   00AA0E                     
 15225                           ;main.c: 131:     I2C1_WriteNBytes(deviceAddress, addressBuffer, 2);
 15226   00AA0E  0E1D               	movlw	low EEPROM_ReadByte@addressBuffer
 15227   00AA10  6E17               	movwf	I2C1_WriteNBytes@data^0,c
 15228   00AA12  0E00               	movlw	0
 15229   00AA14  6E19               	movwf	(I2C1_WriteNBytes@len+1)^0,c
 15230   00AA16  0E02               	movlw	2
 15231   00AA18  6E18               	movwf	I2C1_WriteNBytes@len^0,c
 15232   00AA1A  501F               	movf	EEPROM_ReadByte@deviceAddress^0,w,c
 15233   00AA1C  EC69  F057         	call	_I2C1_WriteNBytes
 15234   00AA20                     
 15235                           ;main.c: 133:     uint8_t data = 0;
 15236   00AA20  0E00               	movlw	0
 15237   00AA22  6E20               	movwf	EEPROM_ReadByte@data^0,c
 15238   00AA24                     
 15239                           ;main.c: 134:     I2C1_ReadNBytes(deviceAddress, &data, 1);
 15240   00AA24  0E20               	movlw	low EEPROM_ReadByte@data
 15241   00AA26  6E17               	movwf	I2C1_ReadNBytes@data^0,c
 15242   00AA28  0E00               	movlw	0
 15243   00AA2A  6E19               	movwf	(I2C1_ReadNBytes@len+1)^0,c
 15244   00AA2C  0E01               	movlw	1
 15245   00AA2E  6E18               	movwf	I2C1_ReadNBytes@len^0,c
 15246   00AA30  501F               	movf	EEPROM_ReadByte@deviceAddress^0,w,c
 15247   00AA32  ECD3  F055         	call	_I2C1_ReadNBytes
 15248   00AA36                     
 15249                           ;main.c: 136:     return data;
 15250   00AA36  5020               	movf	EEPROM_ReadByte@data^0,w,c
 15251   00AA38  0012               	return		;funcret
 15252   00AA3A                     __end_of_EEPROM_ReadByte:
 15253                           	callstack 0
 15254                           
 15255 ;; *************** function _I2C1_WriteNBytes *****************
 15256 ;; Defined at:
 15257 ;;		line 111 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;  address         1    wreg     unsigned char 
 15260 ;;  data            1   22[COMRAM] PTR unsigned char 
 15261 ;;		 -> EEPROM_ReadByte@addressBuffer(2), EEPROM_WriteByte@buffer(3), 
 15262 ;;  len             2   23[COMRAM] unsigned int 
 15263 ;; Auto vars:     Size  Location     Type
 15264 ;;  address         1   25[COMRAM] unsigned char 
 15265 ;; Return value:  Size  Location     Type
 15266 ;;                  1    wreg      void 
 15267 ;; Registers used:
 15268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15269 ;; Tracked objects:
 15270 ;;		On entry : 0/0
 15271 ;;		On exit  : 0/0
 15272 ;;		Unchanged: 0/0
 15273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15274 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15278 ;;Total ram usage:        4 bytes
 15279 ;; Hardware stack levels used: 1
 15280 ;; Hardware stack levels required when called: 11
 15281 ;; This function calls:
 15282 ;;		_I2C1_Close
 15283 ;;		_I2C1_MasterWrite
 15284 ;;		_I2C1_Open
 15285 ;;		_I2C1_SetAddressNackCallback
 15286 ;;		_I2C1_SetBuffer
 15287 ;; This function is called by:
 15288 ;;		_EEPROM_WriteByte
 15289 ;;		_EEPROM_ReadByte
 15290 ;; This function uses a non-reentrant model
 15291 ;;
 15292                           
 15293                           	psect	text73
 15294   00AED2                     __ptext73:
 15295                           	callstack 0
 15296   00AED2                     _I2C1_WriteNBytes:
 15297                           	callstack 15
 15298                           
 15299                           ;incstack = 0
 15300                           ;I2C1_WriteNBytes@address stored from wreg
 15301   00AED2  6E1A               	movwf	I2C1_WriteNBytes@address^0,c
 15302   00AED4                     l9899:
 15303   00AED4  501A               	movf	I2C1_WriteNBytes@address^0,w,c
 15304   00AED6  EC0D  F05B         	call	_I2C1_Open
 15305   00AEDA  0900               	iorlw	0
 15306   00AEDC  B4D8               	btfsc	status,2,c
 15307   00AEDE  EF73  F057         	goto	u10171
 15308   00AEE2  EF75  F057         	goto	u10170
 15309   00AEE6                     u10171:
 15310   00AEE6  EF6A  F057         	goto	l9899
 15311   00AEEA                     u10170:
 15312   00AEEA                     
 15313                           ;mcc_generated_files/examples/i2c1_master_example.c: 114:     I2C1_SetBuffer(data,len);
 15314   00AEEA  C017  F001         	movff	I2C1_WriteNBytes@data,I2C1_SetBuffer@buffer
 15315   00AEEE  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 15316   00AEF0  C018  F003         	movff	I2C1_WriteNBytes@len,I2C1_SetBuffer@bufferSize
 15317   00AEF4  C019  F004         	movff	I2C1_WriteNBytes@len+1,I2C1_SetBuffer@bufferSize+1
 15318   00AEF8  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
 15319   00AEFC                     
 15320                           ;mcc_generated_files/examples/i2c1_master_example.c: 115:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 15321   00AEFC  0E00               	movlw	0
 15322   00AEFE  6E06               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 15323   00AF00  0E00               	movlw	0
 15324   00AF02  6E07               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 15325   00AF04  0E00               	movlw	0
 15326   00AF06  6E08               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 15327   00AF08  0E00               	movlw	0
 15328   00AF0A  6E09               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 15329   00AF0C  EC85  F053         	call	_I2C1_SetAddressNackCallback	;wreg free
 15330   00AF10                     
 15331                           ;mcc_generated_files/examples/i2c1_master_example.c: 116:     I2C1_MasterWrite();
 15332   00AF10  ECC8  F052         	call	_I2C1_MasterWrite	;wreg free
 15333   00AF14                     l9907:
 15334   00AF14  EC38  F054         	call	_I2C1_Close	;wreg free
 15335   00AF18  06E8               	decf	wreg,f,c
 15336   00AF1A  B4D8               	btfsc	status,2,c
 15337   00AF1C  EF92  F057         	goto	u10181
 15338   00AF20  EF94  F057         	goto	u10180
 15339   00AF24                     u10181:
 15340   00AF24  EF8A  F057         	goto	l9907
 15341   00AF28                     u10180:
 15342   00AF28  0012               	return		;funcret
 15343   00AF2A                     __end_of_I2C1_WriteNBytes:
 15344                           	callstack 0
 15345                           
 15346 ;; *************** function _I2C1_SetAddressNackCallback *****************
 15347 ;; Defined at:
 15348 ;;		line 313 in file "mcc_generated_files/i2c1_master.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 15351 ;;		 -> NULL(1), 
 15352 ;;  ptr             2    7[COMRAM] PTR void 
 15353 ;;		 -> NULL(0), 
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;		None
 15356 ;; Return value:  Size  Location     Type
 15357 ;;                  1    wreg      void 
 15358 ;; Registers used:
 15359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15360 ;; Tracked objects:
 15361 ;;		On entry : 0/0
 15362 ;;		On exit  : 0/0
 15363 ;;		Unchanged: 0/0
 15364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15369 ;;Total ram usage:        4 bytes
 15370 ;; Hardware stack levels used: 1
 15371 ;; Hardware stack levels required when called: 1
 15372 ;; This function calls:
 15373 ;;		_I2C1_SetCallback
 15374 ;; This function is called by:
 15375 ;;		_I2C1_Write1ByteRegister
 15376 ;;		_I2C1_WriteNBytes
 15377 ;;		_I2C1_ReadDataBlock
 15378 ;;		_I2C1_Read1ByteRegister
 15379 ;;		_I2C1_Read2ByteRegister
 15380 ;;		_I2C1_Write2ByteRegister
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           	psect	text74
 15385   00A70A                     __ptext74:
 15386                           	callstack 0
 15387   00A70A                     _I2C1_SetAddressNackCallback:
 15388                           	callstack 24
 15389   00A70A                     
 15390                           ;mcc_generated_files/i2c1_master.c: 313: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 314: {;mcc_generated_files/i2c1_mast
      +                          er.c: 315:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 15391   00A70A  C006  F001         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 15392   00A70E  C007  F002         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 15393   00A712  C008  F003         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 15394   00A716  C009  F004         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 15395   00A71A  0E02               	movlw	2
 15396   00A71C  EC8A  F05A         	call	_I2C1_SetCallback
 15397   00A720  0012               	return		;funcret
 15398   00A722                     __end_of_I2C1_SetAddressNackCallback:
 15399                           	callstack 0
 15400                           
 15401 ;; *************** function _I2C1_MasterWrite *****************
 15402 ;; Defined at:
 15403 ;;		line 281 in file "mcc_generated_files/i2c1_master.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      enum E358
 15410 ;; Registers used:
 15411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15421 ;;Total ram usage:        0 bytes
 15422 ;; Hardware stack levels used: 1
 15423 ;; Hardware stack levels required when called: 10
 15424 ;; This function calls:
 15425 ;;		_I2C1_MasterOperation
 15426 ;; This function is called by:
 15427 ;;		_I2C1_Write1ByteRegister
 15428 ;;		_I2C1_WriteNBytes
 15429 ;;		_I2C1_ReadDataBlock
 15430 ;;		_I2C1_Read1ByteRegister
 15431 ;;		_I2C1_Read2ByteRegister
 15432 ;;		_I2C1_Write2ByteRegister
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436                           	psect	text75
 15437   00A590                     __ptext75:
 15438                           	callstack 0
 15439   00A590                     _I2C1_MasterWrite:
 15440                           	callstack 15
 15441   00A590                     
 15442                           ;mcc_generated_files/i2c1_master.c: 283:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 15443   00A590  0E00               	movlw	0
 15444   00A592  EC15  F057         	call	_I2C1_MasterOperation
 15445   00A596  0012               	return		;funcret
 15446   00A598                     __end_of_I2C1_MasterWrite:
 15447                           	callstack 0
 15448                           
 15449 ;; *************** function _I2C1_ReadNBytes *****************
 15450 ;; Defined at:
 15451 ;;		line 120 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;  address         1    wreg     unsigned char 
 15454 ;;  data            1   22[COMRAM] PTR unsigned char 
 15455 ;;		 -> EEPROM_ReadByte@data(1), 
 15456 ;;  len             2   23[COMRAM] unsigned int 
 15457 ;; Auto vars:     Size  Location     Type
 15458 ;;  address         1   25[COMRAM] unsigned char 
 15459 ;; Return value:  Size  Location     Type
 15460 ;;                  1    wreg      void 
 15461 ;; Registers used:
 15462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15463 ;; Tracked objects:
 15464 ;;		On entry : 0/0
 15465 ;;		On exit  : 0/0
 15466 ;;		Unchanged: 0/0
 15467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15468 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15472 ;;Total ram usage:        4 bytes
 15473 ;; Hardware stack levels used: 1
 15474 ;; Hardware stack levels required when called: 11
 15475 ;; This function calls:
 15476 ;;		_I2C1_Close
 15477 ;;		_I2C1_MasterRead
 15478 ;;		_I2C1_Open
 15479 ;;		_I2C1_SetBuffer
 15480 ;; This function is called by:
 15481 ;;		_EEPROM_ReadByte
 15482 ;; This function uses a non-reentrant model
 15483 ;;
 15484                           
 15485                           	psect	text76
 15486   00ABA6                     __ptext76:
 15487                           	callstack 0
 15488   00ABA6                     _I2C1_ReadNBytes:
 15489                           	callstack 15
 15490                           
 15491                           ;incstack = 0
 15492                           ;I2C1_ReadNBytes@address stored from wreg
 15493   00ABA6  6E1A               	movwf	I2C1_ReadNBytes@address^0,c
 15494   00ABA8                     l9911:
 15495   00ABA8  501A               	movf	I2C1_ReadNBytes@address^0,w,c
 15496   00ABAA  EC0D  F05B         	call	_I2C1_Open
 15497   00ABAE  0900               	iorlw	0
 15498   00ABB0  B4D8               	btfsc	status,2,c
 15499   00ABB2  EFDD  F055         	goto	u10191
 15500   00ABB6  EFDF  F055         	goto	u10190
 15501   00ABBA                     u10191:
 15502   00ABBA  EFD4  F055         	goto	l9911
 15503   00ABBE                     u10190:
 15504   00ABBE                     
 15505                           ;mcc_generated_files/examples/i2c1_master_example.c: 123:     I2C1_SetBuffer(data,len);
 15506   00ABBE  C017  F001         	movff	I2C1_ReadNBytes@data,I2C1_SetBuffer@buffer
 15507   00ABC2  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 15508   00ABC4  C018  F003         	movff	I2C1_ReadNBytes@len,I2C1_SetBuffer@bufferSize
 15509   00ABC8  C019  F004         	movff	I2C1_ReadNBytes@len+1,I2C1_SetBuffer@bufferSize+1
 15510   00ABCC  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
 15511   00ABD0                     
 15512                           ;mcc_generated_files/examples/i2c1_master_example.c: 124:     I2C1_MasterRead();
 15513   00ABD0  ECC4  F052         	call	_I2C1_MasterRead	;wreg free
 15514   00ABD4                     l9917:
 15515   00ABD4  EC38  F054         	call	_I2C1_Close	;wreg free
 15516   00ABD8  06E8               	decf	wreg,f,c
 15517   00ABDA  B4D8               	btfsc	status,2,c
 15518   00ABDC  EFF2  F055         	goto	u10201
 15519   00ABE0  EFF4  F055         	goto	u10200
 15520   00ABE4                     u10201:
 15521   00ABE4  EFEA  F055         	goto	l9917
 15522   00ABE8                     u10200:
 15523   00ABE8  0012               	return		;funcret
 15524   00ABEA                     __end_of_I2C1_ReadNBytes:
 15525                           	callstack 0
 15526                           
 15527 ;; *************** function _I2C1_Open *****************
 15528 ;; Defined at:
 15529 ;;		line 204 in file "mcc_generated_files/i2c1_master.c"
 15530 ;; Parameters:    Size  Location     Type
 15531 ;;  address         1    wreg     unsigned char 
 15532 ;; Auto vars:     Size  Location     Type
 15533 ;;  address         1    0[COMRAM] unsigned char 
 15534 ;;  returnValue     1    1[COMRAM] enum E358
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      enum E358
 15537 ;; Registers used:
 15538 ;;		wreg, status,2, status,0, cstack
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15548 ;;Total ram usage:        2 bytes
 15549 ;; Hardware stack levels used: 1
 15550 ;; Hardware stack levels required when called: 1
 15551 ;; This function calls:
 15552 ;;		_I2C1_MasterClearIrq
 15553 ;;		_I2C1_MasterOpen
 15554 ;; This function is called by:
 15555 ;;		_I2C1_Write1ByteRegister
 15556 ;;		_I2C1_WriteNBytes
 15557 ;;		_I2C1_ReadNBytes
 15558 ;;		_I2C1_ReadDataBlock
 15559 ;;		_I2C1_Read1ByteRegister
 15560 ;;		_I2C1_Read2ByteRegister
 15561 ;;		_I2C1_Write2ByteRegister
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           	psect	text77
 15566   00B61A                     __ptext77:
 15567                           	callstack 0
 15568   00B61A                     _I2C1_Open:
 15569                           	callstack 24
 15570                           
 15571                           ;incstack = 0
 15572                           ;I2C1_Open@address stored from wreg
 15573   00B61A  6E01               	movwf	I2C1_Open@address^0,c
 15574   00B61C                     
 15575                           ;mcc_generated_files/i2c1_master.c: 204: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 205: {;mcc_generated_files/i2c1_master.c: 206:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 15576   00B61C  0E01               	movlw	1
 15577   00B61E  6E02               	movwf	I2C1_Open@returnValue^0,c
 15578   00B620                     
 15579                           ;mcc_generated_files/i2c1_master.c: 208:     if(!I2C1_Status.inUse)
 15580   00B620  0103               	movlb	3	; () banked
 15581   00B622  B723               	btfsc	(_I2C1_Status+35)& (0+255),3,b
 15582   00B624  EF16  F05B         	goto	u9341
 15583   00B628  EF18  F05B         	goto	u9340
 15584   00B62C                     u9341:
 15585   00B62C  EF53  F05B         	goto	l9427
 15586   00B630                     u9340:
 15587   00B630                     
 15588                           ; BSR set to: 3
 15589                           ;mcc_generated_files/i2c1_master.c: 209:     {;mcc_generated_files/i2c1_master.c: 210:  
      +                                 I2C1_Status.address = address;
 15590   00B630  C001  F31C         	movff	I2C1_Open@address,_I2C1_Status+28
 15591   00B634                     
 15592                           ; BSR set to: 3
 15593                           ;mcc_generated_files/i2c1_master.c: 211:         I2C1_Status.busy = 0;
 15594   00B634  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 15595   00B636                     
 15596                           ; BSR set to: 3
 15597                           ;mcc_generated_files/i2c1_master.c: 212:         I2C1_Status.inUse = 1;
 15598   00B636  8723               	bsf	(_I2C1_Status+35)& (0+255),3,b
 15599   00B638                     
 15600                           ; BSR set to: 3
 15601                           ;mcc_generated_files/i2c1_master.c: 213:         I2C1_Status.addressNackCheck = 0;
 15602   00B638  0EFC               	movlw	-4
 15603   00B63A  1723               	andwf	(_I2C1_Status+35)& (0+255),f,b
 15604   00B63C                     
 15605                           ; BSR set to: 3
 15606                           ;mcc_generated_files/i2c1_master.c: 214:         I2C1_Status.state = I2C1_RESET;
 15607   00B63C  0E0F               	movlw	15
 15608   00B63E  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 15609   00B640                     
 15610                           ; BSR set to: 3
 15611                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.time_out_value = 500;
 15612   00B640  0E01               	movlw	1
 15613   00B642  6F1B               	movwf	(_I2C1_Status+27)& (0+255),b
 15614   00B644  0EF4               	movlw	244
 15615   00B646  6F1A               	movwf	(_I2C1_Status+26)& (0+255),b
 15616   00B648                     
 15617                           ; BSR set to: 3
 15618                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_Status.bufferFree = 1;
 15619   00B648  8923               	bsf	(_I2C1_Status+35)& (0+255),4,b
 15620   00B64A                     
 15621                           ; BSR set to: 3
 15622                           ;mcc_generated_files/i2c1_master.c: 219:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 15623   00B64A  0E16               	movlw	low _I2C1_CallbackReturnStop
 15624   00B64C  6F00               	movwf	_I2C1_Status& (0+255),b
 15625   00B64E  0EA5               	movlw	high _I2C1_CallbackReturnStop
 15626   00B650  6F01               	movwf	(_I2C1_Status+1)& (0+255),b
 15627   00B652                     
 15628                           ; BSR set to: 3
 15629                           ;mcc_generated_files/i2c1_master.c: 220:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 15630   00B652  0E00               	movlw	0
 15631   00B654  6F0C               	movwf	(_I2C1_Status+12)& (0+255),b
 15632   00B656  0E00               	movlw	0
 15633   00B658  6F0D               	movwf	(_I2C1_Status+13)& (0+255),b
 15634   00B65A                     
 15635                           ; BSR set to: 3
 15636                           ;mcc_generated_files/i2c1_master.c: 221:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 15637   00B65A  0E16               	movlw	low _I2C1_CallbackReturnStop
 15638   00B65C  6F02               	movwf	(_I2C1_Status+2)& (0+255),b
 15639   00B65E  0EA5               	movlw	high _I2C1_CallbackReturnStop
 15640   00B660  6F03               	movwf	(_I2C1_Status+3)& (0+255),b
 15641   00B662                     
 15642                           ; BSR set to: 3
 15643                           ;mcc_generated_files/i2c1_master.c: 222:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 15644   00B662  0E00               	movlw	0
 15645   00B664  6F0E               	movwf	(_I2C1_Status+14)& (0+255),b
 15646   00B666  0E00               	movlw	0
 15647   00B668  6F0F               	movwf	(_I2C1_Status+15)& (0+255),b
 15648   00B66A                     
 15649                           ; BSR set to: 3
 15650                           ;mcc_generated_files/i2c1_master.c: 223:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 15651   00B66A  0E16               	movlw	low _I2C1_CallbackReturnStop
 15652   00B66C  6F04               	movwf	(_I2C1_Status+4)& (0+255),b
 15653   00B66E  0EA5               	movlw	high _I2C1_CallbackReturnStop
 15654   00B670  6F05               	movwf	(_I2C1_Status+5)& (0+255),b
 15655   00B672                     
 15656                           ; BSR set to: 3
 15657                           ;mcc_generated_files/i2c1_master.c: 224:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 15658   00B672  0E00               	movlw	0
 15659   00B674  6F10               	movwf	(_I2C1_Status+16)& (0+255),b
 15660   00B676  0E00               	movlw	0
 15661   00B678  6F11               	movwf	(_I2C1_Status+17)& (0+255),b
 15662   00B67A                     
 15663                           ; BSR set to: 3
 15664                           ;mcc_generated_files/i2c1_master.c: 225:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 15665   00B67A  0E16               	movlw	low _I2C1_CallbackReturnStop
 15666   00B67C  6F06               	movwf	(_I2C1_Status+6)& (0+255),b
 15667   00B67E  0EA5               	movlw	high _I2C1_CallbackReturnStop
 15668   00B680  6F07               	movwf	(_I2C1_Status+7)& (0+255),b
 15669   00B682                     
 15670                           ; BSR set to: 3
 15671                           ;mcc_generated_files/i2c1_master.c: 226:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 15672   00B682  0E00               	movlw	0
 15673   00B684  6F12               	movwf	(_I2C1_Status+18)& (0+255),b
 15674   00B686  0E00               	movlw	0
 15675   00B688  6F13               	movwf	(_I2C1_Status+19)& (0+255),b
 15676   00B68A                     
 15677                           ; BSR set to: 3
 15678                           ;mcc_generated_files/i2c1_master.c: 227:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 15679   00B68A  0E1A               	movlw	low _I2C1_CallbackReturnReset
 15680   00B68C  6F08               	movwf	(_I2C1_Status+8)& (0+255),b
 15681   00B68E  0EA5               	movlw	high _I2C1_CallbackReturnReset
 15682   00B690  6F09               	movwf	(_I2C1_Status+9)& (0+255),b
 15683   00B692                     
 15684                           ; BSR set to: 3
 15685                           ;mcc_generated_files/i2c1_master.c: 228:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 15686   00B692  0E00               	movlw	0
 15687   00B694  6F14               	movwf	(_I2C1_Status+20)& (0+255),b
 15688   00B696  0E00               	movlw	0
 15689   00B698  6F15               	movwf	(_I2C1_Status+21)& (0+255),b
 15690   00B69A                     
 15691                           ; BSR set to: 3
 15692                           ;mcc_generated_files/i2c1_master.c: 230:         I2C1_MasterClearIrq();
 15693   00B69A  ECB4  F052         	call	_I2C1_MasterClearIrq	;wreg free
 15694   00B69E                     
 15695                           ;mcc_generated_files/i2c1_master.c: 231:         I2C1_MasterOpen();
 15696   00B69E  ECD3  F054         	call	_I2C1_MasterOpen	;wreg free
 15697   00B6A2                     
 15698                           ;mcc_generated_files/i2c1_master.c: 232:         returnValue = I2C1_NOERR;
 15699   00B6A2  0E00               	movlw	0
 15700   00B6A4  6E02               	movwf	I2C1_Open@returnValue^0,c
 15701   00B6A6                     l9427:
 15702                           
 15703                           ;mcc_generated_files/i2c1_master.c: 234:     return returnValue;
 15704   00B6A6  5002               	movf	I2C1_Open@returnValue^0,w,c
 15705   00B6A8  0012               	return		;funcret
 15706   00B6AA                     __end_of_I2C1_Open:
 15707                           	callstack 0
 15708                           
 15709 ;; *************** function _I2C1_MasterOpen *****************
 15710 ;; Defined at:
 15711 ;;		line 632 in file "mcc_generated_files/i2c1_master.c"
 15712 ;; Parameters:    Size  Location     Type
 15713 ;;		None
 15714 ;; Auto vars:     Size  Location     Type
 15715 ;;		None
 15716 ;; Return value:  Size  Location     Type
 15717 ;;                  1    wreg      _Bool 
 15718 ;; Registers used:
 15719 ;;		wreg, status,2
 15720 ;; Tracked objects:
 15721 ;;		On entry : 0/0
 15722 ;;		On exit  : 0/0
 15723 ;;		Unchanged: 0/0
 15724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15729 ;;Total ram usage:        0 bytes
 15730 ;; Hardware stack levels used: 1
 15731 ;; This function calls:
 15732 ;;		Nothing
 15733 ;; This function is called by:
 15734 ;;		_I2C1_Open
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738                           	psect	text78
 15739   00A9A6                     __ptext78:
 15740                           	callstack 0
 15741   00A9A6                     _I2C1_MasterOpen:
 15742                           	callstack 24
 15743   00A9A6                     
 15744                           ;mcc_generated_files/i2c1_master.c: 634:     if(!I2C1CON0bits.EN)
 15745   00A9A6  013D               	movlb	61	; () banked
 15746   00A9A8  BF73               	btfsc	115,7,b	;volatile
 15747   00A9AA  EFD9  F054         	goto	u8341
 15748   00A9AE  EFDB  F054         	goto	u8340
 15749   00A9B2                     u8341:
 15750   00A9B2  EFE9  F054         	goto	l558
 15751   00A9B6                     u8340:
 15752   00A9B6                     
 15753                           ; BSR set to: 61
 15754                           ;mcc_generated_files/i2c1_master.c: 635:     {;mcc_generated_files/i2c1_master.c: 637:  
      +                                 I2C1PIR = 0x00;
 15755   00A9B6  0E00               	movlw	0
 15756   00A9B8  6F79               	movwf	121,b	;volatile
 15757                           
 15758                           ;mcc_generated_files/i2c1_master.c: 639:         I2C1PIE = 0x00;
 15759   00A9BA  0E00               	movlw	0
 15760   00A9BC  6F7A               	movwf	122,b	;volatile
 15761                           
 15762                           ;mcc_generated_files/i2c1_master.c: 641:         I2C1ERR = 0x00;
 15763   00A9BE  0E00               	movlw	0
 15764   00A9C0  6F76               	movwf	118,b	;volatile
 15765   00A9C2                     
 15766                           ; BSR set to: 61
 15767                           ;mcc_generated_files/i2c1_master.c: 643:         I2C1CNT = 0xFF;
 15768   00A9C2  696C               	setf	108,b	;volatile
 15769                           
 15770                           ;mcc_generated_files/i2c1_master.c: 645:         RB1I2C = 0x51;
 15771   00A9C4  0E51               	movlw	81
 15772   00A9C6  013A               	movlb	58	; () banked
 15773   00A9C8  6F5A               	movwf	90,b	;volatile
 15774                           
 15775                           ;mcc_generated_files/i2c1_master.c: 647:         RB2I2C = 0x51;
 15776   00A9CA  0E51               	movlw	81
 15777   00A9CC  6F5B               	movwf	91,b	;volatile
 15778   00A9CE                     
 15779                           ; BSR set to: 58
 15780                           ;mcc_generated_files/i2c1_master.c: 649:         I2C1CON0bits.EN = 1;
 15781   00A9CE  013D               	movlb	61	; () banked
 15782   00A9D0  8F73               	bsf	115,7,b	;volatile
 15783   00A9D2                     l558:
 15784                           
 15785                           ; BSR set to: 61
 15786   00A9D2  0012               	return		;funcret
 15787   00A9D4                     __end_of_I2C1_MasterOpen:
 15788                           	callstack 0
 15789                           
 15790 ;; *************** function _I2C1_MasterRead *****************
 15791 ;; Defined at:
 15792 ;;		line 276 in file "mcc_generated_files/i2c1_master.c"
 15793 ;; Parameters:    Size  Location     Type
 15794 ;;		None
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;		None
 15797 ;; Return value:  Size  Location     Type
 15798 ;;                  1    wreg      enum E358
 15799 ;; Registers used:
 15800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15801 ;; Tracked objects:
 15802 ;;		On entry : 0/0
 15803 ;;		On exit  : 0/0
 15804 ;;		Unchanged: 0/0
 15805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15810 ;;Total ram usage:        0 bytes
 15811 ;; Hardware stack levels used: 1
 15812 ;; Hardware stack levels required when called: 10
 15813 ;; This function calls:
 15814 ;;		_I2C1_MasterOperation
 15815 ;; This function is called by:
 15816 ;;		_I2C1_ReadNBytes
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           
 15820                           	psect	text79
 15821   00A588                     __ptext79:
 15822                           	callstack 0
 15823   00A588                     _I2C1_MasterRead:
 15824                           	callstack 15
 15825   00A588                     
 15826                           ;mcc_generated_files/i2c1_master.c: 278:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 15827   00A588  0E01               	movlw	1
 15828   00A58A  EC15  F057         	call	_I2C1_MasterOperation
 15829   00A58E  0012               	return		;funcret
 15830   00A590                     __end_of_I2C1_MasterRead:
 15831                           	callstack 0
 15832                           
 15833 ;; *************** function _I2C1_MasterOperation *****************
 15834 ;; Defined at:
 15835 ;;		line 252 in file "mcc_generated_files/i2c1_master.c"
 15836 ;; Parameters:    Size  Location     Type
 15837 ;;  read            1    wreg     _Bool 
 15838 ;; Auto vars:     Size  Location     Type
 15839 ;;  read            1   20[COMRAM] _Bool 
 15840 ;;  returnValue     1   21[COMRAM] enum E358
 15841 ;; Return value:  Size  Location     Type
 15842 ;;                  1    wreg      enum E358
 15843 ;; Registers used:
 15844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15845 ;; Tracked objects:
 15846 ;;		On entry : 0/0
 15847 ;;		On exit  : 0/0
 15848 ;;		Unchanged: 0/0
 15849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15854 ;;Total ram usage:        2 bytes
 15855 ;; Hardware stack levels used: 1
 15856 ;; Hardware stack levels required when called: 9
 15857 ;; This function calls:
 15858 ;;		_I2C1_DO_SEND_ADR_READ
 15859 ;;		_I2C1_DO_SEND_ADR_WRITE
 15860 ;;		_I2C1_MasterSetCounter
 15861 ;;		_I2C1_Poller
 15862 ;; This function is called by:
 15863 ;;		_I2C1_MasterRead
 15864 ;;		_I2C1_MasterWrite
 15865 ;; This function uses a non-reentrant model
 15866 ;;
 15867                           
 15868                           	psect	text80
 15869   00AE2A                     __ptext80:
 15870                           	callstack 0
 15871   00AE2A                     _I2C1_MasterOperation:
 15872                           	callstack 15
 15873                           
 15874                           ;incstack = 0
 15875                           ;I2C1_MasterOperation@read stored from wreg
 15876   00AE2A  6E15               	movwf	I2C1_MasterOperation@read^0,c
 15877   00AE2C                     
 15878                           ;mcc_generated_files/i2c1_master.c: 252: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 253: {;mcc_generated_files/i2c1_master.c: 254:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 15879   00AE2C  0E01               	movlw	1
 15880   00AE2E  6E16               	movwf	I2C1_MasterOperation@returnValue^0,c
 15881   00AE30                     
 15882                           ;mcc_generated_files/i2c1_master.c: 255:     if(!I2C1_Status.busy)
 15883   00AE30  0103               	movlb	3	; () banked
 15884   00AE32  B523               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 15885   00AE34  EF1E  F057         	goto	u8351
 15886   00AE38  EF20  F057         	goto	u8350
 15887   00AE3C                     u8351:
 15888   00AE3C  EF3C  F057         	goto	l8835
 15889   00AE40                     u8350:
 15890   00AE40                     
 15891                           ; BSR set to: 3
 15892                           ;mcc_generated_files/i2c1_master.c: 256:     {;mcc_generated_files/i2c1_master.c: 257:  
      +                                 I2C1_Status.busy = 1;
 15893   00AE40  8523               	bsf	(_I2C1_Status+35)& (0+255),2,b
 15894   00AE42                     
 15895                           ; BSR set to: 3
 15896                           ;mcc_generated_files/i2c1_master.c: 258:         returnValue = I2C1_NOERR;
 15897   00AE42  0E00               	movlw	0
 15898   00AE44  6E16               	movwf	I2C1_MasterOperation@returnValue^0,c
 15899   00AE46                     
 15900                           ; BSR set to: 3
 15901                           ;mcc_generated_files/i2c1_master.c: 259:         I2C1_MasterSetCounter((uint8_t) I2C1_St
      +                          atus.data_length);
 15902   00AE46  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 15903   00AE48  ECD1  F052         	call	_I2C1_MasterSetCounter
 15904   00AE4C                     
 15905                           ;mcc_generated_files/i2c1_master.c: 261:         if(read)
 15906   00AE4C  5015               	movf	I2C1_MasterOperation@read^0,w,c
 15907   00AE4E  B4D8               	btfsc	status,2,c
 15908   00AE50  EF2C  F057         	goto	u8361
 15909   00AE54  EF2E  F057         	goto	u8360
 15910   00AE58                     u8361:
 15911   00AE58  EF35  F057         	goto	l8829
 15912   00AE5C                     u8360:
 15913   00AE5C                     
 15914                           ;mcc_generated_files/i2c1_master.c: 262:         {;mcc_generated_files/i2c1_master.c: 26
      +                          3:             I2C1_Status.state = I2C1_RX;
 15915   00AE5C  0E04               	movlw	4
 15916   00AE5E  0103               	movlb	3	; () banked
 15917   00AE60  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 15918   00AE62                     
 15919                           ; BSR set to: 3
 15920                           ;mcc_generated_files/i2c1_master.c: 264:             I2C1_DO_SEND_ADR_READ();
 15921   00AE62  ECBC  F054         	call	_I2C1_DO_SEND_ADR_READ	;wreg free
 15922                           
 15923                           ;mcc_generated_files/i2c1_master.c: 265:         }
 15924   00AE66  EF3A  F057         	goto	l8833
 15925   00AE6A                     l8829:
 15926                           
 15927                           ;mcc_generated_files/i2c1_master.c: 267:         {;mcc_generated_files/i2c1_master.c: 26
      +                          8:             I2C1_Status.state = I2C1_TX;
 15928   00AE6A  0E03               	movlw	3
 15929   00AE6C  0103               	movlb	3	; () banked
 15930   00AE6E  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 15931   00AE70                     
 15932                           ; BSR set to: 3
 15933                           ;mcc_generated_files/i2c1_master.c: 269:             I2C1_DO_SEND_ADR_WRITE();
 15934   00AE70  EC63  F053         	call	_I2C1_DO_SEND_ADR_WRITE	;wreg free
 15935   00AE74                     l8833:
 15936                           
 15937                           ;mcc_generated_files/i2c1_master.c: 271:         I2C1_Poller();
 15938   00AE74  ECB9  F053         	call	_I2C1_Poller	;wreg free
 15939   00AE78                     l8835:
 15940                           
 15941                           ;mcc_generated_files/i2c1_master.c: 273:     return returnValue;
 15942   00AE78  5016               	movf	I2C1_MasterOperation@returnValue^0,w,c
 15943   00AE7A  0012               	return		;funcret
 15944   00AE7C                     __end_of_I2C1_MasterOperation:
 15945                           	callstack 0
 15946                           
 15947 ;; *************** function _I2C1_Poller *****************
 15948 ;; Defined at:
 15949 ;;		line 342 in file "mcc_generated_files/i2c1_master.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;		None
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;		None
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  1    wreg      void 
 15956 ;; Registers used:
 15957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15967 ;;Total ram usage:        0 bytes
 15968 ;; Hardware stack levels used: 1
 15969 ;; Hardware stack levels required when called: 8
 15970 ;; This function calls:
 15971 ;;		_I2C1_MasterFsm
 15972 ;;		_I2C1_MasterWaitForEvent
 15973 ;; This function is called by:
 15974 ;;		_I2C1_MasterOperation
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	text81
 15979   00A772                     __ptext81:
 15980                           	callstack 0
 15981   00A772                     _I2C1_Poller:
 15982                           	callstack 15
 15983   00A772                     
 15984                           ;mcc_generated_files/i2c1_master.c: 344:     while(I2C1_Status.busy)
 15985   00A772  EFBF  F053         	goto	l8581
 15986   00A776                     l8577:
 15987                           
 15988                           ; BSR set to: 3
 15989                           ;mcc_generated_files/i2c1_master.c: 345:     {;mcc_generated_files/i2c1_master.c: 346:  
      +                                 I2C1_MasterWaitForEvent();
 15990   00A776  ECC2  F057         	call	_I2C1_MasterWaitForEvent	;wreg free
 15991   00A77A                     
 15992                           ;mcc_generated_files/i2c1_master.c: 347:         I2C1_MasterFsm();
 15993   00A77A  EC0F  F05A         	call	_I2C1_MasterFsm	;wreg free
 15994   00A77E                     l8581:
 15995                           
 15996                           ;mcc_generated_files/i2c1_master.c: 344:     while(I2C1_Status.busy)
 15997   00A77E  0103               	movlb	3	; () banked
 15998   00A780  B523               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 15999   00A782  EFC5  F053         	goto	u7931
 16000   00A786  EFC7  F053         	goto	u7930
 16001   00A78A                     u7931:
 16002   00A78A  EFBB  F053         	goto	l8577
 16003   00A78E                     u7930:
 16004   00A78E                     
 16005                           ; BSR set to: 3
 16006   00A78E  0012               	return		;funcret
 16007   00A790                     __end_of_I2C1_Poller:
 16008                           	callstack 0
 16009                           
 16010 ;; *************** function _I2C1_MasterWaitForEvent *****************
 16011 ;; Defined at:
 16012 ;;		line 813 in file "mcc_generated_files/i2c1_master.c"
 16013 ;; Parameters:    Size  Location     Type
 16014 ;;		None
 16015 ;; Auto vars:     Size  Location     Type
 16016 ;;		None
 16017 ;; Return value:  Size  Location     Type
 16018 ;;                  1    wreg      void 
 16019 ;; Registers used:
 16020 ;;		None
 16021 ;; Tracked objects:
 16022 ;;		On entry : 0/0
 16023 ;;		On exit  : 0/0
 16024 ;;		Unchanged: 0/0
 16025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16030 ;;Total ram usage:        0 bytes
 16031 ;; Hardware stack levels used: 1
 16032 ;; This function calls:
 16033 ;;		Nothing
 16034 ;; This function is called by:
 16035 ;;		_I2C1_Poller
 16036 ;; This function uses a non-reentrant model
 16037 ;;
 16038                           
 16039                           	psect	text82
 16040   00AF84                     __ptext82:
 16041                           	callstack 0
 16042   00AF84                     _I2C1_MasterWaitForEvent:
 16043                           	callstack 22
 16044   00AF84                     l638:
 16045                           
 16046                           ;mcc_generated_files/i2c1_master.c: 816:     {;mcc_generated_files/i2c1_master.c: 817:  
      +                                 if(PIR3bits.I2C1TXIF)
 16047   00AF84  0139               	movlb	57	; () banked
 16048   00AF86  A1A3               	btfss	163,0,b	;volatile
 16049   00AF88  EFC8  F057         	goto	u7811
 16050   00AF8C  EFCA  F057         	goto	u7810
 16051   00AF90                     u7811:
 16052   00AF90  EFCC  F057         	goto	l639
 16053   00AF94                     u7810:
 16054   00AF94  EFEF  F057         	goto	l646
 16055   00AF98                     l639:
 16056                           
 16057                           ; BSR set to: 57
 16058                           ;mcc_generated_files/i2c1_master.c: 821:         if(PIR2bits.I2C1RXIF)
 16059   00AF98  AFA2               	btfss	162,7,b	;volatile
 16060   00AF9A  EFD1  F057         	goto	u7821
 16061   00AF9E  EFD3  F057         	goto	u7820
 16062   00AFA2                     u7821:
 16063   00AFA2  EFD5  F057         	goto	l641
 16064   00AFA6                     u7820:
 16065   00AFA6  EFEF  F057         	goto	l646
 16066   00AFAA                     l641:
 16067                           
 16068                           ; BSR set to: 57
 16069                           ;mcc_generated_files/i2c1_master.c: 825:         if(I2C1PIRbits.PCIF)
 16070   00AFAA  013D               	movlb	61	; () banked
 16071   00AFAC  A579               	btfss	121,2,b	;volatile
 16072   00AFAE  EFDB  F057         	goto	u7831
 16073   00AFB2  EFDD  F057         	goto	u7830
 16074   00AFB6                     u7831:
 16075   00AFB6  EFDF  F057         	goto	l642
 16076   00AFBA                     u7830:
 16077   00AFBA  EFEF  F057         	goto	l646
 16078   00AFBE                     l642:
 16079                           
 16080                           ; BSR set to: 61
 16081                           ;mcc_generated_files/i2c1_master.c: 829:         if(I2C1PIRbits.CNTIF)
 16082   00AFBE  AF79               	btfss	121,7,b	;volatile
 16083   00AFC0  EFE4  F057         	goto	u7841
 16084   00AFC4  EFE6  F057         	goto	u7840
 16085   00AFC8                     u7841:
 16086   00AFC8  EFE8  F057         	goto	l643
 16087   00AFCC                     u7840:
 16088   00AFCC  EFEF  F057         	goto	l646
 16089   00AFD0                     l643:
 16090                           
 16091                           ; BSR set to: 61
 16092                           ;mcc_generated_files/i2c1_master.c: 833:         if(I2C1ERRbits.NACKIF)
 16093   00AFD0  A976               	btfss	118,4,b	;volatile
 16094   00AFD2  EFED  F057         	goto	u7851
 16095   00AFD6  EFEF  F057         	goto	u7850
 16096   00AFDA                     u7851:
 16097   00AFDA  EFC2  F057         	goto	l638
 16098   00AFDE                     u7850:
 16099   00AFDE                     l646:
 16100   00AFDE  0012               	return		;funcret
 16101   00AFE0                     __end_of_I2C1_MasterWaitForEvent:
 16102                           	callstack 0
 16103                           
 16104 ;; *************** function _I2C1_MasterFsm *****************
 16105 ;; Defined at:
 16106 ;;		line 351 in file "mcc_generated_files/i2c1_master.c"
 16107 ;; Parameters:    Size  Location     Type
 16108 ;;		None
 16109 ;; Auto vars:     Size  Location     Type
 16110 ;;		None
 16111 ;; Return value:  Size  Location     Type
 16112 ;;                  1    wreg      void 
 16113 ;; Registers used:
 16114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16115 ;; Tracked objects:
 16116 ;;		On entry : 0/0
 16117 ;;		On exit  : 0/0
 16118 ;;		Unchanged: 0/0
 16119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16124 ;;Total ram usage:        2 bytes
 16125 ;; Hardware stack levels used: 1
 16126 ;; Hardware stack levels required when called: 7
 16127 ;; This function calls:
 16128 ;;		_I2C1_ClearInterruptFlags
 16129 ;;		_I2C1_DO_ADDRESS_NACK
 16130 ;;		_I2C1_DO_BUS_COLLISION
 16131 ;;		_I2C1_DO_BUS_ERROR
 16132 ;;		_I2C1_DO_IDLE
 16133 ;;		_I2C1_DO_RESET
 16134 ;;		_I2C1_DO_RX
 16135 ;;		_I2C1_DO_RX_ACK
 16136 ;;		_I2C1_DO_RX_EMPTY
 16137 ;;		_I2C1_DO_RX_NACK_RESTART
 16138 ;;		_I2C1_DO_RX_NACK_STOP
 16139 ;;		_I2C1_DO_SEND_ADR_READ
 16140 ;;		_I2C1_DO_SEND_ADR_WRITE
 16141 ;;		_I2C1_DO_SEND_RESTART
 16142 ;;		_I2C1_DO_SEND_RESTART_READ
 16143 ;;		_I2C1_DO_SEND_RESTART_WRITE
 16144 ;;		_I2C1_DO_SEND_STOP
 16145 ;;		_I2C1_DO_TX
 16146 ;;		_I2C1_DO_TX_ACK
 16147 ;;		_I2C1_DO_TX_EMPTY
 16148 ;;		_I2C1_MasterIsNack
 16149 ;; This function is called by:
 16150 ;;		_I2C1_Poller
 16151 ;; This function uses a non-reentrant model
 16152 ;;
 16153                           
 16154                           	psect	text83
 16155   00B41E                     __ptext83:
 16156                           	callstack 0
 16157   00B41E                     _I2C1_MasterFsm:
 16158                           	callstack 15
 16159   00B41E                     
 16160                           ;mcc_generated_files/i2c1_master.c: 353:     I2C1_ClearInterruptFlags();
 16161   00B41E  ECEC  F056         	call	_I2C1_ClearInterruptFlags	;wreg free
 16162   00B422                     
 16163                           ;mcc_generated_files/i2c1_master.c: 355:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 16164   00B422  0103               	movlb	3	; () banked
 16165   00B424  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 16166   00B426  0B03               	andlw	3
 16167   00B428  0900               	iorlw	0
 16168   00B42A  B4D8               	btfsc	status,2,c
 16169   00B42C  EF1A  F05A         	goto	u7861
 16170   00B430  EF1C  F05A         	goto	u7860
 16171   00B434                     u7861:
 16172   00B434  EF29  F05A         	goto	l8559
 16173   00B438                     u7860:
 16174   00B438                     
 16175                           ; BSR set to: 3
 16176   00B438  EC4D  F053         	call	_I2C1_MasterIsNack	;wreg free
 16177   00B43C  0900               	iorlw	0
 16178   00B43E  B4D8               	btfsc	status,2,c
 16179   00B440  EF24  F05A         	goto	u7871
 16180   00B444  EF26  F05A         	goto	u7870
 16181   00B448                     u7871:
 16182   00B448  EF29  F05A         	goto	l8559
 16183   00B44C                     u7870:
 16184   00B44C                     
 16185                           ;mcc_generated_files/i2c1_master.c: 356:     {;mcc_generated_files/i2c1_master.c: 357:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 16186   00B44C  0E10               	movlw	16
 16187   00B44E  0103               	movlb	3	; () banked
 16188   00B450  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 16189   00B452                     l8559:
 16190                           
 16191                           ;mcc_generated_files/i2c1_master.c: 359:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 16192   00B452  0103               	movlb	3	; () banked
 16193   00B454  5121               	movf	(_I2C1_Status+33)& (0+255),w,b
 16194   00B456  0D02               	mullw	2
 16195   00B458  0EF7               	movlw	low _i2c1_fsmStateTable
 16196   00B45A  24F3               	addwf	243,w,c
 16197   00B45C  6EF6               	movwf	tblptrl,c
 16198   00B45E  0EFD               	movlw	high _i2c1_fsmStateTable
 16199   00B460  20F4               	addwfc	244,w,c
 16200   00B462  6EF7               	movwf	tblptrh,c
 16201   00B464                     	if	1	;There are 3 active tblptr bytes
 16202   00B464  6AF8               	clrf	tblptru,c
 16203   00B466  0E00               	movlw	low (__mediumconst shr (0+16))
 16204   00B468  22F8               	addwfc	tblptru,f,c
 16205   00B46A                     	endif
 16206   00B46A  0009               	tblrd		*+
 16207   00B46C  006F FFD4  F013    	movff	tablat,??_I2C1_MasterFsm
 16208   00B472  0009               	tblrd		*+
 16209   00B474  006F FFD4  F014    	movff	tablat,??_I2C1_MasterFsm+1
 16210   00B47A  D802               	call	u7888
 16211   00B47C  EF49  F05A         	goto	u7889
 16212   00B480                     u7888:
 16213   00B480  0005               	push	
 16214   00B482  6EFA               	movwf	pclath,c
 16215   00B484  5013               	movf	??_I2C1_MasterFsm^0,w,c
 16216   00B486  6EFD               	movwf	tosl,c
 16217   00B488  5014               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 16218   00B48A  6EFE               	movwf	tosh,c
 16219   00B48C  6AFF               	clrf	tosu,c
 16220   00B48E  50FA               	movf	pclath,w,c
 16221   00B490  0012               	return		;indir
 16222   00B492                     u7889:
 16223   00B492  0103               	movlb	3	; () banked
 16224   00B494  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 16225   00B496                     
 16226                           ; BSR set to: 3
 16227   00B496  0012               	return		;funcret
 16228   00B498                     __end_of_I2C1_MasterFsm:
 16229                           	callstack 0
 16230                           
 16231 ;; *************** function _I2C1_DO_BUS_ERROR *****************
 16232 ;; Defined at:
 16233 ;;		line 595 in file "mcc_generated_files/i2c1_master.c"
 16234 ;; Parameters:    Size  Location     Type
 16235 ;;		None
 16236 ;; Auto vars:     Size  Location     Type
 16237 ;;		None
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      enum E16630
 16240 ;; Registers used:
 16241 ;;		wreg, status,2, cstack
 16242 ;; Tracked objects:
 16243 ;;		On entry : 0/0
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16251 ;;Total ram usage:        0 bytes
 16252 ;; Hardware stack levels used: 1
 16253 ;; Hardware stack levels required when called: 1
 16254 ;; This function calls:
 16255 ;;		_I2C1_MasterResetBus
 16256 ;; This function is called by:
 16257 ;;		_I2C1_MasterFsm
 16258 ;; This function uses a non-reentrant model
 16259 ;;
 16260                           
 16261                           	psect	text84
 16262   00A622                     __ptext84:
 16263                           	callstack 0
 16264   00A622                     _I2C1_DO_BUS_ERROR:
 16265                           	callstack 20
 16266   00A622                     
 16267                           ;mcc_generated_files/i2c1_master.c: 597:     I2C1_MasterResetBus();
 16268   00A622  ECCC  F052         	call	_I2C1_MasterResetBus	;wreg free
 16269   00A626                     
 16270                           ;mcc_generated_files/i2c1_master.c: 598:     I2C1_Status.busy = 0;
 16271   00A626  0103               	movlb	3	; () banked
 16272   00A628  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 16273   00A62A                     
 16274                           ; BSR set to: 3
 16275                           ;mcc_generated_files/i2c1_master.c: 599:     I2C1_Status.error = I2C1_FAIL;
 16276   00A62A  0E02               	movlw	2
 16277   00A62C  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 16278   00A62E                     
 16279                           ; BSR set to: 3
 16280                           ;mcc_generated_files/i2c1_master.c: 600:     return I2C1_RESET;
 16281   00A62E  0E0F               	movlw	15
 16282   00A630                     
 16283                           ; BSR set to: 3
 16284   00A630  0012               	return		;funcret
 16285   00A632                     __end_of_I2C1_DO_BUS_ERROR:
 16286                           	callstack 0
 16287                           
 16288 ;; *************** function _I2C1_DO_BUS_COLLISION *****************
 16289 ;; Defined at:
 16290 ;;		line 579 in file "mcc_generated_files/i2c1_master.c"
 16291 ;; Parameters:    Size  Location     Type
 16292 ;;		None
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;		None
 16295 ;; Return value:  Size  Location     Type
 16296 ;;                  1    wreg      enum E16630
 16297 ;; Registers used:
 16298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16299 ;; Tracked objects:
 16300 ;;		On entry : 0/0
 16301 ;;		On exit  : 0/0
 16302 ;;		Unchanged: 0/0
 16303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16308 ;;Total ram usage:        2 bytes
 16309 ;; Hardware stack levels used: 1
 16310 ;; Hardware stack levels required when called: 6
 16311 ;; This function calls:
 16312 ;;		NULL
 16313 ;;		_I2C1_CallbackReturnReset
 16314 ;;		_I2C1_CallbackReturnStop
 16315 ;;		_I2C1_DO_RESET
 16316 ;;		_I2C1_DO_SEND_RESTART_READ
 16317 ;;		_I2C1_DO_SEND_RESTART_WRITE
 16318 ;;		_I2C1_MasterClearIrq
 16319 ;;		_rd1RegCompleteHandler
 16320 ;;		_rd2RegCompleteHandler
 16321 ;;		_rdBlkRegCompleteHandler
 16322 ;;		_wr1RegCompleteHandler
 16323 ;;		_wr2RegCompleteHandler
 16324 ;; This function is called by:
 16325 ;;		_I2C1_MasterFsm
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           	psect	text85
 16330   00B256                     __ptext85:
 16331                           	callstack 0
 16332   00B256                     _I2C1_DO_BUS_COLLISION:
 16333                           	callstack 15
 16334   00B256                     
 16335                           ;mcc_generated_files/i2c1_master.c: 582:     I2C1_MasterClearIrq();
 16336   00B256  ECB4  F052         	call	_I2C1_MasterClearIrq	;wreg free
 16337   00B25A                     
 16338                           ;mcc_generated_files/i2c1_master.c: 584:     I2C1_Status.error = I2C1_FAIL;
 16339   00B25A  0E02               	movlw	2
 16340   00B25C  0103               	movlb	3	; () banked
 16341   00B25E  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 16342                           
 16343                           ;mcc_generated_files/i2c1_master.c: 585:     switch (I2C1_Status.callbackTable[I2C1_WRIT
      +                          E_COLLISION](I2C1_Status.callbackPayload[I2C1_WRITE_COLLISION])) {
 16344   00B260  EF3E  F059         	goto	l8523
 16345   00B264                     l8509:
 16346                           
 16347                           ;mcc_generated_files/i2c1_master.c: 587:         return I2C1_DO_SEND_RESTART_READ();
 16348   00B264  ECFB  F052         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 16349   00B268  EF62  F059         	goto	l533
 16350   00B26C                     l8513:
 16351                           
 16352                           ;mcc_generated_files/i2c1_master.c: 589:         return I2C1_DO_SEND_RESTART_WRITE();
 16353   00B26C  EC8F  F052         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 16354   00B270  EF62  F059         	goto	l533
 16355   00B274                     l8517:
 16356                           
 16357                           ;mcc_generated_files/i2c1_master.c: 591:         return I2C1_DO_RESET();
 16358   00B274  EC09  F053         	call	_I2C1_DO_RESET	;wreg free
 16359   00B278  EF62  F059         	goto	l533
 16360   00B27C                     l8523:
 16361                           
 16362                           ; BSR set to: 3
 16363   00B27C  C30E  F00A         	movff	_I2C1_Status+14,I2C1_CallbackReturnReset@funPtr
 16364   00B280  C30F  F00B         	movff	_I2C1_Status+15,I2C1_CallbackReturnReset@funPtr+1
 16365   00B284  D802               	call	u7808
 16366   00B286  EF4E  F059         	goto	u7809
 16367   00B28A                     u7808:
 16368   00B28A  0005               	push	
 16369   00B28C  6EFA               	movwf	pclath,c
 16370   00B28E  5102               	movf	(_I2C1_Status+2)& (0+255),w,b
 16371   00B290  6EFD               	movwf	tosl,c
 16372   00B292  5103               	movf	(_I2C1_Status+3)& (0+255),w,b
 16373   00B294  6EFE               	movwf	tosh,c
 16374   00B296  6AFF               	clrf	tosu,c
 16375   00B298  50FA               	movf	pclath,w,c
 16376   00B29A  0012               	return		;indir
 16377   00B29C                     u7809:
 16378   00B29C  6E0D               	movwf	??_I2C1_DO_BUS_COLLISION^0,c
 16379   00B29E  6A0E               	clrf	(??_I2C1_DO_BUS_COLLISION+1)^0,c
 16380                           
 16381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16382                           ; Switch size 1, requested type "simple"
 16383                           ; Number of cases is 1, Range of values is 0 to 0
 16384                           ; switch strategies available:
 16385                           ; Name         Instructions Cycles
 16386                           ; simple_byte            4     3 (average)
 16387                           ;	Chosen strategy is simple_byte
 16388   00B2A0  500E               	movf	(??_I2C1_DO_BUS_COLLISION+1)^0,w,c
 16389   00B2A2  0A00               	xorlw	0	; case 0
 16390   00B2A4  B4D8               	btfsc	status,2,c
 16391   00B2A6  EF57  F059         	goto	l11177
 16392   00B2AA  EF3A  F059         	goto	l8517
 16393   00B2AE                     l11177:
 16394                           
 16395                           ; Switch size 1, requested type "simple"
 16396                           ; Number of cases is 2, Range of values is 2 to 3
 16397                           ; switch strategies available:
 16398                           ; Name         Instructions Cycles
 16399                           ; simple_byte            7     4 (average)
 16400                           ;	Chosen strategy is simple_byte
 16401   00B2AE  500D               	movf	??_I2C1_DO_BUS_COLLISION^0,w,c
 16402   00B2B0  0A02               	xorlw	2	; case 2
 16403   00B2B2  B4D8               	btfsc	status,2,c
 16404   00B2B4  EF32  F059         	goto	l8509
 16405   00B2B8  0A01               	xorlw	1	; case 3
 16406   00B2BA  B4D8               	btfsc	status,2,c
 16407   00B2BC  EF36  F059         	goto	l8513
 16408   00B2C0  EF3A  F059         	goto	l8517
 16409   00B2C4                     l533:
 16410   00B2C4  0012               	return		;funcret
 16411   00B2C6                     __end_of_I2C1_DO_BUS_COLLISION:
 16412                           	callstack 0
 16413                           
 16414 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 16415 ;; Defined at:
 16416 ;;		line 564 in file "mcc_generated_files/i2c1_master.c"
 16417 ;; Parameters:    Size  Location     Type
 16418 ;;		None
 16419 ;; Auto vars:     Size  Location     Type
 16420 ;;		None
 16421 ;; Return value:  Size  Location     Type
 16422 ;;                  1    wreg      enum E16630
 16423 ;; Registers used:
 16424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16425 ;; Tracked objects:
 16426 ;;		On entry : 0/0
 16427 ;;		On exit  : 0/0
 16428 ;;		Unchanged: 0/0
 16429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16432 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16434 ;;Total ram usage:        2 bytes
 16435 ;; Hardware stack levels used: 1
 16436 ;; Hardware stack levels required when called: 3
 16437 ;; This function calls:
 16438 ;;		NULL
 16439 ;;		_I2C1_CallbackReturnReset
 16440 ;;		_I2C1_CallbackReturnStop
 16441 ;;		_I2C1_DO_SEND_RESTART
 16442 ;;		_rd1RegCompleteHandler
 16443 ;;		_rd2RegCompleteHandler
 16444 ;;		_rdBlkRegCompleteHandler
 16445 ;;		_wr1RegCompleteHandler
 16446 ;;		_wr2RegCompleteHandler
 16447 ;; This function is called by:
 16448 ;;		_I2C1_MasterFsm
 16449 ;; This function uses a non-reentrant model
 16450 ;;
 16451                           
 16452                           	psect	text86
 16453   00B046                     __ptext86:
 16454                           	callstack 0
 16455   00B046                     _I2C1_DO_ADDRESS_NACK:
 16456                           	callstack 18
 16457   00B046                     
 16458                           ;mcc_generated_files/i2c1_master.c: 566:     I2C1_Status.addressNackCheck = 0;
 16459   00B046  0EFC               	movlw	-4
 16460   00B048  0103               	movlb	3	; () banked
 16461   00B04A  1723               	andwf	(_I2C1_Status+35)& (0+255),f,b
 16462                           
 16463                           ;mcc_generated_files/i2c1_master.c: 567:     I2C1_Status.error = I2C1_FAIL;
 16464   00B04C  0E02               	movlw	2
 16465   00B04E  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 16466   00B050                     
 16467                           ; BSR set to: 3
 16468                           ;mcc_generated_files/i2c1_master.c: 568:     I2C1_Status.busy = 0;
 16469   00B050  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 16470                           
 16471                           ;mcc_generated_files/i2c1_master.c: 569:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 16472   00B052  EF32  F058         	goto	l8497
 16473   00B056                     l8487:
 16474                           
 16475                           ;mcc_generated_files/i2c1_master.c: 573:             return I2C1_DO_SEND_RESTART();
 16476   00B056  EC91  F052         	call	_I2C1_DO_SEND_RESTART	;wreg free
 16477   00B05A  EF56  F058         	goto	l526
 16478   00B05E                     l8491:
 16479                           
 16480                           ;mcc_generated_files/i2c1_master.c: 575:             return I2C1_RESET;
 16481   00B05E  0E0F               	movlw	15
 16482   00B060  EF56  F058         	goto	l526
 16483   00B064                     l8497:
 16484                           
 16485                           ; BSR set to: 3
 16486   00B064  C310  F00A         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 16487   00B068  C311  F00B         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 16488   00B06C  D802               	call	u7798
 16489   00B06E  EF42  F058         	goto	u7799
 16490   00B072                     u7798:
 16491   00B072  0005               	push	
 16492   00B074  6EFA               	movwf	pclath,c
 16493   00B076  5104               	movf	(_I2C1_Status+4)& (0+255),w,b
 16494   00B078  6EFD               	movwf	tosl,c
 16495   00B07A  5105               	movf	(_I2C1_Status+5)& (0+255),w,b
 16496   00B07C  6EFE               	movwf	tosh,c
 16497   00B07E  6AFF               	clrf	tosu,c
 16498   00B080  50FA               	movf	pclath,w,c
 16499   00B082  0012               	return		;indir
 16500   00B084                     u7799:
 16501   00B084  6E0D               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 16502   00B086  6A0E               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 16503                           
 16504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16505                           ; Switch size 1, requested type "simple"
 16506                           ; Number of cases is 1, Range of values is 0 to 0
 16507                           ; switch strategies available:
 16508                           ; Name         Instructions Cycles
 16509                           ; simple_byte            4     3 (average)
 16510                           ;	Chosen strategy is simple_byte
 16511   00B088  500E               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 16512   00B08A  0A00               	xorlw	0	; case 0
 16513   00B08C  B4D8               	btfsc	status,2,c
 16514   00B08E  EF4B  F058         	goto	l11179
 16515   00B092  EF2F  F058         	goto	l8491
 16516   00B096                     l11179:
 16517                           
 16518                           ; Switch size 1, requested type "simple"
 16519                           ; Number of cases is 2, Range of values is 2 to 3
 16520                           ; switch strategies available:
 16521                           ; Name         Instructions Cycles
 16522                           ; simple_byte            7     4 (average)
 16523                           ;	Chosen strategy is simple_byte
 16524   00B096  500D               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 16525   00B098  0A02               	xorlw	2	; case 2
 16526   00B09A  B4D8               	btfsc	status,2,c
 16527   00B09C  EF2B  F058         	goto	l8487
 16528   00B0A0  0A01               	xorlw	1	; case 3
 16529   00B0A2  B4D8               	btfsc	status,2,c
 16530   00B0A4  EF2B  F058         	goto	l8487
 16531   00B0A8  EF2F  F058         	goto	l8491
 16532   00B0AC                     l526:
 16533   00B0AC  0012               	return		;funcret
 16534   00B0AE                     __end_of_I2C1_DO_ADDRESS_NACK:
 16535                           	callstack 0
 16536                           
 16537 ;; *************** function _I2C1_DO_RESET *****************
 16538 ;; Defined at:
 16539 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 16540 ;; Parameters:    Size  Location     Type
 16541 ;;		None
 16542 ;; Auto vars:     Size  Location     Type
 16543 ;;		None
 16544 ;; Return value:  Size  Location     Type
 16545 ;;                  1    wreg      enum E16630
 16546 ;; Registers used:
 16547 ;;		wreg, status,2, cstack
 16548 ;; Tracked objects:
 16549 ;;		On entry : 0/0
 16550 ;;		On exit  : 0/0
 16551 ;;		Unchanged: 0/0
 16552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16557 ;;Total ram usage:        0 bytes
 16558 ;; Hardware stack levels used: 1
 16559 ;; Hardware stack levels required when called: 1
 16560 ;; This function calls:
 16561 ;;		_I2C1_MasterResetBus
 16562 ;; This function is called by:
 16563 ;;		_I2C1_DO_BUS_COLLISION
 16564 ;;		_I2C1_MasterFsm
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text87
 16569   00A612                     __ptext87:
 16570                           	callstack 0
 16571   00A612                     _I2C1_DO_RESET:
 16572                           	callstack 20
 16573   00A612                     
 16574                           ;mcc_generated_files/i2c1_master.c: 559:     I2C1_MasterResetBus();
 16575   00A612  ECCC  F052         	call	_I2C1_MasterResetBus	;wreg free
 16576   00A616                     
 16577                           ;mcc_generated_files/i2c1_master.c: 560:     I2C1_Status.busy = 0;
 16578   00A616  0103               	movlb	3	; () banked
 16579   00A618  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 16580   00A61A                     
 16581                           ; BSR set to: 3
 16582                           ;mcc_generated_files/i2c1_master.c: 561:     I2C1_Status.error = I2C1_NOERR;
 16583   00A61A  0E00               	movlw	0
 16584   00A61C  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 16585   00A61E                     
 16586                           ; BSR set to: 3
 16587                           ;mcc_generated_files/i2c1_master.c: 562:     return I2C1_RESET;
 16588   00A61E  0E0F               	movlw	15
 16589   00A620                     
 16590                           ; BSR set to: 3
 16591   00A620  0012               	return		;funcret
 16592   00A622                     __end_of_I2C1_DO_RESET:
 16593                           	callstack 0
 16594                           
 16595 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 16596 ;; Defined at:
 16597 ;;		line 551 in file "mcc_generated_files/i2c1_master.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;		None
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;		None
 16602 ;; Return value:  Size  Location     Type
 16603 ;;                  1    wreg      enum E16630
 16604 ;; Registers used:
 16605 ;;		wreg, cstack
 16606 ;; Tracked objects:
 16607 ;;		On entry : 0/0
 16608 ;;		On exit  : 0/0
 16609 ;;		Unchanged: 0/0
 16610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16615 ;;Total ram usage:        0 bytes
 16616 ;; Hardware stack levels used: 1
 16617 ;; Hardware stack levels required when called: 1
 16618 ;; This function calls:
 16619 ;;		_I2C1_MasterSendNack
 16620 ;; This function is called by:
 16621 ;;		_I2C1_MasterFsm
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           	psect	text88
 16626   00A580                     __ptext88:
 16627                           	callstack 0
 16628   00A580                     _I2C1_DO_RX_NACK_RESTART:
 16629                           	callstack 20
 16630   00A580                     
 16631                           ;mcc_generated_files/i2c1_master.c: 553:     I2C1_MasterSendNack();
 16632   00A580  ECA8  F052         	call	_I2C1_MasterSendNack	;wreg free
 16633   00A584                     
 16634                           ;mcc_generated_files/i2c1_master.c: 554:     return I2C1_SEND_RESTART;
 16635   00A584  0E09               	movlw	9
 16636   00A586  0012               	return		;funcret
 16637   00A588                     __end_of_I2C1_DO_RX_NACK_RESTART:
 16638                           	callstack 0
 16639                           
 16640 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 16641 ;; Defined at:
 16642 ;;		line 544 in file "mcc_generated_files/i2c1_master.c"
 16643 ;; Parameters:    Size  Location     Type
 16644 ;;		None
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;		None
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  1    wreg      enum E16630
 16649 ;; Registers used:
 16650 ;;		wreg, status,2, cstack
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16660 ;;Total ram usage:        0 bytes
 16661 ;; Hardware stack levels used: 1
 16662 ;; Hardware stack levels required when called: 1
 16663 ;; This function calls:
 16664 ;;		_I2C1_DO_IDLE
 16665 ;;		_I2C1_MasterSendNack
 16666 ;;		_I2C1_MasterStop
 16667 ;; This function is called by:
 16668 ;;		_I2C1_MasterFsm
 16669 ;; This function uses a non-reentrant model
 16670 ;;
 16671                           
 16672                           	psect	text89
 16673   00A604                     __ptext89:
 16674                           	callstack 0
 16675   00A604                     _I2C1_DO_RX_NACK_STOP:
 16676                           	callstack 20
 16677   00A604                     
 16678                           ;mcc_generated_files/i2c1_master.c: 546:     I2C1_MasterSendNack();
 16679   00A604  ECA8  F052         	call	_I2C1_MasterSendNack	;wreg free
 16680                           
 16681                           ;mcc_generated_files/i2c1_master.c: 547:     I2C1_MasterStop();
 16682   00A608  ECAB  F052         	call	_I2C1_MasterStop	;wreg free
 16683   00A60C                     
 16684                           ;mcc_generated_files/i2c1_master.c: 548:     return I2C1_DO_IDLE();
 16685   00A60C  ECF5  F052         	call	_I2C1_DO_IDLE	;wreg free
 16686   00A610  0012               	return		;funcret
 16687   00A612                     __end_of_I2C1_DO_RX_NACK_STOP:
 16688                           	callstack 0
 16689                           
 16690 ;; *************** function _I2C1_DO_RX_ACK *****************
 16691 ;; Defined at:
 16692 ;;		line 532 in file "mcc_generated_files/i2c1_master.c"
 16693 ;; Parameters:    Size  Location     Type
 16694 ;;		None
 16695 ;; Auto vars:     Size  Location     Type
 16696 ;;		None
 16697 ;; Return value:  Size  Location     Type
 16698 ;;                  1    wreg      enum E16630
 16699 ;; Registers used:
 16700 ;;		wreg, cstack
 16701 ;; Tracked objects:
 16702 ;;		On entry : 0/0
 16703 ;;		On exit  : 0/0
 16704 ;;		Unchanged: 0/0
 16705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16710 ;;Total ram usage:        0 bytes
 16711 ;; Hardware stack levels used: 1
 16712 ;; Hardware stack levels required when called: 1
 16713 ;; This function calls:
 16714 ;;		_I2C1_MasterSendAck
 16715 ;; This function is called by:
 16716 ;;		_I2C1_MasterFsm
 16717 ;; This function uses a non-reentrant model
 16718 ;;
 16719                           
 16720                           	psect	text90
 16721   00A578                     __ptext90:
 16722                           	callstack 0
 16723   00A578                     _I2C1_DO_RX_ACK:
 16724                           	callstack 20
 16725   00A578                     
 16726                           ;mcc_generated_files/i2c1_master.c: 534:     I2C1_MasterSendAck();
 16727   00A578  ECA5  F052         	call	_I2C1_MasterSendAck	;wreg free
 16728   00A57C                     
 16729                           ;mcc_generated_files/i2c1_master.c: 535:     return I2C1_RX;
 16730   00A57C  0E04               	movlw	4
 16731   00A57E  0012               	return		;funcret
 16732   00A580                     __end_of_I2C1_DO_RX_ACK:
 16733                           	callstack 0
 16734                           
 16735 ;; *************** function _I2C1_DO_SEND_STOP *****************
 16736 ;; Defined at:
 16737 ;;		line 521 in file "mcc_generated_files/i2c1_master.c"
 16738 ;; Parameters:    Size  Location     Type
 16739 ;;		None
 16740 ;; Auto vars:     Size  Location     Type
 16741 ;;		None
 16742 ;; Return value:  Size  Location     Type
 16743 ;;                  1    wreg      enum E16630
 16744 ;; Registers used:
 16745 ;;		wreg, status,2, cstack
 16746 ;; Tracked objects:
 16747 ;;		On entry : 0/0
 16748 ;;		On exit  : 0/0
 16749 ;;		Unchanged: 0/0
 16750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16755 ;;Total ram usage:        0 bytes
 16756 ;; Hardware stack levels used: 1
 16757 ;; Hardware stack levels required when called: 1
 16758 ;; This function calls:
 16759 ;;		_I2C1_MasterGetCounter
 16760 ;;		_I2C1_MasterSendTxData
 16761 ;;		_I2C1_MasterSetCounter
 16762 ;;		_I2C1_MasterStop
 16763 ;; This function is called by:
 16764 ;;		_I2C1_MasterFsm
 16765 ;; This function uses a non-reentrant model
 16766 ;;
 16767                           
 16768                           	psect	text91
 16769   00A81E                     __ptext91:
 16770                           	callstack 0
 16771   00A81E                     _I2C1_DO_SEND_STOP:
 16772                           	callstack 20
 16773   00A81E                     
 16774                           ;mcc_generated_files/i2c1_master.c: 523:     I2C1_MasterStop();
 16775   00A81E  ECAB  F052         	call	_I2C1_MasterStop	;wreg free
 16776   00A822                     
 16777                           ;mcc_generated_files/i2c1_master.c: 524:     if(I2C1_MasterGetCounter())
 16778   00A822  ECAE  F052         	call	_I2C1_MasterGetCounter	;wreg free
 16779   00A826  0900               	iorlw	0
 16780   00A828  B4D8               	btfsc	status,2,c
 16781   00A82A  EF19  F054         	goto	u7781
 16782   00A82E  EF1B  F054         	goto	u7780
 16783   00A832                     u7781:
 16784   00A832  EF21  F054         	goto	l8455
 16785   00A836                     u7780:
 16786   00A836                     
 16787                           ;mcc_generated_files/i2c1_master.c: 525:     {;mcc_generated_files/i2c1_master.c: 526:  
      +                                 I2C1_MasterSetCounter(0);
 16788   00A836  0E00               	movlw	0
 16789   00A838  ECD1  F052         	call	_I2C1_MasterSetCounter
 16790                           
 16791                           ;mcc_generated_files/i2c1_master.c: 527:         I2C1_MasterSendTxData(0);
 16792   00A83C  0E00               	movlw	0
 16793   00A83E  ECD6  F052         	call	_I2C1_MasterSendTxData
 16794   00A842                     l8455:
 16795                           
 16796                           ;mcc_generated_files/i2c1_master.c: 529:     return I2C1_IDLE;
 16797   00A842  0E00               	movlw	0
 16798   00A844  0012               	return		;funcret
 16799   00A846                     __end_of_I2C1_DO_SEND_STOP:
 16800                           	callstack 0
 16801                           
 16802 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 16803 ;; Defined at:
 16804 ;;		line 516 in file "mcc_generated_files/i2c1_master.c"
 16805 ;; Parameters:    Size  Location     Type
 16806 ;;		None
 16807 ;; Auto vars:     Size  Location     Type
 16808 ;;		None
 16809 ;; Return value:  Size  Location     Type
 16810 ;;                  1    wreg      enum E16630
 16811 ;; Registers used:
 16812 ;;		wreg
 16813 ;; Tracked objects:
 16814 ;;		On entry : 0/0
 16815 ;;		On exit  : 0/0
 16816 ;;		Unchanged: 0/0
 16817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16822 ;;Total ram usage:        0 bytes
 16823 ;; Hardware stack levels used: 1
 16824 ;; This function calls:
 16825 ;;		Nothing
 16826 ;; This function is called by:
 16827 ;;		_I2C1_DO_ADDRESS_NACK
 16828 ;;		_I2C1_MasterFsm
 16829 ;; This function uses a non-reentrant model
 16830 ;;
 16831                           
 16832                           	psect	text92
 16833   00A522                     __ptext92:
 16834                           	callstack 0
 16835   00A522                     _I2C1_DO_SEND_RESTART:
 16836                           	callstack 21
 16837   00A522                     
 16838                           ;mcc_generated_files/i2c1_master.c: 518:     return I2C1_SEND_ADR_READ;
 16839   00A522  0E01               	movlw	1
 16840   00A524  0012               	return		;funcret
 16841   00A526                     __end_of_I2C1_DO_SEND_RESTART:
 16842                           	callstack 0
 16843                           
 16844 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 16845 ;; Defined at:
 16846 ;;		line 510 in file "mcc_generated_files/i2c1_master.c"
 16847 ;; Parameters:    Size  Location     Type
 16848 ;;		None
 16849 ;; Auto vars:     Size  Location     Type
 16850 ;;		None
 16851 ;; Return value:  Size  Location     Type
 16852 ;;                  1    wreg      enum E16630
 16853 ;; Registers used:
 16854 ;;		wreg
 16855 ;; Tracked objects:
 16856 ;;		On entry : 0/0
 16857 ;;		On exit  : 0/0
 16858 ;;		Unchanged: 0/0
 16859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16864 ;;Total ram usage:        0 bytes
 16865 ;; Hardware stack levels used: 1
 16866 ;; This function calls:
 16867 ;;		Nothing
 16868 ;; This function is called by:
 16869 ;;		_I2C1_DO_TX
 16870 ;;		_I2C1_DO_BUS_COLLISION
 16871 ;;		_I2C1_MasterFsm
 16872 ;; This function uses a non-reentrant model
 16873 ;;
 16874                           
 16875                           	psect	text93
 16876   00A51E                     __ptext93:
 16877                           	callstack 0
 16878   00A51E                     _I2C1_DO_SEND_RESTART_WRITE:
 16879                           	callstack 20
 16880   00A51E                     
 16881                           ;mcc_generated_files/i2c1_master.c: 512:     return I2C1_SEND_ADR_WRITE;
 16882   00A51E  0E02               	movlw	2
 16883   00A520  0012               	return		;funcret
 16884   00A522                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 16885                           	callstack 0
 16886                           
 16887 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 16888 ;; Defined at:
 16889 ;;		line 504 in file "mcc_generated_files/i2c1_master.c"
 16890 ;; Parameters:    Size  Location     Type
 16891 ;;		None
 16892 ;; Auto vars:     Size  Location     Type
 16893 ;;		None
 16894 ;; Return value:  Size  Location     Type
 16895 ;;                  1    wreg      enum E16630
 16896 ;; Registers used:
 16897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16898 ;; Tracked objects:
 16899 ;;		On entry : 0/0
 16900 ;;		On exit  : 0/0
 16901 ;;		Unchanged: 0/0
 16902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16907 ;;Total ram usage:        0 bytes
 16908 ;; Hardware stack levels used: 1
 16909 ;; Hardware stack levels required when called: 5
 16910 ;; This function calls:
 16911 ;;		_I2C1_DO_SEND_ADR_READ
 16912 ;;		_I2C1_MasterSetCounter
 16913 ;; This function is called by:
 16914 ;;		_I2C1_DO_TX
 16915 ;;		_I2C1_DO_BUS_COLLISION
 16916 ;;		_I2C1_MasterFsm
 16917 ;; This function uses a non-reentrant model
 16918 ;;
 16919                           
 16920                           	psect	text94
 16921   00A5F6                     __ptext94:
 16922                           	callstack 0
 16923   00A5F6                     _I2C1_DO_SEND_RESTART_READ:
 16924                           	callstack 15
 16925   00A5F6                     
 16926                           ;mcc_generated_files/i2c1_master.c: 506:     I2C1_MasterSetCounter((uint8_t) I2C1_Status
      +                          .data_length);
 16927   00A5F6  0103               	movlb	3	; () banked
 16928   00A5F8  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 16929   00A5FA  ECD1  F052         	call	_I2C1_MasterSetCounter
 16930   00A5FE                     
 16931                           ;mcc_generated_files/i2c1_master.c: 507:     return I2C1_DO_SEND_ADR_READ();
 16932   00A5FE  ECBC  F054         	call	_I2C1_DO_SEND_ADR_READ	;wreg free
 16933   00A602  0012               	return		;funcret
 16934   00A604                     __end_of_I2C1_DO_SEND_RESTART_READ:
 16935                           	callstack 0
 16936                           
 16937 ;; *************** function _I2C1_DO_RX_EMPTY *****************
 16938 ;; Defined at:
 16939 ;;		line 479 in file "mcc_generated_files/i2c1_master.c"
 16940 ;; Parameters:    Size  Location     Type
 16941 ;;		None
 16942 ;; Auto vars:     Size  Location     Type
 16943 ;;		None
 16944 ;; Return value:  Size  Location     Type
 16945 ;;                  1    wreg      enum E16630
 16946 ;; Registers used:
 16947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 16948 ;; Tracked objects:
 16949 ;;		On entry : 0/0
 16950 ;;		On exit  : 0/0
 16951 ;;		Unchanged: 0/0
 16952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16957 ;;Total ram usage:        2 bytes
 16958 ;; Hardware stack levels used: 1
 16959 ;; Hardware stack levels required when called: 3
 16960 ;; This function calls:
 16961 ;;		NULL
 16962 ;;		_I2C1_CallbackReturnReset
 16963 ;;		_I2C1_CallbackReturnStop
 16964 ;;		_I2C1_MasterDisableRestart
 16965 ;;		_I2C1_MasterEnableRestart
 16966 ;;		_I2C1_MasterSetCounter
 16967 ;;		_rd1RegCompleteHandler
 16968 ;;		_rd2RegCompleteHandler
 16969 ;;		_rdBlkRegCompleteHandler
 16970 ;;		_wr1RegCompleteHandler
 16971 ;;		_wr2RegCompleteHandler
 16972 ;; This function is called by:
 16973 ;;		_I2C1_DO_SEND_ADR_READ
 16974 ;;		_I2C1_DO_RX
 16975 ;;		_I2C1_MasterFsm
 16976 ;; This function uses a non-reentrant model
 16977 ;;
 16978                           
 16979                           	psect	text95
 16980   00B7E6                     __ptext95:
 16981                           	callstack 0
 16982   00B7E6                     _I2C1_DO_RX_EMPTY:
 16983                           	callstack 15
 16984   00B7E6                     
 16985                           ;mcc_generated_files/i2c1_master.c: 481:     I2C1_Status.bufferFree = 1;
 16986   00B7E6  0103               	movlb	3	; () banked
 16987   00B7E8  8923               	bsf	(_I2C1_Status+35)& (0+255),4,b
 16988                           
 16989                           ;mcc_generated_files/i2c1_master.c: 482:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 16990   00B7EA  EF17  F05C         	goto	l8207
 16991   00B7EE                     l8179:
 16992                           
 16993                           ;mcc_generated_files/i2c1_master.c: 485:             I2C1_MasterEnableRestart();
 16994   00B7EE  EC9F  F052         	call	_I2C1_MasterEnableRestart	;wreg free
 16995   00B7F2                     
 16996                           ;mcc_generated_files/i2c1_master.c: 486:             return I2C1_SEND_RESTART_WRITE;
 16997   00B7F2  0E08               	movlw	8
 16998   00B7F4  EF43  F05C         	goto	l486
 16999   00B7F8                     l8185:
 17000                           
 17001                           ;mcc_generated_files/i2c1_master.c: 488:             I2C1_MasterEnableRestart();
 17002   00B7F8  EC9F  F052         	call	_I2C1_MasterEnableRestart	;wreg free
 17003   00B7FC                     
 17004                           ;mcc_generated_files/i2c1_master.c: 489:             return I2C1_SEND_RESTART_READ;
 17005   00B7FC  0E07               	movlw	7
 17006   00B7FE  EF43  F05C         	goto	l486
 17007   00B802                     l8191:
 17008                           
 17009                           ;mcc_generated_files/i2c1_master.c: 492:             I2C1_MasterSetCounter((uint8_t) (I2
      +                          C1_Status.data_length + 1));
 17010   00B802  0103               	movlb	3	; () banked
 17011   00B804  291F               	incf	(_I2C1_Status+31)& (0+255),w,b
 17012   00B806  ECD1  F052         	call	_I2C1_MasterSetCounter
 17013   00B80A                     
 17014                           ;mcc_generated_files/i2c1_master.c: 493:             return I2C1_RX;
 17015   00B80A  0E04               	movlw	4
 17016   00B80C  EF43  F05C         	goto	l486
 17017   00B810                     l8197:
 17018                           
 17019                           ;mcc_generated_files/i2c1_master.c: 496:             if(I2C1_Status.state != I2C1_SEND_R
      +                          ESTART_READ)
 17020   00B810  0E07               	movlw	7
 17021   00B812  0103               	movlb	3	; () banked
 17022   00B814  1921               	xorwf	(_I2C1_Status+33)& (0+255),w,b
 17023   00B816  B4D8               	btfsc	status,2,c
 17024   00B818  EF10  F05C         	goto	u7561
 17025   00B81C  EF12  F05C         	goto	u7560
 17026   00B820                     u7561:
 17027   00B820  EF14  F05C         	goto	l8201
 17028   00B824                     u7560:
 17029   00B824                     
 17030                           ; BSR set to: 3
 17031                           ;mcc_generated_files/i2c1_master.c: 497:             {;mcc_generated_files/i2c1_master.c
      +                          : 498:                 I2C1_MasterDisableRestart();
 17032   00B824  EC9C  F052         	call	_I2C1_MasterDisableRestart	;wreg free
 17033   00B828                     l8201:
 17034                           
 17035                           ;mcc_generated_files/i2c1_master.c: 500:             return I2C1_RESET;
 17036   00B828  0E0F               	movlw	15
 17037   00B82A  EF43  F05C         	goto	l486
 17038   00B82E                     l8207:
 17039                           
 17040                           ; BSR set to: 3
 17041   00B82E  C30C  F00A         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 17042   00B832  C30D  F00B         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 17043   00B836  D802               	call	u7578
 17044   00B838  EF27  F05C         	goto	u7579
 17045   00B83C                     u7578:
 17046   00B83C  0005               	push	
 17047   00B83E  6EFA               	movwf	pclath,c
 17048   00B840  5100               	movf	_I2C1_Status& (0+255),w,b
 17049   00B842  6EFD               	movwf	tosl,c
 17050   00B844  5101               	movf	(_I2C1_Status+1)& (0+255),w,b
 17051   00B846  6EFE               	movwf	tosh,c
 17052   00B848  6AFF               	clrf	tosu,c
 17053   00B84A  50FA               	movf	pclath,w,c
 17054   00B84C  0012               	return		;indir
 17055   00B84E                     u7579:
 17056   00B84E  6E0D               	movwf	??_I2C1_DO_RX_EMPTY^0,c
 17057   00B850  6A0E               	clrf	(??_I2C1_DO_RX_EMPTY+1)^0,c
 17058                           
 17059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17060                           ; Switch size 1, requested type "simple"
 17061                           ; Number of cases is 1, Range of values is 0 to 0
 17062                           ; switch strategies available:
 17063                           ; Name         Instructions Cycles
 17064                           ; simple_byte            4     3 (average)
 17065                           ;	Chosen strategy is simple_byte
 17066   00B852  500E               	movf	(??_I2C1_DO_RX_EMPTY+1)^0,w,c
 17067   00B854  0A00               	xorlw	0	; case 0
 17068   00B856  B4D8               	btfsc	status,2,c
 17069   00B858  EF30  F05C         	goto	l11181
 17070   00B85C  EF08  F05C         	goto	l8197
 17071   00B860                     l11181:
 17072                           
 17073                           ; Switch size 1, requested type "simple"
 17074                           ; Number of cases is 4, Range of values is 1 to 4
 17075                           ; switch strategies available:
 17076                           ; Name         Instructions Cycles
 17077                           ; simple_byte           13     7 (average)
 17078                           ;	Chosen strategy is simple_byte
 17079   00B860  500D               	movf	??_I2C1_DO_RX_EMPTY^0,w,c
 17080   00B862  0A01               	xorlw	1	; case 1
 17081   00B864  B4D8               	btfsc	status,2,c
 17082   00B866  EF08  F05C         	goto	l8197
 17083   00B86A  0A03               	xorlw	3	; case 2
 17084   00B86C  B4D8               	btfsc	status,2,c
 17085   00B86E  EFFC  F05B         	goto	l8185
 17086   00B872  0A01               	xorlw	1	; case 3
 17087   00B874  B4D8               	btfsc	status,2,c
 17088   00B876  EFF7  F05B         	goto	l8179
 17089   00B87A  0A07               	xorlw	7	; case 4
 17090   00B87C  B4D8               	btfsc	status,2,c
 17091   00B87E  EF01  F05C         	goto	l8191
 17092   00B882  EF08  F05C         	goto	l8197
 17093   00B886                     l486:
 17094   00B886  0012               	return		;funcret
 17095   00B888                     __end_of_I2C1_DO_RX_EMPTY:
 17096                           	callstack 0
 17097                           
 17098 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 17099 ;; Defined at:
 17100 ;;		line 460 in file "mcc_generated_files/i2c1_master.c"
 17101 ;; Parameters:    Size  Location     Type
 17102 ;;		None
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;		None
 17105 ;; Return value:  Size  Location     Type
 17106 ;;                  1    wreg      enum E16630
 17107 ;; Registers used:
 17108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17109 ;; Tracked objects:
 17110 ;;		On entry : 0/0
 17111 ;;		On exit  : 0/0
 17112 ;;		Unchanged: 0/0
 17113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17118 ;;Total ram usage:        2 bytes
 17119 ;; Hardware stack levels used: 1
 17120 ;; Hardware stack levels required when called: 3
 17121 ;; This function calls:
 17122 ;;		NULL
 17123 ;;		_I2C1_CallbackReturnReset
 17124 ;;		_I2C1_CallbackReturnStop
 17125 ;;		_I2C1_MasterDisableRestart
 17126 ;;		_I2C1_MasterEnableRestart
 17127 ;;		_I2C1_MasterSetCounter
 17128 ;;		_rd1RegCompleteHandler
 17129 ;;		_rd2RegCompleteHandler
 17130 ;;		_rdBlkRegCompleteHandler
 17131 ;;		_wr1RegCompleteHandler
 17132 ;;		_wr2RegCompleteHandler
 17133 ;; This function is called by:
 17134 ;;		_I2C1_DO_TX
 17135 ;;		_I2C1_MasterFsm
 17136 ;; This function uses a non-reentrant model
 17137 ;;
 17138                           
 17139                           	psect	text96
 17140   00B498                     __ptext96:
 17141                           	callstack 0
 17142   00B498                     _I2C1_DO_TX_EMPTY:
 17143                           	callstack 18
 17144   00B498                     
 17145                           ;mcc_generated_files/i2c1_master.c: 462:     I2C1_Status.bufferFree = 1;
 17146   00B498  0103               	movlb	3	; () banked
 17147   00B49A  8923               	bsf	(_I2C1_Status+35)& (0+255),4,b
 17148                           
 17149                           ;mcc_generated_files/i2c1_master.c: 463:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 17150   00B49C  EF61  F05A         	goto	l8303
 17151   00B4A0                     l8283:
 17152                           
 17153                           ;mcc_generated_files/i2c1_master.c: 466:             I2C1_MasterEnableRestart();
 17154   00B4A0  EC9F  F052         	call	_I2C1_MasterEnableRestart	;wreg free
 17155   00B4A4                     
 17156                           ;mcc_generated_files/i2c1_master.c: 467:             return I2C1_SEND_RESTART_READ;
 17157   00B4A4  0E07               	movlw	7
 17158   00B4A6  EF89  F05A         	goto	l477
 17159   00B4AA                     l8289:
 17160                           
 17161                           ;mcc_generated_files/i2c1_master.c: 470:             I2C1_MasterSetCounter((uint8_t) I2C
      +                          1_Status.data_length + 1);
 17162   00B4AA  0103               	movlb	3	; () banked
 17163   00B4AC  291F               	incf	(_I2C1_Status+31)& (0+255),w,b
 17164   00B4AE  ECD1  F052         	call	_I2C1_MasterSetCounter
 17165   00B4B2                     
 17166                           ;mcc_generated_files/i2c1_master.c: 471:             return I2C1_TX;
 17167   00B4B2  0E03               	movlw	3
 17168   00B4B4  EF89  F05A         	goto	l477
 17169   00B4B8                     l8295:
 17170                           
 17171                           ;mcc_generated_files/i2c1_master.c: 474:             I2C1_MasterDisableRestart();
 17172   00B4B8  EC9C  F052         	call	_I2C1_MasterDisableRestart	;wreg free
 17173   00B4BC                     
 17174                           ;mcc_generated_files/i2c1_master.c: 475:             return I2C1_SEND_STOP;
 17175   00B4BC  0E0A               	movlw	10
 17176   00B4BE  EF89  F05A         	goto	l477
 17177   00B4C2                     l8303:
 17178                           
 17179                           ; BSR set to: 3
 17180   00B4C2  C30C  F00A         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 17181   00B4C6  C30D  F00B         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 17182   00B4CA  D802               	call	u7658
 17183   00B4CC  EF71  F05A         	goto	u7659
 17184   00B4D0                     u7658:
 17185   00B4D0  0005               	push	
 17186   00B4D2  6EFA               	movwf	pclath,c
 17187   00B4D4  5100               	movf	_I2C1_Status& (0+255),w,b
 17188   00B4D6  6EFD               	movwf	tosl,c
 17189   00B4D8  5101               	movf	(_I2C1_Status+1)& (0+255),w,b
 17190   00B4DA  6EFE               	movwf	tosh,c
 17191   00B4DC  6AFF               	clrf	tosu,c
 17192   00B4DE  50FA               	movf	pclath,w,c
 17193   00B4E0  0012               	return		;indir
 17194   00B4E2                     u7659:
 17195   00B4E2  6E0D               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 17196   00B4E4  6A0E               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 17197                           
 17198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17199                           ; Switch size 1, requested type "simple"
 17200                           ; Number of cases is 1, Range of values is 0 to 0
 17201                           ; switch strategies available:
 17202                           ; Name         Instructions Cycles
 17203                           ; simple_byte            4     3 (average)
 17204                           ;	Chosen strategy is simple_byte
 17205   00B4E6  500E               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 17206   00B4E8  0A00               	xorlw	0	; case 0
 17207   00B4EA  B4D8               	btfsc	status,2,c
 17208   00B4EC  EF7A  F05A         	goto	l11183
 17209   00B4F0  EF5C  F05A         	goto	l8295
 17210   00B4F4                     l11183:
 17211                           
 17212                           ; Switch size 1, requested type "simple"
 17213                           ; Number of cases is 3, Range of values is 1 to 4
 17214                           ; switch strategies available:
 17215                           ; Name         Instructions Cycles
 17216                           ; simple_byte           10     6 (average)
 17217                           ;	Chosen strategy is simple_byte
 17218   00B4F4  500D               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 17219   00B4F6  0A01               	xorlw	1	; case 1
 17220   00B4F8  B4D8               	btfsc	status,2,c
 17221   00B4FA  EF5C  F05A         	goto	l8295
 17222   00B4FE  0A03               	xorlw	3	; case 2
 17223   00B500  B4D8               	btfsc	status,2,c
 17224   00B502  EF50  F05A         	goto	l8283
 17225   00B506  0A06               	xorlw	6	; case 4
 17226   00B508  B4D8               	btfsc	status,2,c
 17227   00B50A  EF55  F05A         	goto	l8289
 17228   00B50E  EF5C  F05A         	goto	l8295
 17229   00B512                     l477:
 17230   00B512  0012               	return		;funcret
 17231   00B514                     __end_of_I2C1_DO_TX_EMPTY:
 17232                           	callstack 0
 17233                           
 17234 ;; *************** function _I2C1_DO_RX *****************
 17235 ;; Defined at:
 17236 ;;		line 436 in file "mcc_generated_files/i2c1_master.c"
 17237 ;; Parameters:    Size  Location     Type
 17238 ;;		None
 17239 ;; Auto vars:     Size  Location     Type
 17240 ;;  retFsmState     1   16[COMRAM] enum E16630
 17241 ;; Return value:  Size  Location     Type
 17242 ;;                  1    wreg      enum E16630
 17243 ;; Registers used:
 17244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17245 ;; Tracked objects:
 17246 ;;		On entry : 0/0
 17247 ;;		On exit  : 0/0
 17248 ;;		Unchanged: 0/0
 17249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17253 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17254 ;;Total ram usage:        3 bytes
 17255 ;; Hardware stack levels used: 1
 17256 ;; Hardware stack levels required when called: 4
 17257 ;; This function calls:
 17258 ;;		_I2C1_DO_RX_EMPTY
 17259 ;;		_I2C1_MasterGetRxData
 17260 ;;		_I2C1_MasterIsRxBufFull
 17261 ;; This function is called by:
 17262 ;;		_I2C1_MasterFsm
 17263 ;; This function uses a non-reentrant model
 17264 ;;
 17265                           
 17266                           	psect	text97
 17267   00B6AA                     __ptext97:
 17268                           	callstack 0
 17269   00B6AA                     _I2C1_DO_RX:
 17270                           	callstack 17
 17271   00B6AA                     
 17272                           ;mcc_generated_files/i2c1_master.c: 438:     if(!I2C1_MasterIsRxBufFull())
 17273   00B6AA  EC42  F053         	call	_I2C1_MasterIsRxBufFull	;wreg free
 17274   00B6AE  0900               	iorlw	0
 17275   00B6B0  A4D8               	btfss	status,2,c
 17276   00B6B2  EF5D  F05B         	goto	u7751
 17277   00B6B6  EF5F  F05B         	goto	u7750
 17278   00B6BA                     u7751:
 17279   00B6BA  EF62  F05B         	goto	l8425
 17280   00B6BE                     u7750:
 17281   00B6BE                     l8421:
 17282                           
 17283                           ;mcc_generated_files/i2c1_master.c: 439:     {;mcc_generated_files/i2c1_master.c: 440:  
      +                                 return I2C1_RX;
 17284   00B6BE  0E04               	movlw	4
 17285   00B6C0  EFA3  F05B         	goto	l469
 17286   00B6C4                     l8425:
 17287                           
 17288                           ;mcc_generated_files/i2c1_master.c: 442:     if(I2C1_Status.addressNackCheck)
 17289   00B6C4  0103               	movlb	3	; () banked
 17290   00B6C6  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 17291   00B6C8  0B03               	andlw	3
 17292   00B6CA  0900               	iorlw	0
 17293   00B6CC  B4D8               	btfsc	status,2,c
 17294   00B6CE  EF6B  F05B         	goto	u7761
 17295   00B6D2  EF6D  F05B         	goto	u7760
 17296   00B6D6                     u7761:
 17297   00B6D6  EF79  F05B         	goto	l470
 17298   00B6DA                     u7760:
 17299   00B6DA                     
 17300                           ; BSR set to: 3
 17301                           ;mcc_generated_files/i2c1_master.c: 443:     {;mcc_generated_files/i2c1_master.c: 444:  
      +                                 I2C1_Status.addressNackCheck--;
 17302   00B6DA  0E01               	movlw	1
 17303   00B6DC  6E0F               	movwf	??_I2C1_DO_RX^0,c
 17304   00B6DE  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 17305   00B6E0  0B03               	andlw	3
 17306   00B6E2  6E10               	movwf	(??_I2C1_DO_RX+1)^0,c
 17307   00B6E4  500F               	movf	??_I2C1_DO_RX^0,w,c
 17308   00B6E6  5E10               	subwf	(??_I2C1_DO_RX+1)^0,f,c
 17309   00B6E8  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 17310   00B6EA  1810               	xorwf	(??_I2C1_DO_RX+1)^0,w,c
 17311   00B6EC  0BFC               	andlw	-4
 17312   00B6EE  1810               	xorwf	(??_I2C1_DO_RX+1)^0,w,c
 17313   00B6F0  6F23               	movwf	(_I2C1_Status+35)& (0+255),b
 17314   00B6F2                     l470:
 17315                           
 17316                           ; BSR set to: 3
 17317                           ;mcc_generated_files/i2c1_master.c: 447:     if(--I2C1_Status.data_length)
 17318   00B6F2  071F               	decf	(_I2C1_Status+31)& (0+255),f,b
 17319   00B6F4  A0D8               	btfss	status,0,c
 17320   00B6F6  0720               	decf	(_I2C1_Status+32)& (0+255),f,b
 17321   00B6F8  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 17322   00B6FA  1120               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 17323   00B6FC  B4D8               	btfsc	status,2,c
 17324   00B6FE  EF83  F05B         	goto	u7771
 17325   00B702  EF85  F05B         	goto	u7770
 17326   00B706                     u7771:
 17327   00B706  EF93  F05B         	goto	l8439
 17328   00B70A                     u7770:
 17329   00B70A                     
 17330                           ; BSR set to: 3
 17331                           ;mcc_generated_files/i2c1_master.c: 448:     {;mcc_generated_files/i2c1_master.c: 449:  
      +                                 *I2C1_Status.data_ptr++ = I2C1_MasterGetRxData();
 17332   00B70A  ECA2  F052         	call	_I2C1_MasterGetRxData	;wreg free
 17333   00B70E  0060  FC77  FFD9   	movff	_I2C1_Status+29,fsr2l
 17334   00B714  0060  FC7B  FFDA   	movff	_I2C1_Status+30,fsr2h
 17335   00B71A  6EDF               	movwf	indf2,c
 17336   00B71C  0103               	movlb	3	; () banked
 17337   00B71E  4B1D               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 17338   00B720  2B1E               	incf	(_I2C1_Status+30)& (0+255),f,b
 17339   00B722  EF5F  F05B         	goto	l8421
 17340   00B726                     l8439:
 17341                           
 17342                           ; BSR set to: 3
 17343                           ;mcc_generated_files/i2c1_master.c: 453:     {;mcc_generated_files/i2c1_master.c: 454:  
      +                                 i2c1_fsm_states_t retFsmState = I2C1_DO_RX_EMPTY();
 17344   00B726  ECF3  F05B         	call	_I2C1_DO_RX_EMPTY	;wreg free
 17345   00B72A  6E11               	movwf	I2C1_DO_RX@retFsmState^0,c
 17346   00B72C                     
 17347                           ;mcc_generated_files/i2c1_master.c: 455:         *I2C1_Status.data_ptr++ = I2C1_MasterGe
      +                          tRxData();
 17348   00B72C  ECA2  F052         	call	_I2C1_MasterGetRxData	;wreg free
 17349   00B730  0060  FC77  FFD9   	movff	_I2C1_Status+29,fsr2l
 17350   00B736  0060  FC7B  FFDA   	movff	_I2C1_Status+30,fsr2h
 17351   00B73C  6EDF               	movwf	indf2,c
 17352   00B73E  0103               	movlb	3	; () banked
 17353   00B740  4B1D               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 17354   00B742  2B1E               	incf	(_I2C1_Status+30)& (0+255),f,b
 17355   00B744                     
 17356                           ; BSR set to: 3
 17357                           ;mcc_generated_files/i2c1_master.c: 456:         return retFsmState;
 17358   00B744  5011               	movf	I2C1_DO_RX@retFsmState^0,w,c
 17359   00B746                     l469:
 17360   00B746  0012               	return		;funcret
 17361   00B748                     __end_of_I2C1_DO_RX:
 17362                           	callstack 0
 17363                           
 17364 ;; *************** function _I2C1_DO_TX *****************
 17365 ;; Defined at:
 17366 ;;		line 403 in file "mcc_generated_files/i2c1_master.c"
 17367 ;; Parameters:    Size  Location     Type
 17368 ;;		None
 17369 ;; Auto vars:     Size  Location     Type
 17370 ;;  retFsmState     1   15[COMRAM] enum E16630
 17371 ;;  dataTx          1   14[COMRAM] unsigned char 
 17372 ;; Return value:  Size  Location     Type
 17373 ;;                  1    wreg      enum E16630
 17374 ;; Registers used:
 17375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17376 ;; Tracked objects:
 17377 ;;		On entry : 0/0
 17378 ;;		On exit  : 0/0
 17379 ;;		Unchanged: 0/0
 17380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17382 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17384 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17385 ;;Total ram usage:        6 bytes
 17386 ;; Hardware stack levels used: 1
 17387 ;; Hardware stack levels required when called: 6
 17388 ;; This function calls:
 17389 ;;		NULL
 17390 ;;		_I2C1_CallbackReturnReset
 17391 ;;		_I2C1_CallbackReturnStop
 17392 ;;		_I2C1_DO_SEND_RESTART_READ
 17393 ;;		_I2C1_DO_SEND_RESTART_WRITE
 17394 ;;		_I2C1_DO_TX_EMPTY
 17395 ;;		_I2C1_MasterIsNack
 17396 ;;		_I2C1_MasterIsTxBufEmpty
 17397 ;;		_I2C1_MasterSendTxData
 17398 ;;		_rd1RegCompleteHandler
 17399 ;;		_rd2RegCompleteHandler
 17400 ;;		_rdBlkRegCompleteHandler
 17401 ;;		_wr1RegCompleteHandler
 17402 ;;		_wr2RegCompleteHandler
 17403 ;; This function is called by:
 17404 ;;		_I2C1_MasterFsm
 17405 ;; This function uses a non-reentrant model
 17406 ;;
 17407                           
 17408                           	psect	text98
 17409   00C3F2                     __ptext98:
 17410                           	callstack 0
 17411   00C3F2                     _I2C1_DO_TX:
 17412                           	callstack 15
 17413   00C3F2                     
 17414                           ;mcc_generated_files/i2c1_master.c: 405:     if(I2C1_MasterIsNack())
 17415   00C3F2  EC4D  F053         	call	_I2C1_MasterIsNack	;wreg free
 17416   00C3F6  0900               	iorlw	0
 17417   00C3F8  B4D8               	btfsc	status,2,c
 17418   00C3FA  EF01  F062         	goto	u7701
 17419   00C3FE  EF03  F062         	goto	u7700
 17420   00C402                     u7701:
 17421   00C402  EF3D  F062         	goto	l8385
 17422   00C406                     u7700:
 17423   00C406  EF10  F062         	goto	l8383
 17424   00C40A                     l8369:
 17425                           
 17426                           ;mcc_generated_files/i2c1_master.c: 410:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 17427   00C40A  ECFB  F052         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 17428   00C40E  EF89  F062         	goto	l452
 17429   00C412                     l8373:
 17430                           
 17431                           ;mcc_generated_files/i2c1_master.c: 412:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 17432   00C412  EC8F  F052         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 17433   00C416  EF89  F062         	goto	l452
 17434   00C41A                     l8377:
 17435                           
 17436                           ;mcc_generated_files/i2c1_master.c: 416:                 return I2C1_IDLE;
 17437   00C41A  0E00               	movlw	0
 17438   00C41C  EF89  F062         	goto	l452
 17439   00C420                     l8383:
 17440   00C420  C312  F00A         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 17441   00C424  C313  F00B         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 17442   00C428  D802               	call	u7718
 17443   00C42A  EF21  F062         	goto	u7719
 17444   00C42E                     u7718:
 17445   00C42E  0005               	push	
 17446   00C430  6EFA               	movwf	pclath,c
 17447   00C432  0103               	movlb	3	; () banked
 17448   00C434  5106               	movf	(_I2C1_Status+6)& (0+255),w,b
 17449   00C436  6EFD               	movwf	tosl,c
 17450   00C438  5107               	movf	(_I2C1_Status+7)& (0+255),w,b
 17451   00C43A  6EFE               	movwf	tosh,c
 17452   00C43C  6AFF               	clrf	tosu,c
 17453   00C43E  50FA               	movf	pclath,w,c
 17454   00C440  0012               	return		;indir
 17455   00C442                     u7719:
 17456   00C442  6E0D               	movwf	??_I2C1_DO_TX^0,c
 17457   00C444  6A0E               	clrf	(??_I2C1_DO_TX+1)^0,c
 17458                           
 17459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17460                           ; Switch size 1, requested type "simple"
 17461                           ; Number of cases is 1, Range of values is 0 to 0
 17462                           ; switch strategies available:
 17463                           ; Name         Instructions Cycles
 17464                           ; simple_byte            4     3 (average)
 17465                           ;	Chosen strategy is simple_byte
 17466   00C446  500E               	movf	(??_I2C1_DO_TX+1)^0,w,c
 17467   00C448  0A00               	xorlw	0	; case 0
 17468   00C44A  B4D8               	btfsc	status,2,c
 17469   00C44C  EF2A  F062         	goto	l11185
 17470   00C450  EF0D  F062         	goto	l8377
 17471   00C454                     l11185:
 17472                           
 17473                           ; Switch size 1, requested type "simple"
 17474                           ; Number of cases is 4, Range of values is 1 to 4
 17475                           ; switch strategies available:
 17476                           ; Name         Instructions Cycles
 17477                           ; simple_byte           13     7 (average)
 17478                           ;	Chosen strategy is simple_byte
 17479   00C454  500D               	movf	??_I2C1_DO_TX^0,w,c
 17480   00C456  0A01               	xorlw	1	; case 1
 17481   00C458  B4D8               	btfsc	status,2,c
 17482   00C45A  EF0D  F062         	goto	l8377
 17483   00C45E  0A03               	xorlw	3	; case 2
 17484   00C460  B4D8               	btfsc	status,2,c
 17485   00C462  EF05  F062         	goto	l8369
 17486   00C466  0A01               	xorlw	1	; case 3
 17487   00C468  B4D8               	btfsc	status,2,c
 17488   00C46A  EF09  F062         	goto	l8373
 17489   00C46E  0A07               	xorlw	7	; case 4
 17490   00C470  B4D8               	btfsc	status,2,c
 17491   00C472  EF0D  F062         	goto	l8377
 17492   00C476  EF0D  F062         	goto	l8377
 17493   00C47A                     l8385:
 17494   00C47A  EC58  F053         	call	_I2C1_MasterIsTxBufEmpty	;wreg free
 17495   00C47E  0900               	iorlw	0
 17496   00C480  B4D8               	btfsc	status,2,c
 17497   00C482  EF45  F062         	goto	u7721
 17498   00C486  EF47  F062         	goto	u7720
 17499   00C48A                     u7721:
 17500   00C48A  EF88  F062         	goto	l8411
 17501   00C48E                     u7720:
 17502   00C48E                     
 17503                           ;mcc_generated_files/i2c1_master.c: 420:     {;mcc_generated_files/i2c1_master.c: 421:  
      +                                 if(I2C1_Status.addressNackCheck)
 17504   00C48E  0103               	movlb	3	; () banked
 17505   00C490  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 17506   00C492  0B03               	andlw	3
 17507   00C494  0900               	iorlw	0
 17508   00C496  B4D8               	btfsc	status,2,c
 17509   00C498  EF50  F062         	goto	u7731
 17510   00C49C  EF52  F062         	goto	u7730
 17511   00C4A0                     u7731:
 17512   00C4A0  EF5E  F062         	goto	l8391
 17513   00C4A4                     u7730:
 17514   00C4A4                     
 17515                           ; BSR set to: 3
 17516                           ;mcc_generated_files/i2c1_master.c: 422:         {;mcc_generated_files/i2c1_master.c: 42
      +                          3:             I2C1_Status.addressNackCheck--;
 17517   00C4A4  0E01               	movlw	1
 17518   00C4A6  6E0D               	movwf	??_I2C1_DO_TX^0,c
 17519   00C4A8  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 17520   00C4AA  0B03               	andlw	3
 17521   00C4AC  6E0E               	movwf	(??_I2C1_DO_TX+1)^0,c
 17522   00C4AE  500D               	movf	??_I2C1_DO_TX^0,w,c
 17523   00C4B0  5E0E               	subwf	(??_I2C1_DO_TX+1)^0,f,c
 17524   00C4B2  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 17525   00C4B4  180E               	xorwf	(??_I2C1_DO_TX+1)^0,w,c
 17526   00C4B6  0BFC               	andlw	-4
 17527   00C4B8  180E               	xorwf	(??_I2C1_DO_TX+1)^0,w,c
 17528   00C4BA  6F23               	movwf	(_I2C1_Status+35)& (0+255),b
 17529   00C4BC                     l8391:
 17530                           
 17531                           ; BSR set to: 3
 17532                           ;mcc_generated_files/i2c1_master.c: 425:         uint8_t dataTx = *I2C1_Status.data_ptr+
      +                          +;
 17533   00C4BC  0060  FC77  FFD9   	movff	_I2C1_Status+29,fsr2l
 17534   00C4C2  0060  FC7B  FFDA   	movff	_I2C1_Status+30,fsr2h
 17535   00C4C8  50DF               	movf	indf2,w,c
 17536   00C4CA  6E0F               	movwf	I2C1_DO_TX@dataTx^0,c
 17537   00C4CC                     
 17538                           ; BSR set to: 3
 17539   00C4CC  4B1D               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 17540   00C4CE  2B1E               	incf	(_I2C1_Status+30)& (0+255),f,b
 17541   00C4D0                     
 17542                           ; BSR set to: 3
 17543                           ;mcc_generated_files/i2c1_master.c: 426:         i2c1_fsm_states_t retFsmState = (--I2C1
      +                          _Status.data_length)?I2C1_TX:I2C1_DO_TX_EMPTY();
 17544   00C4D0  071F               	decf	(_I2C1_Status+31)& (0+255),f,b
 17545   00C4D2  A0D8               	btfss	status,0,c
 17546   00C4D4  0720               	decf	(_I2C1_Status+32)& (0+255),f,b
 17547   00C4D6  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 17548   00C4D8  1120               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 17549   00C4DA  A4D8               	btfss	status,2,c
 17550   00C4DC  EF72  F062         	goto	u7741
 17551   00C4E0  EF74  F062         	goto	u7740
 17552   00C4E4                     u7741:
 17553   00C4E4  EF7C  F062         	goto	l8399
 17554   00C4E8                     u7740:
 17555   00C4E8                     
 17556                           ; BSR set to: 3
 17557   00C4E8  EC4C  F05A         	call	_I2C1_DO_TX_EMPTY	;wreg free
 17558   00C4EC  6E0D               	movwf	??_I2C1_DO_TX^0,c
 17559   00C4EE  500D               	movf	??_I2C1_DO_TX^0,w,c
 17560   00C4F0  6E11               	movwf	_I2C1_DO_TX$1073^0,c
 17561   00C4F2  6A12               	clrf	(_I2C1_DO_TX$1073+1)^0,c
 17562   00C4F4  EF80  F062         	goto	l8401
 17563   00C4F8                     l8399:
 17564                           
 17565                           ; BSR set to: 3
 17566   00C4F8  0E00               	movlw	0
 17567   00C4FA  6E12               	movwf	(_I2C1_DO_TX$1073+1)^0,c
 17568   00C4FC  0E03               	movlw	3
 17569   00C4FE  6E11               	movwf	_I2C1_DO_TX$1073^0,c
 17570   00C500                     l8401:
 17571   00C500  C011  F010         	movff	_I2C1_DO_TX$1073,I2C1_DO_TX@retFsmState
 17572   00C504                     
 17573                           ;mcc_generated_files/i2c1_master.c: 427:         I2C1_MasterSendTxData(dataTx);
 17574   00C504  500F               	movf	I2C1_DO_TX@dataTx^0,w,c
 17575   00C506  ECD6  F052         	call	_I2C1_MasterSendTxData
 17576   00C50A                     
 17577                           ;mcc_generated_files/i2c1_master.c: 428:         return retFsmState;
 17578   00C50A  5010               	movf	I2C1_DO_TX@retFsmState^0,w,c
 17579   00C50C  EF89  F062         	goto	l452
 17580   00C510                     l8411:
 17581                           
 17582                           ;mcc_generated_files/i2c1_master.c: 431:     {;mcc_generated_files/i2c1_master.c: 432:  
      +                                 return I2C1_TX;
 17583   00C510  0E03               	movlw	3
 17584   00C512                     l452:
 17585   00C512  0012               	return		;funcret
 17586   00C514                     __end_of_I2C1_DO_TX:
 17587                           	callstack 0
 17588                           
 17589 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 17590 ;; Defined at:
 17591 ;;		line 396 in file "mcc_generated_files/i2c1_master.c"
 17592 ;; Parameters:    Size  Location     Type
 17593 ;;		None
 17594 ;; Auto vars:     Size  Location     Type
 17595 ;;		None
 17596 ;; Return value:  Size  Location     Type
 17597 ;;                  1    wreg      enum E16630
 17598 ;; Registers used:
 17599 ;;		wreg, status,2, status,0, cstack
 17600 ;; Tracked objects:
 17601 ;;		On entry : 0/0
 17602 ;;		On exit  : 0/0
 17603 ;;		Unchanged: 0/0
 17604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17609 ;;Total ram usage:        0 bytes
 17610 ;; Hardware stack levels used: 1
 17611 ;; Hardware stack levels required when called: 1
 17612 ;; This function calls:
 17613 ;;		_I2C1_MasterSendTxData
 17614 ;; This function is called by:
 17615 ;;		_I2C1_MasterOperation
 17616 ;;		_I2C1_MasterFsm
 17617 ;; This function uses a non-reentrant model
 17618 ;;
 17619                           
 17620                           	psect	text99
 17621   00A6C6                     __ptext99:
 17622                           	callstack 0
 17623   00A6C6                     _I2C1_DO_SEND_ADR_WRITE:
 17624                           	callstack 20
 17625   00A6C6                     
 17626                           ;mcc_generated_files/i2c1_master.c: 398:     I2C1_Status.addressNackCheck = 2;
 17627   00A6C6  0103               	movlb	3	; () banked
 17628   00A6C8  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 17629   00A6CA  0BFC               	andlw	-4
 17630   00A6CC  0902               	iorlw	2
 17631   00A6CE  6F23               	movwf	(_I2C1_Status+35)& (0+255),b
 17632   00A6D0                     
 17633                           ; BSR set to: 3
 17634                           ;mcc_generated_files/i2c1_master.c: 399:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 17635   00A6D0  511C               	movf	(_I2C1_Status+28)& (0+255),w,b
 17636   00A6D2  251C               	addwf	(_I2C1_Status+28)& (0+255),w,b
 17637   00A6D4  ECD6  F052         	call	_I2C1_MasterSendTxData
 17638   00A6D8                     
 17639                           ;mcc_generated_files/i2c1_master.c: 400:     return I2C1_TX;
 17640   00A6D8  0E03               	movlw	3
 17641   00A6DA  0012               	return		;funcret
 17642   00A6DC                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 17643                           	callstack 0
 17644                           
 17645 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 17646 ;; Defined at:
 17647 ;;		line 385 in file "mcc_generated_files/i2c1_master.c"
 17648 ;; Parameters:    Size  Location     Type
 17649 ;;		None
 17650 ;; Auto vars:     Size  Location     Type
 17651 ;;		None
 17652 ;; Return value:  Size  Location     Type
 17653 ;;                  1    wreg      enum E16630
 17654 ;; Registers used:
 17655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17656 ;; Tracked objects:
 17657 ;;		On entry : 0/0
 17658 ;;		On exit  : 0/0
 17659 ;;		Unchanged: 0/0
 17660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17665 ;;Total ram usage:        0 bytes
 17666 ;; Hardware stack levels used: 1
 17667 ;; Hardware stack levels required when called: 4
 17668 ;; This function calls:
 17669 ;;		_I2C1_DO_RX_EMPTY
 17670 ;;		_I2C1_MasterSendTxData
 17671 ;; This function is called by:
 17672 ;;		_I2C1_MasterOperation
 17673 ;;		_I2C1_DO_SEND_RESTART_READ
 17674 ;;		_I2C1_MasterFsm
 17675 ;; This function uses a non-reentrant model
 17676 ;;
 17677                           
 17678                           	psect	text100
 17679   00A978                     __ptext100:
 17680                           	callstack 0
 17681   00A978                     _I2C1_DO_SEND_ADR_READ:
 17682                           	callstack 15
 17683   00A978                     
 17684                           ;mcc_generated_files/i2c1_master.c: 387:     I2C1_Status.addressNackCheck = 2;
 17685   00A978  0103               	movlb	3	; () banked
 17686   00A97A  5123               	movf	(_I2C1_Status+35)& (0+255),w,b
 17687   00A97C  0BFC               	andlw	-4
 17688   00A97E  0902               	iorlw	2
 17689   00A980  6F23               	movwf	(_I2C1_Status+35)& (0+255),b
 17690   00A982                     
 17691                           ; BSR set to: 3
 17692                           ;mcc_generated_files/i2c1_master.c: 388:     if(I2C1_Status.data_length == 1)
 17693   00A982  051F               	decf	(_I2C1_Status+31)& (0+255),w,b
 17694   00A984  1120               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 17695   00A986  A4D8               	btfss	status,2,c
 17696   00A988  EFC8  F054         	goto	u7581
 17697   00A98C  EFCA  F054         	goto	u7580
 17698   00A990                     u7581:
 17699   00A990  EFCC  F054         	goto	l8223
 17700   00A994                     u7580:
 17701   00A994                     
 17702                           ; BSR set to: 3
 17703                           ;mcc_generated_files/i2c1_master.c: 389:     {;mcc_generated_files/i2c1_master.c: 390:  
      +                                 I2C1_DO_RX_EMPTY();
 17704   00A994  ECF3  F05B         	call	_I2C1_DO_RX_EMPTY	;wreg free
 17705   00A998                     l8223:
 17706                           
 17707                           ;mcc_generated_files/i2c1_master.c: 392:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 17708   00A998  80D8               	bsf	status,0,c
 17709   00A99A  0103               	movlb	3	; () banked
 17710   00A99C  351C               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 17711   00A99E  ECD6  F052         	call	_I2C1_MasterSendTxData
 17712   00A9A2                     
 17713                           ;mcc_generated_files/i2c1_master.c: 393:     return I2C1_RX;
 17714   00A9A2  0E04               	movlw	4
 17715   00A9A4  0012               	return		;funcret
 17716   00A9A6                     __end_of_I2C1_DO_SEND_ADR_READ:
 17717                           	callstack 0
 17718                           
 17719 ;; *************** function _I2C1_DO_IDLE *****************
 17720 ;; Defined at:
 17721 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 17722 ;; Parameters:    Size  Location     Type
 17723 ;;		None
 17724 ;; Auto vars:     Size  Location     Type
 17725 ;;		None
 17726 ;; Return value:  Size  Location     Type
 17727 ;;                  1    wreg      enum E16630
 17728 ;; Registers used:
 17729 ;;		wreg, status,2
 17730 ;; Tracked objects:
 17731 ;;		On entry : 0/0
 17732 ;;		On exit  : 0/0
 17733 ;;		Unchanged: 0/0
 17734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17739 ;;Total ram usage:        0 bytes
 17740 ;; Hardware stack levels used: 1
 17741 ;; This function calls:
 17742 ;;		Nothing
 17743 ;; This function is called by:
 17744 ;;		_I2C1_DO_RX_NACK_STOP
 17745 ;;		_I2C1_MasterFsm
 17746 ;; This function uses a non-reentrant model
 17747 ;;
 17748                           
 17749                           	psect	text101
 17750   00A5EA                     __ptext101:
 17751                           	callstack 0
 17752   00A5EA                     _I2C1_DO_IDLE:
 17753                           	callstack 20
 17754   00A5EA                     
 17755                           ;mcc_generated_files/i2c1_master.c: 380:     I2C1_Status.busy = 0;
 17756   00A5EA  0103               	movlb	3	; () banked
 17757   00A5EC  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 17758   00A5EE                     
 17759                           ; BSR set to: 3
 17760                           ;mcc_generated_files/i2c1_master.c: 381:     I2C1_Status.error = I2C1_NOERR;
 17761   00A5EE  0E00               	movlw	0
 17762   00A5F0  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 17763   00A5F2                     
 17764                           ; BSR set to: 3
 17765                           ;mcc_generated_files/i2c1_master.c: 382:     return I2C1_RESET;
 17766   00A5F2  0E0F               	movlw	15
 17767   00A5F4                     
 17768                           ; BSR set to: 3
 17769   00A5F4  0012               	return		;funcret
 17770   00A5F6                     __end_of_I2C1_DO_IDLE:
 17771                           	callstack 0
 17772                           
 17773 ;; *************** function _I2C1_DO_TX_ACK *****************
 17774 ;; Defined at:
 17775 ;;		line 538 in file "mcc_generated_files/i2c1_master.c"
 17776 ;; Parameters:    Size  Location     Type
 17777 ;;		None
 17778 ;; Auto vars:     Size  Location     Type
 17779 ;;		None
 17780 ;; Return value:  Size  Location     Type
 17781 ;;                  1    wreg      enum E16630
 17782 ;; Registers used:
 17783 ;;		wreg, cstack
 17784 ;; Tracked objects:
 17785 ;;		On entry : 0/0
 17786 ;;		On exit  : 0/0
 17787 ;;		Unchanged: 0/0
 17788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17793 ;;Total ram usage:        0 bytes
 17794 ;; Hardware stack levels used: 1
 17795 ;; Hardware stack levels required when called: 1
 17796 ;; This function calls:
 17797 ;;		_I2C1_MasterSendAck
 17798 ;; This function is called by:
 17799 ;;		_I2C1_MasterFsm
 17800 ;; This function uses a non-reentrant model
 17801 ;;
 17802                           
 17803                           	psect	text102
 17804   00A570                     __ptext102:
 17805                           	callstack 0
 17806   00A570                     _I2C1_DO_TX_ACK:
 17807                           	callstack 20
 17808   00A570                     
 17809                           ;mcc_generated_files/i2c1_master.c: 540:     I2C1_MasterSendAck();
 17810   00A570  ECA5  F052         	call	_I2C1_MasterSendAck	;wreg free
 17811   00A574                     
 17812                           ;mcc_generated_files/i2c1_master.c: 541:     return I2C1_TX;
 17813   00A574  0E03               	movlw	3
 17814   00A576  0012               	return		;funcret
 17815   00A578                     __end_of_I2C1_DO_TX_ACK:
 17816                           	callstack 0
 17817                           
 17818 ;; *************** function _I2C1_MasterIsTxBufEmpty *****************
 17819 ;; Defined at:
 17820 ;;		line 740 in file "mcc_generated_files/i2c1_master.c"
 17821 ;; Parameters:    Size  Location     Type
 17822 ;;		None
 17823 ;; Auto vars:     Size  Location     Type
 17824 ;;		None
 17825 ;; Return value:  Size  Location     Type
 17826 ;;                  1    wreg      _Bool 
 17827 ;; Registers used:
 17828 ;;		wreg
 17829 ;; Tracked objects:
 17830 ;;		On entry : 0/0
 17831 ;;		On exit  : 0/0
 17832 ;;		Unchanged: 0/0
 17833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17838 ;;Total ram usage:        0 bytes
 17839 ;; Hardware stack levels used: 1
 17840 ;; This function calls:
 17841 ;;		Nothing
 17842 ;; This function is called by:
 17843 ;;		_I2C1_DO_TX
 17844 ;; This function uses a non-reentrant model
 17845 ;;
 17846                           
 17847                           	psect	text103
 17848   00A6B0                     __ptext103:
 17849                           	callstack 0
 17850   00A6B0                     _I2C1_MasterIsTxBufEmpty:
 17851                           	callstack 20
 17852   00A6B0                     
 17853                           ;mcc_generated_files/i2c1_master.c: 742:     return I2C1STAT1bits.TXBE;
 17854   00A6B0  013D               	movlb	61	; () banked
 17855   00A6B2  BB78               	btfsc	120,5,b	;volatile
 17856   00A6B4  EF5E  F053         	goto	u7641
 17857   00A6B8  EF61  F053         	goto	u7640
 17858   00A6BC                     u7641:
 17859   00A6BC  0E01               	movlw	1
 17860   00A6BE  EF62  F053         	goto	u7646
 17861   00A6C2                     u7640:
 17862   00A6C2  0E00               	movlw	0
 17863   00A6C4                     u7646:
 17864   00A6C4                     
 17865                           ; BSR set to: 61
 17866   00A6C4  0012               	return		;funcret
 17867   00A6C6                     __end_of_I2C1_MasterIsTxBufEmpty:
 17868                           	callstack 0
 17869                           
 17870 ;; *************** function _I2C1_MasterIsNack *****************
 17871 ;; Defined at:
 17872 ;;		line 713 in file "mcc_generated_files/i2c1_master.c"
 17873 ;; Parameters:    Size  Location     Type
 17874 ;;		None
 17875 ;; Auto vars:     Size  Location     Type
 17876 ;;		None
 17877 ;; Return value:  Size  Location     Type
 17878 ;;                  1    wreg      _Bool 
 17879 ;; Registers used:
 17880 ;;		wreg
 17881 ;; Tracked objects:
 17882 ;;		On entry : 0/0
 17883 ;;		On exit  : 0/0
 17884 ;;		Unchanged: 0/0
 17885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;Total ram usage:        0 bytes
 17891 ;; Hardware stack levels used: 1
 17892 ;; This function calls:
 17893 ;;		Nothing
 17894 ;; This function is called by:
 17895 ;;		_I2C1_MasterFsm
 17896 ;;		_I2C1_DO_TX
 17897 ;; This function uses a non-reentrant model
 17898 ;;
 17899                           
 17900                           	psect	text104
 17901   00A69A                     __ptext104:
 17902                           	callstack 0
 17903   00A69A                     _I2C1_MasterIsNack:
 17904                           	callstack 21
 17905   00A69A                     
 17906                           ;mcc_generated_files/i2c1_master.c: 715:     return I2C1CON1bits.ACKSTAT;
 17907   00A69A  013D               	movlb	61	; () banked
 17908   00A69C  BB74               	btfsc	116,5,b	;volatile
 17909   00A69E  EF53  F053         	goto	u7601
 17910   00A6A2  EF56  F053         	goto	u7600
 17911   00A6A6                     u7601:
 17912   00A6A6  0E01               	movlw	1
 17913   00A6A8  EF57  F053         	goto	u7606
 17914   00A6AC                     u7600:
 17915   00A6AC  0E00               	movlw	0
 17916   00A6AE                     u7606:
 17917   00A6AE                     
 17918                           ; BSR set to: 61
 17919   00A6AE  0012               	return		;funcret
 17920   00A6B0                     __end_of_I2C1_MasterIsNack:
 17921                           	callstack 0
 17922                           
 17923 ;; *************** function _I2C1_MasterGetCounter *****************
 17924 ;; Defined at:
 17925 ;;		line 675 in file "mcc_generated_files/i2c1_master.c"
 17926 ;; Parameters:    Size  Location     Type
 17927 ;;		None
 17928 ;; Auto vars:     Size  Location     Type
 17929 ;;		None
 17930 ;; Return value:  Size  Location     Type
 17931 ;;                  1    wreg      unsigned char 
 17932 ;; Registers used:
 17933 ;;		wreg, status,2
 17934 ;; Tracked objects:
 17935 ;;		On entry : 0/0
 17936 ;;		On exit  : 0/0
 17937 ;;		Unchanged: 0/0
 17938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17943 ;;Total ram usage:        0 bytes
 17944 ;; Hardware stack levels used: 1
 17945 ;; This function calls:
 17946 ;;		Nothing
 17947 ;; This function is called by:
 17948 ;;		_I2C1_DO_SEND_STOP
 17949 ;; This function uses a non-reentrant model
 17950 ;;
 17951                           
 17952                           	psect	text105
 17953   00A55C                     __ptext105:
 17954                           	callstack 0
 17955   00A55C                     _I2C1_MasterGetCounter:
 17956                           	callstack 20
 17957   00A55C                     
 17958                           ;mcc_generated_files/i2c1_master.c: 677:     return I2C1CNT;
 17959   00A55C  013D               	movlb	61	; () banked
 17960   00A55E  516C               	movf	108,w,b	;volatile
 17961   00A560                     
 17962                           ; BSR set to: 61
 17963   00A560  0012               	return		;funcret
 17964   00A562                     __end_of_I2C1_MasterGetCounter:
 17965                           	callstack 0
 17966                           
 17967 ;; *************** function _I2C1_MasterStop *****************
 17968 ;; Defined at:
 17969 ;;		line 707 in file "mcc_generated_files/i2c1_master.c"
 17970 ;; Parameters:    Size  Location     Type
 17971 ;;		None
 17972 ;; Auto vars:     Size  Location     Type
 17973 ;;		None
 17974 ;; Return value:  Size  Location     Type
 17975 ;;                  1    wreg      void 
 17976 ;; Registers used:
 17977 ;;		None
 17978 ;; Tracked objects:
 17979 ;;		On entry : 0/0
 17980 ;;		On exit  : 0/0
 17981 ;;		Unchanged: 0/0
 17982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17987 ;;Total ram usage:        0 bytes
 17988 ;; Hardware stack levels used: 1
 17989 ;; This function calls:
 17990 ;;		Nothing
 17991 ;; This function is called by:
 17992 ;;		_I2C1_DO_SEND_STOP
 17993 ;;		_I2C1_DO_RX_NACK_STOP
 17994 ;; This function uses a non-reentrant model
 17995 ;;
 17996                           
 17997                           	psect	text106
 17998   00A556                     __ptext106:
 17999                           	callstack 0
 18000   00A556                     _I2C1_MasterStop:
 18001                           	callstack 20
 18002   00A556                     
 18003                           ;mcc_generated_files/i2c1_master.c: 710:     I2C1CON0bits.S = 0;
 18004   00A556  013D               	movlb	61	; () banked
 18005   00A558  9B73               	bcf	115,5,b	;volatile
 18006   00A55A                     
 18007                           ; BSR set to: 61
 18008   00A55A  0012               	return		;funcret
 18009   00A55C                     __end_of_I2C1_MasterStop:
 18010                           	callstack 0
 18011                           
 18012 ;; *************** function _I2C1_MasterSendNack *****************
 18013 ;; Defined at:
 18014 ;;		line 723 in file "mcc_generated_files/i2c1_master.c"
 18015 ;; Parameters:    Size  Location     Type
 18016 ;;		None
 18017 ;; Auto vars:     Size  Location     Type
 18018 ;;		None
 18019 ;; Return value:  Size  Location     Type
 18020 ;;                  1    wreg      void 
 18021 ;; Registers used:
 18022 ;;		None
 18023 ;; Tracked objects:
 18024 ;;		On entry : 0/0
 18025 ;;		On exit  : 0/0
 18026 ;;		Unchanged: 0/0
 18027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;Total ram usage:        0 bytes
 18033 ;; Hardware stack levels used: 1
 18034 ;; This function calls:
 18035 ;;		Nothing
 18036 ;; This function is called by:
 18037 ;;		_I2C1_DO_RX_NACK_STOP
 18038 ;;		_I2C1_DO_RX_NACK_RESTART
 18039 ;; This function uses a non-reentrant model
 18040 ;;
 18041                           
 18042                           	psect	text107
 18043   00A550                     __ptext107:
 18044                           	callstack 0
 18045   00A550                     _I2C1_MasterSendNack:
 18046                           	callstack 20
 18047   00A550                     
 18048                           ;mcc_generated_files/i2c1_master.c: 725:     I2C1CON1bits.ACKDT = 1;
 18049   00A550  013D               	movlb	61	; () banked
 18050   00A552  8D74               	bsf	116,6,b	;volatile
 18051   00A554                     
 18052                           ; BSR set to: 61
 18053   00A554  0012               	return		;funcret
 18054   00A556                     __end_of_I2C1_MasterSendNack:
 18055                           	callstack 0
 18056                           
 18057 ;; *************** function _I2C1_MasterSendAck *****************
 18058 ;; Defined at:
 18059 ;;		line 718 in file "mcc_generated_files/i2c1_master.c"
 18060 ;; Parameters:    Size  Location     Type
 18061 ;;		None
 18062 ;; Auto vars:     Size  Location     Type
 18063 ;;		None
 18064 ;; Return value:  Size  Location     Type
 18065 ;;                  1    wreg      void 
 18066 ;; Registers used:
 18067 ;;		None
 18068 ;; Tracked objects:
 18069 ;;		On entry : 0/0
 18070 ;;		On exit  : 0/0
 18071 ;;		Unchanged: 0/0
 18072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18077 ;;Total ram usage:        0 bytes
 18078 ;; Hardware stack levels used: 1
 18079 ;; This function calls:
 18080 ;;		Nothing
 18081 ;; This function is called by:
 18082 ;;		_I2C1_DO_RX_ACK
 18083 ;;		_I2C1_DO_TX_ACK
 18084 ;; This function uses a non-reentrant model
 18085 ;;
 18086                           
 18087                           	psect	text108
 18088   00A54A                     __ptext108:
 18089                           	callstack 0
 18090   00A54A                     _I2C1_MasterSendAck:
 18091                           	callstack 20
 18092   00A54A                     
 18093                           ;mcc_generated_files/i2c1_master.c: 720:     I2C1CON1bits.ACKDT = 0;
 18094   00A54A  013D               	movlb	61	; () banked
 18095   00A54C  9D74               	bcf	116,6,b	;volatile
 18096   00A54E                     
 18097                           ; BSR set to: 61
 18098   00A54E  0012               	return		;funcret
 18099   00A550                     __end_of_I2C1_MasterSendAck:
 18100                           	callstack 0
 18101                           
 18102 ;; *************** function _I2C1_MasterIsRxBufFull *****************
 18103 ;; Defined at:
 18104 ;;		line 735 in file "mcc_generated_files/i2c1_master.c"
 18105 ;; Parameters:    Size  Location     Type
 18106 ;;		None
 18107 ;; Auto vars:     Size  Location     Type
 18108 ;;		None
 18109 ;; Return value:  Size  Location     Type
 18110 ;;                  1    wreg      _Bool 
 18111 ;; Registers used:
 18112 ;;		wreg
 18113 ;; Tracked objects:
 18114 ;;		On entry : 0/0
 18115 ;;		On exit  : 0/0
 18116 ;;		Unchanged: 0/0
 18117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18122 ;;Total ram usage:        0 bytes
 18123 ;; Hardware stack levels used: 1
 18124 ;; This function calls:
 18125 ;;		Nothing
 18126 ;; This function is called by:
 18127 ;;		_I2C1_DO_RX
 18128 ;; This function uses a non-reentrant model
 18129 ;;
 18130                           
 18131                           	psect	text109
 18132   00A684                     __ptext109:
 18133                           	callstack 0
 18134   00A684                     _I2C1_MasterIsRxBufFull:
 18135                           	callstack 20
 18136   00A684                     
 18137                           ;mcc_generated_files/i2c1_master.c: 737:     return I2C1STAT1bits.RXBF;
 18138   00A684  013D               	movlb	61	; () banked
 18139   00A686  B178               	btfsc	120,0,b	;volatile
 18140   00A688  EF48  F053         	goto	u7661
 18141   00A68C  EF4B  F053         	goto	u7660
 18142   00A690                     u7661:
 18143   00A690  0E01               	movlw	1
 18144   00A692  EF4C  F053         	goto	u7666
 18145   00A696                     u7660:
 18146   00A696  0E00               	movlw	0
 18147   00A698                     u7666:
 18148   00A698                     
 18149                           ; BSR set to: 61
 18150   00A698  0012               	return		;funcret
 18151   00A69A                     __end_of_I2C1_MasterIsRxBufFull:
 18152                           	callstack 0
 18153                           
 18154 ;; *************** function _I2C1_MasterGetRxData *****************
 18155 ;; Defined at:
 18156 ;;		line 665 in file "mcc_generated_files/i2c1_master.c"
 18157 ;; Parameters:    Size  Location     Type
 18158 ;;		None
 18159 ;; Auto vars:     Size  Location     Type
 18160 ;;		None
 18161 ;; Return value:  Size  Location     Type
 18162 ;;                  1    wreg      unsigned char 
 18163 ;; Registers used:
 18164 ;;		wreg, status,2
 18165 ;; Tracked objects:
 18166 ;;		On entry : 0/0
 18167 ;;		On exit  : 0/0
 18168 ;;		Unchanged: 0/0
 18169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18174 ;;Total ram usage:        0 bytes
 18175 ;; Hardware stack levels used: 1
 18176 ;; This function calls:
 18177 ;;		Nothing
 18178 ;; This function is called by:
 18179 ;;		_I2C1_DO_RX
 18180 ;; This function uses a non-reentrant model
 18181 ;;
 18182                           
 18183                           	psect	text110
 18184   00A544                     __ptext110:
 18185                           	callstack 0
 18186   00A544                     _I2C1_MasterGetRxData:
 18187                           	callstack 20
 18188   00A544                     
 18189                           ;mcc_generated_files/i2c1_master.c: 667:     return I2C1RXB;
 18190   00A544  013D               	movlb	61	; () banked
 18191   00A546  516A               	movf	106,w,b	;volatile
 18192   00A548                     
 18193                           ; BSR set to: 61
 18194   00A548  0012               	return		;funcret
 18195   00A54A                     __end_of_I2C1_MasterGetRxData:
 18196                           	callstack 0
 18197                           
 18198 ;; *************** function _I2C1_MasterSendTxData *****************
 18199 ;; Defined at:
 18200 ;;		line 670 in file "mcc_generated_files/i2c1_master.c"
 18201 ;; Parameters:    Size  Location     Type
 18202 ;;  data            1    wreg     unsigned char 
 18203 ;; Auto vars:     Size  Location     Type
 18204 ;;  data            1    0[COMRAM] unsigned char 
 18205 ;; Return value:  Size  Location     Type
 18206 ;;                  1    wreg      void 
 18207 ;; Registers used:
 18208 ;;		wreg
 18209 ;; Tracked objects:
 18210 ;;		On entry : 0/0
 18211 ;;		On exit  : 0/0
 18212 ;;		Unchanged: 0/0
 18213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18217 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18218 ;;Total ram usage:        1 bytes
 18219 ;; Hardware stack levels used: 1
 18220 ;; This function calls:
 18221 ;;		Nothing
 18222 ;; This function is called by:
 18223 ;;		_I2C1_DO_SEND_ADR_READ
 18224 ;;		_I2C1_DO_SEND_ADR_WRITE
 18225 ;;		_I2C1_DO_TX
 18226 ;;		_I2C1_DO_SEND_STOP
 18227 ;; This function uses a non-reentrant model
 18228 ;;
 18229                           
 18230                           	psect	text111
 18231   00A5AC                     __ptext111:
 18232                           	callstack 0
 18233   00A5AC                     _I2C1_MasterSendTxData:
 18234                           	callstack 20
 18235                           
 18236                           ; BSR set to: 61
 18237                           ;incstack = 0
 18238                           ;I2C1_MasterSendTxData@data stored from wreg
 18239   00A5AC  6E01               	movwf	I2C1_MasterSendTxData@data^0,c
 18240   00A5AE                     
 18241                           ;mcc_generated_files/i2c1_master.c: 670: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 671: {;mcc_generated_files/i
      +                          2c1_master.c: 672:     I2C1TXB = data;
 18242   00A5AE  0060  F007  FD6B   	movff	I2C1_MasterSendTxData@data,15723	;volatile
 18243   00A5B4  0012               	return		;funcret
 18244   00A5B6                     __end_of_I2C1_MasterSendTxData:
 18245                           	callstack 0
 18246                           
 18247 ;; *************** function _I2C1_MasterSetCounter *****************
 18248 ;; Defined at:
 18249 ;;		line 680 in file "mcc_generated_files/i2c1_master.c"
 18250 ;; Parameters:    Size  Location     Type
 18251 ;;  counter         1    wreg     unsigned char 
 18252 ;; Auto vars:     Size  Location     Type
 18253 ;;  counter         1    0[COMRAM] unsigned char 
 18254 ;; Return value:  Size  Location     Type
 18255 ;;                  1    wreg      void 
 18256 ;; Registers used:
 18257 ;;		wreg
 18258 ;; Tracked objects:
 18259 ;;		On entry : 0/0
 18260 ;;		On exit  : 0/0
 18261 ;;		Unchanged: 0/0
 18262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18267 ;;Total ram usage:        1 bytes
 18268 ;; Hardware stack levels used: 1
 18269 ;; This function calls:
 18270 ;;		Nothing
 18271 ;; This function is called by:
 18272 ;;		_I2C1_MasterOperation
 18273 ;;		_I2C1_DO_TX_EMPTY
 18274 ;;		_I2C1_DO_RX_EMPTY
 18275 ;;		_I2C1_DO_SEND_RESTART_READ
 18276 ;;		_I2C1_DO_SEND_STOP
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text112
 18281   00A5A2                     __ptext112:
 18282                           	callstack 0
 18283   00A5A2                     _I2C1_MasterSetCounter:
 18284                           	callstack 20
 18285                           
 18286                           ;incstack = 0
 18287                           ;I2C1_MasterSetCounter@counter stored from wreg
 18288   00A5A2  6E01               	movwf	I2C1_MasterSetCounter@counter^0,c
 18289   00A5A4                     
 18290                           ;mcc_generated_files/i2c1_master.c: 680: static __attribute__((inline)) void I2C1_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c1_master.c: 681: {;mcc_generated_file
      +                          s/i2c1_master.c: 682:     I2C1CNT = counter;
 18291   00A5A4  0060  F007  FD6C   	movff	I2C1_MasterSetCounter@counter,15724	;volatile
 18292   00A5AA  0012               	return		;funcret
 18293   00A5AC                     __end_of_I2C1_MasterSetCounter:
 18294                           	callstack 0
 18295                           
 18296 ;; *************** function _I2C1_MasterEnableRestart *****************
 18297 ;; Defined at:
 18298 ;;		line 695 in file "mcc_generated_files/i2c1_master.c"
 18299 ;; Parameters:    Size  Location     Type
 18300 ;;		None
 18301 ;; Auto vars:     Size  Location     Type
 18302 ;;		None
 18303 ;; Return value:  Size  Location     Type
 18304 ;;                  1    wreg      void 
 18305 ;; Registers used:
 18306 ;;		None
 18307 ;; Tracked objects:
 18308 ;;		On entry : 0/0
 18309 ;;		On exit  : 0/0
 18310 ;;		Unchanged: 0/0
 18311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18316 ;;Total ram usage:        0 bytes
 18317 ;; Hardware stack levels used: 1
 18318 ;; This function calls:
 18319 ;;		Nothing
 18320 ;; This function is called by:
 18321 ;;		_I2C1_DO_TX_EMPTY
 18322 ;;		_I2C1_DO_RX_EMPTY
 18323 ;; This function uses a non-reentrant model
 18324 ;;
 18325                           
 18326                           	psect	text113
 18327   00A53E                     __ptext113:
 18328                           	callstack 0
 18329   00A53E                     _I2C1_MasterEnableRestart:
 18330                           	callstack 20
 18331   00A53E                     
 18332                           ;mcc_generated_files/i2c1_master.c: 698:     I2C1CON0bits.RSEN = 1;
 18333   00A53E  013D               	movlb	61	; () banked
 18334   00A540  8D73               	bsf	115,6,b	;volatile
 18335   00A542                     
 18336                           ; BSR set to: 61
 18337   00A542  0012               	return		;funcret
 18338   00A544                     __end_of_I2C1_MasterEnableRestart:
 18339                           	callstack 0
 18340                           
 18341 ;; *************** function _I2C1_MasterDisableRestart *****************
 18342 ;; Defined at:
 18343 ;;		line 701 in file "mcc_generated_files/i2c1_master.c"
 18344 ;; Parameters:    Size  Location     Type
 18345 ;;		None
 18346 ;; Auto vars:     Size  Location     Type
 18347 ;;		None
 18348 ;; Return value:  Size  Location     Type
 18349 ;;                  1    wreg      void 
 18350 ;; Registers used:
 18351 ;;		None
 18352 ;; Tracked objects:
 18353 ;;		On entry : 0/0
 18354 ;;		On exit  : 0/0
 18355 ;;		Unchanged: 0/0
 18356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18361 ;;Total ram usage:        0 bytes
 18362 ;; Hardware stack levels used: 1
 18363 ;; This function calls:
 18364 ;;		Nothing
 18365 ;; This function is called by:
 18366 ;;		_I2C1_DO_TX_EMPTY
 18367 ;;		_I2C1_DO_RX_EMPTY
 18368 ;; This function uses a non-reentrant model
 18369 ;;
 18370                           
 18371                           	psect	text114
 18372   00A538                     __ptext114:
 18373                           	callstack 0
 18374   00A538                     _I2C1_MasterDisableRestart:
 18375                           	callstack 20
 18376   00A538                     
 18377                           ;mcc_generated_files/i2c1_master.c: 704:     I2C1CON0bits.RSEN = 0;
 18378   00A538  013D               	movlb	61	; () banked
 18379   00A53A  9D73               	bcf	115,6,b	;volatile
 18380   00A53C                     
 18381                           ; BSR set to: 61
 18382   00A53C  0012               	return		;funcret
 18383   00A53E                     __end_of_I2C1_MasterDisableRestart:
 18384                           	callstack 0
 18385                           
 18386 ;; *************** function _I2C1_MasterResetBus *****************
 18387 ;; Defined at:
 18388 ;;		line 685 in file "mcc_generated_files/i2c1_master.c"
 18389 ;; Parameters:    Size  Location     Type
 18390 ;;		None
 18391 ;; Auto vars:     Size  Location     Type
 18392 ;;		None
 18393 ;; Return value:  Size  Location     Type
 18394 ;;                  1    wreg      void 
 18395 ;; Registers used:
 18396 ;;		None
 18397 ;; Tracked objects:
 18398 ;;		On entry : 0/0
 18399 ;;		On exit  : 0/0
 18400 ;;		Unchanged: 0/0
 18401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18406 ;;Total ram usage:        0 bytes
 18407 ;; Hardware stack levels used: 1
 18408 ;; This function calls:
 18409 ;;		Nothing
 18410 ;; This function is called by:
 18411 ;;		_I2C1_DO_RESET
 18412 ;;		_I2C1_DO_BUS_ERROR
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text115
 18417   00A598                     __ptext115:
 18418                           	callstack 0
 18419   00A598                     _I2C1_MasterResetBus:
 18420                           	callstack 20
 18421   00A598                     
 18422                           ;mcc_generated_files/i2c1_master.c: 688:     I2C1CON0bits.EN = 0;
 18423   00A598  013D               	movlb	61	; () banked
 18424   00A59A  9F73               	bcf	115,7,b	;volatile
 18425                           
 18426                           ;mcc_generated_files/i2c1_master.c: 690:     I2C1STAT1bits.CLRBF = 1;
 18427   00A59C  8578               	bsf	120,2,b	;volatile
 18428                           
 18429                           ;mcc_generated_files/i2c1_master.c: 692:     I2C1CON0bits.EN = 1;
 18430   00A59E  8F73               	bsf	115,7,b	;volatile
 18431   00A5A0                     
 18432                           ; BSR set to: 61
 18433   00A5A0  0012               	return		;funcret
 18434   00A5A2                     __end_of_I2C1_MasterResetBus:
 18435                           	callstack 0
 18436                           
 18437 ;; *************** function _I2C1_CallbackReturnReset *****************
 18438 ;; Defined at:
 18439 ;;		line 614 in file "mcc_generated_files/i2c1_master.c"
 18440 ;; Parameters:    Size  Location     Type
 18441 ;;  funPtr          2    9[COMRAM] PTR void 
 18442 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18443 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18444 ;; Auto vars:     Size  Location     Type
 18445 ;;		None
 18446 ;; Return value:  Size  Location     Type
 18447 ;;                  1    wreg      enum E363
 18448 ;; Registers used:
 18449 ;;		wreg
 18450 ;; Tracked objects:
 18451 ;;		On entry : 0/0
 18452 ;;		On exit  : 0/0
 18453 ;;		Unchanged: 0/0
 18454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18459 ;;Total ram usage:        2 bytes
 18460 ;; Hardware stack levels used: 1
 18461 ;; This function calls:
 18462 ;;		Nothing
 18463 ;; This function is called by:
 18464 ;;		_I2C1_Open
 18465 ;;		_I2C1_DO_RX_EMPTY
 18466 ;;		_I2C1_DO_TX_EMPTY
 18467 ;;		_I2C1_DO_TX
 18468 ;;		_I2C1_DO_ADDRESS_NACK
 18469 ;;		_I2C1_DO_BUS_COLLISION
 18470 ;; This function uses a non-reentrant model
 18471 ;;
 18472                           
 18473                           	psect	text116
 18474   00A51A                     __ptext116:
 18475                           	callstack 0
 18476   00A51A                     _I2C1_CallbackReturnReset:
 18477                           	callstack 20
 18478   00A51A                     
 18479                           ;mcc_generated_files/i2c1_master.c: 614: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 615: {;mcc_generated_files/i2c1_master.c: 6
      +                          16:     return I2C1_RESET_LINK;
 18480   00A51A  0E05               	movlw	5
 18481   00A51C  0012               	return		;funcret
 18482   00A51E                     __end_of_I2C1_CallbackReturnReset:
 18483                           	callstack 0
 18484                           
 18485 ;; *************** function _I2C1_CallbackReturnStop *****************
 18486 ;; Defined at:
 18487 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 18488 ;; Parameters:    Size  Location     Type
 18489 ;;  funPtr          2    9[COMRAM] PTR void 
 18490 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18491 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18492 ;; Auto vars:     Size  Location     Type
 18493 ;;		None
 18494 ;; Return value:  Size  Location     Type
 18495 ;;                  1    wreg      enum E363
 18496 ;; Registers used:
 18497 ;;		wreg
 18498 ;; Tracked objects:
 18499 ;;		On entry : 0/0
 18500 ;;		On exit  : 0/0
 18501 ;;		Unchanged: 0/0
 18502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18507 ;;Total ram usage:        2 bytes
 18508 ;; Hardware stack levels used: 1
 18509 ;; This function calls:
 18510 ;;		Nothing
 18511 ;; This function is called by:
 18512 ;;		_I2C1_Open
 18513 ;;		_I2C1_SetCallback
 18514 ;;		_I2C1_DO_RX_EMPTY
 18515 ;;		_I2C1_DO_TX_EMPTY
 18516 ;;		_I2C1_DO_TX
 18517 ;;		_I2C1_DO_ADDRESS_NACK
 18518 ;;		_I2C1_DO_BUS_COLLISION
 18519 ;; This function uses a non-reentrant model
 18520 ;;
 18521                           
 18522                           	psect	text117
 18523   00A516                     __ptext117:
 18524                           	callstack 0
 18525   00A516                     _I2C1_CallbackReturnStop:
 18526                           	callstack 20
 18527   00A516                     
 18528                           ;mcc_generated_files/i2c1_master.c: 609: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 610: {;mcc_generated_files/i2c1_master.c: 61
      +                          1:     return I2C1_STOP;
 18529   00A516  0E01               	movlw	1
 18530   00A518  0012               	return		;funcret
 18531   00A51A                     __end_of_I2C1_CallbackReturnStop:
 18532                           	callstack 0
 18533                           
 18534 ;; *************** function _rdBlkRegCompleteHandler *****************
 18535 ;; Defined at:
 18536 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 18537 ;; Parameters:    Size  Location     Type
 18538 ;;  ptr             2    9[COMRAM] PTR void 
 18539 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18540 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18541 ;; Auto vars:     Size  Location     Type
 18542 ;;		None
 18543 ;; Return value:  Size  Location     Type
 18544 ;;                  1    wreg      enum E363
 18545 ;; Registers used:
 18546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18547 ;; Tracked objects:
 18548 ;;		On entry : 0/0
 18549 ;;		On exit  : 0/0
 18550 ;;		Unchanged: 0/0
 18551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18556 ;;Total ram usage:        3 bytes
 18557 ;; Hardware stack levels used: 1
 18558 ;; Hardware stack levels required when called: 2
 18559 ;; This function calls:
 18560 ;;		_I2C1_SetBuffer
 18561 ;;		_I2C1_SetDataCompleteCallback
 18562 ;; This function is called by:
 18563 ;;		_I2C1_ReadDataBlock
 18564 ;;		_I2C1_DO_RX_EMPTY
 18565 ;;		_I2C1_DO_TX_EMPTY
 18566 ;;		_I2C1_DO_TX
 18567 ;;		_I2C1_DO_ADDRESS_NACK
 18568 ;;		_I2C1_DO_BUS_COLLISION
 18569 ;; This function uses a non-reentrant model
 18570 ;;
 18571                           
 18572                           	psect	text118
 18573   00AD42                     __ptext118:
 18574                           	callstack 0
 18575   00AD42                     _rdBlkRegCompleteHandler:
 18576                           	callstack 18
 18577   00AD42                     
 18578                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 18579   00AD42  EE20 F002          	lfsr	2,2
 18580   00AD46  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 18581   00AD48  26D9               	addwf	fsr2l,f,c
 18582   00AD4A  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 18583   00AD4C  22DA               	addwfc	fsr2h,f,c
 18584   00AD4E  50DF               	movf	indf2,w,c
 18585   00AD50  6E0C               	movwf	??_rdBlkRegCompleteHandler^0,c
 18586   00AD52  C00C  F001         	movff	??_rdBlkRegCompleteHandler,I2C1_SetBuffer@buffer
 18587   00AD56  6A02               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 18588   00AD58  0060  F02B  FFD9   	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 18589   00AD5E  0060  F02F  FFDA   	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 18590   00AD64  006F FF78  F003    	movff	postinc2,I2C1_SetBuffer@bufferSize
 18591   00AD6A  006F FF74  F004    	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 18592   00AD70  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
 18593   00AD74                     
 18594                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 18595   00AD74  0E00               	movlw	0
 18596   00AD76  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 18597   00AD78  0E00               	movlw	0
 18598   00AD7A  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 18599   00AD7C  0E00               	movlw	0
 18600   00AD7E  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 18601   00AD80  0E00               	movlw	0
 18602   00AD82  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 18603   00AD84  EC79  F053         	call	_I2C1_SetDataCompleteCallback	;wreg free
 18604   00AD88                     
 18605                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 18606   00AD88  0E02               	movlw	2
 18607   00AD8A  0012               	return		;funcret
 18608   00AD8C                     __end_of_rdBlkRegCompleteHandler:
 18609                           	callstack 0
 18610                           
 18611 ;; *************** function _wr1RegCompleteHandler *****************
 18612 ;; Defined at:
 18613 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 18614 ;; Parameters:    Size  Location     Type
 18615 ;;  ptr             2    9[COMRAM] PTR void 
 18616 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18617 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18618 ;; Auto vars:     Size  Location     Type
 18619 ;;		None
 18620 ;; Return value:  Size  Location     Type
 18621 ;;                  1    wreg      enum E363
 18622 ;; Registers used:
 18623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18624 ;; Tracked objects:
 18625 ;;		On entry : 0/0
 18626 ;;		On exit  : 0/0
 18627 ;;		Unchanged: 0/0
 18628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18633 ;;Total ram usage:        2 bytes
 18634 ;; Hardware stack levels used: 1
 18635 ;; Hardware stack levels required when called: 2
 18636 ;; This function calls:
 18637 ;;		_I2C1_SetBuffer
 18638 ;;		_I2C1_SetDataCompleteCallback
 18639 ;; This function is called by:
 18640 ;;		_I2C1_Write1ByteRegister
 18641 ;;		_I2C1_DO_RX_EMPTY
 18642 ;;		_I2C1_DO_TX_EMPTY
 18643 ;;		_I2C1_DO_TX
 18644 ;;		_I2C1_DO_ADDRESS_NACK
 18645 ;;		_I2C1_DO_BUS_COLLISION
 18646 ;; This function uses a non-reentrant model
 18647 ;;
 18648                           
 18649                           	psect	text119
 18650   00A920                     __ptext119:
 18651                           	callstack 0
 18652   00A920                     _wr1RegCompleteHandler:
 18653                           	callstack 18
 18654   00A920                     
 18655                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 18656   00A920  C00A  F001         	movff	wr1RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 18657   00A924  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 18658   00A928  0E00               	movlw	0
 18659   00A92A  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 18660   00A92C  0E01               	movlw	1
 18661   00A92E  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 18662   00A930  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
 18663   00A934                     
 18664                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 18665   00A934  0E00               	movlw	0
 18666   00A936  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 18667   00A938  0E00               	movlw	0
 18668   00A93A  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 18669   00A93C  0E00               	movlw	0
 18670   00A93E  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 18671   00A940  0E00               	movlw	0
 18672   00A942  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 18673   00A944  EC79  F053         	call	_I2C1_SetDataCompleteCallback	;wreg free
 18674   00A948                     
 18675                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 18676   00A948  0E04               	movlw	4
 18677   00A94A  0012               	return		;funcret
 18678   00A94C                     __end_of_wr1RegCompleteHandler:
 18679                           	callstack 0
 18680                           
 18681 ;; *************** function _rd2RegCompleteHandler *****************
 18682 ;; Defined at:
 18683 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 18684 ;; Parameters:    Size  Location     Type
 18685 ;;  ptr             2    9[COMRAM] PTR void 
 18686 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18687 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18688 ;; Auto vars:     Size  Location     Type
 18689 ;;		None
 18690 ;; Return value:  Size  Location     Type
 18691 ;;                  1    wreg      enum E363
 18692 ;; Registers used:
 18693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18694 ;; Tracked objects:
 18695 ;;		On entry : 0/0
 18696 ;;		On exit  : 0/0
 18697 ;;		Unchanged: 0/0
 18698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18703 ;;Total ram usage:        2 bytes
 18704 ;; Hardware stack levels used: 1
 18705 ;; Hardware stack levels required when called: 2
 18706 ;; This function calls:
 18707 ;;		_I2C1_SetBuffer
 18708 ;;		_I2C1_SetDataCompleteCallback
 18709 ;; This function is called by:
 18710 ;;		_I2C1_Read2ByteRegister
 18711 ;;		_I2C1_DO_RX_EMPTY
 18712 ;;		_I2C1_DO_TX_EMPTY
 18713 ;;		_I2C1_DO_TX
 18714 ;;		_I2C1_DO_ADDRESS_NACK
 18715 ;;		_I2C1_DO_BUS_COLLISION
 18716 ;; This function uses a non-reentrant model
 18717 ;;
 18718                           
 18719                           	psect	text120
 18720   00A8F4                     __ptext120:
 18721                           	callstack 0
 18722   00A8F4                     _rd2RegCompleteHandler:
 18723                           	callstack 18
 18724   00A8F4                     
 18725                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 18726   00A8F4  C00A  F001         	movff	rd2RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 18727   00A8F8  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 18728   00A8FC  0E00               	movlw	0
 18729   00A8FE  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 18730   00A900  0E02               	movlw	2
 18731   00A902  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 18732   00A904  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
 18733   00A908                     
 18734                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 18735   00A908  0E00               	movlw	0
 18736   00A90A  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 18737   00A90C  0E00               	movlw	0
 18738   00A90E  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 18739   00A910  0E00               	movlw	0
 18740   00A912  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 18741   00A914  0E00               	movlw	0
 18742   00A916  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 18743   00A918  EC79  F053         	call	_I2C1_SetDataCompleteCallback	;wreg free
 18744   00A91C                     
 18745                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 18746   00A91C  0E02               	movlw	2
 18747   00A91E  0012               	return		;funcret
 18748   00A920                     __end_of_rd2RegCompleteHandler:
 18749                           	callstack 0
 18750                           
 18751 ;; *************** function _rd1RegCompleteHandler *****************
 18752 ;; Defined at:
 18753 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 18754 ;; Parameters:    Size  Location     Type
 18755 ;;  ptr             2    9[COMRAM] PTR void 
 18756 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18757 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;		None
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  1    wreg      enum E363
 18762 ;; Registers used:
 18763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18764 ;; Tracked objects:
 18765 ;;		On entry : 0/0
 18766 ;;		On exit  : 0/0
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18773 ;;Total ram usage:        2 bytes
 18774 ;; Hardware stack levels used: 1
 18775 ;; Hardware stack levels required when called: 2
 18776 ;; This function calls:
 18777 ;;		_I2C1_SetBuffer
 18778 ;;		_I2C1_SetDataCompleteCallback
 18779 ;; This function is called by:
 18780 ;;		_I2C1_Read1ByteRegister
 18781 ;;		_I2C1_DO_RX_EMPTY
 18782 ;;		_I2C1_DO_TX_EMPTY
 18783 ;;		_I2C1_DO_TX
 18784 ;;		_I2C1_DO_ADDRESS_NACK
 18785 ;;		_I2C1_DO_BUS_COLLISION
 18786 ;; This function uses a non-reentrant model
 18787 ;;
 18788                           
 18789                           	psect	text121
 18790   00A8C8                     __ptext121:
 18791                           	callstack 0
 18792   00A8C8                     _rd1RegCompleteHandler:
 18793                           	callstack 18
 18794   00A8C8                     
 18795                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 18796   00A8C8  C00A  F001         	movff	rd1RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 18797   00A8CC  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 18798   00A8D0  0E00               	movlw	0
 18799   00A8D2  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 18800   00A8D4  0E01               	movlw	1
 18801   00A8D6  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 18802   00A8D8  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
 18803   00A8DC                     
 18804                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 18805   00A8DC  0E00               	movlw	0
 18806   00A8DE  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 18807   00A8E0  0E00               	movlw	0
 18808   00A8E2  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 18809   00A8E4  0E00               	movlw	0
 18810   00A8E6  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 18811   00A8E8  0E00               	movlw	0
 18812   00A8EA  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 18813   00A8EC  EC79  F053         	call	_I2C1_SetDataCompleteCallback	;wreg free
 18814   00A8F0                     
 18815                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 18816   00A8F0  0E02               	movlw	2
 18817   00A8F2  0012               	return		;funcret
 18818   00A8F4                     __end_of_rd1RegCompleteHandler:
 18819                           	callstack 0
 18820                           
 18821 ;; *************** function _wr2RegCompleteHandler *****************
 18822 ;; Defined at:
 18823 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;  ptr             2    9[COMRAM] PTR void 
 18826 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18827 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18828 ;; Auto vars:     Size  Location     Type
 18829 ;;		None
 18830 ;; Return value:  Size  Location     Type
 18831 ;;                  1    wreg      enum E363
 18832 ;; Registers used:
 18833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18834 ;; Tracked objects:
 18835 ;;		On entry : 0/0
 18836 ;;		On exit  : 0/0
 18837 ;;		Unchanged: 0/0
 18838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18843 ;;Total ram usage:        2 bytes
 18844 ;; Hardware stack levels used: 1
 18845 ;; Hardware stack levels required when called: 2
 18846 ;; This function calls:
 18847 ;;		_I2C1_SetBuffer
 18848 ;;		_I2C1_SetDataCompleteCallback
 18849 ;; This function is called by:
 18850 ;;		_I2C1_Write2ByteRegister
 18851 ;;		_I2C1_DO_RX_EMPTY
 18852 ;;		_I2C1_DO_TX_EMPTY
 18853 ;;		_I2C1_DO_TX
 18854 ;;		_I2C1_DO_ADDRESS_NACK
 18855 ;;		_I2C1_DO_BUS_COLLISION
 18856 ;; This function uses a non-reentrant model
 18857 ;;
 18858                           
 18859                           	psect	text122
 18860   00A89C                     __ptext122:
 18861                           	callstack 0
 18862   00A89C                     _wr2RegCompleteHandler:
 18863                           	callstack 18
 18864   00A89C                     
 18865                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 18866   00A89C  C00A  F001         	movff	wr2RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 18867   00A8A0  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 18868   00A8A4  0E00               	movlw	0
 18869   00A8A6  6E04               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 18870   00A8A8  0E02               	movlw	2
 18871   00A8AA  6E03               	movwf	I2C1_SetBuffer@bufferSize^0,c
 18872   00A8AC  ECD9  F053         	call	_I2C1_SetBuffer	;wreg free
 18873   00A8B0                     
 18874                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 18875   00A8B0  0E00               	movlw	0
 18876   00A8B2  6E06               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 18877   00A8B4  0E00               	movlw	0
 18878   00A8B6  6E07               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 18879   00A8B8  0E00               	movlw	0
 18880   00A8BA  6E08               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 18881   00A8BC  0E00               	movlw	0
 18882   00A8BE  6E09               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 18883   00A8C0  EC79  F053         	call	_I2C1_SetDataCompleteCallback	;wreg free
 18884   00A8C4                     
 18885                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 18886   00A8C4  0E04               	movlw	4
 18887   00A8C6  0012               	return		;funcret
 18888   00A8C8                     __end_of_wr2RegCompleteHandler:
 18889                           	callstack 0
 18890                           
 18891 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 18892 ;; Defined at:
 18893 ;;		line 303 in file "mcc_generated_files/i2c1_master.c"
 18894 ;; Parameters:    Size  Location     Type
 18895 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 18896 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 18897 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 18898 ;;  ptr             2    7[COMRAM] PTR void 
 18899 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18900 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18901 ;; Auto vars:     Size  Location     Type
 18902 ;;		None
 18903 ;; Return value:  Size  Location     Type
 18904 ;;                  1    wreg      void 
 18905 ;; Registers used:
 18906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18907 ;; Tracked objects:
 18908 ;;		On entry : 0/0
 18909 ;;		On exit  : 0/0
 18910 ;;		Unchanged: 0/0
 18911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18916 ;;Total ram usage:        4 bytes
 18917 ;; Hardware stack levels used: 1
 18918 ;; Hardware stack levels required when called: 1
 18919 ;; This function calls:
 18920 ;;		_I2C1_SetCallback
 18921 ;; This function is called by:
 18922 ;;		_I2C1_Write1ByteRegister
 18923 ;;		_I2C1_ReadDataBlock
 18924 ;;		_rd1RegCompleteHandler
 18925 ;;		_rd2RegCompleteHandler
 18926 ;;		_wr1RegCompleteHandler
 18927 ;;		_wr2RegCompleteHandler
 18928 ;;		_rdBlkRegCompleteHandler
 18929 ;;		_I2C1_Read1ByteRegister
 18930 ;;		_I2C1_Read2ByteRegister
 18931 ;;		_I2C1_Write2ByteRegister
 18932 ;; This function uses a non-reentrant model
 18933 ;;
 18934                           
 18935                           	psect	text123
 18936   00A6F2                     __ptext123:
 18937                           	callstack 0
 18938   00A6F2                     _I2C1_SetDataCompleteCallback:
 18939                           	callstack 18
 18940   00A6F2                     
 18941                           ;mcc_generated_files/i2c1_master.c: 303: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 304: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 305:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 18942   00A6F2  C006  F001         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 18943   00A6F6  C007  F002         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 18944   00A6FA  C008  F003         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 18945   00A6FE  C009  F004         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 18946   00A702  0E00               	movlw	0
 18947   00A704  EC8A  F05A         	call	_I2C1_SetCallback
 18948   00A708  0012               	return		;funcret
 18949   00A70A                     __end_of_I2C1_SetDataCompleteCallback:
 18950                           	callstack 0
 18951                           
 18952 ;; *************** function _I2C1_SetCallback *****************
 18953 ;; Defined at:
 18954 ;;		line 328 in file "mcc_generated_files/i2c1_master.c"
 18955 ;; Parameters:    Size  Location     Type
 18956 ;;  idx             1    wreg     enum E16651
 18957 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 18958 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 18959 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 18960 ;;  ptr             2    2[COMRAM] PTR void 
 18961 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18962 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 18963 ;; Auto vars:     Size  Location     Type
 18964 ;;  idx             1    4[COMRAM] enum E16651
 18965 ;; Return value:  Size  Location     Type
 18966 ;;                  1    wreg      void 
 18967 ;; Registers used:
 18968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18969 ;; Tracked objects:
 18970 ;;		On entry : 0/0
 18971 ;;		On exit  : 0/0
 18972 ;;		Unchanged: 0/0
 18973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18978 ;;Total ram usage:        5 bytes
 18979 ;; Hardware stack levels used: 1
 18980 ;; This function calls:
 18981 ;;		Nothing
 18982 ;; This function is called by:
 18983 ;;		_I2C1_SetDataCompleteCallback
 18984 ;;		_I2C1_SetAddressNackCallback
 18985 ;;		_I2C1_SetWriteCollisionCallback
 18986 ;;		_I2C1_SetDataNackCallback
 18987 ;;		_I2C1_SetTimeoutCallback
 18988 ;; This function uses a non-reentrant model
 18989 ;;
 18990                           
 18991                           	psect	text124
 18992   00B514                     __ptext124:
 18993                           	callstack 0
 18994   00B514                     _I2C1_SetCallback:
 18995                           	callstack 24
 18996                           
 18997                           ;incstack = 0
 18998                           ;I2C1_SetCallback@idx stored from wreg
 18999   00B514  6E05               	movwf	I2C1_SetCallback@idx^0,c
 19000   00B516                     
 19001                           ;mcc_generated_files/i2c1_master.c: 328: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 329: {;mcc_gen
      +                          erated_files/i2c1_master.c: 330:     if(cb)
 19002   00B516  5001               	movf	I2C1_SetCallback@cb^0,w,c
 19003   00B518  1002               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 19004   00B51A  B4D8               	btfsc	status,2,c
 19005   00B51C  EF92  F05A         	goto	u7541
 19006   00B520  EF94  F05A         	goto	u7540
 19007   00B524                     u7541:
 19008   00B524  EFB2  F05A         	goto	l8111
 19009   00B528                     u7540:
 19010   00B528                     
 19011                           ;mcc_generated_files/i2c1_master.c: 331:     {;mcc_generated_files/i2c1_master.c: 332:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 19012   00B528  5005               	movf	I2C1_SetCallback@idx^0,w,c
 19013   00B52A  0D02               	mullw	2
 19014   00B52C  0E00               	movlw	low _I2C1_Status
 19015   00B52E  24F3               	addwf	243,w,c
 19016   00B530  6ED9               	movwf	fsr2l,c
 19017   00B532  0E03               	movlw	high _I2C1_Status
 19018   00B534  20F4               	addwfc	prodh,w,c
 19019   00B536  6EDA               	movwf	fsr2h,c
 19020   00B538  0060  F007  FFDE   	movff	I2C1_SetCallback@cb,postinc2
 19021   00B53E  0060  F00B  FFDD   	movff	I2C1_SetCallback@cb+1,postdec2
 19022                           
 19023                           ;mcc_generated_files/i2c1_master.c: 333:         I2C1_Status.callbackPayload[idx] = ptr;
 19024   00B544  5005               	movf	I2C1_SetCallback@idx^0,w,c
 19025   00B546  0D02               	mullw	2
 19026   00B548  0E0C               	movlw	low (_I2C1_Status+12)
 19027   00B54A  24F3               	addwf	243,w,c
 19028   00B54C  6ED9               	movwf	fsr2l,c
 19029   00B54E  0E03               	movlw	high (_I2C1_Status+12)
 19030   00B550  20F4               	addwfc	prodh,w,c
 19031   00B552  6EDA               	movwf	fsr2h,c
 19032   00B554  0060  F00F  FFDE   	movff	I2C1_SetCallback@ptr,postinc2
 19033   00B55A  0060  F013  FFDD   	movff	I2C1_SetCallback@ptr+1,postdec2
 19034                           
 19035                           ;mcc_generated_files/i2c1_master.c: 334:     }
 19036   00B560  EFC8  F05A         	goto	l418
 19037   00B564                     l8111:
 19038                           
 19039                           ;mcc_generated_files/i2c1_master.c: 336:     {;mcc_generated_files/i2c1_master.c: 337:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 19040   00B564  5005               	movf	I2C1_SetCallback@idx^0,w,c
 19041   00B566  0D02               	mullw	2
 19042   00B568  0E00               	movlw	low _I2C1_Status
 19043   00B56A  24F3               	addwf	243,w,c
 19044   00B56C  6ED9               	movwf	fsr2l,c
 19045   00B56E  0E03               	movlw	high _I2C1_Status
 19046   00B570  20F4               	addwfc	prodh,w,c
 19047   00B572  6EDA               	movwf	fsr2h,c
 19048   00B574  0E16               	movlw	low _I2C1_CallbackReturnStop
 19049   00B576  6EDE               	movwf	postinc2,c
 19050   00B578  0EA5               	movlw	high _I2C1_CallbackReturnStop
 19051   00B57A  6EDD               	movwf	postdec2,c
 19052                           
 19053                           ;mcc_generated_files/i2c1_master.c: 338:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 19054   00B57C  5005               	movf	I2C1_SetCallback@idx^0,w,c
 19055   00B57E  0D02               	mullw	2
 19056   00B580  0E0C               	movlw	low (_I2C1_Status+12)
 19057   00B582  24F3               	addwf	243,w,c
 19058   00B584  6ED9               	movwf	fsr2l,c
 19059   00B586  0E03               	movlw	high (_I2C1_Status+12)
 19060   00B588  20F4               	addwfc	prodh,w,c
 19061   00B58A  6EDA               	movwf	fsr2h,c
 19062   00B58C  6ADE               	clrf	postinc2,c
 19063   00B58E  6ADD               	clrf	postdec2,c
 19064   00B590                     l418:
 19065   00B590  0012               	return		;funcret
 19066   00B592                     __end_of_I2C1_SetCallback:
 19067                           	callstack 0
 19068                           
 19069 ;; *************** function _I2C1_SetBuffer *****************
 19070 ;; Defined at:
 19071 ;;		line 293 in file "mcc_generated_files/i2c1_master.c"
 19072 ;; Parameters:    Size  Location     Type
 19073 ;;  buffer          2    0[COMRAM] PTR void 
 19074 ;;		 -> EEPROM_ReadByte@data(1), EEPROM_ReadByte@addressBuffer(2), EEPROM_WriteByte@buffer(3), MPU6050_ReadSensorData@bu
      +ffer(12), 
 19075 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 19076 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 19077 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 19078 ;;  bufferSize      2    2[COMRAM] unsigned int 
 19079 ;; Auto vars:     Size  Location     Type
 19080 ;;		None
 19081 ;; Return value:  Size  Location     Type
 19082 ;;                  1    wreg      void 
 19083 ;; Registers used:
 19084 ;;		wreg, status,2, status,0
 19085 ;; Tracked objects:
 19086 ;;		On entry : 0/0
 19087 ;;		On exit  : 0/0
 19088 ;;		Unchanged: 0/0
 19089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19093 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19094 ;;Total ram usage:        4 bytes
 19095 ;; Hardware stack levels used: 1
 19096 ;; This function calls:
 19097 ;;		Nothing
 19098 ;; This function is called by:
 19099 ;;		_I2C1_Write1ByteRegister
 19100 ;;		_I2C1_WriteNBytes
 19101 ;;		_I2C1_ReadNBytes
 19102 ;;		_I2C1_ReadDataBlock
 19103 ;;		_rd1RegCompleteHandler
 19104 ;;		_rd2RegCompleteHandler
 19105 ;;		_wr1RegCompleteHandler
 19106 ;;		_wr2RegCompleteHandler
 19107 ;;		_rdBlkRegCompleteHandler
 19108 ;;		_I2C1_Read1ByteRegister
 19109 ;;		_I2C1_Read2ByteRegister
 19110 ;;		_I2C1_Write2ByteRegister
 19111 ;; This function uses a non-reentrant model
 19112 ;;
 19113                           
 19114                           	psect	text125
 19115   00A7B2                     __ptext125:
 19116                           	callstack 0
 19117   00A7B2                     _I2C1_SetBuffer:
 19118                           	callstack 25
 19119   00A7B2                     
 19120                           ;mcc_generated_files/i2c1_master.c: 293: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 294: {;mcc_generated_files/i2c1_master.c: 295: 
      +                              if(I2C1_Status.bufferFree)
 19121   00A7B2  0103               	movlb	3	; () banked
 19122   00A7B4  A923               	btfss	(_I2C1_Status+35)& (0+255),4,b
 19123   00A7B6  EFDF  F053         	goto	u7551
 19124   00A7BA  EFE1  F053         	goto	u7550
 19125   00A7BE                     u7551:
 19126   00A7BE  EFEA  F053         	goto	l398
 19127   00A7C2                     u7550:
 19128   00A7C2                     
 19129                           ; BSR set to: 3
 19130                           ;mcc_generated_files/i2c1_master.c: 296:     {;mcc_generated_files/i2c1_master.c: 297:  
      +                                 I2C1_Status.data_ptr = buffer;
 19131   00A7C2  C001  F31D         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 19132   00A7C6  C002  F31E         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 19133   00A7CA                     
 19134                           ; BSR set to: 3
 19135                           ;mcc_generated_files/i2c1_master.c: 298:         I2C1_Status.data_length = bufferSize;
 19136   00A7CA  C003  F31F         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 19137   00A7CE  C004  F320         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 19138   00A7D2                     
 19139                           ; BSR set to: 3
 19140                           ;mcc_generated_files/i2c1_master.c: 299:         I2C1_Status.bufferFree = 0;
 19141   00A7D2  9923               	bcf	(_I2C1_Status+35)& (0+255),4,b
 19142   00A7D4                     l398:
 19143                           
 19144                           ; BSR set to: 3
 19145   00A7D4  0012               	return		;funcret
 19146   00A7D6                     __end_of_I2C1_SetBuffer:
 19147                           	callstack 0
 19148                           
 19149 ;; *************** function _I2C1_ClearInterruptFlags *****************
 19150 ;; Defined at:
 19151 ;;		line 362 in file "mcc_generated_files/i2c1_master.c"
 19152 ;; Parameters:    Size  Location     Type
 19153 ;;		None
 19154 ;; Auto vars:     Size  Location     Type
 19155 ;;		None
 19156 ;; Return value:  Size  Location     Type
 19157 ;;                  1    wreg      void 
 19158 ;; Registers used:
 19159 ;;		wreg, status,2, cstack
 19160 ;; Tracked objects:
 19161 ;;		On entry : 0/0
 19162 ;;		On exit  : 0/0
 19163 ;;		Unchanged: 0/0
 19164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19169 ;;Total ram usage:        0 bytes
 19170 ;; Hardware stack levels used: 1
 19171 ;; Hardware stack levels required when called: 1
 19172 ;; This function calls:
 19173 ;;		_I2C1_MasterClearCountFlag
 19174 ;;		_I2C1_MasterClearNackFlag
 19175 ;;		_I2C1_MasterClearStopFlag
 19176 ;;		_I2C1_MasterIsCountFlagSet
 19177 ;;		_I2C1_MasterIsNackFlagSet
 19178 ;;		_I2C1_MasterIsStopFlagSet
 19179 ;; This function is called by:
 19180 ;;		_I2C1_MasterFsm
 19181 ;; This function uses a non-reentrant model
 19182 ;;
 19183                           
 19184                           	psect	text126
 19185   00ADD8                     __ptext126:
 19186                           	callstack 0
 19187   00ADD8                     _I2C1_ClearInterruptFlags:
 19188                           	callstack 20
 19189   00ADD8                     
 19190                           ;mcc_generated_files/i2c1_master.c: 364:     if(I2C1_MasterIsCountFlagSet())
 19191   00ADD8  EC21  F053         	call	_I2C1_MasterIsCountFlagSet	;wreg free
 19192   00ADDC  0900               	iorlw	0
 19193   00ADDE  B4D8               	btfsc	status,2,c
 19194   00ADE0  EFF4  F056         	goto	u7671
 19195   00ADE4  EFF6  F056         	goto	u7670
 19196   00ADE8                     u7671:
 19197   00ADE8  EFFA  F056         	goto	l8357
 19198   00ADEC                     u7670:
 19199   00ADEC                     
 19200                           ;mcc_generated_files/i2c1_master.c: 365:     {;mcc_generated_files/i2c1_master.c: 366:  
      +                                 I2C1_MasterClearCountFlag();
 19201   00ADEC  EC93  F052         	call	_I2C1_MasterClearCountFlag	;wreg free
 19202                           
 19203                           ;mcc_generated_files/i2c1_master.c: 367:     }
 19204   00ADF0  EF14  F057         	goto	l436
 19205   00ADF4                     l8357:
 19206   00ADF4  EC37  F053         	call	_I2C1_MasterIsStopFlagSet	;wreg free
 19207   00ADF8  0900               	iorlw	0
 19208   00ADFA  B4D8               	btfsc	status,2,c
 19209   00ADFC  EF02  F057         	goto	u7681
 19210   00AE00  EF04  F057         	goto	u7680
 19211   00AE04                     u7681:
 19212   00AE04  EF08  F057         	goto	l8361
 19213   00AE08                     u7680:
 19214   00AE08                     
 19215                           ;mcc_generated_files/i2c1_master.c: 369:     {;mcc_generated_files/i2c1_master.c: 370:  
      +                                 I2C1_MasterClearStopFlag();
 19216   00AE08  EC99  F052         	call	_I2C1_MasterClearStopFlag	;wreg free
 19217                           
 19218                           ;mcc_generated_files/i2c1_master.c: 371:     }
 19219   00AE0C  EF14  F057         	goto	l436
 19220   00AE10                     l8361:
 19221   00AE10  EC2C  F053         	call	_I2C1_MasterIsNackFlagSet	;wreg free
 19222   00AE14  0900               	iorlw	0
 19223   00AE16  B4D8               	btfsc	status,2,c
 19224   00AE18  EF10  F057         	goto	u7691
 19225   00AE1C  EF12  F057         	goto	u7690
 19226   00AE20                     u7691:
 19227   00AE20  EF14  F057         	goto	l436
 19228   00AE24                     u7690:
 19229   00AE24                     
 19230                           ;mcc_generated_files/i2c1_master.c: 373:     {;mcc_generated_files/i2c1_master.c: 374:  
      +                                 I2C1_MasterClearNackFlag();
 19231   00AE24  EC96  F052         	call	_I2C1_MasterClearNackFlag	;wreg free
 19232   00AE28                     l436:
 19233   00AE28  0012               	return		;funcret
 19234   00AE2A                     __end_of_I2C1_ClearInterruptFlags:
 19235                           	callstack 0
 19236                           
 19237 ;; *************** function _I2C1_MasterIsStopFlagSet *****************
 19238 ;; Defined at:
 19239 ;;		line 745 in file "mcc_generated_files/i2c1_master.c"
 19240 ;; Parameters:    Size  Location     Type
 19241 ;;		None
 19242 ;; Auto vars:     Size  Location     Type
 19243 ;;		None
 19244 ;; Return value:  Size  Location     Type
 19245 ;;                  1    wreg      _Bool 
 19246 ;; Registers used:
 19247 ;;		wreg
 19248 ;; Tracked objects:
 19249 ;;		On entry : 0/0
 19250 ;;		On exit  : 0/0
 19251 ;;		Unchanged: 0/0
 19252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19257 ;;Total ram usage:        0 bytes
 19258 ;; Hardware stack levels used: 1
 19259 ;; This function calls:
 19260 ;;		Nothing
 19261 ;; This function is called by:
 19262 ;;		_I2C1_ClearInterruptFlags
 19263 ;; This function uses a non-reentrant model
 19264 ;;
 19265                           
 19266                           	psect	text127
 19267   00A66E                     __ptext127:
 19268                           	callstack 0
 19269   00A66E                     _I2C1_MasterIsStopFlagSet:
 19270                           	callstack 20
 19271   00A66E                     
 19272                           ;mcc_generated_files/i2c1_master.c: 747:     return I2C1PIRbits.PCIF;
 19273   00A66E  013D               	movlb	61	; () banked
 19274   00A670  B579               	btfsc	121,2,b	;volatile
 19275   00A672  EF3D  F053         	goto	u7621
 19276   00A676  EF40  F053         	goto	u7620
 19277   00A67A                     u7621:
 19278   00A67A  0E01               	movlw	1
 19279   00A67C  EF41  F053         	goto	u7626
 19280   00A680                     u7620:
 19281   00A680  0E00               	movlw	0
 19282   00A682                     u7626:
 19283   00A682                     
 19284                           ; BSR set to: 61
 19285   00A682  0012               	return		;funcret
 19286   00A684                     __end_of_I2C1_MasterIsStopFlagSet:
 19287                           	callstack 0
 19288                           
 19289 ;; *************** function _I2C1_MasterIsNackFlagSet *****************
 19290 ;; Defined at:
 19291 ;;		line 755 in file "mcc_generated_files/i2c1_master.c"
 19292 ;; Parameters:    Size  Location     Type
 19293 ;;		None
 19294 ;; Auto vars:     Size  Location     Type
 19295 ;;		None
 19296 ;; Return value:  Size  Location     Type
 19297 ;;                  1    wreg      _Bool 
 19298 ;; Registers used:
 19299 ;;		wreg
 19300 ;; Tracked objects:
 19301 ;;		On entry : 0/0
 19302 ;;		On exit  : 0/0
 19303 ;;		Unchanged: 0/0
 19304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19309 ;;Total ram usage:        0 bytes
 19310 ;; Hardware stack levels used: 1
 19311 ;; This function calls:
 19312 ;;		Nothing
 19313 ;; This function is called by:
 19314 ;;		_I2C1_ClearInterruptFlags
 19315 ;; This function uses a non-reentrant model
 19316 ;;
 19317                           
 19318                           	psect	text128
 19319   00A658                     __ptext128:
 19320                           	callstack 0
 19321   00A658                     _I2C1_MasterIsNackFlagSet:
 19322                           	callstack 20
 19323   00A658                     
 19324                           ;mcc_generated_files/i2c1_master.c: 757:     return I2C1ERRbits.NACKIF;
 19325   00A658  013D               	movlb	61	; () banked
 19326   00A65A  B976               	btfsc	118,4,b	;volatile
 19327   00A65C  EF32  F053         	goto	u7631
 19328   00A660  EF35  F053         	goto	u7630
 19329   00A664                     u7631:
 19330   00A664  0E01               	movlw	1
 19331   00A666  EF36  F053         	goto	u7636
 19332   00A66A                     u7630:
 19333   00A66A  0E00               	movlw	0
 19334   00A66C                     u7636:
 19335   00A66C                     
 19336                           ; BSR set to: 61
 19337   00A66C  0012               	return		;funcret
 19338   00A66E                     __end_of_I2C1_MasterIsNackFlagSet:
 19339                           	callstack 0
 19340                           
 19341 ;; *************** function _I2C1_MasterIsCountFlagSet *****************
 19342 ;; Defined at:
 19343 ;;		line 750 in file "mcc_generated_files/i2c1_master.c"
 19344 ;; Parameters:    Size  Location     Type
 19345 ;;		None
 19346 ;; Auto vars:     Size  Location     Type
 19347 ;;		None
 19348 ;; Return value:  Size  Location     Type
 19349 ;;                  1    wreg      _Bool 
 19350 ;; Registers used:
 19351 ;;		wreg
 19352 ;; Tracked objects:
 19353 ;;		On entry : 0/0
 19354 ;;		On exit  : 0/0
 19355 ;;		Unchanged: 0/0
 19356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19361 ;;Total ram usage:        0 bytes
 19362 ;; Hardware stack levels used: 1
 19363 ;; This function calls:
 19364 ;;		Nothing
 19365 ;; This function is called by:
 19366 ;;		_I2C1_ClearInterruptFlags
 19367 ;; This function uses a non-reentrant model
 19368 ;;
 19369                           
 19370                           	psect	text129
 19371   00A642                     __ptext129:
 19372                           	callstack 0
 19373   00A642                     _I2C1_MasterIsCountFlagSet:
 19374                           	callstack 20
 19375   00A642                     
 19376                           ;mcc_generated_files/i2c1_master.c: 752:     return I2C1PIRbits.CNTIF;
 19377   00A642  013D               	movlb	61	; () banked
 19378   00A644  BF79               	btfsc	121,7,b	;volatile
 19379   00A646  EF27  F053         	goto	u7611
 19380   00A64A  EF2A  F053         	goto	u7610
 19381   00A64E                     u7611:
 19382   00A64E  0E01               	movlw	1
 19383   00A650  EF2B  F053         	goto	u7616
 19384   00A654                     u7610:
 19385   00A654  0E00               	movlw	0
 19386   00A656                     u7616:
 19387   00A656                     
 19388                           ; BSR set to: 61
 19389   00A656  0012               	return		;funcret
 19390   00A658                     __end_of_I2C1_MasterIsCountFlagSet:
 19391                           	callstack 0
 19392                           
 19393 ;; *************** function _I2C1_MasterClearStopFlag *****************
 19394 ;; Defined at:
 19395 ;;		line 760 in file "mcc_generated_files/i2c1_master.c"
 19396 ;; Parameters:    Size  Location     Type
 19397 ;;		None
 19398 ;; Auto vars:     Size  Location     Type
 19399 ;;		None
 19400 ;; Return value:  Size  Location     Type
 19401 ;;                  1    wreg      void 
 19402 ;; Registers used:
 19403 ;;		None
 19404 ;; Tracked objects:
 19405 ;;		On entry : 0/0
 19406 ;;		On exit  : 0/0
 19407 ;;		Unchanged: 0/0
 19408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19413 ;;Total ram usage:        0 bytes
 19414 ;; Hardware stack levels used: 1
 19415 ;; This function calls:
 19416 ;;		Nothing
 19417 ;; This function is called by:
 19418 ;;		_I2C1_ClearInterruptFlags
 19419 ;; This function uses a non-reentrant model
 19420 ;;
 19421                           
 19422                           	psect	text130
 19423   00A532                     __ptext130:
 19424                           	callstack 0
 19425   00A532                     _I2C1_MasterClearStopFlag:
 19426                           	callstack 20
 19427   00A532                     
 19428                           ;mcc_generated_files/i2c1_master.c: 762:     I2C1PIRbits.PCIF = 0;
 19429   00A532  013D               	movlb	61	; () banked
 19430   00A534  9579               	bcf	121,2,b	;volatile
 19431   00A536                     
 19432                           ; BSR set to: 61
 19433   00A536  0012               	return		;funcret
 19434   00A538                     __end_of_I2C1_MasterClearStopFlag:
 19435                           	callstack 0
 19436                           
 19437 ;; *************** function _I2C1_MasterClearNackFlag *****************
 19438 ;; Defined at:
 19439 ;;		line 770 in file "mcc_generated_files/i2c1_master.c"
 19440 ;; Parameters:    Size  Location     Type
 19441 ;;		None
 19442 ;; Auto vars:     Size  Location     Type
 19443 ;;		None
 19444 ;; Return value:  Size  Location     Type
 19445 ;;                  1    wreg      void 
 19446 ;; Registers used:
 19447 ;;		None
 19448 ;; Tracked objects:
 19449 ;;		On entry : 0/0
 19450 ;;		On exit  : 0/0
 19451 ;;		Unchanged: 0/0
 19452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19457 ;;Total ram usage:        0 bytes
 19458 ;; Hardware stack levels used: 1
 19459 ;; This function calls:
 19460 ;;		Nothing
 19461 ;; This function is called by:
 19462 ;;		_I2C1_ClearInterruptFlags
 19463 ;; This function uses a non-reentrant model
 19464 ;;
 19465                           
 19466                           	psect	text131
 19467   00A52C                     __ptext131:
 19468                           	callstack 0
 19469   00A52C                     _I2C1_MasterClearNackFlag:
 19470                           	callstack 20
 19471   00A52C                     
 19472                           ;mcc_generated_files/i2c1_master.c: 772:     I2C1ERRbits.NACKIF = 0;
 19473   00A52C  013D               	movlb	61	; () banked
 19474   00A52E  9976               	bcf	118,4,b	;volatile
 19475   00A530                     
 19476                           ; BSR set to: 61
 19477   00A530  0012               	return		;funcret
 19478   00A532                     __end_of_I2C1_MasterClearNackFlag:
 19479                           	callstack 0
 19480                           
 19481 ;; *************** function _I2C1_MasterClearCountFlag *****************
 19482 ;; Defined at:
 19483 ;;		line 765 in file "mcc_generated_files/i2c1_master.c"
 19484 ;; Parameters:    Size  Location     Type
 19485 ;;		None
 19486 ;; Auto vars:     Size  Location     Type
 19487 ;;		None
 19488 ;; Return value:  Size  Location     Type
 19489 ;;                  1    wreg      void 
 19490 ;; Registers used:
 19491 ;;		None
 19492 ;; Tracked objects:
 19493 ;;		On entry : 0/0
 19494 ;;		On exit  : 0/0
 19495 ;;		Unchanged: 0/0
 19496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19501 ;;Total ram usage:        0 bytes
 19502 ;; Hardware stack levels used: 1
 19503 ;; This function calls:
 19504 ;;		Nothing
 19505 ;; This function is called by:
 19506 ;;		_I2C1_ClearInterruptFlags
 19507 ;; This function uses a non-reentrant model
 19508 ;;
 19509                           
 19510                           	psect	text132
 19511   00A526                     __ptext132:
 19512                           	callstack 0
 19513   00A526                     _I2C1_MasterClearCountFlag:
 19514                           	callstack 20
 19515   00A526                     
 19516                           ;mcc_generated_files/i2c1_master.c: 767:     I2C1PIRbits.CNTIF = 0;
 19517   00A526  013D               	movlb	61	; () banked
 19518   00A528  9F79               	bcf	121,7,b	;volatile
 19519   00A52A                     
 19520                           ; BSR set to: 61
 19521   00A52A  0012               	return		;funcret
 19522   00A52C                     __end_of_I2C1_MasterClearCountFlag:
 19523                           	callstack 0
 19524                           
 19525 ;; *************** function _I2C1_Close *****************
 19526 ;; Defined at:
 19527 ;;		line 237 in file "mcc_generated_files/i2c1_master.c"
 19528 ;; Parameters:    Size  Location     Type
 19529 ;;		None
 19530 ;; Auto vars:     Size  Location     Type
 19531 ;;  returnValue     1    0[COMRAM] enum E358
 19532 ;; Return value:  Size  Location     Type
 19533 ;;                  1    wreg      enum E358
 19534 ;; Registers used:
 19535 ;;		wreg, status,2, cstack
 19536 ;; Tracked objects:
 19537 ;;		On entry : 0/0
 19538 ;;		On exit  : 0/0
 19539 ;;		Unchanged: 0/0
 19540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19545 ;;Total ram usage:        1 bytes
 19546 ;; Hardware stack levels used: 1
 19547 ;; Hardware stack levels required when called: 1
 19548 ;; This function calls:
 19549 ;;		_I2C1_MasterClearIrq
 19550 ;;		_I2C1_MasterClose
 19551 ;;		_I2C1_MasterDisableIrq
 19552 ;; This function is called by:
 19553 ;;		_I2C1_Write1ByteRegister
 19554 ;;		_I2C1_WriteNBytes
 19555 ;;		_I2C1_ReadNBytes
 19556 ;;		_I2C1_ReadDataBlock
 19557 ;;		_I2C1_Read1ByteRegister
 19558 ;;		_I2C1_Read2ByteRegister
 19559 ;;		_I2C1_Write2ByteRegister
 19560 ;; This function uses a non-reentrant model
 19561 ;;
 19562                           
 19563                           	psect	text133
 19564   00A870                     __ptext133:
 19565                           	callstack 0
 19566   00A870                     _I2C1_Close:
 19567                           	callstack 24
 19568   00A870                     
 19569                           ;mcc_generated_files/i2c1_master.c: 239:     i2c1_error_t returnValue = I2C1_BUSY;
 19570   00A870  0E01               	movlw	1
 19571   00A872  6E01               	movwf	I2C1_Close@returnValue^0,c
 19572   00A874                     
 19573                           ;mcc_generated_files/i2c1_master.c: 240:     if(!I2C1_Status.busy)
 19574   00A874  0103               	movlb	3	; () banked
 19575   00A876  B523               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 19576   00A878  EF40  F054         	goto	u9351
 19577   00A87C  EF42  F054         	goto	u9350
 19578   00A880                     u9351:
 19579   00A880  EF4C  F054         	goto	l9451
 19580   00A884                     u9350:
 19581   00A884                     
 19582                           ; BSR set to: 3
 19583                           ;mcc_generated_files/i2c1_master.c: 241:     {;mcc_generated_files/i2c1_master.c: 242:  
      +                                 I2C1_Status.inUse = 0;
 19584   00A884  9723               	bcf	(_I2C1_Status+35)& (0+255),3,b
 19585                           
 19586                           ;mcc_generated_files/i2c1_master.c: 243:         I2C1_Status.address = 0xff;
 19587   00A886  691C               	setf	(_I2C1_Status+28)& (0+255),b
 19588   00A888                     
 19589                           ; BSR set to: 3
 19590                           ;mcc_generated_files/i2c1_master.c: 244:         I2C1_MasterClearIrq();
 19591   00A888  ECB4  F052         	call	_I2C1_MasterClearIrq	;wreg free
 19592   00A88C                     
 19593                           ;mcc_generated_files/i2c1_master.c: 245:         I2C1_MasterDisableIrq();
 19594   00A88C  ECAA  F053         	call	_I2C1_MasterDisableIrq	;wreg free
 19595   00A890                     
 19596                           ;mcc_generated_files/i2c1_master.c: 246:         I2C1_MasterClose();
 19597   00A890  ECEF  F052         	call	_I2C1_MasterClose	;wreg free
 19598   00A894                     
 19599                           ;mcc_generated_files/i2c1_master.c: 247:         returnValue = I2C1_Status.error;
 19600   00A894  C322  F001         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 19601   00A898                     l9451:
 19602                           
 19603                           ;mcc_generated_files/i2c1_master.c: 249:     return returnValue;
 19604   00A898  5001               	movf	I2C1_Close@returnValue^0,w,c
 19605   00A89A  0012               	return		;funcret
 19606   00A89C                     __end_of_I2C1_Close:
 19607                           	callstack 0
 19608                           
 19609 ;; *************** function _I2C1_MasterDisableIrq *****************
 19610 ;; Defined at:
 19611 ;;		line 792 in file "mcc_generated_files/i2c1_master.c"
 19612 ;; Parameters:    Size  Location     Type
 19613 ;;		None
 19614 ;; Auto vars:     Size  Location     Type
 19615 ;;		None
 19616 ;; Return value:  Size  Location     Type
 19617 ;;                  1    wreg      void 
 19618 ;; Registers used:
 19619 ;;		None
 19620 ;; Tracked objects:
 19621 ;;		On entry : 0/0
 19622 ;;		On exit  : 0/0
 19623 ;;		Unchanged: 0/0
 19624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19629 ;;Total ram usage:        0 bytes
 19630 ;; Hardware stack levels used: 1
 19631 ;; This function calls:
 19632 ;;		Nothing
 19633 ;; This function is called by:
 19634 ;;		_I2C1_Close
 19635 ;;		_I2C1_SetTimeOut
 19636 ;; This function uses a non-reentrant model
 19637 ;;
 19638                           
 19639                           	psect	text134
 19640   00A754                     __ptext134:
 19641                           	callstack 0
 19642   00A754                     _I2C1_MasterDisableIrq:
 19643                           	callstack 24
 19644   00A754                     
 19645                           ;mcc_generated_files/i2c1_master.c: 794:     PIE3bits.I2C1IE = 0;
 19646   00A754  0139               	movlb	57	; () banked
 19647   00A756  9393               	bcf	147,1,b	;volatile
 19648                           
 19649                           ;mcc_generated_files/i2c1_master.c: 795:     PIE3bits.I2C1EIE = 0;
 19650   00A758  9593               	bcf	147,2,b	;volatile
 19651                           
 19652                           ;mcc_generated_files/i2c1_master.c: 796:     PIE2bits.I2C1RXIE = 0;
 19653   00A75A  9F92               	bcf	146,7,b	;volatile
 19654                           
 19655                           ;mcc_generated_files/i2c1_master.c: 797:     PIE3bits.I2C1TXIE = 0;
 19656   00A75C  9193               	bcf	147,0,b	;volatile
 19657                           
 19658                           ;mcc_generated_files/i2c1_master.c: 798:     I2C1PIEbits.SCIE = 0;
 19659   00A75E  013D               	movlb	61	; () banked
 19660   00A760  917A               	bcf	122,0,b	;volatile
 19661                           
 19662                           ;mcc_generated_files/i2c1_master.c: 799:     I2C1PIEbits.PCIE = 0;
 19663   00A762  957A               	bcf	122,2,b	;volatile
 19664                           
 19665                           ;mcc_generated_files/i2c1_master.c: 800:     I2C1PIEbits.CNTIE = 0;
 19666   00A764  9F7A               	bcf	122,7,b	;volatile
 19667                           
 19668                           ;mcc_generated_files/i2c1_master.c: 801:     I2C1PIEbits.ACKTIE = 0;
 19669   00A766  9D7A               	bcf	122,6,b	;volatile
 19670                           
 19671                           ;mcc_generated_files/i2c1_master.c: 802:     I2C1PIEbits.RSCIE = 0;
 19672   00A768  937A               	bcf	122,1,b	;volatile
 19673                           
 19674                           ;mcc_generated_files/i2c1_master.c: 803:     I2C1ERRbits.BCLIE = 0;
 19675   00A76A  9376               	bcf	118,1,b	;volatile
 19676                           
 19677                           ;mcc_generated_files/i2c1_master.c: 804:     I2C1ERRbits.BTOIE = 0;
 19678   00A76C  9576               	bcf	118,2,b	;volatile
 19679                           
 19680                           ;mcc_generated_files/i2c1_master.c: 805:     I2C1ERRbits.NACKIE = 0;
 19681   00A76E  9176               	bcf	118,0,b	;volatile
 19682   00A770                     
 19683                           ; BSR set to: 61
 19684   00A770  0012               	return		;funcret
 19685   00A772                     __end_of_I2C1_MasterDisableIrq:
 19686                           	callstack 0
 19687                           
 19688 ;; *************** function _I2C1_MasterClose *****************
 19689 ;; Defined at:
 19690 ;;		line 655 in file "mcc_generated_files/i2c1_master.c"
 19691 ;; Parameters:    Size  Location     Type
 19692 ;;		None
 19693 ;; Auto vars:     Size  Location     Type
 19694 ;;		None
 19695 ;; Return value:  Size  Location     Type
 19696 ;;                  1    wreg      void 
 19697 ;; Registers used:
 19698 ;;		wreg, status,2
 19699 ;; Tracked objects:
 19700 ;;		On entry : 0/0
 19701 ;;		On exit  : 0/0
 19702 ;;		Unchanged: 0/0
 19703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19708 ;;Total ram usage:        0 bytes
 19709 ;; Hardware stack levels used: 1
 19710 ;; This function calls:
 19711 ;;		Nothing
 19712 ;; This function is called by:
 19713 ;;		_I2C1_Close
 19714 ;; This function uses a non-reentrant model
 19715 ;;
 19716                           
 19717                           	psect	text135
 19718   00A5DE                     __ptext135:
 19719                           	callstack 0
 19720   00A5DE                     _I2C1_MasterClose:
 19721                           	callstack 24
 19722   00A5DE                     
 19723                           ;mcc_generated_files/i2c1_master.c: 658:     I2C1CON0bits.EN = 0;
 19724   00A5DE  013D               	movlb	61	; () banked
 19725   00A5E0  9F73               	bcf	115,7,b	;volatile
 19726   00A5E2                     
 19727                           ; BSR set to: 61
 19728                           ;mcc_generated_files/i2c1_master.c: 660:     I2C1PIR = 0x00;
 19729   00A5E2  0E00               	movlw	0
 19730   00A5E4  6F79               	movwf	121,b	;volatile
 19731   00A5E6                     
 19732                           ; BSR set to: 61
 19733                           ;mcc_generated_files/i2c1_master.c: 662:     I2C1STAT1bits.CLRBF = 1;
 19734   00A5E6  8578               	bsf	120,2,b	;volatile
 19735   00A5E8                     
 19736                           ; BSR set to: 61
 19737   00A5E8  0012               	return		;funcret
 19738   00A5EA                     __end_of_I2C1_MasterClose:
 19739                           	callstack 0
 19740                           
 19741 ;; *************** function _I2C1_MasterClearIrq *****************
 19742 ;; Defined at:
 19743 ;;		line 808 in file "mcc_generated_files/i2c1_master.c"
 19744 ;; Parameters:    Size  Location     Type
 19745 ;;		None
 19746 ;; Auto vars:     Size  Location     Type
 19747 ;;		None
 19748 ;; Return value:  Size  Location     Type
 19749 ;;                  1    wreg      void 
 19750 ;; Registers used:
 19751 ;;		wreg, status,2
 19752 ;; Tracked objects:
 19753 ;;		On entry : 0/0
 19754 ;;		On exit  : 0/0
 19755 ;;		Unchanged: 0/0
 19756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19761 ;;Total ram usage:        0 bytes
 19762 ;; Hardware stack levels used: 1
 19763 ;; This function calls:
 19764 ;;		Nothing
 19765 ;; This function is called by:
 19766 ;;		_I2C1_Open
 19767 ;;		_I2C1_Close
 19768 ;;		_I2C1_DO_BUS_COLLISION
 19769 ;; This function uses a non-reentrant model
 19770 ;;
 19771                           
 19772                           	psect	text136
 19773   00A568                     __ptext136:
 19774                           	callstack 0
 19775   00A568                     _I2C1_MasterClearIrq:
 19776                           	callstack 24
 19777   00A568                     
 19778                           ;mcc_generated_files/i2c1_master.c: 810:     I2C1PIR = 0x00;
 19779   00A568  0E00               	movlw	0
 19780   00A56A  013D               	movlb	61	; () banked
 19781   00A56C  6F79               	movwf	121,b	;volatile
 19782   00A56E                     
 19783                           ; BSR set to: 61
 19784   00A56E  0012               	return		;funcret
 19785   00A570                     __end_of_I2C1_MasterClearIrq:
 19786                           	callstack 0
 19787                           
 19788                           	psect	text137
 19789   000000                     __ptext137:
 19790                           	callstack 0
 19791   000000                     
 19792                           	psect	rparam
 19793   000000                     
 19794                           	psect	config
 19795                           
 19796                           ;Config register CONFIG1L @ 0x300000
 19797                           ;	External Oscillator Selection
 19798                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 19799                           ;	Reset Oscillator Selection
 19800                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 19801   300000                     	org	3145728
 19802   300000  FA                 	db	250
 19803                           
 19804                           ;Config register CONFIG1H @ 0x300001
 19805                           ;	Clock out Enable bit
 19806                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 19807                           ;	PRLOCKED One-Way Set Enable bit
 19808                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 19809                           ;	Clock Switch Enable bit
 19810                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19811                           ;	Fail-Safe Clock Monitor Enable bit
 19812                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 19813   300001                     	org	3145729
 19814   300001  FF                 	db	255
 19815                           
 19816                           ;Config register CONFIG2L @ 0x300002
 19817                           ;	MCLR Enable bit
 19818                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 19819                           ;	Power-up timer selection bits
 19820                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 19821                           ;	Multi-vector enable bit
 19822                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 19823                           ;	IVTLOCK bit One-way set enable bit
 19824                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 19825                           ;	Low Power BOR Enable bit
 19826                           ;	LPBOREN = OFF, ULPBOR disabled
 19827                           ;	Brown-out Reset Enable bits
 19828                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 19829   300002                     	org	3145730
 19830   300002  F7                 	db	247
 19831                           
 19832                           ;Config register CONFIG2H @ 0x300003
 19833                           ;	Brown-out Reset Voltage Selection bits
 19834                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 19835                           ;	ZCD Disable bit
 19836                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 19837                           ;	PPSLOCK bit One-Way Set Enable bit
 19838                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 19839                           ;	Stack Full/Underflow Reset Enable bit
 19840                           ;	STVREN = ON, Stack full/underflow will cause Reset
 19841                           ;	Debugger Enable bit
 19842                           ;	DEBUG = OFF, Background debugger disabled
 19843                           ;	Extended Instruction Set Enable bit
 19844                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 19845   300003                     	org	3145731
 19846   300003  FF                 	db	255
 19847                           
 19848                           ;Config register CONFIG3L @ 0x300004
 19849                           ;	WDT Period selection bits
 19850                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 19851                           ;	WDT operating mode
 19852                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 19853   300004                     	org	3145732
 19854   300004  9F                 	db	159
 19855                           
 19856                           ;Config register CONFIG3H @ 0x300005
 19857                           ;	WDT Window Select bits
 19858                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 19859                           ;	WDT input clock selector
 19860                           ;	WDTCCS = SC, Software Control
 19861   300005                     	org	3145733
 19862   300005  FF                 	db	255
 19863                           
 19864                           ;Config register CONFIG4L @ 0x300006
 19865                           ;	Boot Block Size selection bits
 19866                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 19867                           ;	Boot Block enable bit
 19868                           ;	BBEN = OFF, Boot block disabled
 19869                           ;	Storage Area Flash enable bit
 19870                           ;	SAFEN = OFF, SAF disabled
 19871                           ;	Application Block write protection bit
 19872                           ;	WRTAPP = OFF, Application Block not write protected
 19873   300006                     	org	3145734
 19874   300006  FF                 	db	255
 19875                           
 19876                           ;Config register CONFIG4H @ 0x300007
 19877                           ;	Boot Block Write Protection bit
 19878                           ;	WRTB = OFF, Boot Block not write-protected
 19879                           ;	Configuration Register Write Protection bit
 19880                           ;	WRTC = OFF, Configuration registers not write-protected
 19881                           ;	Data EEPROM Write Protection bit
 19882                           ;	WRTD = OFF, Data EEPROM not write-protected
 19883                           ;	SAF Write protection bit
 19884                           ;	WRTSAF = OFF, SAF not Write Protected
 19885                           ;	Low Voltage Programming Enable bit
 19886                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 19887   300007                     	org	3145735
 19888   300007  FF                 	db	255
 19889                           
 19890                           ;Config register CONFIG5L @ 0x300008
 19891                           ;	PFM and Data EEPROM Code Protection bit
 19892                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 19893   300008                     	org	3145736
 19894   300008  FF                 	db	255
 19895                           
 19896                           ;Config register CONFIG5H @ 0x300009
 19897                           ;	unspecified, using default values
 19898   300009                     	org	3145737
 19899   300009  FF                 	db	255
 19900                           tosu	equ	0x3FFF
 19901                           tosh	equ	0x3FFE
 19902                           tosl	equ	0x3FFD
 19903                           stkptr	equ	0x3FFC
 19904                           pclatu	equ	0x3FFB
 19905                           pclath	equ	0x3FFA
 19906                           pcl	equ	0x3FF9
 19907                           tblptru	equ	0x3FF8
 19908                           tblptrh	equ	0x3FF7
 19909                           tblptrl	equ	0x3FF6
 19910                           tablat	equ	0x3FF5
 19911                           prodh	equ	0x3FF4
 19912                           prodl	equ	0x3FF3
 19913                           indf0	equ	0x3FEF
 19914                           postinc0	equ	0x3FEE
 19915                           postdec0	equ	0x3FED
 19916                           preinc0	equ	0x3FEC
 19917                           plusw0	equ	0x3FEB
 19918                           fsr0h	equ	0x3FEA
 19919                           fsr0l	equ	0x3FE9
 19920                           wreg	equ	0x3FE8
 19921                           indf1	equ	0x3FE7
 19922                           postinc1	equ	0x3FE6
 19923                           postdec1	equ	0x3FE5
 19924                           preinc1	equ	0x3FE4
 19925                           plusw1	equ	0x3FE3
 19926                           fsr1h	equ	0x3FE2
 19927                           fsr1l	equ	0x3FE1
 19928                           bsr	equ	0x3FE0
 19929                           indf2	equ	0x3FDF
 19930                           postinc2	equ	0x3FDE
 19931                           postdec2	equ	0x3FDD
 19932                           preinc2	equ	0x3FDC
 19933                           plusw2	equ	0x3FDB
 19934                           fsr2h	equ	0x3FDA
 19935                           fsr2l	equ	0x3FD9
 19936                           status	equ	0x3FD8

Data Sizes:
    Strings     477
    Constant    38
    Data        0
    BSS         236
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160     89     141
    BANK1           256    256     256
    BANK2           256     20      37
    BANK3           256      0     172
    BANK4           256    236     236
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    atou@ep	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2259(BANK3[32]), 

    atou@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    atou@pll	PTR unsigned long long  size(1) Largest target is 8
		 -> vfsfcnvrt@llu(BANK0[8]), 

    bufferBlock$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    EEPROM_ReadBlock@data	PTR unsigned char  size(2) Largest target is 24
		 -> LoadCurrentAddressEEPROM@addressBuffer(COMRAM[2]), ReadAndSendEEPROMData@eepromReadBuffer(BANK1[24]), ReadAndSendEEPROMDataCSV@eepromReadBuffer(BANK1[24]), 

    EEPROM_WriteBlock@data	PTR unsigned char  size(2) Largest target is 24
		 -> eepromBuffer(BANK3[24]), StoreCurrentAddressEEPROM@addressBuffer(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fgetc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    fgetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fgetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$2671	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_DO_RX_EMPTY$2671$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$2676	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_TX$2659	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_DO_TX$2659$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_TX$2664	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$2665	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_DO_TX_EMPTY$2665$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$2670	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    i2c1_fsmStateTable	const PTR FTN()enum E16630[19] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_BUS_COLLISION(), I2C1_DO_BUS_ERROR(), I2C1_DO_IDLE(), 
		 -> I2C1_DO_RESET(), I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_EMPTY(), 
		 -> I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), 
		 -> I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), 
		 -> I2C1_DO_TX(), I2C1_DO_TX_ACK(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$2658	const PTR FTN()enum E16630 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_BUS_COLLISION(), I2C1_DO_BUS_ERROR(), I2C1_DO_IDLE(), 
		 -> I2C1_DO_RESET(), I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_EMPTY(), 
		 -> I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), 
		 -> I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), 
		 -> I2C1_DO_TX(), I2C1_DO_TX_ACK(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_ReadDataBlock@data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> EEPROM_ReadByte@data(COMRAM[1]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 12
		 -> EEPROM_ReadByte@addressBuffer(COMRAM[2]), EEPROM_ReadByte@data(COMRAM[1]), EEPROM_WriteByte@buffer(COMRAM[3]), I2C1_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write2ByteRegister@reg(COMRAM[1]), MPU6050_ReadSensorData@buffer(COMRAM[12]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EEPROM_ReadByte@addressBuffer(COMRAM[2]), EEPROM_ReadByte@data(COMRAM[1]), EEPROM_WriteByte@buffer(COMRAM[3]), I2C1_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write2ByteRegister@reg(COMRAM[1]), MPU6050_ReadSensorData@buffer(COMRAM[12]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    I2C1_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 3
		 -> EEPROM_ReadByte@addressBuffer(COMRAM[2]), EEPROM_WriteByte@buffer(COMRAM[3]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), eepromBuffer(BANK3[24]), ReadAndSendEEPROMData@ax_read(BANK1[4]), ReadAndSendEEPROMData@ay_read(BANK1[4]), 
		 -> ReadAndSendEEPROMData@az_read(BANK1[4]), ReadAndSendEEPROMData@gx_read(BANK1[4]), ReadAndSendEEPROMData@gy_read(BANK1[4]), ReadAndSendEEPROMData@gz_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@ax_read(BANK1[4]), ReadAndSendEEPROMDataCSV@ay_read(BANK1[4]), ReadAndSendEEPROMDataCSV@az_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gx_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@gy_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gz_read(BANK1[4]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), eepromBuffer(BANK3[24]), ReadAndSendEEPROMData@ax_read(BANK1[4]), ReadAndSendEEPROMData@ay_read(BANK1[4]), 
		 -> ReadAndSendEEPROMData@az_read(BANK1[4]), ReadAndSendEEPROMData@gx_read(BANK1[4]), ReadAndSendEEPROMData@gy_read(BANK1[4]), ReadAndSendEEPROMData@gz_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@ax_read(BANK1[4]), ReadAndSendEEPROMDataCSV@ay_read(BANK1[4]), ReadAndSendEEPROMDataCSV@az_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gx_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@gy_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gz_read(BANK1[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ax(BANK0[4]), ay(BANK0[4]), az(BANK0[4]), dbuf(BANK3[80]), 
		 -> gx(BANK0[4]), gy(BANK0[4]), gz(BANK0[4]), ReadAndSendEEPROMData@eepromReadBuffer(BANK1[24]), 
		 -> ReadAndSendEEPROMDataCSV@eepromReadBuffer(BANK1[24]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> ax(BANK0[4]), ay(BANK0[4]), az(BANK0[4]), dbuf(BANK3[80]), 
		 -> gx(BANK0[4]), gy(BANK0[4]), gz(BANK0[4]), ReadAndSendEEPROMData@eepromReadBuffer(BANK1[24]), 
		 -> ReadAndSendEEPROMDataCSV@eepromReadBuffer(BANK1[24]), 

    memset@dest	PTR void  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    memset@p	PTR unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    MPU6050_ReadSensorData@ax	PTR float  size(1) Largest target is 4
		 -> ax(BANK0[4]), 

    MPU6050_ReadSensorData@ay	PTR float  size(1) Largest target is 4
		 -> ay(BANK0[4]), 

    MPU6050_ReadSensorData@az	PTR float  size(1) Largest target is 4
		 -> az(BANK0[4]), 

    MPU6050_ReadSensorData@gx	PTR float  size(1) Largest target is 4
		 -> gx(BANK0[4]), 

    MPU6050_ReadSensorData@gy	PTR float  size(1) Largest target is 4
		 -> gy(BANK0[4]), 

    MPU6050_ReadSensorData@gz	PTR float  size(1) Largest target is 4
		 -> gz(BANK0[4]), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    ParseUserInput@input	PTR const unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    ParseUserInput@Ndat	PTR unsigned long  size(1) Largest target is 4
		 -> Ndat(BANK0[4]), 

    ParseUserInput@Tm	PTR unsigned long  size(1) Largest target is 4
		 -> Tm(BANK0[4]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1967$buffer	PTR unsigned char  size(2) Largest target is 0

    S1967$source	PTR const unsigned char  size(2) Largest target is 0

    S499$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S499$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S499$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S499$data_ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EEPROM_ReadByte@addressBuffer(COMRAM[2]), EEPROM_ReadByte@data(COMRAM[1]), EEPROM_WriteByte@buffer(COMRAM[3]), I2C1_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write2ByteRegister@reg(COMRAM[1]), MPU6050_ReadSensorData@buffer(COMRAM[12]), NULL(NULL[0]), 

    S96$data	PTR unsigned char  size(1) Largest target is 12
		 -> MPU6050_ReadSensorData@buffer(COMRAM[12]), 

    skipws@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), eepromBuffer(BANK3[24]), ReadAndSendEEPROMData@ax_read(BANK1[4]), ReadAndSendEEPROMData@ay_read(BANK1[4]), 
		 -> ReadAndSendEEPROMData@az_read(BANK1[4]), ReadAndSendEEPROMData@gx_read(BANK1[4]), ReadAndSendEEPROMData@gy_read(BANK1[4]), ReadAndSendEEPROMData@gz_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@ax_read(BANK1[4]), ReadAndSendEEPROMDataCSV@ay_read(BANK1[4]), ReadAndSendEEPROMDataCSV@az_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gx_read(BANK1[4]), 
		 -> ReadAndSendEEPROMDataCSV@gy_read(BANK1[4]), ReadAndSendEEPROMDataCSV@gz_read(BANK1[4]), 

    sp__memset	PTR void  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_1(CODE[50]), STR_10(CODE[46]), STR_11(CODE[46]), STR_17(CODE[50]), 
		 -> STR_3(CODE[31]), STR_5(CODE[69]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> Handle_LOG_STAT@buffer(BANK1[200]), main@buffer(BANK4[200]), ReadAndSendEEPROMData@buffer(BANK1[200]), ReadAndSendEEPROMDataCSV@buffer(BANK1[200]), 

    sscanf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sscanf(BANK0[2]), 

    sscanf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_9(CODE[14]), 

    sscanf@s	PTR const unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_19(CODE[4]), STR_22(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), STR_8(CODE[15]), STR_9(CODE[14]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), STR_16(CODE[9]), STR_27(CODE[3]), 

    __strtoxll@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2259(BANK3[32]), 

    __strtoxll@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> atou@ep(COMRAM[2]), 

    __strtoxll@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf@doscan$F2259(BANK3[32]), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), NULL(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), NULL(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), NULL(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART_ReceiveString@receivedString	PTR unsigned char  size(2) Largest target is 20
		 -> main@userInput(BANK4[20]), 

    UART_SendString@str	PTR const unsigned char  size(2) Largest target is 200
		 -> Handle_LOG_STAT@buffer(BANK1[200]), main@buffer(BANK4[200]), main@userInput(BANK4[20]), ReadAndSendEEPROMData@buffer(BANK1[200]), 
		 -> ReadAndSendEEPROMDataCSV@buffer(BANK1[200]), STR_12(CODE[62]), STR_13(CODE[11]), STR_14(CODE[2]), 
		 -> STR_18(CODE[38]), STR_2(CODE[19]), STR_4(CODE[5]), STR_6(CODE[33]), 
		 -> STR_7(CODE[9]), 

    ungetc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    ungetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    ungetc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 69
		 -> STR_1(CODE[50]), STR_10(CODE[46]), STR_11(CODE[46]), STR_17(CODE[50]), 
		 -> STR_3(CODE[31]), STR_5(CODE[69]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 69
		 -> STR_1(CODE[50]), STR_10(CODE[46]), STR_11(CODE[46]), STR_17(CODE[50]), 
		 -> STR_3(CODE[31]), STR_5(CODE[69]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_1(CODE[50]), STR_10(CODE[46]), STR_11(CODE[46]), STR_17(CODE[50]), 
		 -> STR_3(CODE[31]), STR_5(CODE[69]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfscanf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfscanf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_9(CODE[14]), 

    vfscanf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), STR_9(CODE[14]), 

    vfscanf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    vfsfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK0[1]), 

    vfsfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfscanf@cfmt(BANK0[2]), 

    vfsfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sscanf@f(BANK0[12]), 

    vfsfcnvrt@vp	PTR void  size(1) Largest target is 4
		 -> Ndat(BANK0[4]), ?_sprintf(BANK0[2]), ?_sscanf(BANK0[2]), Tm(BANK0[4]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[3]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_ReadAndSendEEPROMDataCSV
    _StartLogging->_ReadAndSendEEPROMData
    _StoreCurrentAddressEEPROM->_EEPROM_WriteBlock
    _EEPROM_WriteBlock->_EEPROM_WriteByte
    _EEPROM_WriteByte->_I2C1_WriteNBytes
    _ReadAndSendEEPROMData->_sprintf
    _MPU6050_ReadSensorData->___fldiv
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _ReadAndSendEEPROMDataCSV->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _UART_SendString->_UART1_Write
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atou
    _atou->___strtoxll
    _skipws->_fgetc
    _fgetc->_getch
    ___strtoxll->___omul
    _MPU6050_Init->_I2C1_Write1ByteRegister
    _LoadCurrentAddressEEPROM->_EEPROM_ReadBlock
    _EEPROM_ReadBlock->_EEPROM_ReadByte
    _EEPROM_ReadByte->_I2C1_ReadNBytes
    _EEPROM_ReadByte->_I2C1_WriteNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_MasterRead->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_SEND_STOP->_I2C1_MasterSendTxData
    _I2C1_DO_SEND_STOP->_I2C1_MasterSetCounter
    _I2C1_DO_RX->_I2C1_DO_RX_EMPTY
    _I2C1_DO_BUS_COLLISION->_rdBlkRegCompleteHandler
    _I2C1_DO_SEND_RESTART_READ->_I2C1_MasterSetCounter
    _I2C1_DO_RX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _main in BANK0

    _main->_StartLogging
    _StartLogging->_ReadAndSendEEPROMData
    _ReadAndSendEEPROMData->_sprintf
    _ReadAndSendEEPROMDataCSV->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _ParseUserInput->_sscanf
    _sscanf->_vfscanf
    _vfscanf->_vfsfcnvrt

Critical Paths under _main in BANK1

    _main->_ReadAndSendEEPROMDataCSV
    _StartLogging->_ReadAndSendEEPROMData

Critical Paths under _main in BANK2

    _main->_StartLogging

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               260   260      0 3445927
                                              0 BANK4    236   236      0
           _LoadCurrentAddressEEPROM
                       _MPU6050_Init
                     _ParseUserInput
           _ReadAndSendEEPROMDataCSV
                  _SYSTEM_Initialize
                       _StartLogging
                 _UART_ReceiveString
                    _UART_SendString
                             ___lmul
                             _memset
                            _sprintf
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     407
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _UART_ReceiveString                                  10     7      3     537
                                              0 COMRAM    10     7      3
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           0     0      0       0
                                NULL *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultErrorHandler                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartLogging                                       222   222      0 1696803
                                             87 BANK0      2     2      0
                                              0 BANK2     20    20      0
                  _EEPROM_WriteBlock
             _MPU6050_ReadSensorData
              _ReadAndSendEEPROMData
          _StoreCurrentAddressEEPROM
                    _UART_SendString
                             ___lmul
                    _custom_delay_ms
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _custom_delay_ms                                      5     1      4     121
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1356
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _StoreCurrentAddressEEPROM                            2     2      0  325685
                                             41 COMRAM     2     2      0
                  _EEPROM_WriteBlock
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteBlock                                    7     2      5  325611
                                             34 COMRAM     7     2      5
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (4) _EEPROM_WriteByte                                     8     5      3  324578
                                             26 COMRAM     8     5      3
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadAndSendEEPROMData                              266   258      8  703658
                                             91 COMRAM     2     2      0
                                             79 BANK0      8     0      8
                                              0 BANK1    256   256      0
                   _EEPROM_ReadBlock
                    _UART_SendString
                             _memcpy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _MPU6050_ReadSensorData                              32    26      6  333378
                                             39 COMRAM    32    26      6
                 _I2C1_ReadDataBlock
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1016
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_ReadDataBlock                                   8     4      4  327178
                                             22 COMRAM     8     4      4
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     363
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadAndSendEEPROMDataCSV                           266   258      8  703928
                                             91 COMRAM     2     2      0
                                             79 BANK0      8     0      8
                                              0 BANK1    256   256      0
                   _EEPROM_ReadBlock
                    _UART_SendString
                             _memcpy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    15     28   47774
                                             78 COMRAM    13    13      0
                                             51 BANK0     28     0     28
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4   46364
                                             76 COMRAM     2     2      0
                                             47 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3   45867
                                             67 COMRAM     9     9      0
                                             44 BANK0      3     0      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                16    11      5    4288
                                             24 COMRAM    16    11      5
                                _pad
 ---------------------------------------------------------------------------------
 (4) _utoa                                                11     6      5    5050
                                             24 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     421
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    2502
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2062
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   31618
                                             59 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3703
                                             16 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1239
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     919
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              1 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    5338
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3803
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      2     0      2    1446
                                              1 COMRAM     2     0      2
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ParseUserInput                                       4     0      4   16731
                                             46 BANK0      4     0      4
                             _sscanf
 ---------------------------------------------------------------------------------
 (2) _sscanf                                              21    15      6   16275
                                             25 BANK0     21    15      6
                            _vfscanf
 ---------------------------------------------------------------------------------
 (3) _vfscanf                                             10     6      4   15623
                                             15 BANK0     10     6      4
                          _vfsfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfsfcnvrt                                           36    33      3   14965
                                             90 COMRAM     3     0      3
                                              0 BANK0     15    15      0
                               _atou
                              _fgetc
                             _skipws
                            _strncmp
                             _ungetc
 ---------------------------------------------------------------------------------
 (1) _strncmp                                              7     1      6    1067
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (5) _atou                                                18    16      2    8008
                                             72 COMRAM    18    16      2
                         ___strtoxll
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (5) _skipws                                               4     3      1    2237
                                             11 COMRAM     4     3      1
                              _fgetc
                             _ungetc
 ---------------------------------------------------------------------------------
 (5) _ungetc                                               5     2      3    1155
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _fgetc                                                9     7      2     744
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (7) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) ___strtoxll                                          48    40      8    2775
                                             24 COMRAM    48    40      8
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     456
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         1     1      0  327020
            _I2C1_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C1_Write1ByteRegister                              3     1      2  326986
                                             22 COMRAM     3     1      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LoadCurrentAddressEEPROM                             4     4      0  647918
                                             40 COMRAM     4     4      0
                   _EEPROM_ReadBlock
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadBlock                                     8     3      5  647816
                                             32 COMRAM     8     3      5
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (4) _EEPROM_ReadByte                                      6     4      2  646243
                                             26 COMRAM     6     4      2
                    _I2C1_ReadNBytes
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (5) _I2C1_WriteNBytes                                     4     1      3  324151
                                             22 COMRAM     4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2259
                                              5 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  319112
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C1_ReadNBytes                                      4     1      3  321712
                                             22 COMRAM     4     1      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                              0 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterRead                                      0     0      0  319112
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  319112
                                             20 COMRAM     2     2      0
              _I2C1_DO_SEND_ADR_READ
             _I2C1_DO_SEND_ADR_WRITE
              _I2C1_MasterSetCounter
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  292404
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       2     2      0  292404
                                             18 COMRAM     2     2      0
           _I2C1_ClearInterruptFlags
               _I2C1_DO_ADDRESS_NACK *
              _I2C1_DO_BUS_COLLISION *
                  _I2C1_DO_BUS_ERROR *
                       _I2C1_DO_IDLE *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
                   _I2C1_DO_RX_EMPTY *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                     _I2C1_DO_TX_ACK *
                   _I2C1_DO_TX_EMPTY *
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          6     6      0   79808
                                             12 COMRAM     6     6      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                   _I2C1_DO_TX_EMPTY
                  _I2C1_MasterIsNack
            _I2C1_MasterIsTxBufEmpty
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterIsTxBufEmpty                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   26547
                                             12 COMRAM     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_MasterDisableRestart
           _I2C1_MasterEnableRestart
              _I2C1_MasterSetCounter
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0      62
              _I2C1_MasterGetCounter
              _I2C1_MasterSendTxData
              _I2C1_MasterSetCounter
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetCounter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                       _I2C1_DO_IDLE
                _I2C1_MasterSendNack
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          3     3      0   26581
                                             14 COMRAM     3     3      0
                   _I2C1_DO_RX_EMPTY
               _I2C1_MasterGetRxData
             _I2C1_MasterIsRxBufFull
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterIsRxBufFull                              0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_BUS_ERROR                                   0     0      0       0
                _I2C1_MasterResetBus
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_BUS_COLLISION                               2     2      0   53125
                                             12 COMRAM     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
                      _I2C1_DO_RESET
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                _I2C1_MasterClearIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0   26609
              _I2C1_DO_SEND_ADR_READ
              _I2C1_MasterSetCounter
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_SEND_ADR_READ                               0     0      0   26578
                   _I2C1_DO_RX_EMPTY
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_EMPTY                                    2     2      0   26547
                                             12 COMRAM     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_MasterDisableRestart
           _I2C1_MasterEnableRestart
              _I2C1_MasterSetCounter
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetCounter                               1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterDisableRestart                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
                _I2C1_MasterResetBus
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterResetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   26516
                                             12 COMRAM     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    5232
                                              9 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    5232
                                              9 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             3     1      2    5263
                                              9 COMRAM     3     1      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    5232
                                              9 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    5232
                                              9 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _I2C1_SetDataCompleteCallback                        4     0      4    2979
                                              5 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4    1117
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    2222
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     325
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) NULL(Fake)                                            2     0      2       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ClearInterruptFlags                            0     0      0       0
          _I2C1_MasterClearCountFlag
           _I2C1_MasterClearNackFlag
           _I2C1_MasterClearStopFlag
          _I2C1_MasterIsCountFlagSet
           _I2C1_MasterIsNackFlagSet
           _I2C1_MasterIsStopFlagSet
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterIsStopFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterIsNackFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterIsCountFlagSet                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterClearStopFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterClearNackFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterClearCountFlag                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                              0 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LoadCurrentAddressEEPROM
     _EEPROM_ReadBlock
       _EEPROM_ReadByte
         _I2C1_ReadNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterRead
             _I2C1_MasterOperation
               _I2C1_DO_SEND_ADR_READ
                 _I2C1_DO_RX_EMPTY
                   NULL(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_MasterDisableRestart *
                   _I2C1_MasterEnableRestart *
                   _I2C1_MasterSetCounter *
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_ADR_WRITE
                 _I2C1_MasterSendTxData
               _I2C1_MasterSetCounter
               _I2C1_Poller
                 _I2C1_MasterFsm
                   _I2C1_ClearInterruptFlags
                     _I2C1_MasterClearCountFlag
                     _I2C1_MasterClearNackFlag
                     _I2C1_MasterClearStopFlag
                     _I2C1_MasterIsCountFlagSet
                     _I2C1_MasterIsNackFlagSet
                     _I2C1_MasterIsStopFlagSet
                   _I2C1_DO_ADDRESS_NACK *
                     NULL(Fake) *
                     _I2C1_CallbackReturnReset *
                     _I2C1_CallbackReturnStop *
                     _I2C1_DO_SEND_RESTART *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C1_DO_BUS_COLLISION *
                     NULL(Fake) *
                     _I2C1_CallbackReturnReset *
                     _I2C1_CallbackReturnStop *
                     _I2C1_DO_RESET *
                       _I2C1_MasterResetBus
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_ADR_READ
                       _I2C1_MasterSetCounter
                     _I2C1_DO_SEND_RESTART_WRITE *
                     _I2C1_MasterClearIrq *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C1_DO_BUS_ERROR *
                     _I2C1_MasterResetBus
                   _I2C1_DO_IDLE *
                   _I2C1_DO_RESET *
                   _I2C1_DO_RX *
                     _I2C1_DO_RX_EMPTY
                     _I2C1_MasterGetRxData
                     _I2C1_MasterIsRxBufFull
                   _I2C1_DO_RX_ACK *
                     _I2C1_MasterSendAck
                   _I2C1_DO_RX_EMPTY *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_IDLE
                     _I2C1_MasterSendNack
                     _I2C1_MasterStop
                   _I2C1_DO_SEND_ADR_READ *
                   _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterGetCounter
                     _I2C1_MasterSendTxData
                     _I2C1_MasterSetCounter
                     _I2C1_MasterStop
                   _I2C1_DO_TX *
                     NULL(Fake) *
                     _I2C1_CallbackReturnReset *
                     _I2C1_CallbackReturnStop *
                     _I2C1_DO_SEND_RESTART_READ *
                     _I2C1_DO_SEND_RESTART_WRITE *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_MasterDisableRestart *
                       _I2C1_MasterEnableRestart *
                       _I2C1_MasterSetCounter *
                       _rd1RegCompleteHandler *
                       _rd2RegCompleteHandler *
                       _rdBlkRegCompleteHandler *
                       _wr1RegCompleteHandler *
                       _wr2RegCompleteHandler *
                     _I2C1_MasterIsNack *
                     _I2C1_MasterIsTxBufEmpty *
                     _I2C1_MasterSendTxData *
                     _rd1RegCompleteHandler *
                     _rd2RegCompleteHandler *
                     _rdBlkRegCompleteHandler *
                     _wr1RegCompleteHandler *
                     _wr2RegCompleteHandler *
                   _I2C1_DO_TX_ACK *
                     _I2C1_MasterSendAck
                   _I2C1_DO_TX_EMPTY *
                   _I2C1_MasterIsNack *
                 _I2C1_MasterWaitForEvent
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterOpen
           _I2C1_SetBuffer
         _I2C1_WriteNBytes
           _I2C1_Close
           _I2C1_MasterWrite
             _I2C1_MasterOperation
           _I2C1_Open
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
   _MPU6050_Init
     _I2C1_Write1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
   _ParseUserInput
     _sscanf
       _vfscanf
         _vfsfcnvrt
           _atou
             ___strtoxll
               ___omul
             _fgetc
               _getch
             _skipws
               _fgetc
               _ungetc
             _ungetc
           _fgetc
           _skipws
           _strncmp
           _ungetc
   _ReadAndSendEEPROMDataCSV
     _EEPROM_ReadBlock
     _UART_SendString
       _UART1_Write
     _memcpy
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lldiv
             ___llmod
             _pad
           _xtoa
             _pad
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
   _StartLogging
     _EEPROM_WriteBlock
       _EEPROM_WriteByte
         _I2C1_WriteNBytes
     _MPU6050_ReadSensorData
       _I2C1_ReadDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
       ___fldiv
       ___xxtofl
     _ReadAndSendEEPROMData
       _EEPROM_ReadBlock
       _UART_SendString
       _memcpy
       _sprintf
     _StoreCurrentAddressEEPROM
       _EEPROM_WriteBlock
     _UART_SendString
     ___lmul
     _custom_delay_ms
     _memcpy
   _UART_ReceiveString
     _UART1_Read
       NULL(Fake) *
       _UART1_DefaultErrorHandler *
       _UART1_DefaultFramingErrorHandler *
       _UART1_DefaultOverrunErrorHandler *
   _UART_SendString
   ___lmul
   _memset
   _sprintf
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhlllh    284      0       0      44        0.0%
BITBIGSFRhll       1BF      0       0      38        0.0%
BITBIGSFRlll       192      0       0      62        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100     EC      EC      13       92.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      AC      11       67.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100     14      25       9       14.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      8D       5       88.1%
BITBIGSFRlhlhh      6C      0       0      41        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITBIGSFRlhlllh     5C      0       0      46        0.0%
BITBIGSFRhhh        39      0       0      36        0.0%
BITBIGSFRlhllll     29      0       0      54        0.0%
BITBIGSFRlhllll     29      0       0      56        0.0%
BITBIGSFRlhllll     1C      0       0      60        0.0%
BITBIGSFRlhllll     11      0       0      59        0.0%
BITBIGSFRllh         E      0       0      61        0.0%
BITBIGSFRlhllll      B      0       0      55        0.0%
BITBIGSFRlhllll      B      0       0      53        0.0%
BITBIGSFRlhllh       6      0       0      43        0.0%
BITBIGSFRlhllll      5      0       0      52        0.0%
BITBIGSFRlhlllh      5      0       0      50        0.0%
BITBIGSFRlhlllh      5      0       0      48        0.0%
BITBIGSFRlhlllh      4      0       0      47        0.0%
BITBIGSFRlhlllh      4      0       0      49        0.0%
BITBIGSFRlhlllh      4      0       0      51        0.0%
BITBIGSFRhhll        3      0       0      37        0.0%
BITBIGSFRlhlllh      2      0       0      45        0.0%
BITBIGSFRlhllll      1      0       0      57        0.0%
BITBIGSFRlhllll      1      0       0      58        0.0%
BITBIGSFRlhlhll      1      0       0      42        0.0%
BITBIGSFRlhhh        1      0       0      39        0.0%
BITBIGSFRlhhl        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A8      63        0.0%
DATA                 0      0     3A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Oct 25 20:46:40 2023

 ReadAndSendEEPROMDataCSV@startAddressEEPROM1 00B3   ReadAndSendEEPROMDataCSV@startAddressEEPROM2 00B5  
                                ___fldiv@aexp 0027                                  ___fldiv@bexp 0026  
                                ___fldiv@sign 001F                                            l51 B116  
                                          l90 A8F2                                            l93 A91E  
                                          l69 AF28                                            l78 ABE8  
                                          l87 B41C                                            l96 A94A  
                                          l99 A8C6                                            _Tm 00E5  
                                          _ax 00E1                                            _ay 00DD  
                                          _az 00D9                                            _gx 00D5  
                                          _gy 00D1                                            _gz 00CD  
                         ___wmul@multiplicand 0003                                           l102 AD8A  
                                         l200 A5BE                                           l203 A512  
                                         l212 A5D2                                           l206 A514  
                                         l215 A5DC                                           l401 A708  
                                         l209 A510                                           l218 A5C8  
                                         l501 A524                                           l165 B1EA  
                                         l182 B9CE                                           l511 A576  
                                         l407 A720                                           l191 A73C  
                                         l600 A698                                           l520 A620  
                                         l424 A78E                                           l505 A844  
                                         l418 B590                                           l514 A610  
                                         l194 A752                                           l603 A6C4  
                                         l443 A9A4                                           l371 A7B0  
                                         l612 A66C                                           l436 AE28  
                                         l452 C512                                           l508 A57E  
                                         l428 B496                                           l188 BA70  
                                         l621 A530                                           l517 A586  
                                         l533 B2C4                                           l606 A682  
                                         l446 A6DA                                           l470 B6F2  
                                         l526 B0AC                                           l615 A536  
                                         l439 A5F4                                           l375 B6A8  
                                         l391 A596                                           l632 A770  
                                         l561 A5E8                                           l609 A656  
                                         l545 A518                                           l641 AFAA  
                                         l385 AE7A                                           l618 A52A  
                                         l570 A560                                           l642 AFBE  
                                         l635 A56E                                           l379 A89A  
                                         l539 A630                                           l643 AFD0  
                                         l548 A51C                                           l564 A548  
                                         l388 A58E                                           l573 A5AA  
                                         l469 B746                                           l477 B512  
                                         l398 A7D4                                           l582 A53C  
                                         l486 B886                                           l646 AFDE  
                                         l638 AF84                                           l558 A9D2  
                                         l567 A5B4                                           l591 A54E  
                                         l495 A602                                           l639 AF98  
                                         l576 A5A0                                           l920 AAAA  
                                         l585 A55A                                           l594 A554  
                                         l498 A520                                           l850 A640  
                                         l914 CB18                                           l579 A542  
                                         l691 A7F8                                           l588 A6AE  
                                         l908 AAE4                                           l685 A6F0  
                                         l853 D6B4                                           l917 A81C  
                                         l942 B334                                           l871 ACFA  
                                         l847 B3A6                                           l688 A738  
                                         l856 AA02                                           l936 D9A4  
                                         l865 ABA4                                           l882 BC74  
                                         l859 AA38                                           l891 CD16  
                                         l788 BBC4                                           l967 A86E  
                                         l984 B7C4                                           l985 B7E4  
                                         l994 B9BC                                           l978 B244  
                                         l979 B254                   ??_I2C1_MasterClearCountFlag 0001  
                   __end_of_EEPROM_WriteBlock ABA6                         ?_I2C1_MasterOperation 0001  
                                         _pad AFE0                        ?_I2C1_MasterSetCounter 0001  
                                         prod 3FF3                                           tosl 3FFD  
                                         wreg 3FE8                        ?_I2C1_MasterSendTxData 0001  
                        _I2C1_DO_RX_NACK_STOP A604                                  ___flmul@aexp 000E  
                   ?_I2C1_MasterEnableRestart 0001                                  ___flmul@bexp 0013  
                    fp__I2C1_DO_SEND_ADR_READ 0000                       fp__I2C1_DO_SEND_RESTART 0000  
                                ___flmul@sign 000D                    ?_StoreCurrentAddressEEPROM 0001  
                                ___flmul@temp 0018                                  ___flmul@prod 0014  
                        I2C1_SetBuffer@buffer 0001                           _currentBlockEEPROM1 00C7  
                         _currentBlockEEPROM2 00C5                    ??_I2C1_MasterIsStopFlagSet 0001  
                                ___fltol@exp1 000A                                          l1001 B9CC  
                                        l2004 F16E                       ??_rd2RegCompleteHandler 000C  
                                        l2022 F402                                          l2014 F228  
                                        l1232 C07A                                          l2009 F1DA  
                                        l1241 AA70                                          l2018 F330  
                                        l1226 BB1A                                          l2043 C2D6  
                                        l1237 C0C0                                          l2062 AC70  
                                        l2047 B928                                          l2056 A566  
                                        l1512 ECC0                                          l1504 EE76  
                                        l1264 C1C6                                          l1521 ED90  
                                        l2066 C772                                          l1522 ED7E  
                                        l1702 F792                                          l1622 C7CA  
                                        l1551 DB9E                                          l1560 DBE4  
                                        l1704 F5D8                                          l1537 AD40  
                                        l1625 C926                                          l1562 DC5C  
                                        l1554 DB62                                          l1394 B618  
                                        l1650 AB22                                          l1563 DC4A  
                                        l1387 B608                                          l1644 AF82  
                                        l1732 FBDA                                          l1636 C8BE  
                                        l1549 DD3E                                          l1581 E1DE  
                                        l1629 C862                                          l1590 E470  
                                        l1591 E45E                                          l1495 EBA6  
                                        l1496 EB94                                          l1752 C3F0  
                                        l1744 C2F4                                          l1905 B180  
                                        l1585 E566                                          l1497 EB5A  
                                        l1657 ACB4                                          l1770 BD2A  
                                        l1746 C2FC                                          l1818 ADD6  
                                        l1835 CF28                                          l1916 CFB0  
                                        l1588 E3F8                                          l1828 BFBC  
                                        l1684 AFF6                                          l1756 C530  
                                        l1917 D154                                          l1909 CF52  
                                        l1861 BDF6                                          l1598 E528  
                                        l1838 CE6C                                          l1774 BD32  
                                        l1766 C636                                          l1758 C538  
                                        l1935 E118                                          l1960 BE7C  
                                        l1688 B044                                          l1961 BEB6  
                                        l1849 AED0                                          l1962 BEBE  
                                        l1794 E9B6                                          l1699 FDF4  
                                        l1876 AC2C                                          l1869 AB62  
                                        ?_pad 0011                                          l1994 F06A  
                                        l1997 F0F8                                          l1998 F15E  
                                        l8111 B564                                          l8121 A7D2  
                                        l8113 A6F2                                          l8201 B828  
                                        l9001 DCB0                                          l8115 A7B2  
                                        l8107 B516                                          l8123 A8C8  
                                        l8131 A8F4                                          l9011 DD1A  
                                        l9003 DCB4                                          l8117 A7C2  
                                        l8109 B528                                          l8125 A8DC  
                                        l8133 A908                                          l8141 A934  
                                        l8221 A994                                          l9013 DD1E  
                                        l9005 DCCE                                          l9101 E352  
                                        l8119 A7CA                                          l8151 A8C4  
                                        l8127 A8F0                                          l8135 A91C  
                                        l8143 A948                                          l8215 A5AE  
                                        l8311 A684                                          l8223 A998  
                                        l8303 B4C2                                          l8207 B82E  
                                        l8231 A73C                                          l9015 DD2C  
                                        l9007 DCE4                                          l9111 E3E8  
                                        l9103 E37C                                          l9031 E134  
                                        l8241 A642                                          l8225 A9A2  
                                        l8217 A978                                          l8401 C500  
                                        l8233 A74C                                          l9017 DD32  
                                        l9009 DCFE                                          l9121 E428  
                                        l9113 E3F6                                          l9105 E3B2  
                                        l9041 E16C                                          l9033 E136  
                                        l9201 AA3A                                          l8235 A568  
                                        l8251 A532                                          l8147 A89C  
                                        l8139 A920                                          l8155 AD42  
                                        l8163 A5A4                                          l8315 A544  
                                        l8331 A550                                          l8323 A556  
                                        l8219 A982                                          l8403 C504  
                                        l8411 C510                                          l9019 DD34  
                                        l9131 E49A                                          l9123 E456  
                                        l9115 E408                                          l9107 E3C0  
                                        l9051 E198                                          l9043 E17C  
                                        l9035 E146                                          l9027 E11A  
                                        l9203 AA50                                          l9211 C0D8  
                                        l8245 A526                                          l8253 A658  
                                        l8149 A8B0                                          l8157 AD74  
                                        l8173 A51A                                          l8229 A598  
                                        l8165 A53E                                          l8325 A55C  
                                        l8237 A69A                                          l8261 A5EE  
                                        l8405 C50A                                          l8421 B6BE  
                                        l8181 B7F2                                          l8333 A612  
                                        l9141 E510                                          l9133 E4C4  
                                        l9117 E416                                          l9109 E3DE  
                                        l9061 E1EE                                          l9053 E1A8  
                                        l9045 E182                                          l9037 E156  
                                        l9029 E126                                          l9205 AA60  
                                        l9221 C128                                          l8247 A66E  
                                        l8159 AD88                                          l8167 A538  
                                        l8263 A5F2                                          l8431 B71C  
                                        l8191 B802                                          l8319 A522  
                                        l8335 A616                                          l9143 E52C  
                                        l9151 E552                                          l9127 E480  
                                        l9135 E4C8                                          l9119 E41A  
                                        l9071 E22C                                          l9063 E1FE  
                                        l9055 E1B8                                          l9047 E188  
                                        l9039 E166                                          l9231 C152  
                                        l9223 C12C                                          l9215 C0EC  
                                        l9311 AE9E                                          l8343 A5B8  
                                        l9303 AC2E                                          l8257 A52C  
                                        l8361 AE10                                          l8353 ADD8  
                                        l8169 A516                                          l8329 A54A  
                                        l8345 A6C6                                          l8441 B72C  
                                        l8425 B6C4                                          l8281 B498  
                                        l8193 B80A                                          l8185 B7F8  
                                        l8177 B7E6                                          l8273 A51E  
                                        l8337 A61A                                          l8513 B26C  
                                        l8505 B256                                          l9401 B64A  
                                        l9153 E556                                          l9145 E53C  
                                        l9137 E4E2                                          l9129 E48C  
                                        l9081 E286                                          l9073 E246  
                                        l9057 E1C8                                          l9049 E196  
                                        l8601 EA1E                                          l9241 C17A  
                                        l9233 C15C                                          l9225 C13A  
                                        l9217 C116                                          l9209 C0C2  
                                        l9321 CDA2                                          l9305 AC36  
                                        l8363 AE24                                          l8355 ADEC  
                                        l8259 A5EA                                          l8347 A6D0  
                                        l8443 B73E                                          l8427 B6DA  
                                        l8419 B6AA                                          l8291 B4B2  
                                        l8283 B4A0                                          l8187 B7FC  
                                        l8179 B7EE                                          l8267 A5F6  
                                        l8451 A822                                          l8339 A61E  
                                        l8523 B27C                                          l8507 B25A  
                                        l8531 A622                                          l9411 B672  
                                        l9403 B652                                          l9171 BAEE  
                                        l9163 BA72                                          l9147 E54A  
                                        l9139 E4F6                                          l9091 E2D4  
                                        l9083 E294                                          l9075 E252  
                                        l9067 E212                                          l9059 E1CE  
                                        l8611 EA4C                                          l8603 EA24  
                                        l9243 C186                                          l9235 C166  
                                        l9219 C118                                          l9323 CDB0  
                                        l9331 CE90                                          l9315 CD18  
                                        l9307 AE7C                                          l8357 ADF4  
                                        l8277 A6B0                                          l8349 A6D8  
                                        l8373 C412                                          l8365 C3F2  
                                        l8445 B744                                          l8429 B70A  
                                        l8285 B4A4                                          l8197 B810  
                                        l8269 A5FE                                          l8453 A836  
                                        l8461 A57C                                          l8517 B274  
                                        l8509 B264                                          l8533 A626  
                                        l9421 B69A                                          l9413 B67A  
                                        l9405 B65A                                          l9173 BB12  
                                        l9165 BAA0                                          l9181 BFEC  
                                        l9149 E54C                                          l9093 E2F2  
                                        l9085 E2A4                                          l9077 E26E  
                                        l9069 E222                                          l8701 EC22  
                                        l8621 EA80                                          l8613 EA4E  
                                        l8605 EA36                                          l9157 ACFC  
                                        l9245 C196                                          l9333 CECC  
                                        l9317 CD38                                          l9309 AE8A  
                                        l9501 F522                                          l9261 B5CA  
                                        l9253 B592                                          l8359 AE08  
                                        l8391 C4BC                                          l8383 C420  
                                        l8439 B726                                          l8295 B4B8  
                                        l8199 B824                                          l8455 A842  
                                        l8471 A604                                          l8535 A62A  
                                        l8551 B41E                                          l9423 B69E  
                                        l9415 B682                                          l9407 B662  
                                        l9431 A70A                                          l9351 B8C2  
                                        l9343 B888                                          l9175 BB18  
                                        l9167 BAB0                                          l9191 C05A  
                                        l9183 BFFC                                          l9095 E302  
                                        l9087 E2B4                                          l9079 E27A  
                                        l8711 EC8E                                          l8703 EC24  
                                        l8631 EABC                                          l8615 EA5E  
                                        l8623 EA88                                          l8607 EA38  
                                        l9159 AD0C                                          l9247 C1A6  
                                        l9335 CEE0                                          l9327 CE20  
                                        l9319 CD8E                                          l9271 AFEE  
                                        l9511 F56C                                          l9503 F548  
                                        l9263 B5E8                                          l9255 B5A8  
                                        l9441 A884                                          l8465 A570  
                                        l8393 C4CC                                          l8377 C41A  
                                        l8369 C40A                                          l8385 C47A  
                                        l8297 B4BC                                          l8289 B4AA  
                                        l8449 A81E                                          l8473 A60C  
                                        l8537 A62E                                          l8553 B422  
                                        l8801 A9CE                                          l9425 B6A2  
                                        l9417 B68A                                          l9409 B66A  
                                        l9433 A590                                          l9361 C1D8  
                                        l9353 B8D4                                          l9169 BADE  
                                        l9193 C068                                          l9185 C02A  
                                        l9097 E322                                          l9089 E2C4  
                                        l8721 ECE6                                          l8713 EC90  
                                        l8705 EC2E                                          l8641 EAD0  
                                        l8633 EAC0                                          l8625 EA98  
                                        l8617 EA6E                                          l8609 EA3E  
                                        l9249 C1B6                                          l9281 BEC0  
                                        l9337 CF08                                          l9329 CE5C  
                                        l8561 BD34                                          l9273 B002  
                                        l9601 FABA                                          l9521 F5A2  
                                        l9505 F55A                                          l9265 B5F8  
                                        l9257 B5B0                                          l8811 A5E6  
                                        l9443 A888                                          l9451 A898  
                                        l8467 A574                                          l8395 C4D0  
                                        l8387 C48E                                          l8459 A578  
                                        l8491 B05E                                          l8483 B046  
                                        l8555 B438                                          l9419 B692  
                                        l9427 B6A6                                          l9371 C266  
                                        l9363 C1E8                                          l9355 B8DA  
                                        l9347 B8A0                                          l9195 C0B8  
                                        l9187 C03A                                          l9179 BFBE  
                                        l9099 E332                                          l8731 ED14  
                                        l8715 ECA0                                          l8707 EC34  
                                        l8651 EAE4                                          l8643 EAD4  
                                        l8635 EAC4                                          l8627 EAAA  
                                        l8619 EA7E                                          l9283 BEE0  
                                        l9339 CF18                                          l8571 BDAC  
                                        l8563 BD44                                          l9275 B012  
                                        l9611 FB1E                                          l9603 FAEE  
                                        l9531 F660                                          l9507 F55E  
                                        l9267 B602                                          l9259 B5BC  
                                        l8805 A754                                          l9445 A88C  
                                        l9437 A870                                          l8397 C4E8  
                                        l8389 C4A4                                          l8477 A580  
                                        l8485 B050                                          l8557 B44C  
                                        l8581 A77E                                          l8821 AE46  
                                        l8813 AE2C                                          l9373 C2A4  
                                        l9365 C1F8                                          l9357 B8F8  
                                        l9349 B8B0                                          l8901 D9F2  
                                        l9197 C0BE                                          l9189 C048  
                                        l8733 ED22                                          l8725 ECFA  
                                        l8741 ED40                                          l8709 EC5A  
                                        l8717 ECB0                                          l8653 EAE8  
                                        l8645 EAD8                                          l8637 EAC8  
                                        l8629 EAB8                                          l8661 EAF8  
                                        l9285 BF1E                                          l9293 BF5E  
                                        l8565 BD54                                          l9277 B016  
                                        l9269 AFE0                                          l9621 FBD0  
                                        l9613 FB24                                          l9605 FB02  
                                        l9541 F720                                          l9533 F692  
                                        l9525 F5E8                                          l9509 F564  
                                        l9461 F40A                                          l9701 C3A4  
                                        l8807 A5DE                                          l9447 A890  
                                        l9439 A874                                          l8399 C4F8  
                                        l8479 A584                                          l8487 B056  
                                        l8559 B452                                          l8575 A772  
                                        l8831 AE70                                          l8823 AE4C  
                                        l8815 AE30                                          l9455 A588  
                                        l9391 B636                                          l9383 B61C  
                                        l9375 C2B6                                          l9367 C214  
                                        l9359 C1C8                                          l8911 DA18  
                                        l8903 D9F4                                          l8735 ED2A  
                                        l8727 ED04                                          l8719 ECD6  
                                        l8743 ED4E                                          l8671 EB68  
                                        l8663 EAFC                                          l8655 EAEC  
                                        l8647 EADC                                          l8639 EACC  
                                        l8591 E9E4                                          l8583 E9B8  
                                        l9295 BF70                                          l9287 BF46  
                                        l8567 BD5E                                          l9279 B034  
                                        l9631 FC14                                          l9623 FBEC  
                                        l9615 FB2C                                          l9607 FB06  
                                        l9551 F7B6                                          l9535 F6D0  
                                        l9527 F5EE                                          l9519 F588  
                                        l9471 F45A                                          l9463 F41A  
                                        l9703 C3BA                                          l9711 C524  
                                        l8809 A5E2                                          l9449 A894  
                                        l8497 B064                                          l8577 A776  
                                        l8833 AE74                                          l8825 AE5C  
                                        l8817 AE40                                          l9393 B638  
                                        l9385 B620                                          l9377 C2BE  
                                        l9369 C230                                          l8921 DA58  
                                        l8913 DA26                                          l8905 D9FC  
                                        l8753 EDA0                                          l8761 EDF6  
                                        l8745 ED52                                          l8737 ED2E  
                                        l8729 ED12                                          l8681 EB92  
                                        l8673 EB74                                          l8665 EB26  
                                        l8657 EAF0                                          l8649 EAE0  
                                        l8593 E9F4                                          l8585 E9C4  
                                        l9289 BF52                                          l8841 AF3E  
                                        l8569 BD7A                                          l9633 FC1C  
                                        l9625 FBFA                                          l9641 FC3C  
                                        l9617 FB38                                          l9609 FB16  
                                        l9561 F7EA                                          l9553 F7BE  
                                        l9537 F6E4                                          l9545 F760  
                                        l9529 F622                                          l9481 F496  
                                        l9473 F462                                          l9465 F428  
                                        l9705 C3D4                                          l9721 C55E  
                                        l9713 C540                                          l8579 A77A  
                                        l8827 AE62                                          l8819 AE42  
                                        l8835 AE78                                          l9395 B63C  
                                        l9387 B630                                          l9811 EFDE  
                                        l9803 EF92                                          l9379 C2CE  
                                        l8931 DA98                                          l8923 DA5A  
                                        l8915 DA28                                          l8907 DA0C  
                                        l8771 EE48                                          l8763 EE06  
                                        l8755 EDAC                                          l8747 ED60  
                                        l8739 ED3E                                          l8691 EBE8  
                                        l8683 EBB4                                          l8675 EB78  
                                        l8667 EB42                                          l8659 EAF4  
                                        l8595 EA04                                          l8587 E9D2  
                                        l9299 BFB4                                          l8843 AF4E  
                                        l9651 FCC2                                          l9643 FC4E  
                                        l9635 FC2C                                          l9627 FC0A  
                                        l9619 FBB0                                          l9571 F834  
                                        l9563 F802                                          l9555 F7C6  
                                        l9547 F79A                                          l9539 F718  
                                        l9491 F4DC                                          l9475 F472  
                                        l9483 F49A                                          l9467 F42C  
                                        l9459 F404                                          l8851 A846  
                                        l9731 C592                                          l9723 C56E  
                                        l9715 C548                                          l8829 AE6A  
                                        l9397 B640                                          l9389 B634  
                                        l9901 AEEA                                          l8861 B762  
                                        l9821 F03A                                          l9813 EFF0  
                                        l9805 EFA4                                          l8941 DAC8  
                                        l8933 DAA0                                          l8917 DA38  
                                        l8925 DA62                                          l8909 DA12  
                                        l8781 EE66                                          l8773 EE4E  
                                        l8765 EE16                                          l8757 EDBA  
                                        l8749 ED76                                          l8693 EBF6  
                                        l8685 EBC4                                          l8677 EB86  
                                        l8669 EB52                                          l8597 EA06  
                                        l8589 E9D4                                          l8845 AF52  
                                        l9661 FD3C                                          l9653 FCF6  
                                        l9645 FC60                                          l9637 FC30  
                                        l9629 FC0E                                          l9573 F848  
                                        l9581 F93E                                          l9565 F814  
                                        l9557 F7CA                                          l9549 F7AA  
                                        l9493 F4E4                                          l9485 F4C0  
                                        l9477 F482                                          l9469 F450  
                                        l8853 A866                                          l9741 C61A  
                                        l9733 C598                                          l9725 C576  
                                        l9717 C552                                          l9709 C514  
                                        l9399 B648                                          l9911 ABA8  
                                        l9903 AEFC                                          l8863 B782  
                                        l9831 F0B6                                          l9823 F052  
                                        l9815 F002                                          l9807 EFB8  
                                        l8951 DB06                                          l8943 DAC8  
                                        l8935 DAA4                                          l8927 DA72  
                                        l8919 DA48                                          l8775 EE50  
                                        l8767 EE36                                          l8759 EDF4  
                                        l8695 EC04                                          l8679 EB88  
                                        l8599 EA0E                                          l8847 AF64  
                                        l8839 AF2A                                          l8791 AB42  
                                        l9671 FDA8                                          l9663 FD44  
                                        l9655 FCFE                                          l9647 FC64  
                                        l9639 FC36                                          l9591 FA0A  
                                        l9583 F95C                                          l9575 F8AC  
                                        l9559 F7DC                                          l9567 F81C  
                                        l9495 F4FC                                          l9487 F4D2  
                                        l9479 F48E                                          l9751 BCB2  
                                        l8871 B950                                          l9727 C57A  
                                        l9719 C558                                          l9735 C5CE  
                                        l9913 ABBE                                          l9905 AF10  
                                        l8865 B794                                          l8857 B748  
                                        l9841 F0F0                                          l9825 F05C  
                                        l9817 F00A                                          l9833 F0C2  
                                        l9809 EFCA                                          l8793 A562  
                                        l9761 B11C                                          l9921 C652  
                                        l8961 DB52                                          l8953 DB16  
                                        l8929 DA88                                          l8777 EE56  
                                        l8769 EE3A                                          l8697 EC10  
                                        l8689 EBD8                                          l8849 AF68  
                                        l8785 AB24                                          l9673 FDB8  
                                        l9665 FD52                                          l9649 FC6A  
                                        l9657 FD02                                          l9593 FA1A  
                                        l9585 F990                                          l9577 F904  
                                        l9569 F824                                          l9497 F506  
                                        l9489 F4D6                                          l9753 BCD2  
                                        l9745 BC76                                          l8881 B99A  
                                        l8873 B958                                          l9681 C2D8  
                                        l9737 C5EA                                          l9729 C58C  
                                        l8795 A9A6                                          l9915 ABD0  
                                        l9907 AF14                                          l8859 B754  
                                        l9851 F1AA                                          l9843 F108  
                                        l9835 F0C4                                          l9827 F082  
                                        l9819 F01E                                          l9771 EE7C  
                                        l9763 B130                                          l9931 C6C8  
                                        l8971 DB9C                                          l8963 DB60  
                                        l8955 DB26                                          l8947 DADC  
                                        l8939 DAB8                                          l8891 D9B2  
                                        l8779 EE64                                          l8699 EC14  
                                        l8787 AB30                                          l9675 FDD0  
                                        l9667 FD82                                          l9659 FD20  
                                        l9595 FA2A                                          l9587 F9C2  
                                        l9579 F938                                          l9755 BCF2  
                                        l9747 BC7E                                          l8883 B9AA  
                                        l8875 B964                                          l8867 B92A  
                                        l9691 C31C                                          l9683 C2E8  
                                        l9739 C600                                          l8797 A9B6  
                                        l9917 ABD4                                          l9909 ABA8  
                                        l9861 F200                                          l9853 F1C2  
                                        l9845 F116                                          l9837 F0D6  
                                        l9829 F09E                                          l9781 EECC  
                                        l9773 EE88                                          l9765 B148  
                                        l9933 C6DA                                          l9925 C65E  
                                        l8981 DBE2                                          l8973 DBAE  
                                        l8965 DB6C                                          l8957 DB2E  
                                        l8949 DAF6                                          l8893 D9C0  
                                        l8789 AB3E                                          l9677 FDD8  
                                        l9669 FD90                                          l9597 FA5E  
                                        l9589 F9D8                                          l9749 BCA6  
                                        l9757 BCFE                                          l8885 B9AC  
                                        l8877 B972                                          l8869 B93A  
                                        l9693 C352                                          l9685 C304  
                                        l9941 E592                                          l8799 A9C2  
                                        l9871 F302                                          l9855 F1CC  
                                        l9847 F13A                                          l9839 F0DE  
                                        l9791 EF38                                          l9783 EEDE  
                                        l9775 EE90                                          l9767 B15C  
                                        l9759 B118                                          l9935 C72A  
                                        l9927 C66C                                          l9919 C638  
                                        l8991 DC42                                          l8975 DBC4  
                                        l8983 DBF4                                          l8967 DB8A  
                                        l8959 DB3E                                          l8895 D9C2  
                                        l9599 FAB4                                          l8887 B9B6  
                                        l8879 B97C                                          l9695 C358  
                                        l9687 C30C                                          l9951 E5E2  
                                        l9943 E59E                                          STR_1 FEA0  
                                        STR_2 FF94                                          l9873 F350  
                                        l9865 F236                                          l9881 F376  
                                        l9857 F1E4                                          l9849 F18E  
                                        l9793 EF50                                          l9785 EEFE  
                                        l9777 EEAC                                          l9769 EE78  
                                        l9929 C6A6                                          l8985 DC02  
                                        l8977 DBCA                                          l8969 DB8C  
                                        l8897 D9D2                                          l8889 D9A6  
                                        l9697 C35E                                          l9689 C316  
                                        l9961 E634                                          l9953 E5F6  
                                        l9945 E5AA                                          STR_3 FF75  
                                        STR_4 FFEA                                          l9891 F3D0  
                                        l9883 F38A                                          l9875 F35A  
                                        l9867 F2C4                                          l9859 F1FC  
                                        l9795 EF62                                          l9787 EF12  
                                        l9779 EEBE                                          l8995 DC6C  
                                        l8987 DC06                                          l8979 DBD4  
                                        l8899 D9E2                                          l9699 C392  
                                        l9971 E6B6                                          l9955 E60A  
                                        l9947 E5AE                                          l9939 E568  
                                        STR_5 FE1D                                          STR_6 FF54  
                                        l9893 F3E2                                          l9869 F2F2  
                                        l9877 F35C                                          l9797 EF64  
                                        l9789 EF26                                          l9885 F3AA  
                                        l8997 DC78                                          l8989 DC14  
                                        l9981 E75A                                          l9973 E6E2  
                                        l9957 E624                                          l9965 E63C  
                                        l9949 E5D6                                          STR_7 FFCF  
                                        STR_8 FFA7                                          l9887 F3BA  
                                        l9879 F370                                          l9799 EF7C  
                                        l8999 DC86                                          l9991 E792  
                                        l9959 E62C                                          l9967 E66E  
                                        STR_9 FFB6                                          l9897 AED4  
                                        l9889 F3C8                                          l9985 E776  
                                        l9993 E7CC                                          l9969 E690  
                                        l9977 E70E                                          l9899 AED4  
                                        l9995 E7DE                                          l9979 E738  
                                        l9997 E7F8                                          l9999 E800  
                                        _LATA 3FBA                                          _LATB 3FBB  
                                        _LATC 3FBC                                          _LATD 3FBD  
                                        _LATE 3FBE                                          _PMD0 39C0  
                                        _PMD1 39C1                                          _PMD2 39C2  
                                        _PMD3 39C3                                          u8000 EA6E  
                                        _PMD4 39C4                                          u8001 EA6A  
                                        _PMD5 39C5                                          u8010 EAAA  
                                        _PMD6 39C6                                          u8011 EAA6  
                                        _PMD7 39C7                                          u8100 EBC4  
                                        u8020 EAB8                                          u8101 EBC0  
                                        u8021 EAB4                                          u8110 EBF6  
                                        u8030 EB26                                          u8111 EBF2  
                                        u8031 EB22                                          u8200 ED3E  
                                        u8120 EC04                                          u8040 EB3E  
                                        u9000 C196                                          u8201 ED3A  
                                        u8121 EC00                                          u8041 EB38  
                                        u9001 C192                                          u8210 ED4E  
                                        u8130 EC22                                          u8050 EB40  
                                        u9010 C1A6                                          u8211 ED4A  
                                        u8131 EC1E                                          u9011 C1A2  
                                        u8300 EE36                                          u8220 ED60  
                                        u8140 EC5A                                          u8060 EB68  
                                        u9100 BF70                                          u9020 B5A8  
                                        u8301 EE32                                          u8221 ED5C  
                                        u8141 EC56                                          u8061 EB64  
                                        u9101 BF6C                                          u9021 B5A4  
                                        u8310 EE48                                          u8230 ED76  
                                        u8150 ECA0                                          u8070 EB86  
                                        u9030 B5CA                                          u8311 EE44  
                                        u8231 ED72                                          u8151 EC9C  
                                        u8071 EB82                                          u9031 B5C6  
                                        u7600 A6AC                                          u8400 B7C4  
                                        u8320 EE64                                          u8240 ED8C  
                                        u8160 ECD6                                          u8080 EBA6  
                                        u9120 BFAA                                          u9200 CE1C  
                                        u9040 B5E8                                          u7601 A6A6  
                                        u8401 B7C0                                          u8321 EE60  
                                        u8241 ED88                                          u8161 ECD2  
                                        u8081 EBA2                                          u9121 BFA4  
                                        u9201 CE18                                          u9041 B5E4  
                                        u7610 A654                                          u8250 EDA0  
                                        u8170 ECE6                                          u8090 EBB4  
                                        u9130 BFAC                                          u9210 CE40  
                                        u8330 AB62                                          u9050 AFEE  
                                        u8410 B950                                          u7611 A64E  
                                        u8251 ED9C                                          u8171 ECE2  
                                        u8091 EBB0                                          u9115 BF82  
                                        u8331 AB5E                                          u9051 AFEA  
                                        u8411 B94C                                          u7620 A680  
                                        u7540 B528                                          u7700 C406  
                                        u8340 A9B6                                          u9300 C1D8  
                                        u8500 DA88                                          u8260 EDBA  
                                        u8180 ED12                                          u9220 CE5C  
                                        u9060 B034                                          u9140 AC70  
                                        u8420 B972                                          u7621 A67A  
                                        u7541 B524                                          u7701 C402  
                                        u8341 A9B2                                          u9301 C1D4  
                                        u8501 DA84                                          u8261 EDB6  
                                        u8181 ED0E                                          u9221 CE58  
                                        u9061 B030                                          u9141 AC6C  
                                        u8421 B96E                                          u7630 A66A  
                                        u7550 A7C2                                          u7606 A6AE  
                                        u8350 AE40                                          u9310 C1E8  
                                        u8510 DAC8                                          u8270 EDF4  
                                        u8190 ED22                                          u9070 BF00  
                                        u9230 CEB0                                          u9150 AE8A  
                                        u8430 B99A                                          u7631 A664  
                                        u7551 A7BE                                          u8351 AE3C  
                                        u9311 C1E4                                          u8511 DAC4  
                                        u8271 EDF0                                          u8191 ED1E  
                                        u9215 CE36                                          u9151 AE86  
                                        u8431 B996                                          u7616 A656  
                                        u7640 A6C2                                          u7720 C48E  
                                        u7560 B824                                          u8360 AE5C  
                                        u9320 C230                                          u8600 DC42  
                                        u8520 DB3E                                          u8440 D9C0  
                                        u8280 EE06                                          u9080 BF1E  
                                        u9240 CECC                                          u9160 CD60  
                                        u9400 F4D2                                          u7641 A6BC  
                                        u7721 C48A                                          u7561 B820  
                                        u8361 AE58                                          u9321 C22C  
                                        u8601 DC3E                                          u8521 DB3A  
                                        u8441 D9BC                                          u8281 EE02  
                                        u9081 BF1A                                          u9241 CEC8  
                                        u9401 F4CE                                          u7626 A682  
                                        u7730 C4A4                                          u7810 AF94  
                                        u9330 C2B6                                          u8610 DC58  
                                        u8530 DB60                                          u8450 D9D2  
                                        u8290 EE16                                          u9090 BF46  
                                        u9250 CF08                                          u9170 CD8E  
                                        u8370 AF82                                          u9410 F548  
                                        u7731 C4A0                                          u7811 AF90  
                                        u9331 C2B2                                          u8611 DC54  
                                        u8531 DB5C                                          u8451 D9CE  
                                        u8291 EE12                                          u9091 BF42  
                                        u9075 BEF6                                          u9251 CF04  
                                        u9235 CEA6                                          u9171 CD8A  
                                        u8371 AF7E                                          u9411 F544  
                                        u7636 A66C                                          u7660 A696  
                                        u7580 A994                                          u7740 C4E8  
                                        u7820 AFA6                                          u9340 B630  
                                        u9260 B89C                                          u8620 DC6C  
                                        u8540 DB8A                                          u8460 D9E2  
                                        u8700 E196                                          u9180 CDB0  
                                        u7900 BD54                                          u9500 F7DC  
                                        u9420 F55A                                          u7661 A690  
                                        u7581 A990                                          u7741 C4E4  
                                        u7821 AFA2                                          u9341 B62C  
                                        u8381 B74E                                          u9261 B898  
                                        u8621 DC68                                          u8541 DB86  
                                        u8461 D9DE                                          u8701 E192  
                                        u9181 CDAC                                          u9165 CD56  
                                        u7901 BD50                                          u9501 F7D8  
                                        u9421 F556                                          u9350 A884  
                                        u7670 ADEC                                          u7646 A6C4  
                                        u7718 C42E                                          u7750 B6BE  
                                        u7830 AFBA                                          u8390 B762  
                                        u9270 B8B0                                          u7590 A74C  
                                        u8630 DC86                                          u8550 DBAE  
                                        u8470 DA26                                          u8710 E1A8  
                                        u7910 BD7A                                          u9510 F7EA  
                                        u9430 F5D4                                          u9351 A880  
                                        u7671 ADE8                                          u7719 C442  
                                        u7751 B6BA                                          u7831 AFB6  
                                        u8391 B75E                                          u9271 B8AC  
                                        u7591 A748                                          u8631 DC82  
                                        u8551 DBAA                                          u8471 DA22  
                                        u8711 E1A4                                          u7911 BD76  
                                        u9511 F7E6                                          u9431 F5D0  
                                        u7680 AE08                                          u7760 B6DA  
                                        u7808 B28A                                          u7840 AFCC  
                                        u9280 B8C2                                          u8640 DCCE  
                                        u8560 DBC4                                          u8480 DA38  
                                        u8800 E46C                                          u8720 E1B8  
                                        u7920 BDAC                                          u9600 FBEC  
                                        u9520 F814                                          u9440 F660  
                                        u9360 F428                                          u7681 AE04  
                                        u7761 B6D6                                          u7809 B29C  
                                        u7841 AFC8                                          u9281 B8BE  
                                        u8641 DCCA                                          u8561 DBC0  
                                        u8481 DA34                                          u8801 E468  
                                        u8721 E1B4                                          u7921 BDA8  
                                        u9601 FBE8                                          u9521 F810  
                                        u9441 F65C                                          u9361 F424  
                                        u7690 AE24                                          u7666 A698  
                                        u7770 B70A                                          u7658 B4D0  
                                        u7578 B83C                                          u7850 AFDE  
                                        u7930 A78E                                          u9290 B8F8  
                                        u8650 DCFE                                          u8570 DBE2  
                                        u8490 DA48                                          u8810 E480  
                                        u8730 E1EE                                          u9610 FBFA  
                                        u9530 F95C                                          u9450 F692  
                                        u9370 F472                                          u7691 AE20  
                                        u7771 B706                                          u7659 B4E2  
                                        u7579 B84E                                          u7851 AFDA  
                                        u7931 A78A                                          u9291 B8F4  
                                        u8651 DCFA                                          u8571 DBDE  
                                        u8491 DA44                                          u8811 E47C  
                                        u8731 E1EA                                          u9195 CDC4  
                                        u9611 FBF6                                          u9531 F958  
                                        u9451 F68E                                          u9371 F46E  
                                        u7780 A836                                          u7860 B438  
                                        u8660 DD2C                                          u8580 DC02  
                                        u8900 C02A                                          u8820 E49A  
                                        u8740 E1FE                                          u7940 E9D2  
                                        u9196 CDCE                                          u9620 FC4E  
                                        u9540 F9C2                                          u9460 F6D0  
                                        u9380 F482                                          u9700 C3BA  
                                        u7781 A832                                          u7861 B434  
                                        u8661 DD28                                          u8581 DBFE  
                                        u8901 C026                                          u8821 E496  
                                        u8741 E1FA                                          u7941 E9CE  
                                        u9197 CDDE                                          u9621 FC4A  
                                        u9541 F9BE                                          u9461 F6CC  
                                        u9381 F47E                                          u9701 C3B6  
                                        u7870 B44C                                          u8590 DC14  
                                        u8910 C048                                          u8830 E4E2  
                                        u8750 E39C                                          u8670 E134  
                                        u7950 E9E4                                          u9630 FD20  
                                        u9550 FA0A                                          u9470 F75C  
                                        u9390 F4C0                                          u9710 C3D4  
                                        u7871 B448                                          u8591 DC10  
                                        u8911 C044                                          u8831 E4DE  
                                        u8671 E130                                          u7951 E9E0  
                                        u9631 FD1C                                          u9551 FA06  
                                        u9471 F758                                          u9391 F4BC  
                                        u9711 C3D0                                          u9800 B130  
                                        u8920 C068                                          u8840 E510  
                                        u8760 E3F6                                          u8680 E146  
                                        u7960 E9F4                                          u9640 FD3C  
                                        u9560 FA1A                                          u9480 F792  
                                        u9720 C524                                          u9801 B12C  
                                        u8921 C064                                          u8841 E50C  
                                        u8761 E3F2                                          u8681 E142  
                                        u7961 E9F0                                          u9641 FD38  
                                        u9561 FA16                                          u9481 F78E  
                                        u9721 C520                                          u9810 B148  
                                        u8930 C0B8                                          u8850 E54A  
                                        u8770 E416                                          u8690 E156  
                                        u7970 EA36                                          u7890 BD44  
                                        u9650 FDA2                                          u9570 FAB4  
                                        u9490 F7AA                                          u9730 C56E  
                                        u9811 B144                                          u8931 C0B4  
                                        u8851 E546                                          u8771 E412  
                                        u8755 E392                                          u8691 E152  
                                        u7971 EA32                                          u7891 BD40  
                                        u9651 FD9C                                          u9571 FAB0  
                                        u9491 F7A6                                          u9731 C56A  
                                        u9900 EF62                                          u9820 B180  
                                        u8860 BAA0                                          u8780 E428  
                                        u8940 AA50                                          u7980 EA4C  
                                        u9660 FDA4                                          u9580 FB02  
                                        u9740 C5B8                                          u9901 EF5E  
                                        u9821 B17C                                          u8861 BA9C  
                                        u8781 E424                                          u8941 AA4C  
                                        u7981 EA48                                          u9581 FAFE  
                                        u7798 B072                                          u9910 EF8E  
                                        u8870 BADE                                          u8790 E456  
                                        u7990 EA5E                                          u8950 C0D8  
                                        u9670 FDB8                                          u9590 FBB0  
                                        u9750 C5EA                                          u7799 B084  
                                        u9911 EF8A                                          u9831 EE82  
                                        u8871 BADA                                          u8791 E452  
                                        u7991 EA5A                                          u8951 C0D4  
                                        u9671 FDB4                                          u9591 FBAC  
                                        u9751 C5E6                                          u7888 B480  
                                        u9920 EFA4                                          u9840 EEAC  
                                        u8880 BB12                                          u8960 C10C  
                                        u9680 C2E8                                          u9760 C600  
                                        u7889 B492                                          u9921 EFA0  
                                        u9841 EEA8                                          u8881 BB0E  
                                        u9681 C2E4                                          u9761 C5FC  
                                        u9745 C5AE                                          u9930 EFCA  
                                        u9850 EEBE                                          u8890 BFEC  
                                        u8970 C13A                                          u9690 C3A4  
                                        u9770 C61A                                          u9931 EFC6  
                                        u9851 EEBA                                          u8891 BFE8  
                                        u8971 C136                                          u9691 C3A0  
                                        u9771 C616                                          u9940 EFDE  
                                        u9860 EEDE                                          u8980 C14E  
                                        u9780 BCA6                                          u9941 EFDA  
                                        u9861 EEDA                                          u8981 C14A  
                                        u8965 C102                                          u9781 BCA2  
                                        u9950 EFF0                                          u9870 EEFA  
                                        u8990 C176                                          u9790 BD2A  
                                        u9951 EFEC                                          u9871 EEF6  
                                        u8991 C172                                          u9791 BD26  
                                        u9960 F002                                          u9880 EF38  
                                        u9961 EFFE                                          u9881 EF34  
                                        u9970 F03A                                          u9890 EF50  
                                        u9971 F036                                          u9891 EF4C  
                                        u9980 F052                                          u9981 F04E  
                                        u9990 F082                                          u9991 F07E  
                                        _WPUA 3A41                                          _WPUB 3A51  
                                        _WPUC 3A61                                          _WPUD 3A71  
                                        _WPUE 3A81                       ??_wr2RegCompleteHandler 000C  
                            ??_I2C1_MasterFsm 0013                                          _Ndat 00E9  
                            ParseUserInput@Tm 0090                     ??_I2C1_CallbackReturnStop 000C  
                                        _dbuf 0324                                          _labs AE7C  
                                        _atou CF2A                                          _main D156  
                                        _asup 00C9                                          _ncnv 00BB  
                                        _prec 00C3                                          pad@i 0017  
                                        pad@p 0014                                          fsr0h 3FEA  
                                        fsr1h 3FE2                                          indf0 3FEF  
                                        fsr2h 3FDA                                          fsr0l 3FE9  
                                        indf2 3FDF                                          fsr1l 3FE1  
                                        fsr2l 3FD9                                          _utoa C2D8  
                        EEPROM_WriteByte@data 001D                                          _xtoa C514  
                       I2C1_ReadDataBlock@len 0019                         EEPROM_WriteBlock@data 0025  
                       I2C1_ReadDataBlock@reg 0017                                 ___fpclassifyf BEC0  
                                        prodh 3FF4                                          prodl 3FF3  
                       EEPROM_WriteBlock@size 0027                                          start FFFC  
                            ??_I2C1_SetBuffer 0005                               ___fldiv@new_exp 0020  
                                ___param_bank 0000                                   ?_UART1_Read 0001  
               I2C1_CallbackReturnStop@funPtr 000A                               _I2C1_DO_TX$1073 0011  
                                       ??_pad 0016                 __end_of_OSCILLATOR_Initialize A73A  
                                       l10001 E808                             ??_I2C1_ReadNBytes 001A  
                                       l10011 E89A                                         l10101 D016  
                                       l10005 E810                                         l10103 D02E  
                                       l10015 E8CC                                         l10007 E842  
                                       l10031 E98E                                         l10121 D10A  
                                       l10105 D042                                         l10113 D056  
                                       l10201 DF00                                         l10025 E94A  
                                       l10017 E8F6                                         l10009 E868  
                                       l10123 D11E                                         l10115 D074  
                                       l10203 DF18                                         l10019 E918  
                                       l10027 E97C                                         l10131 A9D6  
                                       l10141 AA06                                         l10125 D130  
                                       l10117 D08A                                         l10205 DF2E  
                                       l10133 A9DA                                         l10301 AB66  
                                       l10151 AA36                                         l10143 AA0A  
                                       l10311 ACC0                                         l10127 D14C  
                                       l10119 D098                                         l10231 DF9A  
                                       l10207 DF3A                                         l10215 DF4A  
                                       l10223 DF7A                                         l10135 A9DE  
                                       l10303 AB6E                                         l10145 AA0E  
                                       l10313 ACE6                                         l10401 B0B0  
                                       l10081 CF66                                         l10073 CF2A  
                                       l10241 E05E                                         l10233 DFC2  
                                       l10217 DF5E                                         l10209 DF3E  
                                       l10161 ADCC                                         l10321 AC86  
                                       l10137 A9E2                                         l10305 AB90  
                                       l10147 AA20                                         l10315 ACE8  
                                       l10411 B102                                         l10403 B0C6  
                                       l10091 CFCE                                         l10083 CF76  
                                       l10075 CF32                                         l10251 E0B4  
                                       l10243 E062                                         l10235 DFF4  
                                       l10219 DF6E                                         l10171 DD96  
                                       l10155 AD8C                                         l10323 AC8E  
                                       l10331 C786                                         l10139 A9F4  
                                       l10307 AB92                                         l10149 AA24  
                                       l10309 ACB8                                         l10405 B0D8  
                                       l10093 CFE2                                         l10085 CF8A  
                                       l10077 CF46                                         l10261 E114  
                                       l10245 E072                                         l10237 E000  
                                       l10253 E0C8                                         l10181 DE20  
                                       l10173 DDBE                                         l10229 DF8A  
                                       l10165 DD40                                         l10157 AD98  
                                       l10325 ACA4                                         l10317 AC72  
                                       l10421 B1E4                                         l10413 B182  
                                       l10341 C804                                         l10333 C794  
                                       l10501 D5A6                                         l10407 B0EA  
                                       l10095 CFF6                                         l10087 CF9E  
                                       l10079 CF5A                                         l10247 E088  
                                       l10239 E028                                         l10191 DE86  
                                       l10175 DDCA                                         l10167 DD68  
                                       l10159 ADAA                                         l10319 AC7E  
                                       l10415 B1C0                                         l10351 C858  
                                       l10343 C80C                                         l10335 C7DA  
                                       l10503 D600                                         l10511 AABE  
                                       l10431 B9F8                                         l10423 B9CE  
                                       l10409 B0FE                                         l10097 D008  
                                       l10089 CFBC                                         l10249 E0A0  
                                       l10193 DEA2                                         l10177 DDDE  
                                       l10185 DE2C                                         l10169 DD74  
                                       l10601 CB1A                                         l10417 B1CC  
                                       l10281 B3F0                                         l10273 B3AA  
                                       l10361 C8CE                                         l10353 C894  
                                       l10345 C818                                         l10337 C7F0  
                                       l10329 C776                                         l10505 D65A  
                                       l10521 C984                                         l10513 C928  
                                       l10441 BA52                                         l10433 BA12  
                                       l10425 B9DE                                         l10099 D00C  
                                       l10259 E100                                         l10187 DE64  
                                       l10179 DDFA                                         l11171 E824  
                                       l10611 CB82                                         l10603 CB2A  
                                       l10291 A5C0                                         l10419 B1D8  
                                       l10283 B404                                         l10275 B3B6  
                                       l10371 C916                                         l10363 C8D2  
                                       l10355 C8A0                                         l10347 C84A  
                                       l10531 CAAC                                         l10523 C9A0  
                                       l10515 C938                                         l10507 AAAC  
                                       l10443 BA6C                                         l10435 BA22  
                                       l10427 B9E4                                         l11181 B860  
                                       l10189 DE72                                         l10381 BE1E  
                                       l10293 B336                                         l11173 E8E0  
                                       l11165 E650                                         l10621 CCAA  
                                       l10613 CB9E                                         l10605 CB36  
                                       l10461 BB52                                         l10453 A7D6  
                                       l10285 B408                                         l10277 B3CC  
                                       l10365 C8F6                                         l10357 C8AE  
                                       l10349 C84C                                         l10533 CAC6  
                                       l10525 C9BC                                         l10517 C94E  
                                       l10541 A800                                         l10509 AAB0  
                                       l10437 BA26                                         l10429 B9F4  
                                       l10701 AAE6                                         l11183 B4F4  
                                       l10631 AA8A                                         l10199 DED8  
                                       l10383 BE26                                         l10391 BE5A  
                                       l10375 BDF8                                         l10551 AC08  
                                       l10295 B33A                                         l11175 E96E  
                                       l11167 E722                                         l10623 CCC4  
                                       l10615 CBBA                                         l10607 CB4C  
                                       l10447 A790                                         l10471 BBA0  
                                       l10463 BB94                                         l10455 BB1C  
                                       l10287 A5CA                                         l10279 B3DE  
                                       l10367 C906                                         l10359 C8CC  
                                       l10535 CADE                                         l10527 CA2A  
                                       l10519 C968                                         l10543 A804  
                                       l10439 BA40                                         l10703 AAF2  
                                       l11185 C454                                         l11177 B2AE  
                                       l10633 AAA2                                         l10393 BE84  
                                       l10385 BE3E                                         l10377 BE00  
                                       l10553 AC24                                         l10545 ABEA  
                                       l10297 B368                                         l11169 E7B6  
                                       l10625 CCDC                                         l10617 CC28  
                                       l10609 CB66                                         l10449 A7AE  
                                       l10473 BBA2                                         l10465 BB96  
                                       l10457 BB34                                         l10289 A5D4  
                                       l10369 C914                                         l10481 D3FE  
                                       l10529 CAA0                                         l10537 CAEA  
                                       l10561 B20A                                         l10641 D702  
                                       l10705 AB04                                         l10801 D1B6  
                                       l11179 B096                                         l10571 A632  
                                       l10395 BE98                                         l10379 BE12  
                                       l10547 ABF8                                         l10299 B36C  
                                       l10619 CC9E                                         l10627 CCE8  
                                       l10475 BBA4                                         l10467 BB98  
                                       l10459 BB42                                         l10491 D46C  
                                       l10483 D414                                         l10539 A7FA  
                                       l10563 B21A                                         l10651 D7B8  
                                       l10643 D71C                                         l10635 D6B6  
                                       l10707 AB08                                         l10811 D206  
                                       l10803 D1C2                                         l10629 AA72  
                                       l10573 A632                                         l10397 BEAA  
                                       l10389 BE52                                         l10549 AC00  
                                       l10477 BBA6                                         l10469 BB9A  
                                       l10493 D482                                         l10485 D42A  
                                       l10565 B224                                         l10557 B1EC  
                                       l10661 D83A                                         l10653 D7D2  
                                       l10645 D736                                         l10637 D6CC  
                                       l10581 BBE4                                         l10821 D278  
                                       l10813 D212                                         l10805 D1DE  
                                       l10399 B0B0                                         l10479 A722  
                                       l10567 A6DC                                         l10495 D498  
                                       l10487 D440                                         l10559 B1FC  
                                       l10671 D8B2                                         l10663 D86E  
                                       l10655 D7EA                                         l10647 D750  
                                       l10639 D6E8                                         l10591 BC22  
                                       l10583 BBF6                                         l10575 BBC6  
                                       l10831 D32C                                         l10823 D2B6  
                                       l10815 D240                                         l10807 D1EE  
                                       l10569 A6EC                                         l10497 D4F2  
                                       l10489 D456                                         l10681 D966  
                                       l10673 D8F0                                         l10665 D87A  
                                       l10657 D7F8                                         l10649 D76A  
                                       l10593 BC34                                         l10585 BC0C  
                                       l10577 BBCE                                         l10841 D3E2  
                                       l10825 D2CA                                         l10817 D254  
                                       l10833 D354                                         l10809 D1FA  
                                       l10691 B2FA                                         l10499 D54C  
                                       l10683 D98A                                         l10675 D904  
                                       l10667 D88E                                         l10659 D80C  
                                       l10579 BBD4                                         l10595 BC36  
                                       l10843 D3EA                                         l10835 D382  
                                       l10827 D2DC                                         l10819 D266  
                                       l10693 B32C                                         l10677 D916  
                                       l10669 D8A0                                         l10685 D992  
                                       l10597 BC66                                         l10829 D2EE  
                                       l10687 D99E                                         l10679 D928  
                                       l10839 D3BC                                         l10791 D15E  
                                       l10697 B332                                         l10689 B2C6  
                                       l10793 D162                                         l10795 D180  
                                       l10787 D156                                         l10797 D18C  
                                       l10789 D15A                                         l10799 D1AA  
                               ___fltol@sign1 0009                                         ?_labs 0001  
                           __end_of_I2C1_Open B6AA                               __end_of___fladd EE78  
                                       ?_atou 0049                                         ?_main 0001  
                             __end_of___fldiv DD40                               __end_of___flneg AA72  
                                       STR_10 FED2                                         STR_11 FF00  
                                       STR_12 FE62                                         STR_13 FFC4  
                                       STR_14 FFB4                                         STR_22 FFF3  
                                       STR_15 FFD8                                         STR_16 FFE1  
                                       STR_17 FEA0                                         STR_25 FFF7  
                                       STR_18 FF2E                                         STR_27 FFF7  
                                       STR_19 FFEF                               __end_of___flmul E568  
                             __end_of___flsub AD42                               __end_of___fltol C1C8  
                                       u10000 F09E                                         u10001 F09A  
                                       u10010 F0B6                                         u10011 F0B2  
                             __end_of___lldiv B9CE                                         u10100 F236  
                                       u10020 F0D6                                         u10101 F232  
                                       u10021 F0D2                                         u10110 F2F2  
                                       u10030 F0F0                                         u10111 F2EE  
                                       u10031 F0EC                                         ?_utoa 0019  
                                       u10200 ABE8                                         u10120 F302  
                                       u10040 F108                                         u11000 B20A  
                                       u10201 ABE4                                         u10121 F2FE  
                                       u10041 F104                                         u11001 B206  
                                       u10130 F330                                         u10050 F116  
                                       u10210 C652                                         u11010 B244  
                                       u10131 F32C                                         u10051 F112  
                                       u10211 C64E                                         u11011 B240  
                                       u10140 F38A                                         u10060 F1AA  
                                       u10220 C696                                         u10300 E690  
                                       u11100 D88E                                         u11020 BBE4  
                                       u10141 F386                                         u10061 F1A6  
                                       u10301 E68C                                         u11101 D88A  
                                       u11021 BBE0                                         u10150 F3BA  
                                       u10070 F1C2                                         u10230 C6A6  
                                       u10310 E6B2                                         u11110 D904  
                                       u11030 BBF6                                         u10151 F3B6  
                                       u10071 F1BE                                         u10231 C6A2  
                                       u10311 E6AE                                         u11111 D900  
                                       u11031 BBF2                                         u10160 F3C8  
                                       u10080 F1FC                                         u10400 D02E  
                                       u10240 C6C8                                         u11120 B2FA  
                                       u10320 E864                                         u11040 BC08  
                                       u10161 F3C4                                         u10081 F1F8  
                                       u10401 D02A                                         u10241 C6C4  
                                       u11121 B2F6                                         u10321 E860  
                                       u11041 BC04                                         u10170 AEEA  
                                       u10090 F224                                         u10410 D042  
                                       u10330 CF46                                         u10250 C6DA  
                                       u11130 B32C                                         u11050 BC1E  
                                       u10171 AEE6                                         u10091 F220  
                                       u10411 D03E                                         u10331 CF42  
                                       u10251 C6D6                                         u10227 C688  
                                       u11131 B328                                         u11051 BC1A  
                                       u10180 AF28                                         u10420 D074  
                                       u10340 CF8A                                         u10260 C72A  
                                       u10500 DD92                                         u11060 BC66  
                                       u11140 AB22                                         u10181 AF24  
                                       u10421 D070                                         u10341 CF86  
                                       u10261 C726                                         u10501 DD8C  
                                       u11061 BC62                                         u11141 AB1E  
                                       u10190 ABBE                                         u10430 D08A  
                                       u10350 CF9E                                         u10270 C754  
                                       u10510 DD94                                         u11070 CD16  
                                       u11230 D240                                         u10191 ABBA  
                                       u10431 D086                                         u10351 CF9A  
                                       u11071 CD12                                         u11231 D23C  
                                       u10440 D11E                                         u10360 CFB0  
                                       u10600 DFF4                                         u10520 DDBE  
                                       u10280 E592                                         u11080 D83A  
                                       u11240 D254                                         u10441 D11A  
                                       u10361 CFAC                                         u10265 C71A  
                                       u10601 DFF0                                         u10521 DDBA  
                                       u10281 E58E                                         u11081 D836  
                                       u11241 D250                                         u10450 D130  
                                       u10370 CFCE                                         u10610 E028  
                                       u10530 DDFA                                         u10290 E5D6  
                                       u11090 D86E                                         u11250 D2CA  
                                       u10451 D12C                                         u10371 CFCA  
                                       u10267 C70C                                         u10611 E024  
                                       u10531 DDF6                                         u10291 E5D2  
                                       u11091 D86A                                         u11251 D2C6  
                                       u10460 D142                                         u10380 CFE2  
                                       u10620 E05A                                         u10540 DE64  
                                       u10700 B364                                         u11260 D382  
                                       u10461 D13C                                         u10381 CFDE  
                                       u10277 C746                                         u10621 E056  
                                       u10541 DE60                                         u11261 D37E  
                                       u10470 D144                                         u10390 CFF6  
                                       u10630 E088                                         u10550 DEA2  
                                       u10710 B396                                         u11270 D3E2  
                                       u10391 CFF2                                         u10631 E084  
                                       u10551 DE9E                                         u11271 D3DE  
                                       ?_xtoa 0019                                         u10640 E0A0  
                                       u10560 DF00                                         u10720 B3A6  
                                       u10480 ADCC                                         u10800 C8AE  
                                       u10641 E09C                                         u10561 DEFC  
                                       u10721 B3A2                               __end_of___llmod B61A  
                                       u10481 ADC8                                         u10801 C8AA  
                                       u10650 E0B4                                         u10570 DF2E  
                                       u10490 DD68                                         u10810 C8BE  
                                       u10730 ABA4                                         _U1P1H 3DED  
                                       u10651 E0B0                                         u10571 DF2A  
                                       u10491 DD64                                         u10707 B356  
                                       u10811 C8BA                                         u10731 ABA0  
                                       u10740 ACFA                                         u10900 B116  
                                       u10660 E0FC                                         u10580 DF5E  
                                       u10820 C8CC                                         _U1P2H 3DEF  
                                       u10741 ACF6                                         u10901 B112  
                                       u10661 E0F8                                         u10581 DF5A  
                                       u10717 B388                                         u10821 C8C8  
                                       u10670 E114                                         u10590 DFC2  
                                       u10830 C906                                         u10750 C786  
                                       u10910 B9DE                                         _U1P3H 3DF1  
                                       _U1P1L 3DEC                                         u10671 E110  
                                       u10591 DFBE                                         u10831 C902  
                                       u10751 C782                                         u11287 AAB6  
                                       u10911 B9DA                                         u10680 B3CC  
                                       u10840 C914                                         u10760 C794  
                                       u10920 B9F4                                         _U1P2L 3DEE  
                                       u10681 B3C8                                         u10841 C910  
                                       u10761 C790                                         u11297 A9FA  
                                       u10921 B9F0                                         u10850 BE4E  
                                       u10690 B41C                                         u10770 C7F0  
                                       _U1P3L 3DF0                                         u10851 BE4A  
                                       u10691 B418                                         u10771 C7EC  
                                       u10860 BE7C                                         u10780 C846  
                                       u10940 BA22                                         u10861 BE78  
                                       u10781 C842                                         u10941 BA1E  
                                       u10870 BE98                                         u10790 C890  
                                       u10871 BE94                                         u10791 C88C  
                                       u10880 BEAA                                         u10960 BA52  
                                       u10881 BEA6                                         u10961 BA4E  
                                       u10890 B0C6                                         u10938 B9FE  
                                       u10891 B0C2                                         u10939 BA12  
                                       u10980 AAE4                                         u10981 AAE0  
                                       u10990 CB18                                         u10958 BA2C  
                                       u10991 CB14                                         u10959 BA40  
                      I2C1_ReadNBytes@address 001A                                         u10978 BA58  
                                       u10979 BA6C                                         _U1UIR 3DF8  
                                       _U1RXB 3DE8                                         _U1TXB 3DEA  
                  __end_of_i2c1_fsmStateTable FE1D                                         _OSCEN 39DD  
                                vfpfcnvrt@fmt 008D                                         _TRISA 3FC2  
                                       _TRISB 3FC3                                         _TRISC 3FC4  
                                       _TRISD 3FC5                                         _TRISE 3FC6  
                      ??_I2C1_MasterGetRxData 0001                         ?_I2C1_DO_RX_NACK_STOP 0001  
                         ___lmul@multiplicand 0005                             ??_I2C1_MasterRead 0017  
                  ??_I2C1_CallbackReturnReset 000C                             ??_I2C1_MasterOpen 0001  
                           ??_I2C1_MasterStop 0001                             ??_I2C1_Initialize 0001  
                   ?_I2C1_MasterIsNackFlagSet 0001                    ??_ReadAndSendEEPROMDataCSV 005C  
                                       _fgetc C1C8                                         _flags 00CA  
                               ?_MPU6050_Init 0001                                         _getch A562  
                         read_prec_or_width@c 0009                                         _errno 00BF  
                         read_prec_or_width@n 000A                                         _fputc BD34  
                                       _fputs AB24                      ??_MPU6050_ReadSensorData 002E  
                                       labs@a 0001                                         pad@fp 0011  
                                       _width 00C1                                         _putch A5B6  
                                       atou@c 0059                                         atou@i 0057  
                      ?_ReadAndSendEEPROMData 00AF                                         atou@w 0055  
                      I2C1_ReadDataBlock@data 0018                              ?_UART_SendString 0002  
            __end_of_I2C1_MasterClearNackFlag A532                                         pclath 3FFA  
                                       tablat 3FF5                               __end_of_vfscanf BEC0  
                                       utoa@d 001A                                         utoa@i 0022  
                                       utoa@p 0020                                         utoa@w 001E  
                                       status 3FD8                               __end_of_sprintf ACB6  
                              ?___fpclassifyf 0001                                  ??_I2C1_DO_RX 000F  
                                       xtoa@c 0026                                  ??_I2C1_DO_TX 000D  
                                       xtoa@d 001A                                         xtoa@i 0027  
                                       xtoa@p 0024                                         xtoa@w 0022  
                   _I2C1_MasterClearCountFlag A526                               __end_of_strncmp C774  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler A514  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler A512                        ??_I2C1_DO_ADDRESS_NACK 000D  
                           _dbuf@doscan$F2259 0374                                  ??_I2C1_Close 0001  
       LoadCurrentAddressEEPROM@addressBuffer 002B        StoreCurrentAddressEEPROM@addressBuffer 002A  
                   ?_LoadCurrentAddressEEPROM 0001                EEPROM_WriteBlock@deviceAddress 0028  
                    fp__rd1RegCompleteHandler 0000                               __initialization A94C  
                                __end_of_labs AED2                                  __end_of_atou D156  
                                __end_of_main D3FE                      fp__wr1RegCompleteHandler 0000  
                                __end_of_utoa C3F2                                  __end_of_xtoa C638  
                 ??_UART1_DefaultErrorHandler 0001                    ?_I2C1_MasterDisableRestart 0001  
                                vfsfcnvrt@fmt 005C                                  vfsfcnvrt@llu 0063  
                    __end_of_EEPROM_ReadBlock ACFC                  I2C1_MasterSetCounter@counter 0001  
                                ?_UART1_Write 0001              __end_of_I2C1_MasterClearStopFlag A538  
                fp__I2C1_DO_SEND_RESTART_READ 0000                                        ??_labs 0005  
                      ??_I2C1_MasterOperation 0015                                        ??_atou 004B  
                                      ??_main 005E                                        ??_utoa 001E  
                                      ??_xtoa 001E                                 __activetblptr 0003  
                  __end_of_read_prec_or_width BD34                            __end_of_I2C1_DO_RX B748  
                          __end_of_I2C1_DO_TX C514                              _UART1_Initialize B182  
                              ??_MPU6050_Init 001A                            __end_of_I2C1_Close A89C  
                    __end_of_I2C1_WriteNBytes AF2A                                        ?_fgetc 0003  
                                      ?_getch 0001                                        ?_fputc 0003  
                            ___llmod@dividend 0001                                        ?_fputs 000B  
                                      _ANSELA 3A40                                        ?_putch 0001  
                                      _ANSELB 3A50                                        _ANSELC 3A60  
                                      _ANSELD 3A70                                        _ANSELE 3A80  
                                      _RB1I2C 3A5A                                        _RB2I2C 3A5B  
                                      _RD0I2C 3A7A                                        _U1CON0 3DF2  
                                      _U1CON1 3DF3                                        _U1CON2 3DF4  
                                      _RD1I2C 3A7B                                        _RC3I2C 3A6A  
                                      _RC4I2C 3A6B                                        _U1BRGH 3DF6  
                                      _U1FIFO 3DF7                                        _U1BRGL 3DF5  
                                      _RB1PPS 3A09                                        _RB2PPS 3A0A  
                                      _ODCONA 3A42                                        _ODCONB 3A52  
                                      _RC6PPS 3A16                                        _ODCONC 3A62  
                                      _ODCOND 3A72                                        _ODCONE 3A82  
                                      _INLVLA 3A44                                        _INLVLB 3A54  
                                      _INLVLC 3A64                                        _INLVLD 3A74  
                                      _INLVLE 3A84                       ??_I2C1_MasterGetCounter 0001  
                                      _OSCFRQ 39DF                             ?_I2C1_MasterClose 0001  
               EEPROM_WriteByte@deviceAddress 001F                         _UART1_SetErrorHandler A5C0  
                            __end_of___xxtofl C928                              _I2C1_DO_RX_EMPTY B7E6  
                     ??_I2C1_MasterDisableIrq 0001                             ?_I2C1_MasterWrite 0001  
                    ?_I2C1_MasterWaitForEvent 0001                            ??_I2C1_MasterClose 0001  
                            _I2C1_DO_TX_EMPTY B498                            ParseUserInput@Ndat 0091  
       ReadAndSendEEPROMData@eepromReadBuffer 01C8                            ??_I2C1_MasterWrite 0017  
                                vfprintf@cfmt 004D                                  ___strtoxll@a 003E  
                                ___strtoxll@c 0048                                  ___strtoxll@s 0019  
                    ?_I2C1_Write1ByteRegister 0017                                        ___flge BFBE  
                                      ___fleq BA72                                        ___lmul B1EC  
                                      ___omul B748                                     ??___fladd 0009  
                                      ___wmul A846                                     ??___fldiv 0017  
                                   ??___flneg 0005                                     ??___flmul 0009  
                                   ??___flsub 0022                                     ??___fltol 0005  
                                   ??___lldiv 0009                                     ??___llmod 0009  
                      ReadAndSendEEPROMData@i 01E0                                        _efgtoa F404  
                                      _floorf CD18                                        _memcpy AF2A  
                        read_prec_or_width@ap 0008             __end_of_I2C1_MasterDisableRestart A53E  
                                      _memset AAE6                             ??_EEPROM_ReadByte 001D  
                                      clear_0 A952                                        clear_1 A95E  
                                      clear_2 A96A                                        _nmatch 00B9  
                                      fgetc@c 000A                                        isa$std 0001  
                                      _sscanf ABEA                      __end_of_EEPROM_WriteByte AA04  
                                      pad@buf 0012                                        _skipws B118  
                                      _ungetc B888                                        atou@ep 0053  
                                      atou@fp 0049                      ??_I2C1_DO_SEND_ADR_WRITE 0001  
                                      _strcpy AC2E                             ??_custom_delay_ms 0005  
                           ?_I2C1_SetCallback 0001                        ??_I2C1_DO_RX_NACK_STOP 0001  
                     ??_I2C1_DO_BUS_COLLISION 000D                        EEPROM_WriteByte@buffer 0020  
                       _I2C1_DO_SEND_ADR_READ A978                                        fputc@c 0003  
                              _PMD_Initialize A7D6                                        fputs@c 000E  
                                      fputs@i 000F                                        fputs@s 000B  
               ?_I2C1_SetDataCompleteCallback 0006                               ___fpclassifyf@e 0009  
                             ___fpclassifyf@u 000B                               ___fpclassifyf@x 0001  
                          ??_I2C1_SetCallback 0005                                  __mediumconst FDF6  
                EEPROM_ReadByte@deviceAddress 001F                                        tblptrh 3FF7  
                                      tblptrl 3FF6                                        tblptru 3FF8  
                                   ??_vfscanf 005E                              __end_of_vfprintf ADD8  
                                      utoa@fp 0019                              ___strtoxll@flags 003D  
        __end_of_UART1_SetOverrunErrorHandler A5DE                  _UART1_SetOverrunErrorHandler A5D4  
                   _UART1_DefaultErrorHandler A510                                     ??_sprintf 004F  
                            ___strtoxll@limit 0035                                 main@userInput 04C8  
                                      xtoa@fp 0019                                     ??_strncmp 0007  
                     _I2C1_DO_RX_NACK_RESTART A580                    fp__I2C1_DO_RX_NACK_RESTART 0000  
                         I2C1_WriteNBytes@len 0018                                    ___flge@ff1 001A  
                                  ___flge@ff2 001E                               ??___fpclassifyf 0005  
                                ___xxtofl@arg 000B                                  ___xxtofl@exp 000A  
                           _SYSTEM_Initialize A6DC                                  ___xxtofl@val 0001  
                                  ___fleq@ff1 0001                                    ___fleq@ff2 0005  
              I2C1_SetDataCompleteCallback@cb 0006                                    __accesstop 0060  
                     __end_of__initialization A972                                    ___flneg@f1 0001  
             I2C1_MasterOperation@returnValue 0016                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 0001                     ReadAndSendEEPROMDataCSV@i 01E0  
                                  ___fltol@f1 0001                      _I2C1_MasterClearNackFlag A52C  
                   ReadAndSendEEPROMData@Ndat 00AF                                 ??_I2C1_Poller 0015  
                     _rdBlkRegCompleteHandler AD42                    fp__rdBlkRegCompleteHandler 0000  
                              __pcstackCOMRAM 0001                           ??_SYSTEM_Initialize 0003  
            __end_of_I2C1_MasterEnableRestart A544                                 __end_of_fgetc C2D8  
                               __end_of_getch A568                                 __end_of_fputc BDF8  
                               __end_of_fputs AB64              UART_ReceiveString@receivedString 0001  
                               __end_of_putch A5C0           StartLogging@startReadAddressEEPROM1 0200  
         StartLogging@startReadAddressEEPROM2 0204                       ??_I2C1_MasterSetCounter 0001  
                      __end_of_PMD_Initialize A7FA                  ??_I2C1_DO_SEND_RESTART_WRITE 0001  
                     ??_I2C1_MasterSendTxData 0001                                    ___ungetbuf 021C  
                                  ___ungetcnt 005E                    ?_I2C1_MasterIsCountFlagSet 0001  
                   _UART1_FramingErrorHandler 0223                      _I2C1_MasterClearStopFlag A532  
                       __end_of_I2C1_DO_RESET A622                                    ___strtoxll EE78  
                 ??_StoreCurrentAddressEEPROM 002A                             _I2C1_DO_BUS_ERROR A622  
                                     ??_fgetc 0005                                       ??_getch 0003  
                          _width@doscan$F2256 00BD                                       ??_fputc 0006  
                   __end_of_SYSTEM_Initialize A6F2                                       ??_fputs 000E  
                                     ??_putch 0002                     ?_I2C1_ClearInterruptFlags 0001  
                                  __pbssBANK0 00B9                                    __pbssBANK2 0214  
                                  __pbssBANK3 0300                            ?_I2C1_DO_BUS_ERROR 0001  
             __end_of_I2C1_MasterWaitForEvent AFE0                 ?_UART1_SetOverrunErrorHandler 0001  
                      ?_UART1_SetErrorHandler 0001                 __end_of_rd2RegCompleteHandler A920  
                        I2C1_Open@returnValue 0002                 __end_of_wr2RegCompleteHandler A8C8  
             __end_of_I2C1_Write1ByteRegister B118                         _rd1RegCompleteHandler A8C8  
                  __end_of_I2C1_ReadDataBlock B41E                               _I2C1_ReadNBytes ABA6  
                         ??_I2C1_DO_BUS_ERROR 0001                             _I2C1_DO_SEND_STOP A81E  
                       _wr1RegCompleteHandler A920                      rd1RegCompleteHandler@ptr 000A  
                           _StartLogging$1474 0208                             _StartLogging$1476 020C  
                               fp__I2C1_DO_RX 0000                                 fp__I2C1_DO_TX 0000  
                             fp__I2C1_DO_IDLE 0000                                       ?___flge 001A  
                                     ?___fleq 0001                       fp__I2C1_DO_ADDRESS_NACK 0000  
                                     ?___lmul 0001                            ?_I2C1_DO_SEND_STOP 0001  
                        __end_of_MPU6050_Init A642                                       ?___omul 0001  
                                ??_UART1_Read 0001                                       _I2C1CLK 3D7B  
                                     _I2C1CNT 3D6C                                       _I2C1ERR 3D76  
                                     _I2C1PIE 3D7A                                       ?___wmul 0001  
                                     _I2C1PIR 3D79                                       _I2C1RXB 3D6A  
                                     _I2C1TXB 3D6B              __end_of_I2C1_MasterIsNackFlagSet A66E  
                      _MPU6050_ReadSensorData D3FE               ReadAndSendEEPROMDataCSV@ax_read 01E4  
                             _I2C1_MasterRead A588               ReadAndSendEEPROMDataCSV@ay_read 01E8  
                             _I2C1_MasterOpen A9A6                                       ?_efgtoa 003C  
             ReadAndSendEEPROMDataCSV@az_read 01EC                       _I2C1_MasterIsTxBufEmpty A6B0  
                             _I2C1_MasterStop A556                               _I2C1_Initialize A790  
                         __end_of_I2C1_Poller A790                                       ?_floorf 0028  
                                     ?_memcpy 0001                                       ?_memset 0001  
                         ___omul@multiplicand 0009                                ___lmul@product 0009  
             ReadAndSendEEPROMDataCSV@gx_read 01F0               ReadAndSendEEPROMDataCSV@gy_read 01F4  
             ReadAndSendEEPROMDataCSV@gz_read 01F8                             fp__I2C1_DO_RX_ACK 0000  
                           fp__I2C1_DO_TX_ACK 0000                                       ?_sscanf 0079  
                             ?_PMD_Initialize 0001                                       ?_skipws 000C  
                                     ?_ungetc 0001                        ?_I2C1_DO_SEND_ADR_READ 0001  
                         ??_I2C1_DO_SEND_STOP 0002                                       ?_strcpy 0001  
                                     _U1ERRIE 3DFA                                       _U1ERRIR 3DF9  
                                     _U1RXPPS 3AE5                                     ?___xxtofl 0001  
                   __end_of_I2C1_DO_BUS_ERROR A632                             _I2C1_MasterIsNack A69A  
           __end_of_I2C1_MasterIsCountFlagSet A658                                       _OSCCON1 39D9  
                                     _OSCCON3 39DB                                     _I2C1_Open B61A  
                     ??_ReadAndSendEEPROMData 005C                     ??_I2C1_DO_RX_NACK_RESTART 0001  
                                     _OSCTUNE 39DE                                       _SLRCONA 3A43  
                                     _SLRCONB 3A53                                       _SLRCONC 3A63  
                                     _SLRCOND 3A73                                       _SLRCONE 3A83  
                       I2C1_DO_RX@retFsmState 0011                            ?_I2C1_MasterIsNack 0001  
            __end_of_LoadCurrentAddressEEPROM AAAC                    ?_I2C1_DO_SEND_RESTART_READ 0001  
              ??_I2C1_SetDataCompleteCallback 000A                ReadAndSendEEPROMDataCSV@buffer 0100  
                          __end_of_UART1_Read BA72                            _i2c1_fsmStateTable FDF7  
                         ??_I2C1_MasterIsNack 0001                     __end_of_I2C1_DO_SEND_STOP A846  
                   ??_rdBlkRegCompleteHandler 000C                            I2C1_SetCallback@cb 0001  
                                     __Hparam 0000                                       __Lparam 0000  
                         ParseUserInput@input 008E                      __end_of_UART1_Initialize B1EC  
                          UART_SendString@str 0002                     _StoreCurrentAddressEEPROM A7FA  
                         fp__I2C1_DO_RX_EMPTY 0000                   main@startReadAddressEEPROM1 04DC  
                 main@startReadAddressEEPROM2 04E0                                 ___strtoxll@cp 0046  
                                     ___fladd E9B8                                       ___fldiv D9A6  
                         fp__I2C1_DO_TX_EMPTY 0000                                       ___flneg AA3A  
                   ?_I2C1_MasterIsStopFlagSet 0001                                       ___flmul E11A  
                                     ___flsub ACFC                                       ___fltol C0C2  
                                     ___lldiv B92A                                       ___llmod B592  
                                   ?_vfprintf 008F                   ??_I2C1_MasterDisableRestart 0001  
                                     __pcinit A94C                                 ?_I2C1_DO_IDLE 0001  
                                     __ramtop 1000                    __end_of_UART_ReceiveString BC76  
                           ?_EEPROM_ReadBlock 0021                                       __ptext0 D156  
                                     __ptext1 AAE6                                       __ptext2 BBC6  
                                     __ptext3 B9CE                                       __ptext4 A514  
                                     __ptext5 A512                                       __ptext6 A510  
                                     __ptext7 D6B6                                       __ptext8 AAAC  
                                     __ptext9 B1EC                      _I2C1_MasterEnableRestart A53E  
                   __end_of_I2C1_MasterIsNack A6B0                  ?_I2C1_SetAddressNackCallback 0006  
                    __end_of_I2C1_DO_RX_EMPTY B888                         _OSCILLATOR_Initialize A722  
                          ??_EEPROM_ReadBlock 0026                 EEPROM_ReadBlock@memoryAddress 0021  
                       read_prec_or_width@fmt 0007                                   _I2C1ERRbits 3D76  
                                  ??___xxtofl 0005                      __end_of_I2C1_DO_TX_EMPTY B514  
                                     _logging 00CB                      ??_I2C1_MasterIsRxBufFull 0001  
                    ??_PIN_MANAGER_Initialize 0001                                   _I2C1PIEbits 3D7A  
                    wr1RegCompleteHandler@ptr 000A                                    ?_I2C1_Open 0001  
                                     fgetc@fp 0003                                       efgtoa@c 0041  
                                     efgtoa@d 006B                                       efgtoa@e 006F  
                                     efgtoa@f 003D                                       efgtoa@g 0082  
                                     efgtoa@h 0079                                       efgtoa@i 0077  
                                     efgtoa@l 007D                                       efgtoa@m 006D  
                                     efgtoa@n 0086                                       efgtoa@p 0062  
                                     efgtoa@t 0064                                       efgtoa@u 0088  
                                     efgtoa@w 0071                                   ?___strtoxll 0019  
                                 _I2C1PIRbits 3D79                                  _eepromBuffer 0394  
                     fp__I2C1_DO_RX_NACK_STOP 0000                                       _vfscanf BDF8  
                    ?_I2C1_CallbackReturnStop 000A                             ?_I2C1_WriteNBytes 0017  
                                     _sprintf AC72                                       atou@pll 004A  
                                     _strncmp C638             __end_of_I2C1_DO_SEND_RESTART_READ A604  
                        end_of_initialization A972                    __end_of_I2C1_MasterSendAck A550  
                     __end_of_I2C1_ReadNBytes ABEA                                       floorf@e 0036  
                                     floorf@m 0032                                       floorf@u 0038  
                                     floorf@x 0028                           _I2C1_MasterClearIrq A568  
                          ??_I2C1_WriteNBytes 001A                                ___omul@product 0011  
                                     memcpy@d 0008                                       memcpy@n 0005  
                                     memcpy@s 000A                                       fputc@fp 0005  
                                     memset@c 0003                                       memset@n 0005  
                                     memset@p 0007                                       fputs@fp 000D  
                      ?_rd1RegCompleteHandler 000A                        _I2C1_DO_SEND_ADR_WRITE A6C6  
                          _read_prec_or_width BC76                 __end_of_I2C1_MasterGetCounter A562  
                             _EEPROM_ReadByte AA04                  __end_of_I2C1_DO_SEND_RESTART A526  
                     __end_of_I2C1_MasterRead A590                       __end_of_I2C1_MasterOpen A9D4  
                      ?_wr1RegCompleteHandler 000A                       __end_of_I2C1_MasterStop A55C  
              ??_UART1_SetOverrunErrorHandler 0003                       __end_of_I2C1_Initialize A7B2  
                             ___lldiv@divisor 0005                                   _I2C1_Poller A772  
                             ___lldiv@counter 000D                     ?_I2C1_CallbackReturnReset 000A  
               __end_of_I2C1_MasterDisableIrq A772                                   _I2C1_Status 0300  
                             _custom_delay_ms AAAC                     ??_I2C1_MasterIsTxBufEmpty 0001  
                    fp__rd2RegCompleteHandler 0000                     ?_ReadAndSendEEPROMDataCSV 00AF  
                           __end_of_vfpfcnvrt E9B8                                    efgtoa@mode 0069  
                                  efgtoa@sign 0081                                       sscanf@f 0082  
                                     sscanf@s 0079                                       skipws@c 000E  
                           __end_of_vfsfcnvrt E11A                                       postdec2 3FDD  
                         ?_read_prec_or_width 0007                                       ungetc@c 0001  
                    fp__wr2RegCompleteHandler 0000                                       postinc0 3FEE  
                                     postinc1 3FE6                                       postinc2 3FDE  
                   I2C1_ReadDataBlock@address 001B                              vfpfcnvrt@convarg 0046  
                         _I2C1_MasterSendNack A550           __end_of_I2C1_SetAddressNackCallback A722  
                 _I2C1_SetAddressNackCallback A70A      ReadAndSendEEPROMDataCSV@readBlockEEPROM1 01FC  
    ReadAndSendEEPROMDataCSV@readBlockEEPROM2 01FE                                    ??_vfprintf 004D  
                        ?_I2C1_MasterClearIrq 0001                                ??_I2C1_DO_IDLE 0001  
                         _I2C1_MasterResetBus A598                             ___strtoxll@endptr 001B  
                           UART1_Write@txData 0001            __end_of_I2C1_DO_SEND_RESTART_WRITE A522  
                  _I2C1_DO_SEND_RESTART_WRITE A51E                                 ?_StartLogging 0001  
                                     strcpy@d 0005                             ___strtoxll@prev_a 0029  
             __end_of_rdBlkRegCompleteHandler AD8C                             ?_EEPROM_WriteByte 001B  
                    _I2C1_MasterIsNackFlagSet A658                          I2C1_WriteNBytes@data 0017  
                                 ___fladd@grs 0010                 ??_I2C1_SetAddressNackCallback 000A  
                          ??_EEPROM_WriteByte 001E                                 ___xxtofl@sign 0009  
               __end_of_I2C1_DO_BUS_COLLISION B2C6               I2C1_SetDataCompleteCallback@ptr 0008  
                 I2C1_Write1ByteRegister@data 0018                            vfscanf@saved_errno 0073  
                        ??_read_prec_or_width 0009                                   ___fldiv@grs 0022  
                                 ___fldiv@rem 001B                I2C1_CallbackReturnReset@funPtr 000A  
                  ??_I2C1_MasterClearNackFlag 0001                          ?_I2C1_MasterSendNack 0001  
                          EEPROM_WriteBlock@i 0029                     _I2C1_MasterDisableRestart A538  
                        ?_I2C1_MasterResetBus 0001                                   ___flmul@grs 000F  
                  rdBlkRegCompleteHandler@ptr 000A                      _LoadCurrentAddressEEPROM AA72  
                                  main@buffer 0400                   custom_delay_ms@milliseconds 0001  
                                 vfscanf@cfmt 0077                         ??_I2C1_MasterClearIrq 0001  
                              __end_of___flge C0C2                                ??_StartLogging 00B7  
                              __end_of___fleq BB1C                              I2C1_DO_TX@dataTx 000F  
                  ??_I2C1_MasterClearStopFlag 0001                                __end_of___lmul B256  
                              __end_of___omul B7E6                                   vfpfcnvrt@ap 008E  
                                 vfpfcnvrt@cp 004B                                   vfpfcnvrt@fp 008C  
                              __end_of___wmul A870                                _I2C1_DO_RX_ACK A578  
                              _I2C1_DO_TX_ACK A570                                __end_of_efgtoa FDF6  
            __end_of_I2C1_ClearInterruptFlags AE2A                                __end_of_floorf CF2A  
                              __end_of_memcpy AF84                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F521 0214                                __end_of_memset AB24  
             __end_of_I2C1_CallbackReturnStop A51A                 __end_of_I2C1_MasterSetCounter A5AC  
                              __end_of_sscanf AC2E                                __end_of_skipws B182  
                              __end_of_ungetc B92A                 __end_of_I2C1_MasterSendTxData A5B6  
                              __end_of_strcpy AC72                   ??_I2C1_MasterIsCountFlagSet 0001  
                         start_initialization A94C                                   ??_I2C1_Open 0001  
                                 __end_of_pad B046                       ??_UART1_SetErrorHandler 0003  
                       ??_I2C1_MasterSendNack 0001                                   vfsfcnvrt@ap 005D  
                                 vfsfcnvrt@fp 005B                                   vfsfcnvrt@vp 0062  
                                _MPU6050_Init A632                         ??_I2C1_MasterResetBus 0001  
                     __end_of_EEPROM_ReadByte AA3A                                   putch@txData 0002  
                            ?_I2C1_ReadNBytes 0017                   UART_ReceiveString@maxLength 0003  
                     __end_of_custom_delay_ms AAE6                         __end_of___fpclassifyf BFBE  
                           ___omul@multiplier 0001                               ___llmod@divisor 0005  
                             ___llmod@counter 0009                      I2C1_SetBuffer@bufferSize 0003  
                            ?_I2C1_MasterRead 0001                              ?_I2C1_MasterOpen 0001  
                            ?_I2C1_MasterStop 0001                I2C1_Write1ByteRegister@address 0019  
                            ?_I2C1_Initialize 0001                       ?_MPU6050_ReadSensorData 0028  
                             ___strtoxll$2313 0031                               ___strtoxll$2314 0033  
                                 vfprintf@fmt 0090                                      ??___flge 0022  
                                    ??___fleq 0009                              ??_PMD_Initialize 0001  
                                    ??___lmul 0009                                      ??___omul 0011  
                      __end_of_I2C1_DO_RX_ACK A580                                      ??___wmul 0005  
                      __end_of_I2C1_DO_TX_ACK A578                       ??_I2C1_DO_SEND_ADR_READ 0001  
                                    ??_efgtoa 0042                                _ParseUserInput B2C6  
                                    ??_floorf 002C                                      ??_memcpy 0007  
                                    ??_memset 0007                             ??_UART_SendString 0004  
                                  memset@dest 0001                                      ??_sscanf 005E  
                                    ??_skipws 000D                               ___strtoxll@base 001C  
                                    ??_ungetc 0004                            _I2C1_ReadDataBlock B3A8  
                                    ??_strcpy 0005                              I2C1_Open@address 0001  
                                   ___fladd@a 0005                                     ___fladd@b 0001  
                                   ___fldiv@a 0013                                     ___fldiv@b 000F  
                                   ___flmul@a 0005                                     ___flmul@b 0001  
                                 __pbssCOMRAM 005E                          _I2C1_DO_SEND_RESTART A522  
                                   ___flsub@a 001E                                     ___flsub@b 001A  
                          _UART1_ErrorHandler 021F                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0100                                 __pcstackBANK2 0200  
                               __pcstackBANK4 0400                           ?_I2C1_ReadDataBlock 0017  
               __end_of_ReadAndSendEEPROMData CB1A                   ??_I2C1_DO_SEND_RESTART_READ 0002  
                       I2C1_DO_TX@retFsmState 0010                   ReadAndSendEEPROMData@buffer 0100  
            __end_of_I2C1_MasterIsStopFlagSet A684                      fp__I2C1_DO_BUS_COLLISION 0000  
                        __end_of_I2C1_DO_IDLE A5F6                  fp__UART1_DefaultErrorHandler 0000  
               I2C1_SetAddressNackCallback@cb 0006                __end_of_MPU6050_ReadSensorData D6B6  
                                   __pnvBANK2 021F                     _I2C1_MasterIsCountFlagSet A642  
                       _rd2RegCompleteHandler A8F4                     fp__I2C1_DO_SEND_ADR_WRITE 0000  
                                 _efgtoa$2088 0066                        _I2C1_MasterIsRxBufFull A684  
                                   _main$1510 04E4                                     _main$1512 04E8  
                      _PIN_MANAGER_Initialize BB1C                         _wr2RegCompleteHandler A89C  
                  ??_I2C1_MasterEnableRestart 0001                          ??_I2C1_ReadDataBlock 001B  
                           ?_UART1_Initialize 0001                      rd2RegCompleteHandler@ptr 000A  
                      __end_of_ParseUserInput B336          __end_of_UART1_SetFramingErrorHandler A5D4  
                _UART1_SetFramingErrorHandler A5CA                                _I2C1_MasterFsm B41E  
                               __pmediumconst FDF6                              fp__I2C1_DO_RESET 0000  
                                    ?___fladd 0001                               ?_I2C1_DO_RX_ACK 0001  
                                    ?___fldiv 000F                                     __ptext100 A978  
                                   __ptext101 A5EA                                     __ptext110 A544  
                                   __ptext102 A570                                      ?___flneg 0001  
                                   __ptext111 A5AC                                     __ptext103 A6B0  
                                   __ptext120 A8F4                                     __ptext112 A5A2  
                                   __ptext104 A69A                                     __ptext121 A8C8  
                                   __ptext113 A53E                                     __ptext105 A55C  
                                   __ptext130 A532                                     __ptext122 A89C  
                                   __ptext114 A538                                     __ptext106 A556  
                                   __ptext131 A52C                                     __ptext123 A6F2  
                                   __ptext115 A598                                     __ptext107 A550  
                                   __ptext132 A526                                     __ptext124 B514  
                                   __ptext116 A51A                                     __ptext108 A54A  
                                   __ptext133 A870                                     __ptext125 A7B2  
                                   __ptext117 A516                                     __ptext109 A684  
                                   __ptext134 A754                                     __ptext126 ADD8  
                                   __ptext118 AD42                                     __ptext135 A5DE  
                                   __ptext127 A66E                                     __ptext119 A920  
                                   __ptext136 A568                                     __ptext128 A658  
                                   __ptext137 0000                                     __ptext129 A642  
                             ?_I2C1_DO_TX_ACK 0001                                      ?___flmul 0001  
                                    ?___flsub 001A                                      ?___fltol 0001  
                                    ?___lldiv 0001                                      ?___llmod 0001  
                          ??_UART1_Initialize 0003                                      _I2C1CON0 3D73  
                                    _I2C1CON1 3D74                                      _I2C1CON2 3D75  
                            _uart1RxLastError 00CC                                 ??_UART1_Write 0001  
                     _I2C1_MasterWaitForEvent AF84                              _I2C1_MasterClose A5DE  
                              _I2C1_SetBuffer A7B2                              _I2C1_MasterWrite A590  
                     _I2C1_Write1ByteRegister B0AE           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler A516            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler A514  
                       ?_I2C1_DO_SEND_RESTART 0001                             ?_I2C1_DO_RX_EMPTY 0001  
           __end_of_StoreCurrentAddressEEPROM A81E                      _I2C1_ClearInterruptFlags ADD8  
                           ?_I2C1_DO_TX_EMPTY 0001                                  ??___strtoxll 0021  
                          ??_I2C1_DO_RX_EMPTY 000D                                      ?_vfscanf 006F  
            __end_of_I2C1_CallbackReturnReset A51E                            ??_I2C1_DO_TX_EMPTY 000D  
               I2C1_ReadDataBlock@bufferBlock 001C                                      ?_sprintf 0093  
            __end_of_ReadAndSendEEPROMDataCSV CD18                       ??_rd1RegCompleteHandler 000C  
                                    ?_strncmp 0001                                   _U1ERRIRbits 3DF9  
                     ?_I2C1_DO_SEND_ADR_WRITE 0001                            _UART_ReceiveString BBC6  
                            ?_EEPROM_ReadByte 001B                     I2C1_MasterSendTxData@data 0001  
                                  _I2C1SDAPPS 3AE2                          __end_of_StartLogging D9A6  
                                  _I2C1SCLPPS 3AE1                       ??_wr1RegCompleteHandler 000C  
                            ?_custom_delay_ms 0001                              _I2C1_SetCallback B514  
                              ___wmul@product 0005         UART1_SetErrorHandler@interruptHandler 0001  
                                  _I2C1_DO_RX B6AA                                    _I2C1_DO_TX C3F2  
                                    _PIE2bits 3992                           ?_UART_ReceiveString 0001  
                                    _PIE3bits 3993                                    _I2C1_Close A870  
                                ?_I2C1_Poller 0001                        __end_of_I2C1_MasterFsm B498  
                        fp__I2C1_DO_BUS_ERROR 0000                  __end_of_I2C1_MasterGetRxData A54A  
                               _I2C1STAT1bits 3D78                                      _PIR2bits 39A2  
                                    _PIR3bits 39A3                    ??_I2C1_MasterIsNackFlagSet 0001  
                          _I2C1_MasterSendAck A54A                               ?_ParseUserInput 008E  
                   _I2C1_DO_SEND_RESTART_READ A5F6                            __end_of___strtoxll F404  
                      __end_of_I2C1_SetBuffer A7D6      ReadAndSendEEPROMDataCSV@eepromReadBuffer 01C8  
               ?_UART1_SetFramingErrorHandler 0001          __end_of_I2C1_SetDataCompleteCallback A70A  
                _I2C1_SetDataCompleteCallback A6F2                EEPROM_WriteBlock@memoryAddress 0023  
                                   _vfpfcnvrt E568                   ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                   _vfsfcnvrt DD40                    I2C1_Write1ByteRegister@reg 0017  
                         ?_I2C1_MasterSendAck 0001                             ___wmul@multiplier 0001  
                    ?_I2C1_DO_RX_NACK_RESTART 0001                          fp__I2C1_DO_SEND_STOP 0000  
                  ?_I2C1_MasterClearCountFlag 0001                          ??_UART_ReceiveString 0004  
                         I2C1_ReadNBytes@data 0017                  __end_of_I2C1_DO_ADDRESS_NACK B0AE  
                  ??_LoadCurrentAddressEEPROM 0029                           __end_of_UART1_Write A754  
                    wr2RegCompleteHandler@ptr 000A                                    vfscanf@fmt 0070  
              __end_of_I2C1_DO_SEND_ADR_WRITE A6DC                                 _I2C1_DO_RESET A612  
                                  vfpfcnvrt@c 004A                             ___lmul@multiplier 0001  
                       I2C1_Close@returnValue 0001                      ?_rdBlkRegCompleteHandler 000A  
                         I2C1_SetCallback@idx 0005                           I2C1_SetCallback@ptr 0003  
                        ??_I2C1_MasterSendAck 0001                                    vfsfcnvrt@c 006D  
                                  vfsfcnvrt@i 006B                        ?_rd2RegCompleteHandler 000A  
                __end_of_I2C1_MasterOperation AE7C                        ?_wr2RegCompleteHandler 000A  
                    _I2C1_MasterIsStopFlagSet A66E                                      __Hrparam 0000  
                             ?_I2C1_MasterFsm 0001                         _I2C1_MasterGetCounter A55C  
                                   memcpy@tmp 0007                 EEPROM_WriteByte@memoryAddress 001B  
                                  vfprintf@ap 0092                                      __Lrparam 0000  
                                  vfprintf@fp 008F                          EEPROM_ReadBlock@data 0023  
                        EEPROM_ReadBlock@size 0025                     ??_I2C1_MasterWaitForEvent 0001  
                       _I2C1_MasterDisableIrq A754                       ??_OSCILLATOR_Initialize 0001  
                             ?_I2C1_SetBuffer 0001                 EEPROM_ReadBlock@deviceAddress 0027  
                                  ?_vfpfcnvrt 008C                     ??_I2C1_Write1ByteRegister 0019  
                                  ?_vfsfcnvrt 005B                        ??_I2C1_DO_SEND_RESTART 0001  
                          ___fpclassifyf@F465 0218             __end_of_I2C1_MasterClearCountFlag A52C  
                                  sprintf@fmt 0095                                      ___xxtofl C774  
                                _I2C1CON0bits 3D73                                  _I2C1CON1bits 3D74  
                              ?_I2C1_DO_RESET 0001                                      __ptext10 A7FA  
                                    __ptext11 AB64                                      __ptext20 A5CA  
                                    __ptext12 A9D4                                      __ptext21 A5C0  
                                    __ptext13 C928                                      __ptext30 C514  
                                    __ptext22 A7D6                                      __ptext14 D3FE  
                                    __ptext31 C2D8                                      __ptext23 BB1C  
                                    __ptext15 C774                                      __ptext40 BD34  
                                    __ptext32 B592                                      __ptext24 A722  
                                    __ptext16 B3A8                                      __ptext41 A5B6  
                                    __ptext33 B92A                                      __ptext25 A790  
                                    __ptext17 A6DC                                      __ptext50 E11A  
                                    __ptext42 AF2A                                      __ptext34 BC76  
                                    __ptext26 CB1A                                      __ptext18 B182  
                                    __ptext51 BFBE                                      __ptext43 AE7C  
                                    __ptext35 A846                                      __ptext27 AC72  
                                    __ptext19 A5D4                                      __ptext60 C638  
                                    __ptext52 BA72                                      __ptext44 CD18  
                                    __ptext36 F404                                      __ptext28 AD8C  
                                    __ptext61 CF2A                                      __ptext53 D9A6  
                                    __ptext45 BEC0                                      __ptext37 AC2E  
                                    __ptext29 E568                                      __ptext70 AA72  
                                    __ptext62 B118                                      __ptext54 B336  
                                    __ptext46 C0C2                                      __ptext38 AFE0  
                                    __ptext71 ACB6                                      __ptext63 B888  
                                    __ptext55 A73A                                      __ptext47 ACFC  
                                    __ptext39 AB24                                      __ptext80 AE2A  
                                    __ptext72 AA04                                      __ptext64 C1C8  
                                    __ptext56 B2C6                                      __ptext48 E9B8  
                                    __ptext81 A772                                      __ptext73 AED2  
                                    __ptext65 A562                                      __ptext57 ABEA  
                                    __ptext49 AA3A                                      __ptext90 A578  
                                    __ptext82 AF84                                      __ptext74 A70A  
                                    __ptext66 EE78                                      __ptext58 BDF8  
                                    __ptext91 A81E                                      __ptext83 B41E  
                                    __ptext75 A590                                      __ptext67 B748  
                                    __ptext59 DD40                                      __ptext92 A522  
                                    __ptext84 A622                                      __ptext76 ABA6  
                                    __ptext68 A632                                      __ptext93 A51E  
                                    __ptext85 B256                                      __ptext77 B61A  
                                    __ptext69 B0AE                                      __ptext94 A5F6  
                                    __ptext86 B046                                      __ptext78 A9A6  
                                    __ptext95 B7E6                                      __ptext87 A612  
                                    __ptext79 A588                                      __ptext96 B498  
                                    __ptext88 A580                                      __ptext97 B6AA  
                                    __ptext89 A604                                      __ptext98 C3F2  
                                    __ptext99 A6C6                  ReadAndSendEEPROMDataCSV@Ndat 00AF  
                       _I2C1_DO_BUS_COLLISION B256                                    _U1CON0bits 3DF2  
                EEPROM_ReadByte@addressBuffer 001D                 __end_of_UART1_SetErrorHandler A5CA  
                EEPROM_ReadByte@memoryAddress 001B                                    strcpy@dest 0001  
                    MPU6050_ReadSensorData@ax 0028                      MPU6050_ReadSensorData@ay 0029  
                    MPU6050_ReadSensorData@az 002A                      MPU6050_ReadSensorData@gx 002B  
                    MPU6050_ReadSensorData@gy 002C                      MPU6050_ReadSensorData@gz 002D  
                    _I2C1_CallbackReturnReset A51A                          ___strtoxll@is_signed 001E  
                 fp__I2C1_CallbackReturnReset 0000                      ?_I2C1_MasterIsTxBufEmpty 0001  
                    _ReadAndSendEEPROMDataCSV CB1A                                   ?_I2C1_DO_RX 0001  
                                 ?_I2C1_DO_TX 0001                               _UART_SendString B336  
                 __end_of_I2C1_MasterClearIrq A570                  __end_of_I2C1_DO_RX_NACK_STOP A612  
                                 ?_I2C1_Close 0001                                      efgtoa@fp 003C  
                                    efgtoa@ne 0060                                      efgtoa@pp 0068  
                                    efgtoa@ou 0073                     _UART1_OverrunErrorHandler 0221  
UART1_SetOverrunErrorHandler@interruptHandler 0001                                      isa$xinst 0000  
                   ?_I2C1_MasterClearNackFlag 0001                    ?_UART1_DefaultErrorHandler 0001  
             __end_of_I2C1_DO_RX_NACK_RESTART A588                      I2C1_MasterOperation@read 0015  
                                    _vfprintf AD8C                  ReadAndSendEEPROMData@ax_read 01E4  
                                   sscanf@fmt 007B                  ReadAndSendEEPROMData@ay_read 01E8  
                                   sscanf@ret 007F                  ReadAndSendEEPROMData@az_read 01EC  
    ReadAndSendEEPROMData@startAddressEEPROM1 00B3      ReadAndSendEEPROMData@startAddressEEPROM2 00B5  
                          I2C1_ReadNBytes@len 0018                 __end_of_I2C1_DO_SEND_ADR_READ A9A6  
                                   vfscanf@ap 0072                                     vfscanf@fp 006F  
                                _I2C1_DO_IDLE A5EA                                   _UART1_Write A73A  
                ReadAndSendEEPROMData@gx_read 01F0                  ReadAndSendEEPROMData@gy_read 01F4  
                ReadAndSendEEPROMData@gz_read 01F8                   __end_of_I2C1_MasterSendNack A556  
              ??_UART1_SetFramingErrorHandler 0003                   __end_of_I2C1_MasterResetBus A5A2  
               fp__I2C1_DO_SEND_RESTART_WRITE 0000                  MPU6050_ReadSensorData@buffer 0030  
                MPU6050_ReadSensorData@ax_raw 003C                  MPU6050_ReadSensorData@ay_raw 003E  
                MPU6050_ReadSensorData@az_raw 0040                                      memcpy@d1 0001  
                                    memcpy@s1 0003                I2C1_SetAddressNackCallback@ptr 0008  
                MPU6050_ReadSensorData@gx_raw 0042                  MPU6050_ReadSensorData@gy_raw 0044  
                MPU6050_ReadSensorData@gz_raw 0046                         _I2C1_MasterSetCounter A5A2  
                        _I2C1_MasterGetRxData A544                         _I2C1_MasterSendTxData A5AC  
                   ?_I2C1_MasterClearStopFlag 0001                                     sprintf@ap 004F  
                            _EEPROM_ReadBlock ACB6                      __end_of_I2C1_MasterClose A5EA  
                     ?_I2C1_MasterIsRxBufFull 0001                              ___lldiv@dividend 0001  
                     ?_PIN_MANAGER_Initialize 0001                      __end_of_I2C1_MasterWrite A598  
                     I2C1_WriteNBytes@address 001A                                     strcpy@src 0003  
                            ??_I2C1_DO_RX_ACK 0001                              ??_I2C1_DO_TX_ACK 0001  
                      ?_I2C1_MasterGetCounter 0001                       _I2C1_CallbackReturnStop A516  
                  fp__I2C1_CallbackReturnStop 0000                           EEPROM_ReadByte@data 0020  
       ReadAndSendEEPROMData@readBlockEEPROM1 01FC         ReadAndSendEEPROMData@readBlockEEPROM2 01FE  
                        _I2C1_DO_ADDRESS_NACK B046                        ?_I2C1_MasterDisableIrq 0001  
                            _I2C1_WriteNBytes AED2                                   efgtoa@nmode 006A  
                                    sscanf@ap 0081                                    _UART1_Read B9CE  
                                    skipws@fp 000C                                      vfscanf@n 0075  
UART1_SetFramingErrorHandler@interruptHandler 0001                    ??_I2C1_ClearInterruptFlags 0001  
           __end_of_UART1_DefaultErrorHandler A512                                      ungetc@fp 0003  
                                 ??_vfpfcnvrt 0044                                  _StartLogging D6B6  
                                 ??_vfsfcnvrt 0060                      __end_of_I2C1_SetCallback B592  
                                    sprintf@f 0050                                      sprintf@s 0093  
                 StartLogging@loggedDataCount 0210                               ??_I2C1_DO_RESET 0001  
                            ___lldiv@quotient 0009                          _I2C1_MasterOperation AE2A  
                                    strncmp@l 0001                                      strncmp@n 0005  
                                    strncmp@r 0003                         ?_I2C1_MasterGetRxData 0001  
                           _EEPROM_WriteBlock AB64                        ?_I2C1_DO_BUS_COLLISION 0001  
             __end_of_I2C1_MasterIsTxBufEmpty A6C6                            ?_EEPROM_WriteBlock 0023  
                               ___fladd@signs 000D                             EEPROM_ReadBlock@i 0028  
                     __end_of_UART_SendString B3A8                       UART_ReceiveString@index 000A  
              __end_of_I2C1_MasterIsRxBufFull A69A                __end_of_PIN_MANAGER_Initialize BBC6  
                       _ReadAndSendEEPROMData C928                 __end_of_rd1RegCompleteHandler A8F4  
                            _EEPROM_WriteByte A9D4                                  ___fladd@aexp 000E  
                                ___fladd@bexp 000F                        UART_ReceiveString@data 0009  
                            ??_ParseUserInput 005E                 __end_of_wr1RegCompleteHandler A94C  
                         ??_EEPROM_WriteBlock 0028                         ?_I2C1_DO_ADDRESS_NACK 0001  
